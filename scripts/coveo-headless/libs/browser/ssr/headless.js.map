{
  "version": 3,
  "sources": ["../../../../../node_modules/abab/lib/atob.js", "../../../../../node_modules/abab/lib/btoa.js", "../../../../../node_modules/abab/index.js", "../../../../../node_modules/node-abort-controller/browser.js", "../../../ponyfills/fetch-ponyfill-browser.js", "../../../node_modules/exponential-backoff/src/options.ts", "../../../node_modules/exponential-backoff/src/jitter/full/full.jitter.ts", "../../../node_modules/exponential-backoff/src/jitter/no/no.jitter.ts", "../../../node_modules/exponential-backoff/src/jitter/jitter.factory.ts", "../../../node_modules/exponential-backoff/src/delay/delay.base.ts", "../../../node_modules/exponential-backoff/src/delay/skip-first/skip-first.delay.ts", "../../../node_modules/exponential-backoff/src/delay/always/always.delay.ts", "../../../node_modules/exponential-backoff/src/delay/delay.factory.ts", "../../../node_modules/exponential-backoff/src/backoff.ts", "../../../../../node_modules/dayjs/dayjs.min.js", "../../../../../node_modules/dayjs/plugin/quarterOfYear.js", "../../../../../node_modules/dayjs/plugin/customParseFormat.js", "../../../ponyfills/magic-cookie-browser.js", "../../../../../node_modules/dayjs/plugin/timezone.js", "../../../../../node_modules/dayjs/plugin/utc.js", "../../../../../node_modules/quick-format-unescaped/index.js", "../../../../../node_modules/pino/browser.js", "../../../src/ssr.index.ts", "../../../src/api/analytics/analytics-crypto-polyfill.ts", "../../../../../node_modules/immer/src/utils/errors.ts", "../../../../../node_modules/immer/src/utils/common.ts", "../../../../../node_modules/immer/src/utils/plugins.ts", "../../../../../node_modules/immer/src/core/scope.ts", "../../../../../node_modules/immer/src/core/finalize.ts", "../../../../../node_modules/immer/src/core/proxy.ts", "../../../../../node_modules/immer/src/core/immerClass.ts", "../../../../../node_modules/immer/src/core/current.ts", "../../../../../node_modules/immer/src/plugins/es5.ts", "../../../../../node_modules/immer/src/plugins/patches.ts", "../../../../../node_modules/immer/src/plugins/mapset.ts", "../../../../../node_modules/immer/src/plugins/all.ts", "../../../../../node_modules/immer/src/immer.ts", "../../../../../node_modules/immer/src/utils/env.ts", "../../../../../node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../../../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../../../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js", "../../../../../node_modules/redux/es/redux.js", "../../../../../node_modules/redux-thunk/es/index.js", "../../../../../node_modules/@reduxjs/toolkit/src/index.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createDraftSafeSelector.ts", "../../../../../node_modules/@reduxjs/toolkit/src/configureStore.ts", "../../../../../node_modules/@reduxjs/toolkit/src/devtoolsExtension.ts", "../../../../../node_modules/@reduxjs/toolkit/src/isPlainObject.ts", "../../../../../node_modules/@reduxjs/toolkit/src/getDefaultMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/tsHelpers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createAction.ts", "../../../../../node_modules/@reduxjs/toolkit/src/actionCreatorInvariantMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/utils.ts", "../../../../../node_modules/@reduxjs/toolkit/src/immutableStateInvariantMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/serializableStateInvariantMiddleware.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createReducer.ts", "../../../../../node_modules/@reduxjs/toolkit/src/mapBuilders.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createSlice.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/entity_state.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/state_selectors.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/state_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/utils.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/unsorted_state_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/sorted_state_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/entities/create_adapter.ts", "../../../../../node_modules/@reduxjs/toolkit/src/nanoid.ts", "../../../../../node_modules/@reduxjs/toolkit/src/createAsyncThunk.ts", "../../../../../node_modules/@reduxjs/toolkit/src/matchers.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/utils.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/exceptions.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/task.ts", "../../../../../node_modules/@reduxjs/toolkit/src/listenerMiddleware/index.ts", "../../../../../node_modules/@reduxjs/toolkit/src/autoBatchEnhancer.ts", "../../../../../node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js", "../../../src/utils/utils.ts", "../../../src/app/ssr-engine/common.ts", "../../../../../node_modules/@coveo/relay/lib/relay.js", "../../../node_modules/coveo.analytics/dist/browser.mjs", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-constants.ts", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-state.ts", "../../../src/features/facets/facet-set/facet-set-selectors.ts", "../../../src/features/facets/category-facet-set/category-facet-utils.ts", "../../../src/features/facets/category-facet-set/category-facet-set-selectors.ts", "../../../src/features/facets/category-facet-set/category-facet-set-state.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-set-state.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-set-state.ts", "../../../src/features/facets/facet-set/facet-set-state.ts", "../../../src/features/facets/facet-set/facet-set-analytics-actions-utils.ts", "../../../src/features/query/query-state.ts", "../../../src/features/search/search-state.ts", "../../../../bueno/dist/browser/bueno.esm.js", "../../../src/features/sort-criteria/criteria.ts", "../../../src/features/sort-criteria/sort-criteria-state.ts", "../../../src/features/search-hub/search-hub-state.ts", "../../../src/utils/version.ts", "../../../src/api/analytics/base-analytics.ts", "../../../src/api/analytics/coveo-analytics-utils.ts", "../../../src/api/analytics/search-analytics.ts", "../../../../../node_modules/@microsoft/fetch-event-source/src/parse.ts", "../../../../../node_modules/@microsoft/fetch-event-source/src/fetch.ts", "../../../src/utils/abort-controller-polyfill.ts", "../../../src/utils/url-utils.ts", "../../../src/api/generated-answer/generated-answer-client.ts", "../../../src/api/preprocess-request.ts", "../../../src/api/api-client-utils.ts", "../../../src/api/platform-client.ts", "../../../src/utils/errors.ts", "../../../src/api/form-url-encoder.ts", "../../../src/api/search/api-calls-queue.ts", "../../../src/api/search/encoding-finder.ts", "../../../src/api/search/search-api-params.ts", "../../../src/api/search/html/html-api-client.ts", "../../../src/api/search/search-api-error-response.ts", "../../../src/api/search/search-api-client.ts", "../../../src/api/search/search-api-client-middleware.ts", "../../../src/utils/validate-payload.ts", "../../../src/api/analytics/case-assist-analytics.ts", "../../../src/features/product-listing/product-listing-state.ts", "../../../src/api/analytics/commerce-analytics.ts", "../../../src/api/analytics/insight-analytics.ts", "../../../src/api/analytics/product-listing-analytics.ts", "../../../src/features/folding/folding-utils.ts", "../../../src/features/pipeline/pipeline-state.ts", "../../../src/features/analytics/analytics-utils.ts", "../../../src/features/analytics/analytics-actions.ts", "../../../src/features/analytics/search-action-cause.ts", "../../../src/features/configuration/configuration-actions.ts", "../../../src/features/search-parameters/search-parameter-schema.ts", "../../../src/features/search-parameters/search-parameter-actions.ts", "../../../src/features/debug/debug-actions.ts", "../../../src/features/debug/debug-state.ts", "../../../src/features/debug/debug-slice.ts", "../../../src/features/history/history-actions.ts", "../../../src/features/pipeline/pipeline-actions.ts", "../../../src/features/pipeline/pipeline-slice.ts", "../../../src/features/search-hub/search-hub-actions.ts", "../../../src/features/search-hub/search-hub-slice.ts", "../../../src/features/breadcrumb/breadcrumb-actions.ts", "../../../src/features/facets/generic/facet-actions.ts", "../../../src/features/instant-results/instant-results-actions.ts", "../../../src/features/pagination/pagination-actions.ts", "../../../src/features/query/query-actions.ts", "../../../src/features/configuration/analytics-params.ts", "../../../src/features/search-and-folding/search-and-folding-request.ts", "../../../src/api/analytics/instant-result-analytics.ts", "../../../src/features/instant-results/instant-result-analytics-actions.ts", "../../../src/features/advanced-search-queries/advanced-search-queries-state.ts", "../../../src/features/search/search-analytics-actions.ts", "../../../src/api/search/date/relative-date.ts", "../../../src/api/search/date/date-format.ts", "../../../src/features/facets/range-facets/date-facet-set/interfaces/request.ts", "../../../src/features/search/search-mappings.ts", "../../../src/utils/facet-utils.ts", "../../../src/features/facets/generic/interfaces/generic-facet-request.ts", "../../../src/features/pagination/pagination-constants.ts", "../../../src/features/search/search-request.ts", "../../../src/features/did-you-mean/did-you-mean-actions.ts", "../../../src/features/did-you-mean/did-you-mean-analytics-actions.ts", "../../../src/features/context/context-state.ts", "../../../src/features/dictionary-field-context/dictionary-field-context-state.ts", "../../../src/features/facet-options/facet-options-state.ts", "../../../src/features/facets/facet-order/facet-order-state.ts", "../../../src/features/instant-results/instant-results-state.ts", "../../../src/features/pagination/pagination-state.ts", "../../../src/features/query-set/query-set-state.ts", "../../../src/features/static-filter-set/static-filter-set-state.ts", "../../../src/features/tab-set/tab-set-state.ts", "../../../src/features/history/history-state.ts", "../../../src/features/triggers/trigger-analytics-actions.ts", "../../../src/features/triggers/triggers-actions.ts", "../../../src/features/search/legacy/search-actions-thunk-processor.ts", "../../../src/features/search/legacy/search-actions.ts", "../../../src/features/search/search-actions-thunk-processor.ts", "../../../src/features/search/search-actions.ts", "../../../src/features/result-templates/result-templates-helpers.ts", "../../../src/features/search/search-selectors.ts", "../../../src/features/search/search-slice.ts", "../../../src/features/debug/version-slice.ts", "../../../src/app/analytics-middleware.ts", "../../../src/features/configuration/configuration-slice.ts", "../../../src/features/tab-set/tab-set-actions.ts", "../../../src/features/configuration/configuration-state.ts", "../../../src/app/common-reducers.ts", "../../../src/app/instantly-callable-middleware.ts", "../../../src/app/logger-middlewares.ts", "../../../src/app/reducer-manager.ts", "../../../node_modules/ts-debounce/src/index.ts", "../../../src/app/renew-access-token-middleware.ts", "../../../src/app/store.ts", "../../../src/app/engine.ts", "../../../src/app/logger.ts", "../../../src/app/thunk-extra-arguments.ts", "../../../src/app/search-engine/jwt-reducer.ts", "../../../src/app/engine-configuration.ts", "../../../src/app/search-engine/search-engine-configuration.ts", "../../../src/app/search-engine/search-engine.ts", "../../../src/app/search-engine/search-engine.ssr.ts", "../../../src/features/debug/ranking-info-parser.ts", "../../../src/features/debug/debug-selectors.ts", "../../../src/features/fields/fields-actions.ts", "../../../src/features/folding/folding-actions.ts", "../../../src/features/folding/folding-state.ts", "../../../src/features/fields/fields-state.ts", "../../../src/features/fields/fields-slice.ts", "../../../src/controllers/controller/headless-controller.ts", "../../../src/controllers/relevance-inspector/headless-relevance-inspector.ts", "../../../src/controllers/relevance-inspector/headless-relevance-inspector.ssr.ts", "../../../src/features/context/context-actions.ts", "../../../src/features/context/context-slice.ts", "../../../src/controllers/core/context/headless-context-reserved-keys.ts", "../../../src/controllers/core/context/headless-core-context.ts", "../../../src/controllers/context/headless-context.ts", "../../../src/controllers/context/headless-context.ssr.ts", "../../../src/features/dictionary-field-context/dictionary-field-context-actions.ts", "../../../src/features/dictionary-field-context/dictionary-field-context-slice.ts", "../../../src/controllers/dictionary-field-context/headless-dictionary-field-context.ts", "../../../src/controllers/dictionary-field-context/headless-dictionary-field-context.ssr.ts", "../../../src/features/did-you-mean/did-you-mean-state.ts", "../../../src/features/did-you-mean/did-you-mean-slice.ts", "../../../src/controllers/core/did-you-mean/headless-core-did-you-mean.ts", "../../../src/controllers/did-you-mean/headless-did-you-mean.ts", "../../../src/controllers/did-you-mean/headless-did-you-mean.ssr.ts", "../../../src/features/facets/generic/facet-actions-validation.ts", "../../../src/features/facet-options/facet-options-actions.ts", "../../../src/features/facets/facet-search-set/generic/generic-facet-search-validate-payload.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-actions.ts", "../../../src/features/facets/generic/facet-reducer-helpers.ts", "../../../src/features/facets/category-facet-set/category-facet-reducer-helpers.ts", "../../../src/features/facets/category-facet-set/category-facet-validate-payload.ts", "../../../src/features/facets/category-facet-set/category-facet-set-actions.ts", "../../../src/features/facets/category-facet-set/category-facet-set-slice.ts", "../../../src/features/facets/facet-search-set/facet-search-reducer-helpers.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-request-builder.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-request-builder.ts", "../../../src/features/facets/facet-search-set/generic/generic-facet-search-actions.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-actions.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-set-state.ts", "../../../src/features/facets/facet-search-set/category/category-facet-search-set-slice.ts", "../../../src/features/facets/facet-set/facet-set-analytics-actions.ts", "../../../src/features/facet-options/facet-options-selectors.ts", "../../../src/controllers/core/facets/_common/facet-option-definitions.ts", "../../../src/features/facets/facet-set/facet-set-validate-payload.ts", "../../../src/features/facets/facet-set/facet-set-actions.ts", "../../../src/controllers/core/facets/range-facet/date-facet/date-range.ts", "../../../src/features/facets/range-facets/generic/range-facet-actions.ts", "../../../src/features/facets/range-facets/generic/range-facet-validate-payload.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-actions.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-actions.ts", "../../../src/features/facet-options/facet-options-slice.ts", "../../../src/controllers/core/facets/_common/facet-id-generator.ts", "../../../src/controllers/core/facets/_common/facet-id-determinor.ts", "../../../src/features/facets/category-facet-set/interfaces/request.ts", "../../../src/controllers/core/facets/category-facet/headless-core-category-facet-options.ts", "../../../src/controllers/core/facets/category-facet/headless-core-category-facet.ts", "../../../src/controllers/core/facets/facet-search/facet-search.ts", "../../../src/controllers/core/facets/facet-search/category/headless-category-facet-search.ts", "../../../src/controllers/facets/category-facet/headless-category-facet-search.ts", "../../../src/controllers/facets/category-facet/headless-category-facet.ts", "../../../src/controllers/facets/category-facet/headless-category-facet.ssr.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-set-state.ts", "../../../src/features/facets/facet-search-set/specific/specific-facet-search-set-slice.ts", "../../../src/features/sort/sort.ts", "../../../src/features/product-listing/product-listing-analytics.ts", "../../../src/features/product-listing/product-listing-actions.ts", "../../../src/features/facets/facet-set/facet-set-slice.ts", "../../../src/features/facets/facet-set/facet-set-utils.ts", "../../../src/controllers/core/facets/facet-search/specific/headless-facet-search.ts", "../../../src/features/facets/facet-set/facet-set-controller-actions.ts", "../../../src/features/facets/facet-api/request.ts", "../../../src/features/facets/facet-set/interfaces/request.ts", "../../../src/controllers/core/facets/facet/headless-core-facet-options.ts", "../../../src/controllers/core/facets/facet/headless-core-facet.ts", "../../../src/controllers/facets/facet/headless-facet-options.ts", "../../../src/controllers/facets/facet/headless-facet.ts", "../../../src/controllers/facets/facet/headless-facet.ssr.ts", "../../../src/features/facets/range-facets/generic/range-facet-utils.ts", "../../../src/features/facets/range-facets/generic/range-facet-controller-actions.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-controller-actions.ts", "../../../src/features/facets/range-facets/generic/range-facet-reducers.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-set-slice.ts", "../../../src/controllers/core/facets/range-facet/headless-core-range-facet.ts", "../../../src/features/facets/facet-api/value.ts", "../../../src/features/facets/range-facets/generic/interfaces/request.ts", "../../../src/controllers/core/facets/range-facet/date-facet/headless-date-facet-options.ts", "../../../src/controllers/core/facets/range-facet/date-facet/headless-core-date-facet.ts", "../../../src/controllers/facets/range-facet/date-facet/headless-date-facet.ts", "../../../src/controllers/facets/range-facet/date-facet/headless-date-facet.ssr.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-controller-actions.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/headless-numeric-facet-options.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/numeric-range.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/headless-core-numeric-facet.ts", "../../../src/controllers/facets/range-facet/numeric-facet/headless-numeric-facet.ts", "../../../src/controllers/facets/range-facet/numeric-facet/headless-numeric-facet.ssr.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-selectors.ts", "../../../src/controllers/core/facets/range-facet/numeric-facet/headless-core-numeric-filter.ts", "../../../src/controllers/facets/range-facet/numeric-facet/headless-numeric-filter.ts", "../../../src/controllers/facets/range-facet/numeric-facet/headless-numeric-filter.ssr.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-selectors.ts", "../../../src/controllers/core/facets/range-facet/date-facet/headless-core-date-filter.ts", "../../../src/controllers/facets/range-facet/date-facet/headless-date-filter.ts", "../../../src/controllers/facets/range-facet/date-facet/headless-date-filter.ssr.ts", "../../../src/features/commerce/sort/sort.ts", "../../../src/features/commerce/common/actions.ts", "../../../src/features/commerce/product-listing/product-listing-analytics.ts", "../../../src/features/commerce/product-listing/product-listing-actions.ts", "../../../src/features/facets/facet-order/facet-order-slice.ts", "../../../src/features/history/history-analytics-actions.ts", "../../../src/app/undoable.ts", "../../../../../node_modules/fast-equals/src/utils.ts", "../../../../../node_modules/fast-equals/src/equals.ts", "../../../../../node_modules/fast-equals/src/comparator.ts", "../../../../../node_modules/fast-equals/src/index.ts", "../../../src/utils/compare-utils.ts", "../../../src/features/history/history-slice.ts", "../../../src/controllers/history-manager/headless-history-manager.ts", "../../../src/controllers/history-manager/headless-history-manager.ssr.ts", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-actions.ts", "../../../src/features/pagination/pagination-slice.ts", "../../../src/features/pagination/pagination-selectors.ts", "../../../src/features/pagination/pagination-analytics-actions.ts", "../../../src/controllers/core/pager/headless-core-pager.ts", "../../../src/controllers/pager/headless-pager.ts", "../../../src/controllers/pager/headless-pager.ssr.ts", "../../../src/controllers/core/query-error/headless-core-query-error.ts", "../../../src/controllers/query-error/headless-query-error.ts", "../../../src/controllers/query-error/headless-query-error.ssr.ts", "../../../src/controllers/core/status/headless-core-status.ts", "../../../src/controllers/core/query-summary/headless-core-query-summary.ts", "../../../src/controllers/query-summary/headless-query-summary.ts", "../../../src/controllers/query-summary/headless-query-summary.ssr.ts", "../../../src/controllers/core/result-list/headless-core-result-list.ts", "../../../src/controllers/result-list/headless-result-list.ts", "../../../src/controllers/result-list/headless-result-list.ssr.ts", "../../../src/controllers/core/results-per-page/headless-core-results-per-page.ts", "../../../src/controllers/results-per-page/headless-results-per-page.ts", "../../../src/controllers/results-per-page/headless-results-per-page.ssr.ts", "../../../src/features/query-suggest/query-suggest-actions.ts", "../../../src/features/query/query-analytics-actions.ts", "../../../src/features/query-set/query-set-actions.ts", "../../../src/features/query-set/query-set-slice.ts", "../../../src/features/query-suggest/query-suggest-analytics-actions.ts", "../../../src/features/query-suggest/query-suggest-state.ts", "../../../src/features/query-suggest/query-suggest-slice.ts", "../../../src/features/query/query-slice.ts", "../../../src/utils/highlight.ts", "../../../src/controllers/core/search-box/headless-core-search-box-options.ts", "../../../src/controllers/core/search-box/headless-core-search-box.ts", "../../../src/controllers/search-box/headless-search-box.ts", "../../../src/controllers/search-box/headless-search-box.ssr.ts", "../../../src/features/instant-results/instant-results-slice.ts", "../../../src/controllers/instant-results/instant-results-options.ts", "../../../src/controllers/instant-results/instant-results.ts", "../../../src/controllers/instant-results/instant-results.ssr.ts", "../../../src/features/sort-criteria/sort-criteria-analytics-actions.ts", "../../../src/features/sort-criteria/sort-criteria-actions.ts", "../../../src/features/sort-criteria/sort-criteria-slice.ts", "../../../src/controllers/core/sort/headless-core-sort.ts", "../../../src/controllers/sort/headless-sort.ts", "../../../src/controllers/sort/headless-sort.ssr.ts", "../../../src/features/static-filter-set/static-filter-set-schema.ts", "../../../src/features/static-filter-set/static-filter-set-actions.ts", "../../../src/features/static-filter-set/static-filter-set-slice.ts", "../../../src/controllers/static-filter/static-filter-value.ts", "../../../src/controllers/static-filter/headless-static-filter.ts", "../../../src/controllers/static-filter/headless-static-filter.ssr.ts", "../../../src/features/tab-set/tab-set-slice.ts", "../../../src/controllers/core/tab/headless-core-tab.ts", "../../../src/controllers/tab/headless-tab.ts", "../../../src/controllers/tab/headless-tab.ssr.ts", "../../../src/controllers/core/facet-manager/headless-core-facet-manager.ts", "../../../src/controllers/facet-manager/headless-facet-manager.ts", "../../../src/controllers/facet-manager/headless-facet-manager.ssr.ts", "../../../src/features/facets/category-facet-set/category-facet-set-analytics-actions.ts", "../../../src/features/facets/generic/facet-generic-analytics-actions.ts", "../../../src/features/facets/range-facets/generic/range-facet-analytics-actions.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-analytics-actions.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-analytics-actions.ts", "../../../src/controllers/core/breadcrumb-manager/headless-core-breadcrumb-manager.ts", "../../../src/controllers/breadcrumb-manager/headless-breadcrumb-manager.ts", "../../../src/controllers/breadcrumb-manager/headless-breadcrumb-manager.ssr.ts", "../../../src/api/search/trigger.ts", "../../../src/api/search/plan/plan-endpoint.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-actions.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-state.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-slice.ts", "../../../src/controllers/standalone-search-box/headless-standalone-search-box-options.ts", "../../../src/controllers/standalone-search-box/headless-standalone-search-box.ts", "../../../src/controllers/standalone-search-box/headless-standalone-search-box.ssr.ts", "../../../src/features/facets/automatic-facet-set/automatic-facet-set-slice.ts", "../../../src/features/advanced-search-queries/advanced-search-queries-actions.ts", "../../../src/features/advanced-search-queries/advanced-search-queries-slice.ts", "../../../src/features/search-parameters/search-parameter-analytics-actions.ts", "../../../src/features/search-parameters/search-parameter-selectors.ts", "../../../src/controllers/core/search-parameter-manager/headless-core-search-parameter-manager.ts", "../../../src/controllers/search-parameter-manager/headless-search-parameter-manager.ts", "../../../src/controllers/search-parameter-manager/headless-search-parameter-manager.ssr.ts", "../../../src/features/search-parameters/search-parameter-serializer.ts", "../../../src/controllers/url-manager/headless-url-manager.ts", "../../../src/controllers/url-manager/headless-url-manager.ssr.ts", "../../../src/controllers/search-status/headless-search-status.ts", "../../../src/controllers/search-status/headless-search-status.ssr.ts", "../../../src/features/result-preview/result-preview-request-builder.ts", "../../../src/features/result-preview/result-preview-actions.ts", "../../../src/features/result-preview/result-preview-analytics-actions.ts", "../../../src/features/result-preview/result-preview-state.ts", "../../../src/features/result-preview/result-preview-slice.ts", "../../../src/controllers/core/quickview/headless-core-quickview.ts", "../../../src/controllers/quickview/headless-quickview.ts", "../../../src/controllers/quickview/headless-quickview.ssr.ts", "../../../src/features/folding/folding-analytics-actions.ts", "../../../src/features/folding/folding-slice.ts", "../../../src/controllers/core/folded-result-list/headless-core-folded-result-list.ts", "../../../src/controllers/folded-result-list/headless-folded-result-list.ts", "../../../src/controllers/folded-result-list/headless-folded-result-list.ssr.ts", "../../../src/features/triggers/triggers-state.ts", "../../../src/features/triggers/triggers-slice.ts", "../../../src/controllers/triggers/headless-redirection-trigger.ts", "../../../src/controllers/triggers/headless-redirection-trigger.ssr.ts", "../../../src/controllers/triggers/headless-query-trigger.ts", "../../../src/controllers/triggers/headless-query-trigger.ssr.ts", "../../../src/controllers/triggers/headless-execute-trigger.ts", "../../../src/controllers/triggers/headless-execute-trigger.ssr.ts", "../../../src/controllers/triggers/headless-notify-trigger.ts", "../../../src/controllers/triggers/headless-notify-trigger.ssr.ts", "../../../src/features/question-answering/question-answering-document-id.ts", "../../../src/features/question-answering/question-answering-selectors.ts", "../../../src/features/question-answering/question-answering-analytics-actions.ts", "../../../src/features/question-answering/question-answering-actions.ts", "../../../src/features/question-answering/question-answering-state.ts", "../../../src/features/question-answering/question-answering-slice.ts", "../../../src/features/recent-results/recent-results-actions.ts", "../../../src/controllers/core/interactive-result/headless-core-interactive-result.ts", "../../../src/controllers/core/smart-snippet/headless-core-smart-snippet.ts", "../../../src/controllers/smart-snippet/headless-smart-snippet-interactive-inline-links.ts", "../../../src/controllers/smart-snippet/headless-smart-snippet.ts", "../../../src/controllers/smart-snippet/headless-smart-snippet.ssr.ts", "../../../src/controllers/core/smart-snippet-questions-list/headless-core-smart-snippet-questions-list.ts", "../../../src/controllers/smart-snippet-questions-list/headless-smart-snippet-interactive-questions.ts", "../../../src/controllers/smart-snippet-questions-list/headless-smart-snippet-questions-list.ts", "../../../src/controllers/smart-snippet-questions-list/headless-smart-snippet-questions-list.ssr.ts", "../../../src/features/recent-queries/recent-queries-actions.ts", "../../../src/features/recent-queries/recent-queries-analytics-actions.ts", "../../../src/features/recent-queries/recent-queries-state.ts", "../../../src/features/recent-queries/recent-queries-slice.ts", "../../../src/controllers/recent-queries-list/headless-recent-queries-list.ts", "../../../src/controllers/recent-queries-list/headless-recent-queries-list.ssr.ts", "../../../src/features/recent-results/recent-results-analytics-actions.ts", "../../../src/features/recent-results/recent-results-state.ts", "../../../src/features/recent-results/recent-results-slice.ts", "../../../src/controllers/recent-results-list/headless-recent-results-list.ts", "../../../src/controllers/recent-results-list/headless-recent-results-list.ssr.ts", "../../../src/controllers/field-suggestions/facet/headless-field-suggestions.ts", "../../../src/controllers/field-suggestions/facet/headless-field-suggestions.ssr.ts", "../../../src/controllers/field-suggestions/category-facet/headless-category-field-suggestions.ts", "../../../src/controllers/field-suggestions/category-facet/headless-category-field-suggestions.ssr.ts", "../../../src/controllers/facets/automatic-facet/headless-automatic-facet.ts", "../../../src/controllers/facets/automatic-facet-generator/headless-automatic-facet-generator-options.ts", "../../../src/controllers/facets/automatic-facet-generator/headless-automatic-facet-generator.ts", "../../../src/controllers/facets/automatic-facet-generator/headless-automatic-facet-generator.ssr.ts", "../../../src/features/advanced-search-queries/advanced-search-queries-actions-loader.ts", "../../../src/features/facets/category-facet-set/category-facet-set-actions-loader.ts", "../../../src/features/facets/facet-set/facet-set-actions-loader.ts", "../../../src/features/configuration/configuration-actions-loader.ts", "../../../src/features/configuration/search-configuration-actions-loader.ts", "../../../src/features/context/context-actions-loader.ts", "../../../src/features/dictionary-field-context/dictionary-field-context-actions-loader.ts", "../../../src/features/debug/debug-actions-loader.ts", "../../../src/features/facets/range-facets/date-facet-set/date-facet-actions-loader.ts", "../../../src/features/facet-options/facet-options-actions-loader.ts", "../../../src/features/did-you-mean/did-you-mean-actions-loader.ts", "../../../src/features/fields/fields-actions-loader.ts", "../../../src/features/history/history-actions-loader.ts", "../../../src/features/facets/range-facets/numeric-facet-set/numeric-facet-actions-loader.ts", "../../../src/features/folding/folding-actions-loader.ts", "../../../src/features/pagination/pagination-actions-loader.ts", "../../../src/features/pipeline/pipeline-actions-loader.ts", "../../../src/features/query/query-actions-loader.ts", "../../../src/features/query-set/query-set-actions-loader.ts", "../../../src/features/instant-results/instant-results-actions-loader.ts", "../../../src/features/query-suggest/query-suggest-actions-loader.ts", "../../../src/features/search/search-actions-loader.ts", "../../../src/features/search-hub/search-hub-actions-loader.ts", "../../../src/features/sort-criteria/sort-criteria-actions-loader.ts", "../../../src/features/standalone-search-box-set/standalone-search-box-set-actions-loader.ts", "../../../src/features/static-filter-set/static-filter-set-actions-loader.ts", "../../../src/features/tab-set/tab-set-actions-loader.ts", "../../../src/features/question-answering/question-answering-actions-loader.ts", "../../../src/features/breadcrumb/breadcrumb-actions-loader.ts", "../../../src/features/recent-queries/recent-queries-actions-loader.ts", "../../../src/features/recent-results/recent-results-actions-loader.ts", "../../../src/features/excerpt-length/excerpt-length-actions.ts", "../../../src/features/excerpt-length/excerpt-length-state.ts", "../../../src/features/excerpt-length/excerpt-length-slice.ts", "../../../src/features/excerpt-length/excerpt-length-actions-loader.ts", "../../../src/features/result-preview/result-preview-actions-loader.ts", "../../../src/features/generated-answer/generated-answer-selectors.ts", "../../../src/features/generated-answer/generated-answer-analytics-actions.ts", "../../../src/features/generated-answer/generated-answer-request.ts", "../../../src/features/generated-answer/generated-response-format.ts", "../../../src/features/generated-answer/generated-answer-actions.ts", "../../../src/features/generated-answer/generated-answer-state.ts", "../../../src/features/generated-answer/generated-answer-slice.ts", "../../../src/features/generated-answer/generated-answer-actions-loader.ts", "../../../src/features/result-templates/result-templates-manager.ts", "../../../src/features/index.ts", "../../../src/features/analytics/search-analytics-actions-loader.ts", "../../../src/features/result/result-analytics-actions.ts", "../../../src/features/analytics/click-analytics-actions-loader.ts", "../../../src/features/analytics/generic-analytics-actions-loader.ts", "../../../src/features/sort-criteria/criteria-parser.ts", "../../../src/utils/query-expression/common/negatable.ts", "../../../src/utils/query-expression/common/operator.ts", "../../../src/utils/query-expression/date-field/date-field.ts", "../../../src/utils/query-expression/date-range-field/date-range-field.ts", "../../../src/utils/query-expression/exact-match/exact-match.ts", "../../../src/utils/query-expression/field-exists/field-exists.ts", "../../../src/utils/query-expression/keyword/keyword.ts", "../../../src/utils/query-expression/near/near.ts", "../../../src/utils/query-expression/numeric-field/numeric-field.ts", "../../../src/utils/query-expression/numeric-range-field/numeric-range-field.ts", "../../../src/utils/query-expression/query-extension/query-extension.ts", "../../../src/utils/query-expression/string-facet-field/string-facet-field.ts", "../../../src/utils/query-expression/string-field/string-field.ts", "../../../src/utils/query-expression/query-expression.ts"],
  "sourcesContent": ["\"use strict\";\n\n/**\n * Implementation of atob() according to the HTML and Infra specs, except that\n * instead of throwing INVALID_CHARACTER_ERR we return null.\n */\nfunction atob(data) {\n  if (arguments.length === 0) {\n    throw new TypeError(\"1 argument required, but only 0 present.\");\n  }\n\n  // Web IDL requires DOMStrings to just be converted using ECMAScript\n  // ToString, which in our case amounts to using a template literal.\n  data = `${data}`;\n  // \"Remove all ASCII whitespace from data.\"\n  data = data.replace(/[ \\t\\n\\f\\r]/g, \"\");\n  // \"If data's length divides by 4 leaving no remainder, then: if data ends\n  // with one or two U+003D (=) code points, then remove them from data.\"\n  if (data.length % 4 === 0) {\n    data = data.replace(/==?$/, \"\");\n  }\n  // \"If data's length divides by 4 leaving a remainder of 1, then return\n  // failure.\"\n  //\n  // \"If data contains a code point that is not one of\n  //\n  // U+002B (+)\n  // U+002F (/)\n  // ASCII alphanumeric\n  //\n  // then return failure.\"\n  if (data.length % 4 === 1 || /[^+/0-9A-Za-z]/.test(data)) {\n    return null;\n  }\n  // \"Let output be an empty byte sequence.\"\n  let output = \"\";\n  // \"Let buffer be an empty buffer that can have bits appended to it.\"\n  //\n  // We append bits via left-shift and or.  accumulatedBits is used to track\n  // when we've gotten to 24 bits.\n  let buffer = 0;\n  let accumulatedBits = 0;\n  // \"Let position be a position variable for data, initially pointing at the\n  // start of data.\"\n  //\n  // \"While position does not point past the end of data:\"\n  for (let i = 0; i < data.length; i++) {\n    // \"Find the code point pointed to by position in the second column of\n    // Table 1: The Base 64 Alphabet of RFC 4648. Let n be the number given in\n    // the first cell of the same row.\n    //\n    // \"Append to buffer the six bits corresponding to n, most significant bit\n    // first.\"\n    //\n    // atobLookup() implements the table from RFC 4648.\n    buffer <<= 6;\n    buffer |= atobLookup(data[i]);\n    accumulatedBits += 6;\n    // \"If buffer has accumulated 24 bits, interpret them as three 8-bit\n    // big-endian numbers. Append three bytes with values equal to those\n    // numbers to output, in the same order, and then empty buffer.\"\n    if (accumulatedBits === 24) {\n      output += String.fromCharCode((buffer & 0xff0000) >> 16);\n      output += String.fromCharCode((buffer & 0xff00) >> 8);\n      output += String.fromCharCode(buffer & 0xff);\n      buffer = accumulatedBits = 0;\n    }\n    // \"Advance position by 1.\"\n  }\n  // \"If buffer is not empty, it contains either 12 or 18 bits. If it contains\n  // 12 bits, then discard the last four and interpret the remaining eight as\n  // an 8-bit big-endian number. If it contains 18 bits, then discard the last\n  // two and interpret the remaining 16 as two 8-bit big-endian numbers. Append\n  // the one or two bytes with values equal to those one or two numbers to\n  // output, in the same order.\"\n  if (accumulatedBits === 12) {\n    buffer >>= 4;\n    output += String.fromCharCode(buffer);\n  } else if (accumulatedBits === 18) {\n    buffer >>= 2;\n    output += String.fromCharCode((buffer & 0xff00) >> 8);\n    output += String.fromCharCode(buffer & 0xff);\n  }\n  // \"Return output.\"\n  return output;\n}\n/**\n * A lookup table for atob(), which converts an ASCII character to the\n * corresponding six-bit number.\n */\n\nconst keystr =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction atobLookup(chr) {\n  const index = keystr.indexOf(chr);\n  // Throw exception if character is not in the lookup string; should not be hit in tests\n  return index < 0 ? undefined : index;\n}\n\nmodule.exports = atob;\n", "\"use strict\";\n\n/**\n * btoa() as defined by the HTML and Infra specs, which mostly just references\n * RFC 4648.\n */\nfunction btoa(s) {\n  if (arguments.length === 0) {\n    throw new TypeError(\"1 argument required, but only 0 present.\");\n  }\n\n  let i;\n  // String conversion as required by Web IDL.\n  s = `${s}`;\n  // \"The btoa() method must throw an \"InvalidCharacterError\" DOMException if\n  // data contains any character whose code point is greater than U+00FF.\"\n  for (i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 255) {\n      return null;\n    }\n  }\n  let out = \"\";\n  for (i = 0; i < s.length; i += 3) {\n    const groupsOfSix = [undefined, undefined, undefined, undefined];\n    groupsOfSix[0] = s.charCodeAt(i) >> 2;\n    groupsOfSix[1] = (s.charCodeAt(i) & 0x03) << 4;\n    if (s.length > i + 1) {\n      groupsOfSix[1] |= s.charCodeAt(i + 1) >> 4;\n      groupsOfSix[2] = (s.charCodeAt(i + 1) & 0x0f) << 2;\n    }\n    if (s.length > i + 2) {\n      groupsOfSix[2] |= s.charCodeAt(i + 2) >> 6;\n      groupsOfSix[3] = s.charCodeAt(i + 2) & 0x3f;\n    }\n    for (let j = 0; j < groupsOfSix.length; j++) {\n      if (typeof groupsOfSix[j] === \"undefined\") {\n        out += \"=\";\n      } else {\n        out += btoaLookup(groupsOfSix[j]);\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Lookup table for btoa(), which converts a six-bit number into the\n * corresponding ASCII character.\n */\nconst keystr =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction btoaLookup(index) {\n  if (index >= 0 && index < 64) {\n    return keystr[index];\n  }\n\n  // Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.\n  return undefined;\n}\n\nmodule.exports = btoa;\n", "\"use strict\";\n\nconst atob = require(\"./lib/atob\");\nconst btoa = require(\"./lib/btoa\");\n\nmodule.exports = {\n  atob,\n  btoa\n};\n", "'use strict'\n\nconst _global =\n  typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : /* otherwise */ undefined\n\nif (!_global) {\n  throw new Error(\n    `Unable to find global scope. Are you sure this is running in the browser?`\n  )\n}\n\nif (!_global.AbortController) {\n  throw new Error(\n    `Could not find \"AbortController\" in the global scope. You need to polyfill it first`\n  )\n}\n\nmodule.exports.AbortController = _global.AbortController", "// TODO V3: remove this file, global fetch will be a runtime requirement.\nmodule.exports = fetch;\n", null, null, null, null, null, null, null, null, null, "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));", "!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_quarterOfYear=n()}(this,(function(){\"use strict\";var t=\"month\",n=\"quarter\";return function(e,i){var r=i.prototype;r.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var s=r.add;r.add=function(e,i){return e=Number(e),this.$utils().p(i)===n?this.add(3*e,t):s.bind(this)(e,i)};var u=r.startOf;r.startOf=function(e,i){var r=this.$utils(),s=!!r.u(i)||i;if(r.p(e)===n){var o=this.quarter()-1;return s?this.month(3*o).startOf(t).startOf(\"day\"):this.month(3*o+2).endOf(t).endOf(\"day\")}return u.bind(this)(e,i)}}}));", "!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d\\d/,r=/\\d\\d?/,i=/\\d*[^-_:/,()\\s\\d]+/,o={},s=function(e){return(e=+e)+(e>68?1900:2e3)};var a=function(e){return function(t){this[e]=+t}},f=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],h=function(e){var t=o[e];return t&&(t.indexOf?t:t.s.concat(t.f))},u=function(e,t){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},d={A:[i,function(e){this.afternoon=u(e,!1)}],a:[i,function(e){this.afternoon=u(e,!0)}],S:[/\\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[r,a(\"seconds\")],ss:[r,a(\"seconds\")],m:[r,a(\"minutes\")],mm:[r,a(\"minutes\")],H:[r,a(\"hours\")],h:[r,a(\"hours\")],HH:[r,a(\"hours\")],hh:[r,a(\"hours\")],D:[r,a(\"day\")],DD:[n,a(\"day\")],Do:[i,function(e){var t=o.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],M:[r,a(\"month\")],MM:[n,a(\"month\")],MMM:[i,function(e){var t=h(\"months\"),n=(h(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(e){var t=h(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,a(\"year\")],YY:[n,function(e){this.year=s(e)}],YYYY:[/\\d{4}/,a(\"year\")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=s.length,f=0;f<a;f+=1){var h=s[f],u=d[h],c=u&&u[0],l=u&&u[1];s[f]=l?{regex:c,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=s[n];if(\"string\"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,h=e.slice(r),u=o.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(s=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,s=e.args;this.$u=r;var a=s[1];if(\"string\"==typeof a){var f=!0===s[2],h=!0===s[3],u=f||h,d=s[2];h&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(e,t,n){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var r=c(t)(e),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,h=r.seconds,u=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=h||0,g=u||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(e){return new Date(\"\")}}(t,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));", "const pendragonCookieValueMatcher = /(^|; )Coveo-Pendragon=([^;]*)/;\nmodule.exports = () =>\n  pendragonCookieValueMatcher.exec(document.cookie)?.pop() || null;\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_timezone=e()}(this,(function(){\"use strict\";var t={year:0,month:1,day:2,hour:3,minute:4,second:5},e={};return function(n,i,o){var r,a=function(t,n,i){void 0===i&&(i={});var o=new Date(t),r=function(t,n){void 0===n&&(n={});var i=n.timeZoneName||\"short\",o=t+\"|\"+i,r=e[o];return r||(r=new Intl.DateTimeFormat(\"en-US\",{hour12:!1,timeZone:t,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\",timeZoneName:i}),e[o]=r),r}(n,i);return r.formatToParts(o)},u=function(e,n){for(var i=a(e,n),r=[],u=0;u<i.length;u+=1){var f=i[u],s=f.type,m=f.value,c=t[s];c>=0&&(r[c]=parseInt(m,10))}var d=r[3],l=24===d?0:d,h=r[0]+\"-\"+r[1]+\"-\"+r[2]+\" \"+l+\":\"+r[4]+\":\"+r[5]+\":000\",v=+e;return(o.utc(h).valueOf()-(v-=v%1e3))/6e4},f=i.prototype;f.tz=function(t,e){void 0===t&&(t=r);var n=this.utcOffset(),i=this.toDate(),a=i.toLocaleString(\"en-US\",{timeZone:t}),u=Math.round((i-new Date(a))/1e3/60),f=o(a,{locale:this.$L}).$set(\"millisecond\",this.$ms).utcOffset(15*-Math.round(i.getTimezoneOffset()/15)-u,!0);if(e){var s=f.utcOffset();f=f.add(n-s,\"minute\")}return f.$x.$timezone=t,f},f.offsetName=function(t){var e=this.$x.$timezone||o.tz.guess(),n=a(this.valueOf(),e,{timeZoneName:t}).find((function(t){return\"timezonename\"===t.type.toLowerCase()}));return n&&n.value};var s=f.startOf;f.startOf=function(t,e){if(!this.$x||!this.$x.$timezone)return s.call(this,t,e);var n=o(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\"),{locale:this.$L});return s.call(n,t,e).tz(this.$x.$timezone,!0)},o.tz=function(t,e,n){var i=n&&e,a=n||e||r,f=u(+o(),a);if(\"string\"!=typeof t)return o(t).tz(a);var s=function(t,e,n){var i=t-60*e*1e3,o=u(i,n);if(e===o)return[i,e];var r=u(i-=60*(o-e)*1e3,n);return o===r?[i,o]:[t-60*Math.min(o,r)*1e3,Math.max(o,r)]}(o.utc(t,i).valueOf(),f,a),m=s[0],c=s[1],d=o(m).utcOffset(c);return d.$x.$timezone=a,d},o.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},o.tz.setDefault=function(t){r=t}}}));", "!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));", "'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n", "'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue,\n  errWithCause: asErrValue\n}\nfunction levelToValue (level, logger) {\n  return level === 'silent'\n    ? Infinity\n    : logger.levels.values[level]\n}\nconst baseLogFunctionSymbol = Symbol('pino.logFuncs')\nconst hierarchySymbol = Symbol('pino.hierarchy')\n\nconst logFallbackMap = {\n  error: 'log',\n  fatal: 'error',\n  warn: 'error',\n  info: 'log',\n  debug: 'log',\n  trace: 'log'\n}\n\nfunction appendChildLogger (parentLogger, childLogger) {\n  const newEntry = {\n    logger: childLogger,\n    parent: parentLogger[hierarchySymbol]\n  }\n  childLogger[hierarchySymbol] = newEntry\n}\n\nfunction setupBaseLogFunctions (logger, levels, proto) {\n  const logFunctions = {}\n  levels.forEach(level => {\n    logFunctions[level] = proto[level] ? proto[level] : (_console[level] || _console[logFallbackMap[level] || 'log'] || noop)\n  })\n  logger[baseLogFunctionSymbol] = logFunctions\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const customLevels = Object.keys(opts.customLevels || {})\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'].concat(customLevels)\n\n  if (typeof proto === 'function') {\n    levels.forEach(function (level) {\n      proto[level] = proto\n    })\n  }\n  if (opts.enabled === false || opts.browser.disabled) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  setupBaseLogFunctions(logger, levels, proto)\n  // setup root hierarchy entry\n  appendChildLogger({}, logger)\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = getLevels(opts)\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return levelToValue(this.level, this)\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(this, setOpts, logger, 'error') // <-- must stay first\n    set(this, setOpts, logger, 'fatal')\n    set(this, setOpts, logger, 'warn')\n    set(this, setOpts, logger, 'info')\n    set(this, setOpts, logger, 'debug')\n    set(this, setOpts, logger, 'trace')\n\n    customLevels.forEach((level) => {\n      set(this, setOpts, logger, level)\n    })\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n\n      // make sure bindings are available in the `set` function\n      this.bindings = bindings\n\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    const newLogger = new Child(this)\n\n    // must happen before the level is assigned\n    appendChildLogger(this, newLogger)\n    // required to actually initialize the logger functions for any given child\n    newLogger.level = this.level\n\n    return newLogger\n  }\n  return logger\n}\n\nfunction getLevels (opts) {\n  const customLevels = opts.customLevels || {}\n\n  const values = Object.assign({}, pino.levels.values, customLevels)\n  const labels = Object.assign({}, pino.levels.labels, invertObject(customLevels))\n\n  return {\n    values,\n    labels\n  }\n}\n\nfunction invertObject (obj) {\n  const inverted = {}\n  Object.keys(obj).forEach(function (key) {\n    inverted[obj[key]] = key\n  })\n  return inverted\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction getBindingChain (logger) {\n  const bindings = []\n  if (logger.bindings) {\n    bindings.push(logger.bindings)\n  }\n\n  // traverse up the tree to get all bindings\n  let hierarchy = logger[hierarchySymbol]\n  while (hierarchy.parent) {\n    hierarchy = hierarchy.parent\n    if (hierarchy.logger.bindings) {\n      bindings.push(hierarchy.logger.bindings)\n    }\n  }\n\n  return bindings.reverse()\n}\n\nfunction set (self, opts, rootLogger, level) {\n  // override the current log functions with either `noop` or the base log function\n  self[level] = levelToValue(self.level, rootLogger) > levelToValue(level, rootLogger)\n    ? noop\n    : rootLogger[baseLogFunctionSymbol][level]\n\n  if (!opts.transmit && self[level] === noop) {\n    return\n  }\n\n  // make sure the log format is correct\n  self[level] = createWrap(self, opts, rootLogger, level)\n\n  // prepend bindings if it is not the root logger\n  const bindings = getBindingChain(self)\n  if (bindings.length === 0) {\n    // early exit in case for rootLogger\n    return\n  }\n  self[level] = prependBindingsInArguments(bindings, self[level])\n}\n\nfunction prependBindingsInArguments (bindings, logFunc) {\n  return function () {\n    return logFunc.apply(this, [...bindings, ...arguments])\n  }\n}\n\nfunction createWrap (self, opts, rootLogger, level) {\n  return (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\n      else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || self._level\n        const transmitValue = rootLogger.levels.values[transmitLevel]\n        const methodValue = rootLogger.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: rootLogger.levels.values[opts.transmit.level || self._level],\n          send: opts.transmit.send,\n          val: levelToValue(self._level, rootLogger)\n        }, args)\n      }\n    }\n  })(self[baseLogFunctionSymbol][level])\n}\n\nfunction asObject (logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const o = {}\n  if (ts) {\n    o.time = ts\n  }\n  o.level = logger.levels.values[level]\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) o.msg = msg\n  return o\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n\nmodule.exports.default = pino\nmodule.exports.pino = pino\n", "import {polyfillCryptoNode} from './api/analytics/analytics-crypto-polyfill';\n\npolyfillCryptoNode();\n\n// 3rd Party Libraries\nexport type {Unsubscribe, Middleware} from '@reduxjs/toolkit';\nexport {createAction, createAsyncThunk, createReducer} from '@reduxjs/toolkit';\nexport type {AnalyticsClientSendEventHook} from 'coveo.analytics';\n\n// Main App\n// \u26A0\uFE0F NOTE: All exported SSR types, APIs should be marked as `@internal` until MVP is complete\nexport type {\n  SearchEngineOptions,\n  SearchEngineConfiguration,\n  SearchConfigurationOptions,\n} from './app/search-engine/search-engine';\nexport type {\n  SSRSearchEngine as SearchEngine,\n  SearchEngineDefinition,\n  SearchEngineDefinitionOptions,\n  SearchCompletedAction,\n} from './app/search-engine/search-engine.ssr';\nexport {defineSearchEngine} from './app/search-engine/search-engine.ssr';\nexport {getSampleSearchEngineConfiguration} from './app/search-engine/search-engine';\n\nexport type {CoreEngine, ExternalEngineOptions} from './app/engine';\nexport type {\n  EngineConfiguration,\n  AnalyticsConfiguration,\n  AnalyticsRuntimeEnvironment,\n} from './app/engine-configuration';\nexport type {\n  ControllerDefinitionWithoutProps,\n  ControllerDefinitionWithProps,\n  ControllerDefinitionsMap,\n  InferControllerFromDefinition,\n  InferControllersMapFromDefinition,\n  InferControllerStaticStateFromController,\n  InferControllerStaticStateMapFromControllers,\n  InferControllerStaticStateMapFromDefinitions,\n} from './app/ssr-engine/types/common';\nexport type {\n  EngineDefinition,\n  InferStaticState,\n  InferHydratedState,\n  InferBuildResult,\n} from './app/ssr-engine/types/core-engine';\nexport type {LoggerOptions} from './app/logger';\n\nexport type {LogLevel} from './app/logger';\n\n// State\nexport type {\n  SearchParametersState,\n  SearchAppState,\n} from './state/search-app-state';\n\n// Controllers\nexport * from './controllers/ssr.index';\n\n// Selectors\nexport {\n  baseFacetResponseSelector,\n  facetRequestSelector,\n  facetResponseSelector,\n  facetResponseSelectedValuesSelector,\n} from './features/facets/facet-set/facet-set-selectors';\n\nexport {\n  currentPageSelector,\n  maxPageSelector,\n  currentPagesSelector,\n} from './features/pagination/pagination-selectors';\n\n// Grouped Actions\nexport * from './features/index';\n\n// Analytics Actions\nexport * from './features/analytics/index';\n\n// Types & Helpers\nexport {API_DATE_FORMAT} from './api/search/date/date-format';\nexport type {Result} from './api/search/search/result';\nexport type {FieldDescription} from './api/search/fields/fields-response';\nexport type {Raw} from './api/search/search/raw';\nexport type {\n  TermsToHighlight,\n  PhrasesToHighlight,\n} from './api/search/search/stemming';\nexport type {\n  SortCriterion,\n  SortByDate,\n  SortByField,\n  SortByNoSort,\n  SortByQRE,\n  SortByRelevancy,\n} from './features/sort-criteria/criteria';\nexport {\n  SortBy,\n  SortOrder,\n  buildDateSortCriterion,\n  buildCriterionExpression,\n  buildFieldSortCriterion,\n  buildNoSortCriterion,\n  buildQueryRankingExpressionSortCriterion,\n  buildRelevanceSortCriterion,\n} from './features/sort-criteria/criteria';\nexport {parseCriterionExpression} from './features/sort-criteria/criteria-parser';\nexport type {ResultTemplatesManager} from './features/result-templates/result-templates-manager';\nexport type {\n  ResultTemplate,\n  ResultTemplateCondition,\n} from './features/result-templates/result-templates';\nexport {\n  platformUrl,\n  analyticsUrl,\n  getOrganizationEndpoints,\n} from './api/platform-client';\nexport type {PlatformEnvironment} from './utils/url-utils';\nexport type {\n  CategoryFacetValueRequest,\n  CategoryFacetSortCriterion,\n} from './features/facets/category-facet-set/interfaces/request';\nexport type {DateRangeRequest} from './features/facets/range-facets/date-facet-set/interfaces/request';\nexport type {\n  CategoryFacetValue,\n  CategoryFacetValueCommon,\n} from './features/facets/category-facet-set/interfaces/response';\nexport type {DateFacetValue} from './features/facets/range-facets/date-facet-set/interfaces/response';\nexport type {\n  FacetValueRequest,\n  FacetSortCriterion,\n} from './features/facets/facet-set/interfaces/request';\nexport type {FacetResultsMustMatch} from './features/facets/facet-api/request';\nexport type {NumericRangeRequest} from './features/facets/range-facets/numeric-facet-set/interfaces/request';\nexport type {NumericFacetValue} from './features/facets/range-facets/numeric-facet-set/interfaces/response';\nexport type {AnyFacetValueRequest} from './features/facets/generic/interfaces/generic-facet-request';\nexport type {\n  RangeFacetSortCriterion,\n  RangeFacetRangeAlgorithm,\n} from './features/facets/range-facets/generic/interfaces/request';\nexport {\n  MinimumFieldsToInclude,\n  DefaultFieldsToInclude,\n  EcommerceDefaultFieldsToInclude,\n} from './features/fields/fields-state';\nexport {buildSearchParameterSerializer} from './features/search-parameters/search-parameter-serializer';\nexport type {FunctionExecutionTrigger} from './features/triggers/triggers-state';\nexport type {HighlightKeyword} from './utils/highlight';\nexport {VERSION} from './utils/version';\nexport type {\n  RelativeDate,\n  RelativeDatePeriod,\n  RelativeDateUnit,\n} from './api/search/date/relative-date';\nexport {\n  deserializeRelativeDate,\n  validateRelativeDate,\n} from './api/search/date/relative-date';\n\nexport * from './utils/query-expression/query-expression';\n", "interface CryptoModuleInNode {\n  getRandomValues?: typeof crypto.getRandomValues;\n  webcrypto?: {getRandomValues: typeof crypto.getRandomValues};\n}\n\nconst getGlobalCrypto = () => global.crypto as CryptoModuleInNode;\n\n// This polyfill is needed for node environment below 20.\n// This could be removed when Headless no longer needs to support NodeJS below that version;\nexport const polyfillCryptoNode = () => {\n  if (typeof window !== 'undefined') {\n    return;\n  }\n  if (!getGlobalCrypto()) {\n    global.crypto = require('crypto');\n  }\n\n  if (!getGlobalCrypto().getRandomValues && getGlobalCrypto().webcrypto) {\n    global.crypto.getRandomValues =\n      getGlobalCrypto().webcrypto!.getRandomValues.bind(\n        getGlobalCrypto().webcrypto\n      );\n  }\n};\n", "const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ProxyType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n", "import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n", "// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}", "import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing \u201Cwhat changed\u201D. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n", "/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;", "import { enableES5 } from 'immer'\r\nexport * from 'redux'\r\nexport {\r\n  default as createNextState,\r\n  current,\r\n  freeze,\r\n  original,\r\n  isDraft,\r\n} from 'immer'\r\nexport type { Draft } from 'immer'\r\nexport { createSelector } from 'reselect'\r\nexport type {\r\n  Selector,\r\n  OutputParametricSelector,\r\n  OutputSelector,\r\n  ParametricSelector,\r\n} from 'reselect'\r\nexport { createDraftSafeSelector } from './createDraftSafeSelector'\r\nexport type { ThunkAction, ThunkDispatch, ThunkMiddleware } from 'redux-thunk'\r\n\r\n// We deliberately enable Immer's ES5 support, on the grounds that\r\n// we assume RTK will be used with React Native and other Proxy-less\r\n// environments.  In addition, that's how Immer 4 behaved, and since\r\n// we want to ship this in an RTK minor, we should keep the same behavior.\r\nenableES5()\r\n\r\nexport {\r\n  // js\r\n  configureStore,\r\n} from './configureStore'\r\nexport type {\r\n  // types\r\n  ConfigureEnhancersCallback,\r\n  ConfigureStoreOptions,\r\n  EnhancedStore,\r\n} from './configureStore'\r\nexport type { DevToolsEnhancerOptions } from './devtoolsExtension'\r\nexport {\r\n  // js\r\n  createAction,\r\n  getType,\r\n  isAction,\r\n  isActionCreator,\r\n  isFSA as isFluxStandardAction,\r\n} from './createAction'\r\nexport type {\r\n  // types\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  ActionCreatorWithNonInferrablePayload,\r\n  ActionCreatorWithOptionalPayload,\r\n  ActionCreatorWithPayload,\r\n  ActionCreatorWithoutPayload,\r\n  ActionCreatorWithPreparedPayload,\r\n  PrepareAction,\r\n} from './createAction'\r\nexport {\r\n  // js\r\n  createReducer,\r\n} from './createReducer'\r\nexport type {\r\n  // types\r\n  Actions,\r\n  CaseReducer,\r\n  CaseReducers,\r\n} from './createReducer'\r\nexport {\r\n  // js\r\n  createSlice,\r\n} from './createSlice'\r\n\r\nexport type {\r\n  // types\r\n  CreateSliceOptions,\r\n  Slice,\r\n  CaseReducerActions,\r\n  SliceCaseReducers,\r\n  ValidateSliceCaseReducers,\r\n  CaseReducerWithPrepare,\r\n  SliceActionCreator,\r\n} from './createSlice'\r\nexport type { ActionCreatorInvariantMiddlewareOptions } from './actionCreatorInvariantMiddleware'\r\nexport { createActionCreatorInvariantMiddleware } from './actionCreatorInvariantMiddleware'\r\nexport {\r\n  // js\r\n  createImmutableStateInvariantMiddleware,\r\n  isImmutableDefault,\r\n} from './immutableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  ImmutableStateInvariantMiddlewareOptions,\r\n} from './immutableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  createSerializableStateInvariantMiddleware,\r\n  findNonSerializableValue,\r\n  isPlain,\r\n} from './serializableStateInvariantMiddleware'\r\nexport type {\r\n  // types\r\n  SerializableStateInvariantMiddlewareOptions,\r\n} from './serializableStateInvariantMiddleware'\r\nexport {\r\n  // js\r\n  getDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nexport type {\r\n  // types\r\n  ActionReducerMapBuilder,\r\n} from './mapBuilders'\r\nexport { MiddlewareArray, EnhancerArray } from './utils'\r\n\r\nexport { createEntityAdapter } from './entities/create_adapter'\r\nexport type {\r\n  Dictionary,\r\n  EntityState,\r\n  EntityAdapter,\r\n  EntitySelectors,\r\n  EntityStateAdapter,\r\n  EntityId,\r\n  Update,\r\n  IdSelector,\r\n  Comparer,\r\n} from './entities/models'\r\n\r\nexport {\r\n  createAsyncThunk,\r\n  unwrapResult,\r\n  miniSerializeError,\r\n} from './createAsyncThunk'\r\nexport type {\r\n  AsyncThunk,\r\n  AsyncThunkOptions,\r\n  AsyncThunkAction,\r\n  AsyncThunkPayloadCreatorReturnValue,\r\n  AsyncThunkPayloadCreator,\r\n  SerializedError,\r\n} from './createAsyncThunk'\r\n\r\nexport {\r\n  // js\r\n  isAllOf,\r\n  isAnyOf,\r\n  isPending,\r\n  isRejected,\r\n  isFulfilled,\r\n  isAsyncThunkAction,\r\n  isRejectedWithValue,\r\n} from './matchers'\r\nexport type {\r\n  // types\r\n  ActionMatchingAllOf,\r\n  ActionMatchingAnyOf,\r\n} from './matchers'\r\n\r\nexport { nanoid } from './nanoid'\r\n\r\nexport { default as isPlainObject } from './isPlainObject'\r\n\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './listenerMiddleware/index'\r\nexport type { AnyListenerPredicate } from './listenerMiddleware/types'\r\n\r\nexport {\r\n  createListenerMiddleware,\r\n  addListener,\r\n  removeListener,\r\n  clearAllListeners,\r\n  TaskAbortError,\r\n} from './listenerMiddleware/index'\r\n\r\nexport {\r\n  SHOULD_AUTOBATCH,\r\n  prepareAutoBatched,\r\n  autoBatchEnhancer,\r\n} from './autoBatchEnhancer'\r\nexport type { AutoBatchOptions } from './autoBatchEnhancer'\r\n\r\nexport type { ExtractDispatchExtensions as TSHelpersExtractDispatchExtensions } from './tsHelpers'\r\n", "import { current, isDraft } from 'immer'\r\nimport { createSelector } from 'reselect'\r\n\r\n/**\r\n * \"Draft-Safe\" version of `reselect`'s `createSelector`:\r\n * If an `immer`-drafted object is passed into the resulting selector's first argument,\r\n * the selector will act on the current draft value, instead of returning a cached value\r\n * that might be possibly outdated if the draft has been modified since.\r\n * @public\r\n */\r\nexport const createDraftSafeSelector: typeof createSelector = (\r\n  ...args: unknown[]\r\n) => {\r\n  const selector = (createSelector as any)(...args)\r\n  const wrappedSelector = (value: unknown, ...rest: unknown[]) =>\r\n    selector(isDraft(value) ? current(value) : value, ...rest)\r\n  return wrappedSelector as any\r\n}\r\n", "import type {\r\n  Reducer,\r\n  ReducersMapObject,\r\n  Middleware,\r\n  Action,\r\n  AnyAction,\r\n  StoreEnhancer,\r\n  Store,\r\n  Dispatch,\r\n  PreloadedState,\r\n  CombinedState,\r\n} from 'redux'\r\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux'\r\nimport type { DevToolsEnhancerOptions as DevToolsOptions } from './devtoolsExtension'\r\nimport { composeWithDevTools } from './devtoolsExtension'\r\n\r\nimport isPlainObject from './isPlainObject'\r\nimport type {\r\n  ThunkMiddlewareFor,\r\n  CurriedGetDefaultMiddleware,\r\n} from './getDefaultMiddleware'\r\nimport { curryGetDefaultMiddleware } from './getDefaultMiddleware'\r\nimport type {\r\n  NoInfer,\r\n  ExtractDispatchExtensions,\r\n  ExtractStoreExtensions,\r\n  ExtractStateExtensions,\r\n} from './tsHelpers'\r\nimport { EnhancerArray } from './utils'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\n/**\r\n * Callback function type, to be used in `ConfigureStoreOptions.enhancers`\r\n *\r\n * @public\r\n */\r\nexport type ConfigureEnhancersCallback<E extends Enhancers = Enhancers> = (\r\n  defaultEnhancers: EnhancerArray<[StoreEnhancer<{}, {}>]>\r\n) => E\r\n\r\n/**\r\n * Options for `configureStore()`.\r\n *\r\n * @public\r\n */\r\nexport interface ConfigureStoreOptions<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>,\r\n  E extends Enhancers = Enhancers\r\n> {\r\n  /**\r\n   * A single reducer function that will be used as the root reducer, or an\r\n   * object of slice reducers that will be passed to `combineReducers()`.\r\n   */\r\n  reducer: Reducer<S, A> | ReducersMapObject<S, A>\r\n\r\n  /**\r\n   * An array of Redux middleware to install. If not supplied, defaults to\r\n   * the set of middleware returned by `getDefaultMiddleware()`.\r\n   *\r\n   * @example `middleware: (gDM) => gDM().concat(logger, apiMiddleware, yourCustomMiddleware)`\r\n   * @see https://redux-toolkit.js.org/api/getDefaultMiddleware#intended-usage\r\n   */\r\n  middleware?: ((getDefaultMiddleware: CurriedGetDefaultMiddleware<S>) => M) | M\r\n\r\n  /**\r\n   * Whether to enable Redux DevTools integration. Defaults to `true`.\r\n   *\r\n   * Additional configuration can be done by passing Redux DevTools options\r\n   */\r\n  devTools?: boolean | DevToolsOptions\r\n\r\n  /**\r\n   * The initial state, same as Redux's createStore.\r\n   * You may optionally specify it to hydrate the state\r\n   * from the server in universal apps, or to restore a previously serialized\r\n   * user session. If you use `combineReducers()` to produce the root reducer\r\n   * function (either directly or indirectly by passing an object as `reducer`),\r\n   * this must be an object with the same shape as the reducer map keys.\r\n   */\r\n  /*\r\n  Not 100% correct but the best approximation we can get:\r\n  - if S is a `CombinedState` applying a second `CombinedState` on it does not change anything.\r\n  - if it is not, there could be two cases:\r\n    - `ReducersMapObject<S, A>` is being passed in. In this case, we will call `combineReducers` on it and `CombinedState<S>` is correct\r\n    - `Reducer<S, A>` is being passed in. In this case, actually `CombinedState<S>` is wrong and `S` would be correct.\r\n    As we cannot distinguish between those two cases without adding another generic parameter,\r\n    we just make the pragmatic assumption that the latter almost never happens.\r\n  */\r\n  preloadedState?: PreloadedState<CombinedState<NoInfer<S>>>\r\n\r\n  /**\r\n   * The store enhancers to apply. See Redux's `createStore()`.\r\n   * All enhancers will be included before the DevTools Extension enhancer.\r\n   * If you need to customize the order of enhancers, supply a callback\r\n   * function that will receive the original array (ie, `[applyMiddleware]`),\r\n   * and should return a new array (such as `[applyMiddleware, offline]`).\r\n   * If you only need to add middleware, you can use the `middleware` parameter instead.\r\n   */\r\n  enhancers?: E | ConfigureEnhancersCallback<E>\r\n}\r\n\r\ntype Middlewares<S> = ReadonlyArray<Middleware<{}, S>>\r\n\r\ntype Enhancers = ReadonlyArray<StoreEnhancer>\r\n\r\nexport interface ToolkitStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>\r\n> extends Store<S, A> {\r\n  /**\r\n   * The `dispatch` method of your store, enhanced by all its middlewares.\r\n   *\r\n   * @inheritdoc\r\n   */\r\n  dispatch: ExtractDispatchExtensions<M> & Dispatch<A>\r\n}\r\n\r\n/**\r\n * A Redux store returned by `configureStore()`. Supports dispatching\r\n * side-effectful _thunks_ in addition to plain actions.\r\n *\r\n * @public\r\n */\r\nexport type EnhancedStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = Middlewares<S>,\r\n  E extends Enhancers = Enhancers\r\n> = ToolkitStore<S & ExtractStateExtensions<E>, A, M> &\r\n  ExtractStoreExtensions<E>\r\n\r\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param options The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\r\nexport function configureStore<\r\n  S = any,\r\n  A extends Action = AnyAction,\r\n  M extends Middlewares<S> = [ThunkMiddlewareFor<S>],\r\n  E extends Enhancers = [StoreEnhancer]\r\n>(options: ConfigureStoreOptions<S, A, M, E>): EnhancedStore<S, A, M, E> {\r\n  const curriedGetDefaultMiddleware = curryGetDefaultMiddleware<S>()\r\n\r\n  const {\r\n    reducer = undefined,\r\n    middleware = curriedGetDefaultMiddleware(),\r\n    devTools = true,\r\n    preloadedState = undefined,\r\n    enhancers = undefined,\r\n  } = options || {}\r\n\r\n  let rootReducer: Reducer<S, A>\r\n\r\n  if (typeof reducer === 'function') {\r\n    rootReducer = reducer\r\n  } else if (isPlainObject(reducer)) {\r\n    rootReducer = combineReducers(reducer) as unknown as Reducer<S, A>\r\n  } else {\r\n    throw new Error(\r\n      '\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers'\r\n    )\r\n  }\r\n\r\n  let finalMiddleware = middleware\r\n  if (typeof finalMiddleware === 'function') {\r\n    finalMiddleware = finalMiddleware(curriedGetDefaultMiddleware)\r\n\r\n    if (!IS_PRODUCTION && !Array.isArray(finalMiddleware)) {\r\n      throw new Error(\r\n        'when using a middleware builder function, an array of middleware must be returned'\r\n      )\r\n    }\r\n  }\r\n  if (\r\n    !IS_PRODUCTION &&\r\n    finalMiddleware.some((item: any) => typeof item !== 'function')\r\n  ) {\r\n    throw new Error(\r\n      'each middleware provided to configureStore must be a function'\r\n    )\r\n  }\r\n\r\n  const middlewareEnhancer: StoreEnhancer = applyMiddleware(...finalMiddleware)\r\n\r\n  let finalCompose = compose\r\n\r\n  if (devTools) {\r\n    finalCompose = composeWithDevTools({\r\n      // Enable capture of stack traces for dispatched Redux actions\r\n      trace: !IS_PRODUCTION,\r\n      ...(typeof devTools === 'object' && devTools),\r\n    })\r\n  }\r\n\r\n  const defaultEnhancers = new EnhancerArray(middlewareEnhancer)\r\n  let storeEnhancers: Enhancers = defaultEnhancers\r\n\r\n  if (Array.isArray(enhancers)) {\r\n    storeEnhancers = [middlewareEnhancer, ...enhancers]\r\n  } else if (typeof enhancers === 'function') {\r\n    storeEnhancers = enhancers(defaultEnhancers)\r\n  }\r\n\r\n  const composedEnhancer = finalCompose(...storeEnhancers) as StoreEnhancer<any>\r\n\r\n  return createStore(rootReducer, preloadedState, composedEnhancer)\r\n}\r\n", "import type { Action, ActionCreator, StoreEnhancer } from 'redux'\r\nimport { compose } from 'redux'\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface DevToolsEnhancerOptions {\r\n  /**\r\n   * the instance name to be showed on the monitor page. Default value is `document.title`.\r\n   * If not specified and there's no document title, it will consist of `tabId` and `instanceId`.\r\n   */\r\n  name?: string\r\n  /**\r\n   * action creators functions to be available in the Dispatcher.\r\n   */\r\n  actionCreators?: ActionCreator<any>[] | { [key: string]: ActionCreator<any> }\r\n  /**\r\n   * if more than one action is dispatched in the indicated interval, all new actions will be collected and sent at once.\r\n   * It is the joint between performance and speed. When set to `0`, all actions will be sent instantly.\r\n   * Set it to a higher value when experiencing perf issues (also `maxAge` to a lower value).\r\n   *\r\n   * @default 500 ms.\r\n   */\r\n  latency?: number\r\n  /**\r\n   * (> 1) - maximum allowed actions to be stored in the history tree. The oldest actions are removed once maxAge is reached. It's critical for performance.\r\n   *\r\n   * @default 50\r\n   */\r\n  maxAge?: number\r\n  /**\r\n   * Customizes how actions and state are serialized and deserialized. Can be a boolean or object. If given a boolean, the behavior is the same as if you\r\n   * were to pass an object and specify `options` as a boolean. Giving an object allows fine-grained customization using the `replacer` and `reviver`\r\n   * functions.\r\n   */\r\n  serialize?:\r\n    | boolean\r\n    | {\r\n        /**\r\n         * - `undefined` - will use regular `JSON.stringify` to send data (it's the fast mode).\r\n         * - `false` - will handle also circular references.\r\n         * - `true` - will handle also date, regex, undefined, error objects, symbols, maps, sets and functions.\r\n         * - object, which contains `date`, `regex`, `undefined`, `error`, `symbol`, `map`, `set` and `function` keys.\r\n         *   For each of them you can indicate if to include (by setting as `true`).\r\n         *   For `function` key you can also specify a custom function which handles serialization.\r\n         *   See [`jsan`](https://github.com/kolodny/jsan) for more details.\r\n         */\r\n        options?:\r\n          | undefined\r\n          | boolean\r\n          | {\r\n              date?: true\r\n              regex?: true\r\n              undefined?: true\r\n              error?: true\r\n              symbol?: true\r\n              map?: true\r\n              set?: true\r\n              function?: true | ((fn: (...args: any[]) => any) => string)\r\n            }\r\n        /**\r\n         * [JSON replacer function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#The_replacer_parameter) used for both actions and states stringify.\r\n         * In addition, you can specify a data type by adding a [`__serializedType__`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/helpers/index.js#L4)\r\n         * key. So you can deserialize it back while importing or persisting data.\r\n         * Moreover, it will also [show a nice preview showing the provided custom type](https://cloud.githubusercontent.com/assets/7957859/21814330/a17d556a-d761-11e6-85ef-159dd12f36c5.png):\r\n         */\r\n        replacer?: (key: string, value: unknown) => any\r\n        /**\r\n         * [JSON `reviver` function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Using_the_reviver_parameter)\r\n         * used for parsing the imported actions and states. See [`remotedev-serialize`](https://github.com/zalmoxisus/remotedev-serialize/blob/master/immutable/serialize.js#L8-L41)\r\n         * as an example on how to serialize special data types and get them back.\r\n         */\r\n        reviver?: (key: string, value: unknown) => any\r\n        /**\r\n         * Automatically serialize/deserialize immutablejs via [remotedev-serialize](https://github.com/zalmoxisus/remotedev-serialize).\r\n         * Just pass the Immutable library. It will support all ImmutableJS structures. You can even export them into a file and get them back.\r\n         * The only exception is `Record` class, for which you should pass this in addition the references to your classes in `refs`.\r\n         */\r\n        immutable?: any\r\n        /**\r\n         * ImmutableJS `Record` classes used to make possible restore its instances back when importing, persisting...\r\n         */\r\n        refs?: any\r\n      }\r\n  /**\r\n   * function which takes `action` object and id number as arguments, and should return `action` object back.\r\n   */\r\n  actionSanitizer?: <A extends Action>(action: A, id: number) => A\r\n  /**\r\n   * function which takes `state` object and index as arguments, and should return `state` object back.\r\n   */\r\n  stateSanitizer?: <S>(state: S, index: number) => S\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   * @deprecated Use actionsDenylist instead.\r\n   */\r\n  actionsBlacklist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsWhitelist` specified, `actionsBlacklist` is ignored.\r\n   * @deprecated Use actionsAllowlist instead.\r\n   */\r\n  actionsWhitelist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\r\n  actionsDenylist?: string | string[]\r\n  /**\r\n   * *string or array of strings as regex* - actions types to be hidden / shown in the monitors (while passed to the reducers).\r\n   * If `actionsAllowlist` specified, `actionsDenylist` is ignored.\r\n   */\r\n  actionsAllowlist?: string | string[]\r\n  /**\r\n   * called for every action before sending, takes `state` and `action` object, and returns `true` in case it allows sending the current data to the monitor.\r\n   * Use it as a more advanced version of `actionsDenylist`/`actionsAllowlist` parameters.\r\n   */\r\n  predicate?: <S, A extends Action>(state: S, action: A) => boolean\r\n  /**\r\n   * if specified as `false`, it will not record the changes till clicking on `Start recording` button.\r\n   * Available only for Redux enhancer, for others use `autoPause`.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldRecordChanges?: boolean\r\n  /**\r\n   * if specified, whenever clicking on `Pause recording` button and there are actions in the history log, will add this action type.\r\n   * If not specified, will commit when paused. Available only for Redux enhancer.\r\n   *\r\n   * @default \"@@PAUSED\"\"\r\n   */\r\n  pauseActionType?: string\r\n  /**\r\n   * auto pauses when the extension\u2019s window is not opened, and so has zero impact on your app when not in use.\r\n   * Not available for Redux enhancer (as it already does it but storing the data to be sent).\r\n   *\r\n   * @default false\r\n   */\r\n  autoPause?: boolean\r\n  /**\r\n   * if specified as `true`, it will not allow any non-monitor actions to be dispatched till clicking on `Unlock changes` button.\r\n   * Available only for Redux enhancer.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldStartLocked?: boolean\r\n  /**\r\n   * if set to `false`, will not recompute the states on hot reloading (or on replacing the reducers). Available only for Redux enhancer.\r\n   *\r\n   * @default true\r\n   */\r\n  shouldHotReload?: boolean\r\n  /**\r\n   * if specified as `true`, whenever there's an exception in reducers, the monitors will show the error message, and next actions will not be dispatched.\r\n   *\r\n   * @default false\r\n   */\r\n  shouldCatchErrors?: boolean\r\n  /**\r\n   * If you want to restrict the extension, specify the features you allow.\r\n   * If not specified, all of the features are enabled. When set as an object, only those included as `true` will be allowed.\r\n   * Note that except `true`/`false`, `import` and `export` can be set as `custom` (which is by default for Redux enhancer), meaning that the importing/exporting occurs on the client side.\r\n   * Otherwise, you'll get/set the data right from the monitor part.\r\n   */\r\n  features?: {\r\n    /**\r\n     * start/pause recording of dispatched actions\r\n     */\r\n    pause?: boolean\r\n    /**\r\n     * lock/unlock dispatching actions and side effects\r\n     */\r\n    lock?: boolean\r\n    /**\r\n     * persist states on page reloading\r\n     */\r\n    persist?: boolean\r\n    /**\r\n     * export history of actions in a file\r\n     */\r\n    export?: boolean | 'custom'\r\n    /**\r\n     * import history of actions from a file\r\n     */\r\n    import?: boolean | 'custom'\r\n    /**\r\n     * jump back and forth (time travelling)\r\n     */\r\n    jump?: boolean\r\n    /**\r\n     * skip (cancel) actions\r\n     */\r\n    skip?: boolean\r\n    /**\r\n     * drag and drop actions in the history list\r\n     */\r\n    reorder?: boolean\r\n    /**\r\n     * dispatch custom actions or action creators\r\n     */\r\n    dispatch?: boolean\r\n    /**\r\n     * generate tests for the selected actions\r\n     */\r\n    test?: boolean\r\n  }\r\n  /**\r\n   * Set to true or a stacktrace-returning function to record call stack traces for dispatched actions.\r\n   * Defaults to false.\r\n   */\r\n  trace?: boolean | (<A extends Action>(action: A) => string)\r\n  /**\r\n   * The maximum number of stack trace entries to record per action. Defaults to 10.\r\n   */\r\n  traceLimit?: number\r\n}\r\n\r\ntype Compose = typeof compose\r\n\r\ninterface ComposeWithDevTools {\r\n  (options: DevToolsEnhancerOptions): Compose\r\n  <StoreExt>(...funcs: StoreEnhancer<StoreExt>[]): StoreEnhancer<StoreExt>\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const composeWithDevTools: ComposeWithDevTools =\r\n  typeof window !== 'undefined' &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : function () {\r\n        if (arguments.length === 0) return undefined\r\n        if (typeof arguments[0] === 'object') return compose\r\n        return compose.apply(null, arguments as any as Function[])\r\n      }\r\n\r\n/**\r\n * @public\r\n */\r\nexport const devToolsEnhancer: {\r\n  (options: DevToolsEnhancerOptions): StoreEnhancer<any>\r\n} =\r\n  typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n    : function () {\r\n        return function (noop) {\r\n          return noop\r\n        }\r\n      }\r\n", "/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * prototype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n *\r\n * @public\r\n */\r\nexport default function isPlainObject(value: unknown): value is object {\r\n  if (typeof value !== 'object' || value === null) return false\r\n\r\n  let proto = Object.getPrototypeOf(value)\r\n  if (proto === null) return true\r\n\r\n  let baseProto = proto\r\n  while (Object.getPrototypeOf(baseProto) !== null) {\r\n    baseProto = Object.getPrototypeOf(baseProto)\r\n  }\r\n\r\n  return proto === baseProto\r\n}\r\n", "import type { Middleware, AnyAction } from 'redux'\r\nimport type { ThunkMiddleware } from 'redux-thunk'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport type { ActionCreatorInvariantMiddlewareOptions } from './actionCreatorInvariantMiddleware'\r\nimport { createActionCreatorInvariantMiddleware } from './actionCreatorInvariantMiddleware'\r\nimport type { ImmutableStateInvariantMiddlewareOptions } from './immutableStateInvariantMiddleware'\r\n/* PROD_START_REMOVE_UMD */\r\nimport { createImmutableStateInvariantMiddleware } from './immutableStateInvariantMiddleware'\r\n/* PROD_STOP_REMOVE_UMD */\r\n\r\nimport type { SerializableStateInvariantMiddlewareOptions } from './serializableStateInvariantMiddleware'\r\nimport { createSerializableStateInvariantMiddleware } from './serializableStateInvariantMiddleware'\r\nimport type { ExcludeFromTuple } from './tsHelpers'\r\nimport { MiddlewareArray } from './utils'\r\n\r\nfunction isBoolean(x: any): x is boolean {\r\n  return typeof x === 'boolean'\r\n}\r\n\r\ninterface ThunkOptions<E = any> {\r\n  extraArgument: E\r\n}\r\n\r\ninterface GetDefaultMiddlewareOptions {\r\n  thunk?: boolean | ThunkOptions\r\n  immutableCheck?: boolean | ImmutableStateInvariantMiddlewareOptions\r\n  serializableCheck?: boolean | SerializableStateInvariantMiddlewareOptions\r\n  actionCreatorCheck?: boolean | ActionCreatorInvariantMiddlewareOptions\r\n}\r\n\r\nexport type ThunkMiddlewareFor<\r\n  S,\r\n  O extends GetDefaultMiddlewareOptions = {}\r\n> = O extends {\r\n  thunk: false\r\n}\r\n  ? never\r\n  : O extends { thunk: { extraArgument: infer E } }\r\n  ? ThunkMiddleware<S, AnyAction, E>\r\n  : ThunkMiddleware<S, AnyAction>\r\n\r\nexport type CurriedGetDefaultMiddleware<S = any> = <\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n    actionCreatorCheck: true\r\n  }\r\n>(\r\n  options?: O\r\n) => MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>>\r\n\r\nexport function curryGetDefaultMiddleware<\r\n  S = any\r\n>(): CurriedGetDefaultMiddleware<S> {\r\n  return function curriedGetDefaultMiddleware(options) {\r\n    return getDefaultMiddleware(options)\r\n  }\r\n}\r\n\r\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n *\r\n * @deprecated Prefer to use the callback notation for the `middleware` option in `configureStore`\r\n * to access a pre-typed `getDefaultMiddleware` instead.\r\n */\r\nexport function getDefaultMiddleware<\r\n  S = any,\r\n  O extends Partial<GetDefaultMiddlewareOptions> = {\r\n    thunk: true\r\n    immutableCheck: true\r\n    serializableCheck: true\r\n    actionCreatorCheck: true\r\n  }\r\n>(\r\n  options: O = {} as O\r\n): MiddlewareArray<ExcludeFromTuple<[ThunkMiddlewareFor<S, O>], never>> {\r\n  const {\r\n    thunk = true,\r\n    immutableCheck = true,\r\n    serializableCheck = true,\r\n    actionCreatorCheck = true,\r\n  } = options\r\n\r\n  let middlewareArray = new MiddlewareArray<Middleware[]>()\r\n\r\n  if (thunk) {\r\n    if (isBoolean(thunk)) {\r\n      middlewareArray.push(thunkMiddleware)\r\n    } else {\r\n      middlewareArray.push(\r\n        thunkMiddleware.withExtraArgument(thunk.extraArgument)\r\n      )\r\n    }\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (immutableCheck) {\r\n      /* PROD_START_REMOVE_UMD */\r\n      let immutableOptions: ImmutableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(immutableCheck)) {\r\n        immutableOptions = immutableCheck\r\n      }\r\n\r\n      middlewareArray.unshift(\r\n        createImmutableStateInvariantMiddleware(immutableOptions)\r\n      )\r\n      /* PROD_STOP_REMOVE_UMD */\r\n    }\r\n\r\n    if (serializableCheck) {\r\n      let serializableOptions: SerializableStateInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(serializableCheck)) {\r\n        serializableOptions = serializableCheck\r\n      }\r\n\r\n      middlewareArray.push(\r\n        createSerializableStateInvariantMiddleware(serializableOptions)\r\n      )\r\n    }\r\n    if (actionCreatorCheck) {\r\n      let actionCreatorOptions: ActionCreatorInvariantMiddlewareOptions = {}\r\n\r\n      if (!isBoolean(actionCreatorCheck)) {\r\n        actionCreatorOptions = actionCreatorCheck\r\n      }\r\n\r\n      middlewareArray.unshift(\r\n        createActionCreatorInvariantMiddleware(actionCreatorOptions)\r\n      )\r\n    }\r\n  }\r\n\r\n  return middlewareArray as any\r\n}\r\n", "import type { Middleware, StoreEnhancer } from 'redux'\r\nimport type { EnhancerArray, MiddlewareArray } from './utils'\r\n\r\n/**\r\n * return True if T is `any`, otherwise return False\r\n * taken from https://github.com/joonhocho/tsdef\r\n *\r\n * @internal\r\n */\r\nexport type IsAny<T, True, False = never> =\r\n  // test if we are going the left AND right path in the condition\r\n  true | false extends (T extends never ? true : false) ? True : False\r\n\r\n/**\r\n * return True if T is `unknown`, otherwise return False\r\n * taken from https://github.com/joonhocho/tsdef\r\n *\r\n * @internal\r\n */\r\nexport type IsUnknown<T, True, False = never> = unknown extends T\r\n  ? IsAny<T, False, True>\r\n  : False\r\n\r\nexport type FallbackIfUnknown<T, Fallback> = IsUnknown<T, Fallback, T>\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IfMaybeUndefined<P, True, False> = [undefined] extends [P]\r\n  ? True\r\n  : False\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IfVoid<P, True, False> = [void] extends [P] ? True : False\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IsEmptyObj<T, True, False = never> = T extends any\r\n  ? keyof T extends never\r\n    ? IsUnknown<T, False, IfMaybeUndefined<T, False, IfVoid<T, False, True>>>\r\n    : False\r\n  : never\r\n\r\n/**\r\n * returns True if TS version is above 3.5, False if below.\r\n * uses feature detection to detect TS version >= 3.5\r\n * * versions below 3.5 will return `{}` for unresolvable interference\r\n * * versions above will return `unknown`\r\n *\r\n * @internal\r\n */\r\nexport type AtLeastTS35<True, False> = [True, False][IsUnknown<\r\n  ReturnType<<T>() => T>,\r\n  0,\r\n  1\r\n>]\r\n\r\n/**\r\n * @internal\r\n */\r\nexport type IsUnknownOrNonInferrable<T, True, False> = AtLeastTS35<\r\n  IsUnknown<T, True, False>,\r\n  IsEmptyObj<T, True, IsUnknown<T, True, False>>\r\n>\r\n\r\n/**\r\n * Convert a Union type `(A|B)` to an intersection type `(A&B)`\r\n */\r\nexport type UnionToIntersection<U> = (\r\n  U extends any ? (k: U) => void : never\r\n) extends (k: infer I) => void\r\n  ? I\r\n  : never\r\n\r\n// Appears to have a convenient side effect of ignoring `never` even if that's not what you specified\r\nexport type ExcludeFromTuple<T, E, Acc extends unknown[] = []> = T extends [\r\n  infer Head,\r\n  ...infer Tail\r\n]\r\n  ? ExcludeFromTuple<Tail, E, [...Acc, ...([Head] extends [E] ? [] : [Head])]>\r\n  : Acc\r\n\r\ntype ExtractDispatchFromMiddlewareTuple<\r\n  MiddlewareTuple extends any[],\r\n  Acc extends {}\r\n> = MiddlewareTuple extends [infer Head, ...infer Tail]\r\n  ? ExtractDispatchFromMiddlewareTuple<\r\n      Tail,\r\n      Acc & (Head extends Middleware<infer D> ? IsAny<D, {}, D> : {})\r\n    >\r\n  : Acc\r\n\r\nexport type ExtractDispatchExtensions<M> = M extends MiddlewareArray<\r\n  infer MiddlewareTuple\r\n>\r\n  ? ExtractDispatchFromMiddlewareTuple<MiddlewareTuple, {}>\r\n  : M extends ReadonlyArray<Middleware>\r\n  ? ExtractDispatchFromMiddlewareTuple<[...M], {}>\r\n  : never\r\n\r\ntype ExtractStoreExtensionsFromEnhancerTuple<\r\n  EnhancerTuple extends any[],\r\n  Acc extends {}\r\n> = EnhancerTuple extends [infer Head, ...infer Tail]\r\n  ? ExtractStoreExtensionsFromEnhancerTuple<\r\n      Tail,\r\n      Acc & (Head extends StoreEnhancer<infer Ext> ? IsAny<Ext, {}, Ext> : {})\r\n    >\r\n  : Acc\r\n\r\nexport type ExtractStoreExtensions<E> = E extends EnhancerArray<\r\n  infer EnhancerTuple\r\n>\r\n  ? ExtractStoreExtensionsFromEnhancerTuple<EnhancerTuple, {}>\r\n  : E extends ReadonlyArray<StoreEnhancer>\r\n  ? UnionToIntersection<\r\n      E[number] extends StoreEnhancer<infer Ext>\r\n        ? Ext extends {}\r\n          ? IsAny<Ext, {}, Ext>\r\n          : {}\r\n        : {}\r\n    >\r\n  : never\r\n\r\ntype ExtractStateExtensionsFromEnhancerTuple<\r\n  EnhancerTuple extends any[],\r\n  Acc extends {}\r\n> = EnhancerTuple extends [infer Head, ...infer Tail]\r\n  ? ExtractStateExtensionsFromEnhancerTuple<\r\n      Tail,\r\n      Acc &\r\n        (Head extends StoreEnhancer<any, infer StateExt>\r\n          ? IsAny<StateExt, {}, StateExt>\r\n          : {})\r\n    >\r\n  : Acc\r\n\r\nexport type ExtractStateExtensions<E> = E extends EnhancerArray<\r\n  infer EnhancerTuple\r\n>\r\n  ? ExtractStateExtensionsFromEnhancerTuple<EnhancerTuple, {}>\r\n  : E extends ReadonlyArray<StoreEnhancer>\r\n  ? UnionToIntersection<\r\n      E[number] extends StoreEnhancer<any, infer StateExt>\r\n        ? StateExt extends {}\r\n          ? IsAny<StateExt, {}, StateExt>\r\n          : {}\r\n        : {}\r\n    >\r\n  : never\r\n\r\n/**\r\n * Helper type. Passes T out again, but boxes it in a way that it cannot\r\n * \"widen\" the type by accident if it is a generic that should be inferred\r\n * from elsewhere.\r\n *\r\n * @internal\r\n */\r\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\r\n\r\nexport type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>\r\n\r\nexport interface TypeGuard<T> {\r\n  (value: any): value is T\r\n}\r\n\r\nexport interface HasMatchFunction<T> {\r\n  match: TypeGuard<T>\r\n}\r\n\r\nexport const hasMatchFunction = <T>(\r\n  v: Matcher<T>\r\n): v is HasMatchFunction<T> => {\r\n  return v && typeof (v as HasMatchFunction<T>).match === 'function'\r\n}\r\n\r\n/** @public */\r\nexport type Matcher<T> = HasMatchFunction<T> | TypeGuard<T>\r\n\r\n/** @public */\r\nexport type ActionFromMatcher<M extends Matcher<any>> = M extends Matcher<\r\n  infer T\r\n>\r\n  ? T\r\n  : never\r\n\r\nexport type Id<T> = { [K in keyof T]: T[K] } & {}\r\n", "import type { Action } from 'redux'\r\nimport type {\r\n  IsUnknownOrNonInferrable,\r\n  IfMaybeUndefined,\r\n  IfVoid,\r\n  IsAny,\r\n} from './tsHelpers'\r\nimport { hasMatchFunction } from './tsHelpers'\r\nimport isPlainObject from './isPlainObject'\r\n\r\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n * @template M The type of the action's meta (optional)\r\n * @template E The type of the action's error (optional)\r\n *\r\n * @public\r\n */\r\nexport type PayloadAction<\r\n  P = void,\r\n  T extends string = string,\r\n  M = never,\r\n  E = never\r\n> = {\r\n  payload: P\r\n  type: T\r\n} & ([M] extends [never]\r\n  ? {}\r\n  : {\r\n      meta: M\r\n    }) &\r\n  ([E] extends [never]\r\n    ? {}\r\n    : {\r\n        error: E\r\n      })\r\n\r\n/**\r\n * A \"prepare\" method to be used as the second parameter of `createAction`.\r\n * Takes any number of arguments and returns a Flux Standard Action without\r\n * type (will be added later) that *must* contain a payload (might be undefined).\r\n *\r\n * @public\r\n */\r\nexport type PrepareAction<P> =\r\n  | ((...args: any[]) => { payload: P })\r\n  | ((...args: any[]) => { payload: P; meta: any })\r\n  | ((...args: any[]) => { payload: P; error: any })\r\n  | ((...args: any[]) => { payload: P; meta: any; error: any })\r\n\r\n/**\r\n * Internal version of `ActionCreatorWithPreparedPayload`. Not to be used externally.\r\n *\r\n * @internal\r\n */\r\nexport type _ActionCreatorWithPreparedPayload<\r\n  PA extends PrepareAction<any> | void,\r\n  T extends string = string\r\n> = PA extends PrepareAction<infer P>\r\n  ? ActionCreatorWithPreparedPayload<\r\n      Parameters<PA>,\r\n      P,\r\n      T,\r\n      ReturnType<PA> extends {\r\n        error: infer E\r\n      }\r\n        ? E\r\n        : never,\r\n      ReturnType<PA> extends {\r\n        meta: infer M\r\n      }\r\n        ? M\r\n        : never\r\n    >\r\n  : void\r\n\r\n/**\r\n * Basic type for all action creators.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n */\r\nexport interface BaseActionCreator<P, T extends string, M = never, E = never> {\r\n  type: T\r\n  match: (action: Action<unknown>) => action is PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator that takes multiple arguments that are passed\r\n * to a `PrepareAction` method to create the final Action.\r\n * @typeParam Args arguments for the action creator function\r\n * @typeParam P `payload` type\r\n * @typeParam T `type` name\r\n * @typeParam E optional `error` type\r\n * @typeParam M optional `meta` type\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPreparedPayload<\r\n  Args extends unknown[],\r\n  P,\r\n  T extends string = string,\r\n  E = never,\r\n  M = never\r\n> extends BaseActionCreator<P, T, M, E> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with `Args` will return\r\n   * an Action with a payload of type `P` and (depending on the `PrepareAction`\r\n   * method used) a `meta`- and `error` property of types `M` and `E` respectively.\r\n   */\r\n  (...args: Args): PayloadAction<P, T, M, E>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes an optional payload of type `P`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithOptionalPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`.\r\n   * Calling it without an argument will return a PayloadAction with a payload of `undefined`.\r\n   */\r\n  (payload?: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that takes no payload.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithoutPayload<T extends string = string>\r\n  extends BaseActionCreator<undefined, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `undefined`\r\n   */\r\n  (noArgument: void): PayloadAction<undefined, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` that requires a payload of type P.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithPayload<P, T extends string = string>\r\n  extends BaseActionCreator<P, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload of `P`\r\n   */\r\n  (payload: P): PayloadAction<P, T>\r\n}\r\n\r\n/**\r\n * An action creator of type `T` whose `payload` type could not be inferred. Accepts everything as `payload`.\r\n *\r\n * @inheritdoc {redux#ActionCreator}\r\n *\r\n * @public\r\n */\r\nexport interface ActionCreatorWithNonInferrablePayload<\r\n  T extends string = string\r\n> extends BaseActionCreator<unknown, T> {\r\n  /**\r\n   * Calling this {@link redux#ActionCreator} with an argument will\r\n   * return a {@link PayloadAction} of type `T` with a payload\r\n   * of exactly the type of the argument.\r\n   */\r\n  <PT extends unknown>(payload: PT): PayloadAction<PT, T>\r\n}\r\n\r\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n *\r\n * @typeParam P the `payload` type\r\n * @typeParam T the `type` of the resulting action\r\n * @typeParam PA if the resulting action is preprocessed by a `prepare` method, the signature of said method.\r\n *\r\n * @public\r\n */\r\nexport type PayloadActionCreator<\r\n  P = void,\r\n  T extends string = string,\r\n  PA extends PrepareAction<P> | void = void\r\n> = IfPrepareActionMethodProvided<\r\n  PA,\r\n  _ActionCreatorWithPreparedPayload<PA, T>,\r\n  // else\r\n  IsAny<\r\n    P,\r\n    ActionCreatorWithPayload<any, T>,\r\n    IsUnknownOrNonInferrable<\r\n      P,\r\n      ActionCreatorWithNonInferrablePayload<T>,\r\n      // else\r\n      IfVoid<\r\n        P,\r\n        ActionCreatorWithoutPayload<T>,\r\n        // else\r\n        IfMaybeUndefined<\r\n          P,\r\n          ActionCreatorWithOptionalPayload<P, T>,\r\n          // else\r\n          ActionCreatorWithPayload<P, T>\r\n        >\r\n      >\r\n    >\r\n  >\r\n>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overridden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<P = void, T extends string = string>(\r\n  type: T\r\n): PayloadActionCreator<P, T>\r\n\r\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overridden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n * @param prepare (optional) a method that takes any number of arguments and returns { payload } or { payload, meta }.\r\n *                If this is given, the resulting action creator will pass its arguments to this method to calculate payload & meta.\r\n *\r\n * @public\r\n */\r\nexport function createAction<\r\n  PA extends PrepareAction<any>,\r\n  T extends string = string\r\n>(\r\n  type: T,\r\n  prepareAction: PA\r\n): PayloadActionCreator<ReturnType<PA>['payload'], T, PA>\r\n\r\nexport function createAction(type: string, prepareAction?: Function): any {\r\n  function actionCreator(...args: any[]) {\r\n    if (prepareAction) {\r\n      let prepared = prepareAction(...args)\r\n      if (!prepared) {\r\n        throw new Error('prepareAction did not return an object')\r\n      }\r\n\r\n      return {\r\n        type,\r\n        payload: prepared.payload,\r\n        ...('meta' in prepared && { meta: prepared.meta }),\r\n        ...('error' in prepared && { error: prepared.error }),\r\n      }\r\n    }\r\n    return { type, payload: args[0] }\r\n  }\r\n\r\n  actionCreator.toString = () => `${type}`\r\n\r\n  actionCreator.type = type\r\n\r\n  actionCreator.match = (action: Action<unknown>): action is PayloadAction =>\r\n    action.type === type\r\n\r\n  return actionCreator\r\n}\r\n\r\n/**\r\n * Returns true if value is a plain object with a `type` property.\r\n */\r\nexport function isAction(action: unknown): action is Action<unknown> {\r\n  return isPlainObject(action) && 'type' in action\r\n}\r\n\r\n/**\r\n * Returns true if value is an RTK-like action creator, with a static type property and match method.\r\n */\r\nexport function isActionCreator(\r\n  action: unknown\r\n): action is BaseActionCreator<unknown, string> & Function {\r\n  return (\r\n    typeof action === 'function' &&\r\n    'type' in action &&\r\n    // hasMatchFunction only wants Matchers but I don't see the point in rewriting it\r\n    hasMatchFunction(action as any)\r\n  )\r\n}\r\n\r\n/**\r\n * Returns true if value is an action with a string type and valid Flux Standard Action keys.\r\n */\r\nexport function isFSA(action: unknown): action is {\r\n  type: string\r\n  payload?: unknown\r\n  error?: unknown\r\n  meta?: unknown\r\n} {\r\n  return (\r\n    isAction(action) &&\r\n    typeof action.type === 'string' &&\r\n    Object.keys(action).every(isValidKey)\r\n  )\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1\r\n}\r\n\r\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\r\nexport function getType<T extends string>(\r\n  actionCreator: PayloadActionCreator<any, T>\r\n): T {\r\n  return `${actionCreator}` as T\r\n}\r\n\r\n// helper types for more readable typings\r\n\r\ntype IfPrepareActionMethodProvided<\r\n  PA extends PrepareAction<any> | void,\r\n  True,\r\n  False\r\n> = PA extends (...args: any[]) => any ? True : False\r\n", "import type { Middleware } from 'redux'\r\nimport { isActionCreator as isRTKAction } from './createAction'\r\n\r\nexport interface ActionCreatorInvariantMiddlewareOptions {\r\n  /**\r\n   * The function to identify whether a value is an action creator.\r\n   * The default checks for a function with a static type property and match method.\r\n   */\r\n  isActionCreator?: (action: unknown) => action is Function & { type?: unknown }\r\n}\r\n\r\nexport function getMessage(type?: unknown) {\r\n  const splitType = type ? `${type}`.split('/') : []\r\n  const actionName = splitType[splitType.length - 1] || 'actionCreator'\r\n  return `Detected an action creator with type \"${\r\n    type || 'unknown'\r\n  }\" being dispatched. \r\nMake sure you're calling the action creator before dispatching, i.e. \\`dispatch(${actionName}())\\` instead of \\`dispatch(${actionName})\\`. This is necessary even if the action has no payload.`\r\n}\r\n\r\nexport function createActionCreatorInvariantMiddleware(\r\n  options: ActionCreatorInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => (next) => (action) => next(action)\r\n  }\r\n  const { isActionCreator = isRTKAction } = options\r\n  return () => (next) => (action) => {\r\n    if (isActionCreator(action)) {\r\n      console.warn(getMessage(action.type))\r\n    }\r\n    return next(action)\r\n  }\r\n}\r\n", "import createNextState, { isDraftable } from 'immer'\r\nimport type { Middleware, StoreEnhancer } from 'redux'\r\n\r\nexport function getTimeMeasureUtils(maxDelay: number, fnName: string) {\r\n  let elapsed = 0\r\n  return {\r\n    measureTime<T>(fn: () => T): T {\r\n      const started = Date.now()\r\n      try {\r\n        return fn()\r\n      } finally {\r\n        const finished = Date.now()\r\n        elapsed += finished - started\r\n      }\r\n    },\r\n    warnIfExceeded() {\r\n      if (elapsed > maxDelay) {\r\n        console.warn(`${fnName} took ${elapsed}ms, which is more than the warning threshold of ${maxDelay}ms. \r\nIf your state or actions are very large, you may want to disable the middleware as it might cause too much of a slowdown in development mode. See https://redux-toolkit.js.org/api/getDefaultMiddleware for instructions.\r\nIt is disabled in production builds, so you don't need to worry about that.`)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport function delay(ms: number) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class MiddlewareArray<\r\n  Middlewares extends Middleware<any, any>[]\r\n> extends Array<Middlewares[number]> {\r\n  constructor(...items: Middlewares)\r\n  constructor(...args: any[]) {\r\n    super(...args)\r\n    Object.setPrototypeOf(this, MiddlewareArray.prototype)\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return MiddlewareArray as any\r\n  }\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n\r\n  concat<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...Middlewares, ...AdditionalMiddlewares]>\r\n  concat(...arr: any[]) {\r\n    return super.concat.apply(this, arr)\r\n  }\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend<AdditionalMiddlewares extends ReadonlyArray<Middleware<any, any>>>(\r\n    ...items: AdditionalMiddlewares\r\n  ): MiddlewareArray<[...AdditionalMiddlewares, ...Middlewares]>\r\n\r\n  prepend(...arr: any[]) {\r\n    if (arr.length === 1 && Array.isArray(arr[0])) {\r\n      return new MiddlewareArray(...arr[0].concat(this))\r\n    }\r\n    return new MiddlewareArray(...arr.concat(this))\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class EnhancerArray<\r\n  Enhancers extends StoreEnhancer<any, any>[]\r\n> extends Array<Enhancers[number]> {\r\n  constructor(...items: Enhancers)\r\n  constructor(...args: any[]) {\r\n    super(...args)\r\n    Object.setPrototypeOf(this, EnhancerArray.prototype)\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return EnhancerArray as any\r\n  }\r\n\r\n  concat<AdditionalEnhancers extends ReadonlyArray<StoreEnhancer<any, any>>>(\r\n    items: AdditionalEnhancers\r\n  ): EnhancerArray<[...Enhancers, ...AdditionalEnhancers]>\r\n\r\n  concat<AdditionalEnhancers extends ReadonlyArray<StoreEnhancer<any, any>>>(\r\n    ...items: AdditionalEnhancers\r\n  ): EnhancerArray<[...Enhancers, ...AdditionalEnhancers]>\r\n  concat(...arr: any[]) {\r\n    return super.concat.apply(this, arr)\r\n  }\r\n\r\n  prepend<AdditionalEnhancers extends ReadonlyArray<StoreEnhancer<any, any>>>(\r\n    items: AdditionalEnhancers\r\n  ): EnhancerArray<[...AdditionalEnhancers, ...Enhancers]>\r\n\r\n  prepend<AdditionalEnhancers extends ReadonlyArray<StoreEnhancer<any, any>>>(\r\n    ...items: AdditionalEnhancers\r\n  ): EnhancerArray<[...AdditionalEnhancers, ...Enhancers]>\r\n\r\n  prepend(...arr: any[]) {\r\n    if (arr.length === 1 && Array.isArray(arr[0])) {\r\n      return new EnhancerArray(...arr[0].concat(this))\r\n    }\r\n    return new EnhancerArray(...arr.concat(this))\r\n  }\r\n}\r\n\r\nexport function freezeDraftable<T>(val: T) {\r\n  return isDraftable(val) ? createNextState(val, () => {}) : val\r\n}\r\n", "import type { Middleware } from 'redux'\r\nimport { getTimeMeasureUtils } from './utils'\r\n\r\ntype EntryProcessor = (key: string, value: any) => any\r\n\r\nconst isProduction: boolean = process.env.NODE_ENV === 'production'\r\nconst prefix: string = 'Invariant failed'\r\n\r\n// Throw an error if the condition fails\r\n// Strip out error messages for production\r\n// > Not providing an inline default argument for message as the result is smaller\r\nfunction invariant(condition: any, message?: string) {\r\n  if (condition) {\r\n    return\r\n  }\r\n  // Condition not passed\r\n\r\n  // In production we strip the message but still throw\r\n  if (isProduction) {\r\n    throw new Error(prefix)\r\n  }\r\n\r\n  // When not in production we allow the message to pass through\r\n  // *This block will be removed in production builds*\r\n  throw new Error(`${prefix}: ${message || ''}`)\r\n}\r\n\r\nfunction stringify(\r\n  obj: any,\r\n  serializer?: EntryProcessor,\r\n  indent?: string | number,\r\n  decycler?: EntryProcessor\r\n): string {\r\n  return JSON.stringify(obj, getSerialize(serializer, decycler), indent)\r\n}\r\n\r\nfunction getSerialize(\r\n  serializer?: EntryProcessor,\r\n  decycler?: EntryProcessor\r\n): EntryProcessor {\r\n  let stack: any[] = [],\r\n    keys: any[] = []\r\n\r\n  if (!decycler)\r\n    decycler = function (_: string, value: any) {\r\n      if (stack[0] === value) return '[Circular ~]'\r\n      return (\r\n        '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']'\r\n      )\r\n    }\r\n\r\n  return function (this: any, key: string, value: any) {\r\n    if (stack.length > 0) {\r\n      var thisPos = stack.indexOf(this)\r\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\r\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\r\n      if (~stack.indexOf(value)) value = decycler!.call(this, key, value)\r\n    } else stack.push(value)\r\n\r\n    return serializer == null ? value : serializer.call(this, key, value)\r\n  }\r\n}\r\n\r\n/**\r\n * The default `isImmutable` function.\r\n *\r\n * @public\r\n */\r\nexport function isImmutableDefault(value: unknown): boolean {\r\n  return typeof value !== 'object' || value == null || Object.isFrozen(value)\r\n}\r\n\r\nexport function trackForMutations(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: IgnorePaths | undefined,\r\n  obj: any\r\n) {\r\n  const trackedProperties = trackProperties(isImmutable, ignorePaths, obj)\r\n  return {\r\n    detectMutations() {\r\n      return detectMutations(isImmutable, ignorePaths, trackedProperties, obj)\r\n    },\r\n  }\r\n}\r\n\r\ninterface TrackedProperty {\r\n  value: any\r\n  children: Record<string, any>\r\n}\r\n\r\nfunction trackProperties(\r\n  isImmutable: IsImmutableFunc,\r\n  ignorePaths: IgnorePaths = [],\r\n  obj: Record<string, any>,\r\n  path: string = '',\r\n  checkedObjects: Set<Record<string, any>> = new Set()\r\n) {\r\n  const tracked: Partial<TrackedProperty> = { value: obj }\r\n\r\n  if (!isImmutable(obj) && !checkedObjects.has(obj)) {\r\n    checkedObjects.add(obj);\r\n    tracked.children = {}\r\n\r\n    for (const key in obj) {\r\n      const childPath = path ? path + '.' + key : key\r\n      if (ignorePaths.length && ignorePaths.indexOf(childPath) !== -1) {\r\n        continue\r\n      }\r\n\r\n      tracked.children[key] = trackProperties(\r\n        isImmutable,\r\n        ignorePaths,\r\n        obj[key],\r\n        childPath\r\n      )\r\n    }\r\n  }\r\n  return tracked as TrackedProperty\r\n}\r\n\r\ntype IgnorePaths = readonly (string | RegExp)[]\r\n\r\nfunction detectMutations(\r\n  isImmutable: IsImmutableFunc,\r\n  ignoredPaths: IgnorePaths = [],\r\n  trackedProperty: TrackedProperty,\r\n  obj: any,\r\n  sameParentRef: boolean = false,\r\n  path: string = ''\r\n): { wasMutated: boolean; path?: string } {\r\n  const prevObj = trackedProperty ? trackedProperty.value : undefined\r\n\r\n  const sameRef = prevObj === obj\r\n\r\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\r\n    return { wasMutated: true, path }\r\n  }\r\n\r\n  if (isImmutable(prevObj) || isImmutable(obj)) {\r\n    return { wasMutated: false }\r\n  }\r\n\r\n  // Gather all keys from prev (tracked) and after objs\r\n  const keysToDetect: Record<string, boolean> = {}\r\n  for (let key in trackedProperty.children) {\r\n    keysToDetect[key] = true\r\n  }\r\n  for (let key in obj) {\r\n    keysToDetect[key] = true\r\n  }\r\n\r\n  const hasIgnoredPaths = ignoredPaths.length > 0\r\n\r\n  for (let key in keysToDetect) {\r\n    const nestedPath = path ? path + '.' + key : key\r\n\r\n    if (hasIgnoredPaths) {\r\n      const hasMatches = ignoredPaths.some((ignored) => {\r\n        if (ignored instanceof RegExp) {\r\n          return ignored.test(nestedPath)\r\n        }\r\n        return nestedPath === ignored\r\n      })\r\n      if (hasMatches) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    const result = detectMutations(\r\n      isImmutable,\r\n      ignoredPaths,\r\n      trackedProperty.children[key],\r\n      obj[key],\r\n      sameRef,\r\n      nestedPath\r\n    )\r\n\r\n    if (result.wasMutated) {\r\n      return result\r\n    }\r\n  }\r\n  return { wasMutated: false }\r\n}\r\n\r\ntype IsImmutableFunc = (value: any) => boolean\r\n\r\n/**\r\n * Options for `createImmutableStateInvariantMiddleware()`.\r\n *\r\n * @public\r\n */\r\nexport interface ImmutableStateInvariantMiddlewareOptions {\r\n  /**\r\n    Callback function to check if a value is considered to be immutable.\r\n    This function is applied recursively to every value contained in the state.\r\n    The default implementation will return true for primitive types \r\n    (like numbers, strings, booleans, null and undefined).\r\n   */\r\n  isImmutable?: IsImmutableFunc\r\n  /** \r\n    An array of dot-separated path strings that match named nodes from \r\n    the root state to ignore when checking for immutability.\r\n    Defaults to undefined\r\n   */\r\n  ignoredPaths?: IgnorePaths\r\n  /** Print a warning if checks take longer than N ms. Default: 32ms */\r\n  warnAfter?: number\r\n  // @deprecated. Use ignoredPaths\r\n  ignore?: string[]\r\n}\r\n\r\n/**\r\n * Creates a middleware that checks whether any state was mutated in between\r\n * dispatches or during a dispatch. If any mutations are detected, an error is\r\n * thrown.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\r\nexport function createImmutableStateInvariantMiddleware(\r\n  options: ImmutableStateInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => (next) => (action) => next(action)\r\n  }\r\n\r\n  let {\r\n    isImmutable = isImmutableDefault,\r\n    ignoredPaths,\r\n    warnAfter = 32,\r\n    ignore,\r\n  } = options\r\n\r\n  // Alias ignore->ignoredPaths, but prefer ignoredPaths if present\r\n  ignoredPaths = ignoredPaths || ignore\r\n\r\n  const track = trackForMutations.bind(null, isImmutable, ignoredPaths)\r\n\r\n  return ({ getState }) => {\r\n    let state = getState()\r\n    let tracker = track(state)\r\n\r\n    let result\r\n    return (next) => (action) => {\r\n      const measureUtils = getTimeMeasureUtils(\r\n        warnAfter,\r\n        'ImmutableStateInvariantMiddleware'\r\n      )\r\n\r\n      measureUtils.measureTime(() => {\r\n        state = getState()\r\n\r\n        result = tracker.detectMutations()\r\n        // Track before potentially not meeting the invariant\r\n        tracker = track(state)\r\n\r\n        invariant(\r\n          !result.wasMutated,\r\n          `A state mutation was detected between dispatches, in the path '${\r\n            result.path || ''\r\n          }'.  This may cause incorrect behavior. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`\r\n        )\r\n      })\r\n\r\n      const dispatchedAction = next(action)\r\n\r\n      measureUtils.measureTime(() => {\r\n        state = getState()\r\n\r\n        result = tracker.detectMutations()\r\n        // Track before potentially not meeting the invariant\r\n        tracker = track(state)\r\n\r\n        result.wasMutated &&\r\n          invariant(\r\n            !result.wasMutated,\r\n            `A state mutation was detected inside a dispatch, in the path: ${\r\n              result.path || ''\r\n            }. Take a look at the reducer(s) handling the action ${stringify(\r\n              action\r\n            )}. (https://redux.js.org/style-guide/style-guide#do-not-mutate-state)`\r\n          )\r\n      })\r\n\r\n      measureUtils.warnIfExceeded()\r\n\r\n      return dispatchedAction\r\n    }\r\n  }\r\n}\r\n", "import isPlainObject from './isPlainObject'\r\nimport type { Middleware } from 'redux'\r\nimport { getTimeMeasureUtils } from './utils'\r\n\r\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n *\r\n * @public\r\n */\r\nexport function isPlain(val: any) {\r\n  const type = typeof val\r\n  return (\r\n    val == null ||\r\n    type === 'string' ||\r\n    type === 'boolean' ||\r\n    type === 'number' ||\r\n    Array.isArray(val) ||\r\n    isPlainObject(val)\r\n  )\r\n}\r\n\r\ninterface NonSerializableValue {\r\n  keyPath: string\r\n  value: unknown\r\n}\r\n\r\ntype IgnorePaths = readonly (string | RegExp)[]\r\n\r\n/**\r\n * @public\r\n */\r\nexport function findNonSerializableValue(\r\n  value: unknown,\r\n  path: string = '',\r\n  isSerializable: (value: unknown) => boolean = isPlain,\r\n  getEntries?: (value: unknown) => [string, any][],\r\n  ignoredPaths: IgnorePaths = [],\r\n  cache?: WeakSet<object>\r\n): NonSerializableValue | false {\r\n  let foundNestedSerializable: NonSerializableValue | false\r\n\r\n  if (!isSerializable(value)) {\r\n    return {\r\n      keyPath: path || '<root>',\r\n      value: value,\r\n    }\r\n  }\r\n\r\n  if (typeof value !== 'object' || value === null) {\r\n    return false\r\n  }\r\n\r\n  if (cache?.has(value)) return false\r\n\r\n  const entries = getEntries != null ? getEntries(value) : Object.entries(value)\r\n\r\n  const hasIgnoredPaths = ignoredPaths.length > 0\r\n\r\n  for (const [key, nestedValue] of entries) {\r\n    const nestedPath = path ? path + '.' + key : key\r\n\r\n    if (hasIgnoredPaths) {\r\n      const hasMatches = ignoredPaths.some((ignored) => {\r\n        if (ignored instanceof RegExp) {\r\n          return ignored.test(nestedPath)\r\n        }\r\n        return nestedPath === ignored\r\n      })\r\n      if (hasMatches) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (!isSerializable(nestedValue)) {\r\n      return {\r\n        keyPath: nestedPath,\r\n        value: nestedValue,\r\n      }\r\n    }\r\n\r\n    if (typeof nestedValue === 'object') {\r\n      foundNestedSerializable = findNonSerializableValue(\r\n        nestedValue,\r\n        nestedPath,\r\n        isSerializable,\r\n        getEntries,\r\n        ignoredPaths,\r\n        cache\r\n      )\r\n\r\n      if (foundNestedSerializable) {\r\n        return foundNestedSerializable\r\n      }\r\n    }\r\n  }\r\n\r\n  if (cache && isNestedFrozen(value)) cache.add(value)\r\n\r\n  return false\r\n}\r\n\r\nexport function isNestedFrozen(value: object) {\r\n  if (!Object.isFrozen(value)) return false\r\n\r\n  for (const nestedValue of Object.values(value)) {\r\n    if (typeof nestedValue !== 'object' || nestedValue === null) continue\r\n\r\n    if (!isNestedFrozen(nestedValue)) return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Options for `createSerializableStateInvariantMiddleware()`.\r\n *\r\n * @public\r\n */\r\nexport interface SerializableStateInvariantMiddlewareOptions {\r\n  /**\r\n   * The function to check if a value is considered serializable. This\r\n   * function is applied recursively to every value contained in the\r\n   * state. Defaults to `isPlain()`.\r\n   */\r\n  isSerializable?: (value: any) => boolean\r\n  /**\r\n   * The function that will be used to retrieve entries from each\r\n   * value.  If unspecified, `Object.entries` will be used. Defaults\r\n   * to `undefined`.\r\n   */\r\n  getEntries?: (value: any) => [string, any][]\r\n\r\n  /**\r\n   * An array of action types to ignore when checking for serializability.\r\n   * Defaults to []\r\n   */\r\n  ignoredActions?: string[]\r\n\r\n  /**\r\n   * An array of dot-separated path strings or regular expressions to ignore\r\n   * when checking for serializability, Defaults to\r\n   * ['meta.arg', 'meta.baseQueryMeta']\r\n   */\r\n  ignoredActionPaths?: (string | RegExp)[]\r\n\r\n  /**\r\n   * An array of dot-separated path strings or regular expressions to ignore\r\n   * when checking for serializability, Defaults to []\r\n   */\r\n  ignoredPaths?: (string | RegExp)[]\r\n  /**\r\n   * Execution time warning threshold. If the middleware takes longer\r\n   * than `warnAfter` ms, a warning will be displayed in the console.\r\n   * Defaults to 32ms.\r\n   */\r\n  warnAfter?: number\r\n\r\n  /**\r\n   * Opt out of checking state. When set to `true`, other state-related params will be ignored.\r\n   */\r\n  ignoreState?: boolean\r\n\r\n  /**\r\n   * Opt out of checking actions. When set to `true`, other action-related params will be ignored.\r\n   */\r\n  ignoreActions?: boolean\r\n\r\n  /**\r\n   * Opt out of caching the results. The cache uses a WeakSet and speeds up repeated checking processes.\r\n   * The cache is automatically disabled if no browser support for WeakSet is present.\r\n   */\r\n  disableCache?: boolean\r\n}\r\n\r\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\r\nexport function createSerializableStateInvariantMiddleware(\r\n  options: SerializableStateInvariantMiddlewareOptions = {}\r\n): Middleware {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => (next) => (action) => next(action)\r\n  }\r\n  const {\r\n    isSerializable = isPlain,\r\n    getEntries,\r\n    ignoredActions = [],\r\n    ignoredActionPaths = ['meta.arg', 'meta.baseQueryMeta'],\r\n    ignoredPaths = [],\r\n    warnAfter = 32,\r\n    ignoreState = false,\r\n    ignoreActions = false,\r\n    disableCache = false,\r\n  } = options\r\n\r\n  const cache: WeakSet<object> | undefined =\r\n    !disableCache && WeakSet ? new WeakSet() : undefined\r\n\r\n  return (storeAPI) => (next) => (action) => {\r\n    const result = next(action)\r\n\r\n    const measureUtils = getTimeMeasureUtils(\r\n      warnAfter,\r\n      'SerializableStateInvariantMiddleware'\r\n    )\r\n\r\n    if (\r\n      !ignoreActions &&\r\n      !(ignoredActions.length && ignoredActions.indexOf(action.type) !== -1)\r\n    ) {\r\n      measureUtils.measureTime(() => {\r\n        const foundActionNonSerializableValue = findNonSerializableValue(\r\n          action,\r\n          '',\r\n          isSerializable,\r\n          getEntries,\r\n          ignoredActionPaths,\r\n          cache\r\n        )\r\n\r\n        if (foundActionNonSerializableValue) {\r\n          const { keyPath, value } = foundActionNonSerializableValue\r\n\r\n          console.error(\r\n            `A non-serializable value was detected in an action, in the path: \\`${keyPath}\\`. Value:`,\r\n            value,\r\n            '\\nTake a look at the logic that dispatched this action: ',\r\n            action,\r\n            '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)',\r\n            '\\n(To allow non-serializable values see: https://redux-toolkit.js.org/usage/usage-guide#working-with-non-serializable-data)'\r\n          )\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!ignoreState) {\r\n      measureUtils.measureTime(() => {\r\n        const state = storeAPI.getState()\r\n\r\n        const foundStateNonSerializableValue = findNonSerializableValue(\r\n          state,\r\n          '',\r\n          isSerializable,\r\n          getEntries,\r\n          ignoredPaths,\r\n          cache\r\n        )\r\n\r\n        if (foundStateNonSerializableValue) {\r\n          const { keyPath, value } = foundStateNonSerializableValue\r\n\r\n          console.error(\r\n            `A non-serializable value was detected in the state, in the path: \\`${keyPath}\\`. Value:`,\r\n            value,\r\n            `\r\nTake a look at the reducer(s) handling this action type: ${action.type}.\r\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)`\r\n          )\r\n        }\r\n      })\r\n\r\n      measureUtils.warnIfExceeded()\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n", "import type { Draft } from 'immer'\r\nimport createNextState, { isDraft, isDraftable } from 'immer'\r\nimport type { AnyAction, Action, Reducer } from 'redux'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { freezeDraftable } from './utils'\r\n\r\n/**\r\n * Defines a mapping from action types to corresponding action object shapes.\r\n *\r\n * @deprecated This should not be used manually - it is only used for internal\r\n *             inference purposes and should not have any further value.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type Actions<T extends keyof any = string> = Record<T, Action>\r\n\r\n/**\r\n * @deprecated use `TypeGuard` instead\r\n */\r\nexport interface ActionMatcher<A extends AnyAction> {\r\n  (action: AnyAction): action is A\r\n}\r\n\r\nexport type ActionMatcherDescription<S, A extends AnyAction> = {\r\n  matcher: ActionMatcher<A>\r\n  reducer: CaseReducer<S, NoInfer<A>>\r\n}\r\n\r\nexport type ReadonlyActionMatcherDescriptionCollection<S> = ReadonlyArray<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\nexport type ActionMatcherDescriptionCollection<S> = Array<\r\n  ActionMatcherDescription<S, any>\r\n>\r\n\r\n/**\r\n * A *case reducer* is a reducer function for a specific action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducer<S = any, A extends Action = AnyAction> = (\r\n  state: Draft<S>,\r\n  action: A\r\n) => NoInfer<S> | void | Draft<NoInfer<S>>\r\n\r\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n *\r\n * @deprecated This should not be used manually - it is only used\r\n *             for internal inference purposes and using it manually\r\n *             would lead to type erasure.\r\n *             It might be removed in the future.\r\n * @public\r\n */\r\nexport type CaseReducers<S, AS extends Actions> = {\r\n  [T in keyof AS]: AS[T] extends Action ? CaseReducer<S, AS[T]> : void\r\n}\r\n\r\nexport type NotFunction<T> = T extends Function ? never : T\r\n\r\nfunction isStateFunction<S>(x: unknown): x is () => S {\r\n  return typeof x === 'function'\r\n}\r\n\r\nexport type ReducerWithInitialState<S extends NotFunction<any>> = Reducer<S> & {\r\n  getInitialState: () => S\r\n}\r\n\r\nlet hasWarnedAboutObjectNotation = false\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * @remarks\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @overloadSummary\r\n * This overload accepts a callback function that receives a `builder` object as its argument.\r\n * That builder provides `addCase`, `addMatcher` and `addDefaultCase` functions that may be\r\n * called to define what actions this reducer will handle.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param builderCallback - `(builder: Builder) => void` A callback that receives a *builder* object to define\r\n *   case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AnyAction,\r\n  PayloadAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst increment = createAction<number>(\"increment\");\r\nconst decrement = createAction<number>(\"decrement\");\r\n\r\nfunction isActionWithNumberPayload(\r\n  action: AnyAction\r\n): action is PayloadAction<number> {\r\n  return typeof action.payload === \"number\";\r\n}\r\n\r\nconst reducer = createReducer(\r\n  {\r\n    counter: 0,\r\n    sumOfNumberPayloads: 0,\r\n    unhandledActions: 0,\r\n  },\r\n  (builder) => {\r\n    builder\r\n      .addCase(increment, (state, action) => {\r\n        // action is inferred correctly here\r\n        state.counter += action.payload;\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {\r\n        state.counter -= action.payload;\r\n      })\r\n      // You can apply a \"matcher function\" to incoming actions\r\n      .addMatcher(isActionWithNumberPayload, (state, action) => {})\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {});\r\n  }\r\n);\r\n```\r\n * @public\r\n */\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): ReducerWithInitialState<S>\r\n\r\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n * \r\n * @overloadSummary\r\n * This overload accepts an object where the keys are string action types, and the values\r\n * are case reducer functions to handle those action types.\r\n *\r\n * @param initialState - `State | (() => State)`: The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n * @param actionsMap - An object mapping from action types to _case reducers_, each of which handles one specific action type.\r\n * @param actionMatchers - An array of matcher definitions in the form `{matcher, reducer}`.\r\n *   All matching reducers will be executed in order, independently if a case reducer matched or not.\r\n * @param defaultCaseReducer - A \"default case\" reducer that is executed if no case reducer and no matcher\r\n *   reducer was executed for this action.\r\n *\r\n * @example\r\n```js\r\nconst counterReducer = createReducer(0, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n\r\n// Alternately, use a \"lazy initializer\" to provide the initial state\r\n// (works with either form of createReducer)\r\nconst initialState = () => 0\r\nconst counterReducer = createReducer(initialState, {\r\n  increment: (state, action) => state + action.payload,\r\n  decrement: (state, action) => state - action.payload\r\n})\r\n```\r\n \r\n * Action creators that were generated using [`createAction`](./createAction) may be used directly as the keys here, using computed property syntax:\r\n\r\n```js\r\nconst increment = createAction('increment')\r\nconst decrement = createAction('decrement')\r\n\r\nconst counterReducer = createReducer(0, {\r\n  [increment]: (state, action) => state + action.payload,\r\n  [decrement.type]: (state, action) => state - action.payload\r\n})\r\n```\r\n * @public\r\n */\r\nexport function createReducer<\r\n  S extends NotFunction<any>,\r\n  CR extends CaseReducers<S, any> = CaseReducers<S, any>\r\n>(\r\n  initialState: S | (() => S),\r\n  actionsMap: CR,\r\n  actionMatchers?: ActionMatcherDescriptionCollection<S>,\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S>\r\n\r\nexport function createReducer<S extends NotFunction<any>>(\r\n  initialState: S | (() => S),\r\n  mapOrBuilderCallback:\r\n    | CaseReducers<S, any>\r\n    | ((builder: ActionReducerMapBuilder<S>) => void),\r\n  actionMatchers: ReadonlyActionMatcherDescriptionCollection<S> = [],\r\n  defaultCaseReducer?: CaseReducer<S>\r\n): ReducerWithInitialState<S> {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (typeof mapOrBuilderCallback === 'object') {\r\n      if (!hasWarnedAboutObjectNotation) {\r\n        hasWarnedAboutObjectNotation = true\r\n        console.warn(\r\n          \"The object notation for `createReducer` is deprecated, and will be removed in RTK 2.0. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer\"\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] =\r\n    typeof mapOrBuilderCallback === 'function'\r\n      ? executeReducerBuilderCallback(mapOrBuilderCallback)\r\n      : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer]\r\n\r\n  // Ensure the initial state gets frozen either way (if draftable)\r\n  let getInitialState: () => S\r\n  if (isStateFunction(initialState)) {\r\n    getInitialState = () => freezeDraftable(initialState())\r\n  } else {\r\n    const frozenInitialState = freezeDraftable(initialState)\r\n    getInitialState = () => frozenInitialState\r\n  }\r\n\r\n  function reducer(state = getInitialState(), action: any): S {\r\n    let caseReducers = [\r\n      actionsMap[action.type],\r\n      ...finalActionMatchers\r\n        .filter(({ matcher }) => matcher(action))\r\n        .map(({ reducer }) => reducer),\r\n    ]\r\n    if (caseReducers.filter((cr) => !!cr).length === 0) {\r\n      caseReducers = [finalDefaultCaseReducer]\r\n    }\r\n\r\n    return caseReducers.reduce((previousState, caseReducer): S => {\r\n      if (caseReducer) {\r\n        if (isDraft(previousState)) {\r\n          // If it's already a draft, we must already be inside a `createNextState` call,\r\n          // likely because this is being wrapped in `createReducer`, `createSlice`, or nested\r\n          // inside an existing draft. It's safe to just pass the draft to the mutator.\r\n          const draft = previousState as Draft<S> // We can assume this is already a draft\r\n          const result = caseReducer(draft, action)\r\n\r\n          if (result === undefined) {\r\n            return previousState\r\n          }\r\n\r\n          return result as S\r\n        } else if (!isDraftable(previousState)) {\r\n          // If state is not draftable (ex: a primitive, such as 0), we want to directly\r\n          // return the caseReducer func and not wrap it with produce.\r\n          const result = caseReducer(previousState as any, action)\r\n\r\n          if (result === undefined) {\r\n            if (previousState === null) {\r\n              return previousState\r\n            }\r\n            throw Error(\r\n              'A case reducer on a non-draftable value must not return undefined'\r\n            )\r\n          }\r\n\r\n          return result as S\r\n        } else {\r\n          // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n          // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n          // these two types.\r\n          return createNextState(previousState, (draft: Draft<S>) => {\r\n            return caseReducer(draft, action)\r\n          })\r\n        }\r\n      }\r\n\r\n      return previousState\r\n    }, state)\r\n  }\r\n\r\n  reducer.getInitialState = getInitialState\r\n\r\n  return reducer as ReducerWithInitialState<S>\r\n}\r\n", "import type { Action, AnyAction } from 'redux'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ActionMatcherDescriptionCollection,\r\n} from './createReducer'\r\nimport type { TypeGuard } from './tsHelpers'\r\n\r\nexport interface TypedActionCreator<Type extends string> {\r\n  (...args: any[]): Action<Type>\r\n  type: Type\r\n}\r\n\r\n/**\r\n * A builder for an action <-> reducer map.\r\n *\r\n * @public\r\n */\r\nexport interface ActionReducerMapBuilder<State> {\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<ActionCreator extends TypedActionCreator<string>>(\r\n    actionCreator: ActionCreator,\r\n    reducer: CaseReducer<State, ReturnType<ActionCreator>>\r\n  ): ActionReducerMapBuilder<State>\r\n  /**\r\n   * Adds a case reducer to handle a single exact action type.\r\n   * @remarks\r\n   * All calls to `builder.addCase` must come before any calls to `builder.addMatcher` or `builder.addDefaultCase`.\r\n   * @param actionCreator - Either a plain action type string, or an action creator generated by [`createAction`](./createAction) that can be used to determine the action type.\r\n   * @param reducer - The actual case reducer function.\r\n   */\r\n  addCase<Type extends string, A extends Action<Type>>(\r\n    type: Type,\r\n    reducer: CaseReducer<State, A>\r\n  ): ActionReducerMapBuilder<State>\r\n\r\n  /**\r\n   * Allows you to match your incoming actions against your own filter function instead of only the `action.type` property.\r\n   * @remarks\r\n   * If multiple matcher reducers match, all of them will be executed in the order\r\n   * they were defined in - even if a case reducer already matched.\r\n   * All calls to `builder.addMatcher` must come after any calls to `builder.addCase` and before any calls to `builder.addDefaultCase`.\r\n   * @param matcher - A matcher function. In TypeScript, this should be a [type predicate](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates)\r\n   *   function\r\n   * @param reducer - The actual case reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport {\r\n  createAction,\r\n  createReducer,\r\n  AsyncThunk,\r\n  AnyAction,\r\n} from \"@reduxjs/toolkit\";\r\n\r\ntype GenericAsyncThunk = AsyncThunk<unknown, unknown, any>;\r\n\r\ntype PendingAction = ReturnType<GenericAsyncThunk[\"pending\"]>;\r\ntype RejectedAction = ReturnType<GenericAsyncThunk[\"rejected\"]>;\r\ntype FulfilledAction = ReturnType<GenericAsyncThunk[\"fulfilled\"]>;\r\n\r\nconst initialState: Record<string, string> = {};\r\nconst resetAction = createAction(\"reset-tracked-loading-state\");\r\n\r\nfunction isPendingAction(action: AnyAction): action is PendingAction {\r\n  return action.type.endsWith(\"/pending\");\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(resetAction, () => initialState)\r\n    // matcher can be defined outside as a type predicate function\r\n    .addMatcher(isPendingAction, (state, action) => {\r\n      state[action.meta.requestId] = \"pending\";\r\n    })\r\n    .addMatcher(\r\n      // matcher can be defined inline as a type predicate function\r\n      (action): action is RejectedAction => action.type.endsWith(\"/rejected\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"rejected\";\r\n      }\r\n    )\r\n    // matcher can just return boolean and the matcher can receive a generic argument\r\n    .addMatcher<FulfilledAction>(\r\n      (action) => action.type.endsWith(\"/fulfilled\"),\r\n      (state, action) => {\r\n        state[action.meta.requestId] = \"fulfilled\";\r\n      }\r\n    );\r\n});\r\n```\r\n   */\r\n  addMatcher<A>(\r\n    matcher: TypeGuard<A> | ((action: any) => boolean),\r\n    reducer: CaseReducer<State, A extends AnyAction ? A : A & AnyAction>\r\n  ): Omit<ActionReducerMapBuilder<State>, 'addCase'>\r\n\r\n  /**\r\n   * Adds a \"default case\" reducer that is executed if no case reducer and no matcher\r\n   * reducer was executed for this action.\r\n   * @param reducer - The fallback \"default case\" reducer function.\r\n   *\r\n   * @example\r\n```ts\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nconst initialState = { otherActions: 0 }\r\nconst reducer = createReducer(initialState, builder => {\r\n  builder\r\n    // .addCase(...)\r\n    // .addMatcher(...)\r\n    .addDefaultCase((state, action) => {\r\n      state.otherActions++\r\n    })\r\n})\r\n```\r\n   */\r\n  addDefaultCase(reducer: CaseReducer<State, AnyAction>): {}\r\n}\r\n\r\nexport function executeReducerBuilderCallback<S>(\r\n  builderCallback: (builder: ActionReducerMapBuilder<S>) => void\r\n): [\r\n  CaseReducers<S, any>,\r\n  ActionMatcherDescriptionCollection<S>,\r\n  CaseReducer<S, AnyAction> | undefined\r\n] {\r\n  const actionsMap: CaseReducers<S, any> = {}\r\n  const actionMatchers: ActionMatcherDescriptionCollection<S> = []\r\n  let defaultCaseReducer: CaseReducer<S, AnyAction> | undefined\r\n  const builder = {\r\n    addCase(\r\n      typeOrActionCreator: string | TypedActionCreator<any>,\r\n      reducer: CaseReducer<S>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        /*\r\n         to keep the definition by the user in line with actual behavior,\r\n         we enforce `addCase` to always be called before calling `addMatcher`\r\n         as matching cases take precedence over matchers\r\n         */\r\n        if (actionMatchers.length > 0) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addMatcher`'\r\n          )\r\n        }\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addCase` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      const type =\r\n        typeof typeOrActionCreator === 'string'\r\n          ? typeOrActionCreator\r\n          : typeOrActionCreator.type\r\n      if (!type) {\r\n        throw new Error(\r\n          '`builder.addCase` cannot be called with an empty action type'\r\n        )\r\n      }\r\n      if (type in actionsMap) {\r\n        throw new Error(\r\n          '`builder.addCase` cannot be called with two reducers for the same action type'\r\n        )\r\n      }\r\n      actionsMap[type] = reducer\r\n      return builder\r\n    },\r\n    addMatcher<A>(\r\n      matcher: TypeGuard<A>,\r\n      reducer: CaseReducer<S, A extends AnyAction ? A : A & AnyAction>\r\n    ) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error(\r\n            '`builder.addMatcher` should only be called before calling `builder.addDefaultCase`'\r\n          )\r\n        }\r\n      }\r\n      actionMatchers.push({ matcher, reducer })\r\n      return builder\r\n    },\r\n    addDefaultCase(reducer: CaseReducer<S, AnyAction>) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (defaultCaseReducer) {\r\n          throw new Error('`builder.addDefaultCase` can only be called once')\r\n        }\r\n      }\r\n      defaultCaseReducer = reducer\r\n      return builder\r\n    },\r\n  }\r\n  builderCallback(builder)\r\n  return [actionsMap, actionMatchers, defaultCaseReducer]\r\n}\r\n", "import type { AnyAction, Reducer } from 'redux'\r\nimport { createNextState } from '.'\r\nimport type {\r\n  ActionCreatorWithoutPayload,\r\n  PayloadAction,\r\n  PayloadActionCreator,\r\n  PrepareAction,\r\n  _ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type {\r\n  CaseReducer,\r\n  CaseReducers,\r\n  ReducerWithInitialState,\r\n} from './createReducer'\r\nimport { createReducer, NotFunction } from './createReducer'\r\nimport type { ActionReducerMapBuilder } from './mapBuilders'\r\nimport { executeReducerBuilderCallback } from './mapBuilders'\r\nimport type { NoInfer } from './tsHelpers'\r\nimport { freezeDraftable } from './utils'\r\n\r\nlet hasWarnedAboutObjectNotation = false\r\n\r\n/**\r\n * An action creator attached to a slice.\r\n *\r\n * @deprecated please use PayloadActionCreator directly\r\n *\r\n * @public\r\n */\r\nexport type SliceActionCreator<P> = PayloadActionCreator<P>\r\n\r\n/**\r\n * The return value of `createSlice`\r\n *\r\n * @public\r\n */\r\nexport interface Slice<\r\n  State = any,\r\n  CaseReducers extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice name.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The slice's reducer.\r\n   */\r\n  reducer: Reducer<State>\r\n\r\n  /**\r\n   * Action creators for the types of actions that are handled by the slice\r\n   * reducer.\r\n   */\r\n  actions: CaseReducerActions<CaseReducers, Name>\r\n\r\n  /**\r\n   * The individual case reducer functions that were passed in the `reducers` parameter.\r\n   * This enables reuse and testing if they were defined inline when calling `createSlice`.\r\n   */\r\n  caseReducers: SliceDefinedCaseReducers<CaseReducers>\r\n\r\n  /**\r\n   * Provides access to the initial state value given to the slice.\r\n   * If a lazy state initializer was provided, it will be called and a fresh value returned.\r\n   */\r\n  getInitialState: () => State\r\n}\r\n\r\n/**\r\n * Options for `createSlice()`.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSliceOptions<\r\n  State = any,\r\n  CR extends SliceCaseReducers<State> = SliceCaseReducers<State>,\r\n  Name extends string = string\r\n> {\r\n  /**\r\n   * The slice's name. Used to namespace the generated action types.\r\n   */\r\n  name: Name\r\n\r\n  /**\r\n   * The initial state that should be used when the reducer is called the first time. This may also be a \"lazy initializer\" function, which should return an initial state value when called. This will be used whenever the reducer is called with `undefined` as its state value, and is primarily useful for cases like reading initial state from `localStorage`.\r\n   */\r\n  initialState: State | (() => State)\r\n\r\n  /**\r\n   * A mapping from action types to action-type-specific *case reducer*\r\n   * functions. For every action type, a matching action creator will be\r\n   * generated using `createAction()`.\r\n   */\r\n  reducers: ValidateSliceCaseReducers<State, CR>\r\n\r\n  /**\r\n   * A callback that receives a *builder* object to define\r\n   * case reducers via calls to `builder.addCase(actionCreatorOrType, reducer)`.\r\n   * \r\n   * Alternatively, a mapping from action types to action-type-specific *case reducer*\r\n   * functions. These reducers should have existing action types used\r\n   * as the keys, and action creators will _not_ be generated.\r\n   * \r\n   * @example\r\n```ts\r\nimport { createAction, createSlice, Action, AnyAction } from '@reduxjs/toolkit'\r\nconst incrementBy = createAction<number>('incrementBy')\r\nconst decrement = createAction('decrement')\r\n\r\ninterface RejectedAction extends Action {\r\n  error: Error\r\n}\r\n\r\nfunction isRejectedAction(action: AnyAction): action is RejectedAction {\r\n  return action.type.endsWith('rejected')\r\n}\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: 0,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(incrementBy, (state, action) => {\r\n        // action is inferred correctly here if using TS\r\n      })\r\n      // You can chain calls, or have separate `builder.addCase()` lines each time\r\n      .addCase(decrement, (state, action) => {})\r\n      // You can match a range of action types\r\n      .addMatcher(\r\n        isRejectedAction,\r\n        // `action` will be inferred as a RejectedAction due to isRejectedAction being defined as a type guard\r\n        (state, action) => {}\r\n      )\r\n      // and provide a default case if no other handlers matched\r\n      .addDefaultCase((state, action) => {})\r\n    }\r\n})\r\n```\r\n   */\r\n  extraReducers?:\r\n    | CaseReducers<NoInfer<State>, any>\r\n    | ((builder: ActionReducerMapBuilder<NoInfer<State>>) => void)\r\n}\r\n\r\n/**\r\n * A CaseReducer with a `prepare` method.\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerWithPrepare<State, Action extends PayloadAction> = {\r\n  reducer: CaseReducer<State, Action>\r\n  prepare: PrepareAction<Action['payload']>\r\n}\r\n\r\n/**\r\n * The type describing a slice's `reducers` option.\r\n *\r\n * @public\r\n */\r\nexport type SliceCaseReducers<State> = {\r\n  [K: string]:\r\n    | CaseReducer<State, PayloadAction<any>>\r\n    | CaseReducerWithPrepare<State, PayloadAction<any, string, any, any>>\r\n}\r\n\r\ntype SliceActionType<\r\n  SliceName extends string,\r\n  ActionName extends keyof any\r\n> = ActionName extends string | number ? `${SliceName}/${ActionName}` : string\r\n\r\n/**\r\n * Derives the slice's `actions` property from the `reducers` options\r\n *\r\n * @public\r\n */\r\nexport type CaseReducerActions<\r\n  CaseReducers extends SliceCaseReducers<any>,\r\n  SliceName extends string\r\n> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends { prepare: any }\r\n    ? ActionCreatorForCaseReducerWithPrepare<\r\n        CaseReducers[Type],\r\n        SliceActionType<SliceName, Type>\r\n      >\r\n    : ActionCreatorForCaseReducer<\r\n        CaseReducers[Type],\r\n        SliceActionType<SliceName, Type>\r\n      >\r\n}\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducerWithPrepare`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducerWithPrepare<\r\n  CR extends { prepare: any },\r\n  Type extends string\r\n> = _ActionCreatorWithPreparedPayload<CR['prepare'], Type>\r\n\r\n/**\r\n * Get a `PayloadActionCreator` type for a passed `CaseReducer`\r\n *\r\n * @internal\r\n */\r\ntype ActionCreatorForCaseReducer<CR, Type extends string> = CR extends (\r\n  state: any,\r\n  action: infer Action\r\n) => any\r\n  ? Action extends { payload: infer P }\r\n    ? PayloadActionCreator<P, Type>\r\n    : ActionCreatorWithoutPayload<Type>\r\n  : ActionCreatorWithoutPayload<Type>\r\n\r\n/**\r\n * Extracts the CaseReducers out of a `reducers` object, even if they are\r\n * tested into a `CaseReducerWithPrepare`.\r\n *\r\n * @internal\r\n */\r\ntype SliceDefinedCaseReducers<CaseReducers extends SliceCaseReducers<any>> = {\r\n  [Type in keyof CaseReducers]: CaseReducers[Type] extends {\r\n    reducer: infer Reducer\r\n  }\r\n    ? Reducer\r\n    : CaseReducers[Type]\r\n}\r\n\r\n/**\r\n * Used on a SliceCaseReducers object.\r\n * Ensures that if a CaseReducer is a `CaseReducerWithPrepare`, that\r\n * the `reducer` and the `prepare` function use the same type of `payload`.\r\n *\r\n * Might do additional such checks in the future.\r\n *\r\n * This type is only ever useful if you want to write your own wrapper around\r\n * `createSlice`. Please don't use it otherwise!\r\n *\r\n * @public\r\n */\r\nexport type ValidateSliceCaseReducers<\r\n  S,\r\n  ACR extends SliceCaseReducers<S>\r\n> = ACR &\r\n  {\r\n    [T in keyof ACR]: ACR[T] extends {\r\n      reducer(s: S, action?: infer A): any\r\n    }\r\n      ? {\r\n          prepare(...a: never[]): Omit<A, 'type'>\r\n        }\r\n      : {}\r\n  }\r\n\r\nfunction getType(slice: string, actionKey: string): string {\r\n  return `${slice}/${actionKey}`\r\n}\r\n\r\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\r\nexport function createSlice<\r\n  State,\r\n  CaseReducers extends SliceCaseReducers<State>,\r\n  Name extends string = string\r\n>(\r\n  options: CreateSliceOptions<State, CaseReducers, Name>\r\n): Slice<State, CaseReducers, Name> {\r\n  const { name } = options\r\n  if (!name) {\r\n    throw new Error('`name` is a required option for createSlice')\r\n  }\r\n\r\n  if (\r\n    typeof process !== 'undefined' &&\r\n    process.env.NODE_ENV === 'development'\r\n  ) {\r\n    if (options.initialState === undefined) {\r\n      console.error(\r\n        'You must provide an `initialState` value that is not `undefined`. You may have misspelled `initialState`'\r\n      )\r\n    }\r\n  }\r\n\r\n  const initialState =\r\n    typeof options.initialState == 'function'\r\n      ? options.initialState\r\n      : freezeDraftable(options.initialState)\r\n\r\n  const reducers = options.reducers || {}\r\n\r\n  const reducerNames = Object.keys(reducers)\r\n\r\n  const sliceCaseReducersByName: Record<string, CaseReducer> = {}\r\n  const sliceCaseReducersByType: Record<string, CaseReducer> = {}\r\n  const actionCreators: Record<string, Function> = {}\r\n\r\n  reducerNames.forEach((reducerName) => {\r\n    const maybeReducerWithPrepare = reducers[reducerName]\r\n    const type = getType(name, reducerName)\r\n\r\n    let caseReducer: CaseReducer<State, any>\r\n    let prepareCallback: PrepareAction<any> | undefined\r\n\r\n    if ('reducer' in maybeReducerWithPrepare) {\r\n      caseReducer = maybeReducerWithPrepare.reducer\r\n      prepareCallback = maybeReducerWithPrepare.prepare\r\n    } else {\r\n      caseReducer = maybeReducerWithPrepare\r\n    }\r\n\r\n    sliceCaseReducersByName[reducerName] = caseReducer\r\n    sliceCaseReducersByType[type] = caseReducer\r\n    actionCreators[reducerName] = prepareCallback\r\n      ? createAction(type, prepareCallback)\r\n      : createAction(type)\r\n  })\r\n\r\n  function buildReducer() {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (typeof options.extraReducers === 'object') {\r\n        if (!hasWarnedAboutObjectNotation) {\r\n          hasWarnedAboutObjectNotation = true\r\n          console.warn(\r\n            \"The object notation for `createSlice.extraReducers` is deprecated, and will be removed in RTK 2.0. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice\"\r\n          )\r\n        }\r\n      }\r\n    }\r\n    const [\r\n      extraReducers = {},\r\n      actionMatchers = [],\r\n      defaultCaseReducer = undefined,\r\n    ] =\r\n      typeof options.extraReducers === 'function'\r\n        ? executeReducerBuilderCallback(options.extraReducers)\r\n        : [options.extraReducers]\r\n\r\n    const finalCaseReducers = { ...extraReducers, ...sliceCaseReducersByType }\r\n\r\n    return createReducer(initialState, (builder) => {\r\n      for (let key in finalCaseReducers) {\r\n        builder.addCase(key, finalCaseReducers[key] as CaseReducer<any>)\r\n      }\r\n      for (let m of actionMatchers) {\r\n        builder.addMatcher(m.matcher, m.reducer)\r\n      }\r\n      if (defaultCaseReducer) {\r\n        builder.addDefaultCase(defaultCaseReducer)\r\n      }\r\n    })\r\n  }\r\n\r\n  let _reducer: ReducerWithInitialState<State>\r\n\r\n  return {\r\n    name,\r\n    reducer(state, action) {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer(state, action)\r\n    },\r\n    actions: actionCreators as any,\r\n    caseReducers: sliceCaseReducersByName as any,\r\n    getInitialState() {\r\n      if (!_reducer) _reducer = buildReducer()\r\n\r\n      return _reducer.getInitialState()\r\n    },\r\n  }\r\n}\r\n", "import type { EntityState } from './models'\r\n\r\nexport function getInitialEntityState<V>(): EntityState<V> {\r\n  return {\r\n    ids: [],\r\n    entities: {},\r\n  }\r\n}\r\n\r\nexport function createInitialStateFactory<V>() {\r\n  function getInitialState(): EntityState<V>\r\n  function getInitialState<S extends object>(\r\n    additionalState: S\r\n  ): EntityState<V> & S\r\n  function getInitialState(additionalState: any = {}): any {\r\n    return Object.assign(getInitialEntityState(), additionalState)\r\n  }\r\n\r\n  return { getInitialState }\r\n}\r\n", "import type { Selector } from 'reselect'\r\nimport { createDraftSafeSelector } from '../createDraftSafeSelector'\r\nimport type {\r\n  EntityState,\r\n  EntitySelectors,\r\n  Dictionary,\r\n  EntityId,\r\n} from './models'\r\n\r\nexport function createSelectorsFactory<T>() {\r\n  function getSelectors(): EntitySelectors<T, EntityState<T>>\r\n  function getSelectors<V>(\r\n    selectState: (state: V) => EntityState<T>\r\n  ): EntitySelectors<T, V>\r\n  function getSelectors<V>(\r\n    selectState?: (state: V) => EntityState<T>\r\n  ): EntitySelectors<T, any> {\r\n    const selectIds = (state: EntityState<T>) => state.ids\r\n\r\n    const selectEntities = (state: EntityState<T>) => state.entities\r\n\r\n    const selectAll = createDraftSafeSelector(\r\n      selectIds,\r\n      selectEntities,\r\n      (ids, entities): T[] => ids.map((id) => entities[id]!)\r\n    )\r\n\r\n    const selectId = (_: unknown, id: EntityId) => id\r\n\r\n    const selectById = (entities: Dictionary<T>, id: EntityId) => entities[id]\r\n\r\n    const selectTotal = createDraftSafeSelector(selectIds, (ids) => ids.length)\r\n\r\n    if (!selectState) {\r\n      return {\r\n        selectIds,\r\n        selectEntities,\r\n        selectAll,\r\n        selectTotal,\r\n        selectById: createDraftSafeSelector(\r\n          selectEntities,\r\n          selectId,\r\n          selectById\r\n        ),\r\n      }\r\n    }\r\n\r\n    const selectGlobalizedEntities = createDraftSafeSelector(\r\n      selectState as Selector<V, EntityState<T>>,\r\n      selectEntities\r\n    )\r\n\r\n    return {\r\n      selectIds: createDraftSafeSelector(selectState, selectIds),\r\n      selectEntities: selectGlobalizedEntities,\r\n      selectAll: createDraftSafeSelector(selectState, selectAll),\r\n      selectTotal: createDraftSafeSelector(selectState, selectTotal),\r\n      selectById: createDraftSafeSelector(\r\n        selectGlobalizedEntities,\r\n        selectId,\r\n        selectById\r\n      ),\r\n    }\r\n  }\r\n\r\n  return { getSelectors }\r\n}\r\n", "import createNextState, { isDraft } from 'immer'\r\nimport type { EntityState, PreventAny } from './models'\r\nimport type { PayloadAction } from '../createAction'\r\nimport { isFSA } from '../createAction'\r\nimport { IsAny } from '../tsHelpers'\r\n\r\nexport function createSingleArgumentStateOperator<V>(\r\n  mutator: (state: EntityState<V>) => void\r\n) {\r\n  const operator = createStateOperator((_: undefined, state: EntityState<V>) =>\r\n    mutator(state)\r\n  )\r\n\r\n  return function operation<S extends EntityState<V>>(\r\n    state: PreventAny<S, V>\r\n  ): S {\r\n    return operator(state as S, undefined)\r\n  }\r\n}\r\n\r\nexport function createStateOperator<V, R>(\r\n  mutator: (arg: R, state: EntityState<V>) => void\r\n) {\r\n  return function operation<S extends EntityState<V>>(\r\n    state: S,\r\n    arg: R | PayloadAction<R>\r\n  ): S {\r\n    function isPayloadActionArgument(\r\n      arg: R | PayloadAction<R>\r\n    ): arg is PayloadAction<R> {\r\n      return isFSA(arg)\r\n    }\r\n\r\n    const runMutator = (draft: EntityState<V>) => {\r\n      if (isPayloadActionArgument(arg)) {\r\n        mutator(arg.payload, draft)\r\n      } else {\r\n        mutator(arg, draft)\r\n      }\r\n    }\r\n\r\n    if (isDraft(state)) {\r\n      // we must already be inside a `createNextState` call, likely because\r\n      // this is being wrapped in `createReducer` or `createSlice`.\r\n      // It's safe to just pass the draft to the mutator.\r\n      runMutator(state)\r\n\r\n      // since it's a draft, we'll just return it\r\n      return state\r\n    } else {\r\n      // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\r\n      // than an Immutable<S>, and TypeScript cannot find out how to reconcile\r\n      // these two types.\r\n      return createNextState(state, runMutator)\r\n    }\r\n  }\r\n}\r\n", "import type { EntityState, IdSelector, Update, EntityId } from './models'\r\n\r\nexport function selectIdValue<T>(entity: T, selectId: IdSelector<T>) {\r\n  const key = selectId(entity)\r\n\r\n  if (process.env.NODE_ENV !== 'production' && key === undefined) {\r\n    console.warn(\r\n      'The entity passed to the `selectId` implementation returned undefined.',\r\n      'You should probably provide your own `selectId` implementation.',\r\n      'The entity that was passed:',\r\n      entity,\r\n      'The `selectId` implementation:',\r\n      selectId.toString()\r\n    )\r\n  }\r\n\r\n  return key\r\n}\r\n\r\nexport function ensureEntitiesArray<T>(\r\n  entities: readonly T[] | Record<EntityId, T>\r\n): readonly T[] {\r\n  if (!Array.isArray(entities)) {\r\n    entities = Object.values(entities)\r\n  }\r\n\r\n  return entities\r\n}\r\n\r\nexport function splitAddedUpdatedEntities<T>(\r\n  newEntities: readonly T[] | Record<EntityId, T>,\r\n  selectId: IdSelector<T>,\r\n  state: EntityState<T>\r\n): [T[], Update<T>[]] {\r\n  newEntities = ensureEntitiesArray(newEntities)\r\n\r\n  const added: T[] = []\r\n  const updated: Update<T>[] = []\r\n\r\n  for (const entity of newEntities) {\r\n    const id = selectIdValue(entity, selectId)\r\n    if (id in state.entities) {\r\n      updated.push({ id, changes: entity })\r\n    } else {\r\n      added.push(entity)\r\n    }\r\n  }\r\n  return [added, updated]\r\n}\r\n", "import type {\r\n  EntityState,\r\n  EntityStateAdapter,\r\n  IdSelector,\r\n  Update,\r\n  EntityId,\r\n} from './models'\r\nimport {\r\n  createStateOperator,\r\n  createSingleArgumentStateOperator,\r\n} from './state_adapter'\r\nimport {\r\n  selectIdValue,\r\n  ensureEntitiesArray,\r\n  splitAddedUpdatedEntities,\r\n} from './utils'\r\n\r\nexport function createUnsortedStateAdapter<T>(\r\n  selectId: IdSelector<T>\r\n): EntityStateAdapter<T> {\r\n  type R = EntityState<T>\r\n\r\n  function addOneMutably(entity: T, state: R): void {\r\n    const key = selectIdValue(entity, selectId)\r\n\r\n    if (key in state.entities) {\r\n      return\r\n    }\r\n\r\n    state.ids.push(key)\r\n    state.entities[key] = entity\r\n  }\r\n\r\n  function addManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n\r\n    for (const entity of newEntities) {\r\n      addOneMutably(entity, state)\r\n    }\r\n  }\r\n\r\n  function setOneMutably(entity: T, state: R): void {\r\n    const key = selectIdValue(entity, selectId)\r\n    if (!(key in state.entities)) {\r\n      state.ids.push(key)\r\n    }\r\n    state.entities[key] = entity\r\n  }\r\n\r\n  function setManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n    for (const entity of newEntities) {\r\n      setOneMutably(entity, state)\r\n    }\r\n  }\r\n\r\n  function setAllMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n\r\n    state.ids = []\r\n    state.entities = {}\r\n\r\n    addManyMutably(newEntities, state)\r\n  }\r\n\r\n  function removeOneMutably(key: EntityId, state: R): void {\r\n    return removeManyMutably([key], state)\r\n  }\r\n\r\n  function removeManyMutably(keys: readonly EntityId[], state: R): void {\r\n    let didMutate = false\r\n\r\n    keys.forEach((key) => {\r\n      if (key in state.entities) {\r\n        delete state.entities[key]\r\n        didMutate = true\r\n      }\r\n    })\r\n\r\n    if (didMutate) {\r\n      state.ids = state.ids.filter((id) => id in state.entities)\r\n    }\r\n  }\r\n\r\n  function removeAllMutably(state: R): void {\r\n    Object.assign(state, {\r\n      ids: [],\r\n      entities: {},\r\n    })\r\n  }\r\n\r\n  function takeNewKey(\r\n    keys: { [id: string]: EntityId },\r\n    update: Update<T>,\r\n    state: R\r\n  ): boolean {\r\n    const original = state.entities[update.id]\r\n    const updated: T = Object.assign({}, original, update.changes)\r\n    const newKey = selectIdValue(updated, selectId)\r\n    const hasNewKey = newKey !== update.id\r\n\r\n    if (hasNewKey) {\r\n      keys[update.id] = newKey\r\n      delete state.entities[update.id]\r\n    }\r\n\r\n    state.entities[newKey] = updated\r\n\r\n    return hasNewKey\r\n  }\r\n\r\n  function updateOneMutably(update: Update<T>, state: R): void {\r\n    return updateManyMutably([update], state)\r\n  }\r\n\r\n  function updateManyMutably(\r\n    updates: ReadonlyArray<Update<T>>,\r\n    state: R\r\n  ): void {\r\n    const newKeys: { [id: string]: EntityId } = {}\r\n\r\n    const updatesPerEntity: { [id: string]: Update<T> } = {}\r\n\r\n    updates.forEach((update) => {\r\n      // Only apply updates to entities that currently exist\r\n      if (update.id in state.entities) {\r\n        // If there are multiple updates to one entity, merge them together\r\n        updatesPerEntity[update.id] = {\r\n          id: update.id,\r\n          // Spreads ignore falsy values, so this works even if there isn't\r\n          // an existing update already at this key\r\n          changes: {\r\n            ...(updatesPerEntity[update.id]\r\n              ? updatesPerEntity[update.id].changes\r\n              : null),\r\n            ...update.changes,\r\n          },\r\n        }\r\n      }\r\n    })\r\n\r\n    updates = Object.values(updatesPerEntity)\r\n\r\n    const didMutateEntities = updates.length > 0\r\n\r\n    if (didMutateEntities) {\r\n      const didMutateIds =\r\n        updates.filter((update) => takeNewKey(newKeys, update, state)).length >\r\n        0\r\n\r\n      if (didMutateIds) {\r\n        state.ids = Object.keys(state.entities)\r\n      }\r\n    }\r\n  }\r\n\r\n  function upsertOneMutably(entity: T, state: R): void {\r\n    return upsertManyMutably([entity], state)\r\n  }\r\n\r\n  function upsertManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    const [added, updated] = splitAddedUpdatedEntities<T>(\r\n      newEntities,\r\n      selectId,\r\n      state\r\n    )\r\n\r\n    updateManyMutably(updated, state)\r\n    addManyMutably(added, state)\r\n  }\r\n\r\n  return {\r\n    removeAll: createSingleArgumentStateOperator(removeAllMutably),\r\n    addOne: createStateOperator(addOneMutably),\r\n    addMany: createStateOperator(addManyMutably),\r\n    setOne: createStateOperator(setOneMutably),\r\n    setMany: createStateOperator(setManyMutably),\r\n    setAll: createStateOperator(setAllMutably),\r\n    updateOne: createStateOperator(updateOneMutably),\r\n    updateMany: createStateOperator(updateManyMutably),\r\n    upsertOne: createStateOperator(upsertOneMutably),\r\n    upsertMany: createStateOperator(upsertManyMutably),\r\n    removeOne: createStateOperator(removeOneMutably),\r\n    removeMany: createStateOperator(removeManyMutably),\r\n  }\r\n}\r\n", "import type {\r\n  EntityState,\r\n  IdSelector,\r\n  Comparer,\r\n  EntityStateAdapter,\r\n  Update,\r\n  EntityId,\r\n} from './models'\r\nimport { createStateOperator } from './state_adapter'\r\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter'\r\nimport {\r\n  selectIdValue,\r\n  ensureEntitiesArray,\r\n  splitAddedUpdatedEntities,\r\n} from './utils'\r\n\r\nexport function createSortedStateAdapter<T>(\r\n  selectId: IdSelector<T>,\r\n  sort: Comparer<T>\r\n): EntityStateAdapter<T> {\r\n  type R = EntityState<T>\r\n\r\n  const { removeOne, removeMany, removeAll } =\r\n    createUnsortedStateAdapter(selectId)\r\n\r\n  function addOneMutably(entity: T, state: R): void {\r\n    return addManyMutably([entity], state)\r\n  }\r\n\r\n  function addManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n\r\n    const models = newEntities.filter(\r\n      (model) => !(selectIdValue(model, selectId) in state.entities)\r\n    )\r\n\r\n    if (models.length !== 0) {\r\n      merge(models, state)\r\n    }\r\n  }\r\n\r\n  function setOneMutably(entity: T, state: R): void {\r\n    return setManyMutably([entity], state)\r\n  }\r\n\r\n  function setManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n    if (newEntities.length !== 0) {\r\n      merge(newEntities, state)\r\n    }\r\n  }\r\n\r\n  function setAllMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    newEntities = ensureEntitiesArray(newEntities)\r\n    state.entities = {}\r\n    state.ids = []\r\n\r\n    addManyMutably(newEntities, state)\r\n  }\r\n\r\n  function updateOneMutably(update: Update<T>, state: R): void {\r\n    return updateManyMutably([update], state)\r\n  }\r\n\r\n  function updateManyMutably(\r\n    updates: ReadonlyArray<Update<T>>,\r\n    state: R\r\n  ): void {\r\n    let appliedUpdates = false\r\n\r\n    for (let update of updates) {\r\n      const entity = state.entities[update.id]\r\n      if (!entity) {\r\n        continue\r\n      }\r\n\r\n      appliedUpdates = true\r\n\r\n      Object.assign(entity, update.changes)\r\n      const newId = selectId(entity)\r\n      if (update.id !== newId) {\r\n        delete state.entities[update.id]\r\n        state.entities[newId] = entity\r\n      }\r\n    }\r\n\r\n    if (appliedUpdates) {\r\n      resortEntities(state)\r\n    }\r\n  }\r\n\r\n  function upsertOneMutably(entity: T, state: R): void {\r\n    return upsertManyMutably([entity], state)\r\n  }\r\n\r\n  function upsertManyMutably(\r\n    newEntities: readonly T[] | Record<EntityId, T>,\r\n    state: R\r\n  ): void {\r\n    const [added, updated] = splitAddedUpdatedEntities<T>(\r\n      newEntities,\r\n      selectId,\r\n      state\r\n    )\r\n\r\n    updateManyMutably(updated, state)\r\n    addManyMutably(added, state)\r\n  }\r\n\r\n  function areArraysEqual(a: readonly unknown[], b: readonly unknown[]) {\r\n    if (a.length !== b.length) {\r\n      return false\r\n    }\r\n\r\n    for (let i = 0; i < a.length && i < b.length; i++) {\r\n      if (a[i] === b[i]) {\r\n        continue\r\n      }\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function merge(models: readonly T[], state: R): void {\r\n    // Insert/overwrite all new/updated\r\n    models.forEach((model) => {\r\n      state.entities[selectId(model)] = model\r\n    })\r\n\r\n    resortEntities(state)\r\n  }\r\n\r\n  function resortEntities(state: R) {\r\n    const allEntities = Object.values(state.entities) as T[]\r\n    allEntities.sort(sort)\r\n\r\n    const newSortedIds = allEntities.map(selectId)\r\n    const { ids } = state\r\n\r\n    if (!areArraysEqual(ids, newSortedIds)) {\r\n      state.ids = newSortedIds\r\n    }\r\n  }\r\n\r\n  return {\r\n    removeOne,\r\n    removeMany,\r\n    removeAll,\r\n    addOne: createStateOperator(addOneMutably),\r\n    updateOne: createStateOperator(updateOneMutably),\r\n    upsertOne: createStateOperator(upsertOneMutably),\r\n    setOne: createStateOperator(setOneMutably),\r\n    setMany: createStateOperator(setManyMutably),\r\n    setAll: createStateOperator(setAllMutably),\r\n    addMany: createStateOperator(addManyMutably),\r\n    updateMany: createStateOperator(updateManyMutably),\r\n    upsertMany: createStateOperator(upsertManyMutably),\r\n  }\r\n}\r\n", "import type {\r\n  EntityDefinition,\r\n  Comparer,\r\n  IdSelector,\r\n  EntityAdapter,\r\n} from './models'\r\nimport { createInitialStateFactory } from './entity_state'\r\nimport { createSelectorsFactory } from './state_selectors'\r\nimport { createSortedStateAdapter } from './sorted_state_adapter'\r\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter'\r\n\r\n/**\r\n *\r\n * @param options\r\n *\r\n * @public\r\n */\r\nexport function createEntityAdapter<T>(\r\n  options: {\r\n    selectId?: IdSelector<T>\r\n    sortComparer?: false | Comparer<T>\r\n  } = {}\r\n): EntityAdapter<T> {\r\n  const { selectId, sortComparer }: EntityDefinition<T> = {\r\n    sortComparer: false,\r\n    selectId: (instance: any) => instance.id,\r\n    ...options,\r\n  }\r\n\r\n  const stateFactory = createInitialStateFactory<T>()\r\n  const selectorsFactory = createSelectorsFactory<T>()\r\n  const stateAdapter = sortComparer\r\n    ? createSortedStateAdapter(selectId, sortComparer)\r\n    : createUnsortedStateAdapter(selectId)\r\n\r\n  return {\r\n    selectId,\r\n    sortComparer,\r\n    ...stateFactory,\r\n    ...selectorsFactory,\r\n    ...stateAdapter,\r\n  }\r\n}\r\n", "// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\r\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\r\n// optimize the gzip compression for this alphabet.\r\nlet urlAlphabet =\r\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\r\n\r\n/**\r\n *\r\n * @public\r\n */\r\nexport let nanoid = (size = 21) => {\r\n  let id = ''\r\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n  let i = size\r\n  while (i--) {\r\n    // `| 0` is more compact and faster than `Math.floor()`.\r\n    id += urlAlphabet[(Math.random() * 64) | 0]\r\n  }\r\n  return id\r\n}\r\n", "import type { Dispatch, AnyAction } from 'redux'\r\nimport type {\r\n  PayloadAction,\r\n  ActionCreatorWithPreparedPayload,\r\n} from './createAction'\r\nimport { createAction } from './createAction'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport type { FallbackIfUnknown, Id, IsAny, IsUnknown } from './tsHelpers'\r\nimport { nanoid } from './nanoid'\r\n\r\n// @ts-ignore we need the import of these types due to a bundling issue.\r\ntype _Keep = PayloadAction | ActionCreatorWithPreparedPayload<any, unknown>\r\n\r\nexport type BaseThunkAPI<\r\n  S,\r\n  E,\r\n  D extends Dispatch = Dispatch,\r\n  RejectedValue = unknown,\r\n  RejectedMeta = unknown,\r\n  FulfilledMeta = unknown\r\n> = {\r\n  dispatch: D\r\n  getState: () => S\r\n  extra: E\r\n  requestId: string\r\n  signal: AbortSignal\r\n  abort: (reason?: string) => void\r\n  rejectWithValue: IsUnknown<\r\n    RejectedMeta,\r\n    (value: RejectedValue) => RejectWithValue<RejectedValue, RejectedMeta>,\r\n    (\r\n      value: RejectedValue,\r\n      meta: RejectedMeta\r\n    ) => RejectWithValue<RejectedValue, RejectedMeta>\r\n  >\r\n  fulfillWithValue: IsUnknown<\r\n    FulfilledMeta,\r\n    <FulfilledValue>(value: FulfilledValue) => FulfilledValue,\r\n    <FulfilledValue>(\r\n      value: FulfilledValue,\r\n      meta: FulfilledMeta\r\n    ) => FulfillWithMeta<FulfilledValue, FulfilledMeta>\r\n  >\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface SerializedError {\r\n  name?: string\r\n  message?: string\r\n  stack?: string\r\n  code?: string\r\n}\r\n\r\nconst commonProperties: Array<keyof SerializedError> = [\r\n  'name',\r\n  'message',\r\n  'stack',\r\n  'code',\r\n]\r\n\r\nclass RejectWithValue<Payload, RejectedMeta> {\r\n  /*\r\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\r\n  does not exist at runtime\r\n  */\r\n  private readonly _type!: 'RejectWithValue'\r\n  constructor(\r\n    public readonly payload: Payload,\r\n    public readonly meta: RejectedMeta\r\n  ) {}\r\n}\r\n\r\nclass FulfillWithMeta<Payload, FulfilledMeta> {\r\n  /*\r\n  type-only property to distinguish between RejectWithValue and FulfillWithMeta\r\n  does not exist at runtime\r\n  */\r\n  private readonly _type!: 'FulfillWithMeta'\r\n  constructor(\r\n    public readonly payload: Payload,\r\n    public readonly meta: FulfilledMeta\r\n  ) {}\r\n}\r\n\r\n/**\r\n * Serializes an error into a plain object.\r\n * Reworked from https://github.com/sindresorhus/serialize-error\r\n *\r\n * @public\r\n */\r\nexport const miniSerializeError = (value: any): SerializedError => {\r\n  if (typeof value === 'object' && value !== null) {\r\n    const simpleError: SerializedError = {}\r\n    for (const property of commonProperties) {\r\n      if (typeof value[property] === 'string') {\r\n        simpleError[property] = value[property]\r\n      }\r\n    }\r\n\r\n    return simpleError\r\n  }\r\n\r\n  return { message: String(value) }\r\n}\r\n\r\ntype AsyncThunkConfig = {\r\n  state?: unknown\r\n  dispatch?: Dispatch\r\n  extra?: unknown\r\n  rejectValue?: unknown\r\n  serializedErrorType?: unknown\r\n  pendingMeta?: unknown\r\n  fulfilledMeta?: unknown\r\n  rejectedMeta?: unknown\r\n}\r\n\r\ntype GetState<ThunkApiConfig> = ThunkApiConfig extends {\r\n  state: infer State\r\n}\r\n  ? State\r\n  : unknown\r\ntype GetExtra<ThunkApiConfig> = ThunkApiConfig extends { extra: infer Extra }\r\n  ? Extra\r\n  : unknown\r\ntype GetDispatch<ThunkApiConfig> = ThunkApiConfig extends {\r\n  dispatch: infer Dispatch\r\n}\r\n  ? FallbackIfUnknown<\r\n      Dispatch,\r\n      ThunkDispatch<\r\n        GetState<ThunkApiConfig>,\r\n        GetExtra<ThunkApiConfig>,\r\n        AnyAction\r\n      >\r\n    >\r\n  : ThunkDispatch<GetState<ThunkApiConfig>, GetExtra<ThunkApiConfig>, AnyAction>\r\n\r\nexport type GetThunkAPI<ThunkApiConfig> = BaseThunkAPI<\r\n  GetState<ThunkApiConfig>,\r\n  GetExtra<ThunkApiConfig>,\r\n  GetDispatch<ThunkApiConfig>,\r\n  GetRejectValue<ThunkApiConfig>,\r\n  GetRejectedMeta<ThunkApiConfig>,\r\n  GetFulfilledMeta<ThunkApiConfig>\r\n>\r\n\r\ntype GetRejectValue<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectValue: infer RejectValue\r\n}\r\n  ? RejectValue\r\n  : unknown\r\n\r\ntype GetPendingMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  pendingMeta: infer PendingMeta\r\n}\r\n  ? PendingMeta\r\n  : unknown\r\n\r\ntype GetFulfilledMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  fulfilledMeta: infer FulfilledMeta\r\n}\r\n  ? FulfilledMeta\r\n  : unknown\r\n\r\ntype GetRejectedMeta<ThunkApiConfig> = ThunkApiConfig extends {\r\n  rejectedMeta: infer RejectedMeta\r\n}\r\n  ? RejectedMeta\r\n  : unknown\r\n\r\ntype GetSerializedErrorType<ThunkApiConfig> = ThunkApiConfig extends {\r\n  serializedErrorType: infer GetSerializedErrorType\r\n}\r\n  ? GetSerializedErrorType\r\n  : SerializedError\r\n\r\ntype MaybePromise<T> = T | Promise<T> | (T extends any ? Promise<T> : never)\r\n\r\n/**\r\n * A type describing the return value of the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreatorReturnValue<\r\n  Returned,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = MaybePromise<\r\n  | IsUnknown<\r\n      GetFulfilledMeta<ThunkApiConfig>,\r\n      Returned,\r\n      FulfillWithMeta<Returned, GetFulfilledMeta<ThunkApiConfig>>\r\n    >\r\n  | RejectWithValue<\r\n      GetRejectValue<ThunkApiConfig>,\r\n      GetRejectedMeta<ThunkApiConfig>\r\n    >\r\n>\r\n/**\r\n * A type describing the `payloadCreator` argument to `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkPayloadCreator<\r\n  Returned,\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = (\r\n  arg: ThunkArg,\r\n  thunkAPI: GetThunkAPI<ThunkApiConfig>\r\n) => AsyncThunkPayloadCreatorReturnValue<Returned, ThunkApiConfig>\r\n\r\n/**\r\n * A ThunkAction created by `createAsyncThunk`.\r\n * Dispatching it returns a Promise for either a\r\n * fulfilled or rejected action.\r\n * Also, the returned value contains an `abort()` method\r\n * that allows the asyncAction to be cancelled from the outside.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkAction<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = (\r\n  dispatch: GetDispatch<ThunkApiConfig>,\r\n  getState: () => GetState<ThunkApiConfig>,\r\n  extra: GetExtra<ThunkApiConfig>\r\n) => Promise<\r\n  | ReturnType<AsyncThunkFulfilledActionCreator<Returned, ThunkArg>>\r\n  | ReturnType<AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>>\r\n> & {\r\n  abort: (reason?: string) => void\r\n  requestId: string\r\n  arg: ThunkArg\r\n  unwrap: () => Promise<Returned>\r\n}\r\n\r\ntype AsyncThunkActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = IsAny<\r\n  ThunkArg,\r\n  // any handling\r\n  (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n  // unknown handling\r\n  unknown extends ThunkArg\r\n    ? (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument not specified or specified as void or undefined\r\n    : [ThunkArg] extends [void] | [undefined]\r\n    ? () => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains void\r\n    : [void] extends [ThunkArg] // make optional\r\n    ? (arg?: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> // argument contains undefined\r\n    : [undefined] extends [ThunkArg]\r\n    ? WithStrictNullChecks<\r\n        // with strict nullChecks: make optional\r\n        (\r\n          arg?: ThunkArg\r\n        ) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>,\r\n        // without strict null checks this will match everything, so don't make it optional\r\n        (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n      > // default case: normal argument\r\n    : (arg: ThunkArg) => AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig>\r\n>\r\n\r\n/**\r\n * Options object for `createAsyncThunk`.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunkOptions<\r\n  ThunkArg = void,\r\n  ThunkApiConfig extends AsyncThunkConfig = {}\r\n> = {\r\n  /**\r\n   * A method to control whether the asyncThunk should be executed. Has access to the\r\n   * `arg`, `api.getState()` and `api.extra` arguments.\r\n   *\r\n   * @returns `false` if it should be skipped\r\n   */\r\n  condition?(\r\n    arg: ThunkArg,\r\n    api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n  ): MaybePromise<boolean | undefined>\r\n  /**\r\n   * If `condition` returns `false`, the asyncThunk will be skipped.\r\n   * This option allows you to control whether a `rejected` action with `meta.condition == false`\r\n   * will be dispatched or not.\r\n   *\r\n   * @default `false`\r\n   */\r\n  dispatchConditionRejection?: boolean\r\n\r\n  serializeError?: (x: unknown) => GetSerializedErrorType<ThunkApiConfig>\r\n\r\n  /**\r\n   * A function to use when generating the `requestId` for the request sequence.\r\n   *\r\n   * @default `nanoid`\r\n   */\r\n  idGenerator?: (arg: ThunkArg) => string\r\n} & IsUnknown<\r\n  GetPendingMeta<ThunkApiConfig>,\r\n  {\r\n    /**\r\n     * A method to generate additional properties to be added to `meta` of the pending action.\r\n     *\r\n     * Using this optional overload will not modify the types correctly, this overload is only in place to support JavaScript users.\r\n     * Please use the `ThunkApiConfig` parameter `pendingMeta` to get access to a correctly typed overload\r\n     */\r\n    getPendingMeta?(\r\n      base: {\r\n        arg: ThunkArg\r\n        requestId: string\r\n      },\r\n      api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n    ): GetPendingMeta<ThunkApiConfig>\r\n  },\r\n  {\r\n    /**\r\n     * A method to generate additional properties to be added to `meta` of the pending action.\r\n     */\r\n    getPendingMeta(\r\n      base: {\r\n        arg: ThunkArg\r\n        requestId: string\r\n      },\r\n      api: Pick<GetThunkAPI<ThunkApiConfig>, 'getState' | 'extra'>\r\n    ): GetPendingMeta<ThunkApiConfig>\r\n  }\r\n>\r\n\r\nexport type AsyncThunkPendingActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [string, ThunkArg, GetPendingMeta<ThunkApiConfig>?],\r\n  undefined,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'pending'\r\n  } & GetPendingMeta<ThunkApiConfig>\r\n>\r\n\r\nexport type AsyncThunkRejectedActionCreator<\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [\r\n    Error | null,\r\n    string,\r\n    ThunkArg,\r\n    GetRejectValue<ThunkApiConfig>?,\r\n    GetRejectedMeta<ThunkApiConfig>?\r\n  ],\r\n  GetRejectValue<ThunkApiConfig> | undefined,\r\n  string,\r\n  GetSerializedErrorType<ThunkApiConfig>,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'rejected'\r\n    aborted: boolean\r\n    condition: boolean\r\n  } & (\r\n    | ({ rejectedWithValue: false } & {\r\n        [K in keyof GetRejectedMeta<ThunkApiConfig>]?: undefined\r\n      })\r\n    | ({ rejectedWithValue: true } & GetRejectedMeta<ThunkApiConfig>)\r\n  )\r\n>\r\n\r\nexport type AsyncThunkFulfilledActionCreator<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig = {}\r\n> = ActionCreatorWithPreparedPayload<\r\n  [Returned, string, ThunkArg, GetFulfilledMeta<ThunkApiConfig>?],\r\n  Returned,\r\n  string,\r\n  never,\r\n  {\r\n    arg: ThunkArg\r\n    requestId: string\r\n    requestStatus: 'fulfilled'\r\n  } & GetFulfilledMeta<ThunkApiConfig>\r\n>\r\n\r\n/**\r\n * A type describing the return value of `createAsyncThunk`.\r\n * Might be useful for wrapping `createAsyncThunk` in custom abstractions.\r\n *\r\n * @public\r\n */\r\nexport type AsyncThunk<\r\n  Returned,\r\n  ThunkArg,\r\n  ThunkApiConfig extends AsyncThunkConfig\r\n> = AsyncThunkActionCreator<Returned, ThunkArg, ThunkApiConfig> & {\r\n  pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig>\r\n  rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig>\r\n  fulfilled: AsyncThunkFulfilledActionCreator<\r\n    Returned,\r\n    ThunkArg,\r\n    ThunkApiConfig\r\n  >\r\n  typePrefix: string\r\n}\r\n\r\ntype OverrideThunkApiConfigs<OldConfig, NewConfig> = Id<\r\n  NewConfig & Omit<OldConfig, keyof NewConfig>\r\n>\r\n\r\ntype CreateAsyncThunk<CurriedThunkApiConfig extends AsyncThunkConfig> = {\r\n  /**\r\n   *\r\n   * @param typePrefix\r\n   * @param payloadCreator\r\n   * @param options\r\n   *\r\n   * @public\r\n   */\r\n  // separate signature without `AsyncThunkConfig` for better inference\r\n  <Returned, ThunkArg = void>(\r\n    typePrefix: string,\r\n    payloadCreator: AsyncThunkPayloadCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      CurriedThunkApiConfig\r\n    >,\r\n    options?: AsyncThunkOptions<ThunkArg, CurriedThunkApiConfig>\r\n  ): AsyncThunk<Returned, ThunkArg, CurriedThunkApiConfig>\r\n\r\n  /**\r\n   *\r\n   * @param typePrefix\r\n   * @param payloadCreator\r\n   * @param options\r\n   *\r\n   * @public\r\n   */\r\n  <Returned, ThunkArg, ThunkApiConfig extends AsyncThunkConfig>(\r\n    typePrefix: string,\r\n    payloadCreator: AsyncThunkPayloadCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>\r\n    >,\r\n    options?: AsyncThunkOptions<\r\n      ThunkArg,\r\n      OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>\r\n    >\r\n  ): AsyncThunk<\r\n    Returned,\r\n    ThunkArg,\r\n    OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>\r\n  >\r\n\r\n  withTypes<ThunkApiConfig extends AsyncThunkConfig>(): CreateAsyncThunk<\r\n    OverrideThunkApiConfigs<CurriedThunkApiConfig, ThunkApiConfig>\r\n  >\r\n}\r\n\r\nexport const createAsyncThunk = (() => {\r\n  function createAsyncThunk<\r\n    Returned,\r\n    ThunkArg,\r\n    ThunkApiConfig extends AsyncThunkConfig\r\n  >(\r\n    typePrefix: string,\r\n    payloadCreator: AsyncThunkPayloadCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      ThunkApiConfig\r\n    >,\r\n    options?: AsyncThunkOptions<ThunkArg, ThunkApiConfig>\r\n  ): AsyncThunk<Returned, ThunkArg, ThunkApiConfig> {\r\n    type RejectedValue = GetRejectValue<ThunkApiConfig>\r\n    type PendingMeta = GetPendingMeta<ThunkApiConfig>\r\n    type FulfilledMeta = GetFulfilledMeta<ThunkApiConfig>\r\n    type RejectedMeta = GetRejectedMeta<ThunkApiConfig>\r\n\r\n    const fulfilled: AsyncThunkFulfilledActionCreator<\r\n      Returned,\r\n      ThunkArg,\r\n      ThunkApiConfig\r\n    > = createAction(\r\n      typePrefix + '/fulfilled',\r\n      (\r\n        payload: Returned,\r\n        requestId: string,\r\n        arg: ThunkArg,\r\n        meta?: FulfilledMeta\r\n      ) => ({\r\n        payload,\r\n        meta: {\r\n          ...((meta as any) || {}),\r\n          arg,\r\n          requestId,\r\n          requestStatus: 'fulfilled' as const,\r\n        },\r\n      })\r\n    )\r\n\r\n    const pending: AsyncThunkPendingActionCreator<ThunkArg, ThunkApiConfig> =\r\n      createAction(\r\n        typePrefix + '/pending',\r\n        (requestId: string, arg: ThunkArg, meta?: PendingMeta) => ({\r\n          payload: undefined,\r\n          meta: {\r\n            ...((meta as any) || {}),\r\n            arg,\r\n            requestId,\r\n            requestStatus: 'pending' as const,\r\n          },\r\n        })\r\n      )\r\n\r\n    const rejected: AsyncThunkRejectedActionCreator<ThunkArg, ThunkApiConfig> =\r\n      createAction(\r\n        typePrefix + '/rejected',\r\n        (\r\n          error: Error | null,\r\n          requestId: string,\r\n          arg: ThunkArg,\r\n          payload?: RejectedValue,\r\n          meta?: RejectedMeta\r\n        ) => ({\r\n          payload,\r\n          error: ((options && options.serializeError) || miniSerializeError)(\r\n            error || 'Rejected'\r\n          ) as GetSerializedErrorType<ThunkApiConfig>,\r\n          meta: {\r\n            ...((meta as any) || {}),\r\n            arg,\r\n            requestId,\r\n            rejectedWithValue: !!payload,\r\n            requestStatus: 'rejected' as const,\r\n            aborted: error?.name === 'AbortError',\r\n            condition: error?.name === 'ConditionError',\r\n          },\r\n        })\r\n      )\r\n\r\n    let displayedWarning = false\r\n\r\n    const AC =\r\n      typeof AbortController !== 'undefined'\r\n        ? AbortController\r\n        : class implements AbortController {\r\n            signal = {\r\n              aborted: false,\r\n              addEventListener() {},\r\n              dispatchEvent() {\r\n                return false\r\n              },\r\n              onabort() {},\r\n              removeEventListener() {},\r\n              reason: undefined,\r\n              throwIfAborted() {},\r\n            }\r\n            abort() {\r\n              if (process.env.NODE_ENV !== 'production') {\r\n                if (!displayedWarning) {\r\n                  displayedWarning = true\r\n                  console.info(\r\n                    `This platform does not implement AbortController. \r\nIf you want to use the AbortController to react to \\`abort\\` events, please consider importing a polyfill like 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only'.`\r\n                  )\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n    function actionCreator(\r\n      arg: ThunkArg\r\n    ): AsyncThunkAction<Returned, ThunkArg, ThunkApiConfig> {\r\n      return (dispatch, getState, extra) => {\r\n        const requestId = options?.idGenerator\r\n          ? options.idGenerator(arg)\r\n          : nanoid()\r\n\r\n        const abortController = new AC()\r\n        let abortReason: string | undefined\r\n\r\n        let started = false\r\n        function abort(reason?: string) {\r\n          abortReason = reason\r\n          abortController.abort()\r\n        }\r\n\r\n        const promise = (async function () {\r\n          let finalAction: ReturnType<typeof fulfilled | typeof rejected>\r\n          try {\r\n            let conditionResult = options?.condition?.(arg, { getState, extra })\r\n            if (isThenable(conditionResult)) {\r\n              conditionResult = await conditionResult\r\n            }\r\n\r\n            if (conditionResult === false || abortController.signal.aborted) {\r\n              // eslint-disable-next-line no-throw-literal\r\n              throw {\r\n                name: 'ConditionError',\r\n                message: 'Aborted due to condition callback returning false.',\r\n              }\r\n            }\r\n            started = true\r\n\r\n            const abortedPromise = new Promise<never>((_, reject) =>\r\n              abortController.signal.addEventListener('abort', () =>\r\n                reject({\r\n                  name: 'AbortError',\r\n                  message: abortReason || 'Aborted',\r\n                })\r\n              )\r\n            )\r\n            dispatch(\r\n              pending(\r\n                requestId,\r\n                arg,\r\n                options?.getPendingMeta?.(\r\n                  { requestId, arg },\r\n                  { getState, extra }\r\n                )\r\n              )\r\n            )\r\n            finalAction = await Promise.race([\r\n              abortedPromise,\r\n              Promise.resolve(\r\n                payloadCreator(arg, {\r\n                  dispatch,\r\n                  getState,\r\n                  extra,\r\n                  requestId,\r\n                  signal: abortController.signal,\r\n                  abort,\r\n                  rejectWithValue: ((\r\n                    value: RejectedValue,\r\n                    meta?: RejectedMeta\r\n                  ) => {\r\n                    return new RejectWithValue(value, meta)\r\n                  }) as any,\r\n                  fulfillWithValue: ((value: unknown, meta?: FulfilledMeta) => {\r\n                    return new FulfillWithMeta(value, meta)\r\n                  }) as any,\r\n                })\r\n              ).then((result) => {\r\n                if (result instanceof RejectWithValue) {\r\n                  throw result\r\n                }\r\n                if (result instanceof FulfillWithMeta) {\r\n                  return fulfilled(result.payload, requestId, arg, result.meta)\r\n                }\r\n                return fulfilled(result as any, requestId, arg)\r\n              }),\r\n            ])\r\n          } catch (err) {\r\n            finalAction =\r\n              err instanceof RejectWithValue\r\n                ? rejected(null, requestId, arg, err.payload, err.meta)\r\n                : rejected(err as any, requestId, arg)\r\n          }\r\n          // We dispatch the result action _after_ the catch, to avoid having any errors\r\n          // here get swallowed by the try/catch block,\r\n          // per https://twitter.com/dan_abramov/status/770914221638942720\r\n          // and https://github.com/reduxjs/redux-toolkit/blob/e85eb17b39a2118d859f7b7746e0f3fee523e089/docs/tutorials/advanced-tutorial.md#async-error-handling-logic-in-thunks\r\n\r\n          const skipDispatch =\r\n            options &&\r\n            !options.dispatchConditionRejection &&\r\n            rejected.match(finalAction) &&\r\n            (finalAction as any).meta.condition\r\n\r\n          if (!skipDispatch) {\r\n            dispatch(finalAction)\r\n          }\r\n          return finalAction\r\n        })()\r\n        return Object.assign(promise as Promise<any>, {\r\n          abort,\r\n          requestId,\r\n          arg,\r\n          unwrap() {\r\n            return promise.then<any>(unwrapResult)\r\n          },\r\n        })\r\n      }\r\n    }\r\n\r\n    return Object.assign(\r\n      actionCreator as AsyncThunkActionCreator<\r\n        Returned,\r\n        ThunkArg,\r\n        ThunkApiConfig\r\n      >,\r\n      {\r\n        pending,\r\n        rejected,\r\n        fulfilled,\r\n        typePrefix,\r\n      }\r\n    )\r\n  }\r\n  createAsyncThunk.withTypes = () => createAsyncThunk\r\n\r\n  return createAsyncThunk as CreateAsyncThunk<AsyncThunkConfig>\r\n})()\r\n\r\ninterface UnwrappableAction {\r\n  payload: any\r\n  meta?: any\r\n  error?: any\r\n}\r\n\r\ntype UnwrappedActionPayload<T extends UnwrappableAction> = Exclude<\r\n  T,\r\n  { error: any }\r\n>['payload']\r\n\r\n/**\r\n * @public\r\n */\r\nexport function unwrapResult<R extends UnwrappableAction>(\r\n  action: R\r\n): UnwrappedActionPayload<R> {\r\n  if (action.meta && action.meta.rejectedWithValue) {\r\n    throw action.payload\r\n  }\r\n  if (action.error) {\r\n    throw action.error\r\n  }\r\n  return action.payload\r\n}\r\n\r\ntype WithStrictNullChecks<True, False> = undefined extends boolean\r\n  ? False\r\n  : True\r\n\r\nfunction isThenable(value: any): value is PromiseLike<any> {\r\n  return (\r\n    value !== null &&\r\n    typeof value === 'object' &&\r\n    typeof value.then === 'function'\r\n  )\r\n}\r\n", "import type {\r\n  ActionFromMatcher,\r\n  Matcher,\r\n  UnionToIntersection,\r\n} from './tsHelpers'\r\nimport { hasMatchFunction } from './tsHelpers'\r\nimport type {\r\n  AsyncThunk,\r\n  AsyncThunkFulfilledActionCreator,\r\n  AsyncThunkPendingActionCreator,\r\n  AsyncThunkRejectedActionCreator,\r\n} from './createAsyncThunk'\r\n\r\n/** @public */\r\nexport type ActionMatchingAnyOf<Matchers extends [...Matcher<any>[]]> =\r\n  ActionFromMatcher<Matchers[number]>\r\n\r\n/** @public */\r\nexport type ActionMatchingAllOf<Matchers extends [...Matcher<any>[]]> =\r\n  UnionToIntersection<ActionMatchingAnyOf<Matchers>>\r\n\r\nconst matches = (matcher: Matcher<any>, action: any) => {\r\n  if (hasMatchFunction(matcher)) {\r\n    return matcher.match(action)\r\n  } else {\r\n    return matcher(action)\r\n  }\r\n}\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches any one of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAnyOf<Matchers extends [...Matcher<any>[]]>(\r\n  ...matchers: Matchers\r\n) {\r\n  return (action: any): action is ActionMatchingAnyOf<Matchers> => {\r\n    return matchers.some((matcher) => matches(matcher, action))\r\n  }\r\n}\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action matches all of the supplied type guards or action\r\n * creators.\r\n *\r\n * @param matchers The type guards or action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAllOf<Matchers extends [...Matcher<any>[]]>(\r\n  ...matchers: Matchers\r\n) {\r\n  return (action: any): action is ActionMatchingAllOf<Matchers> => {\r\n    return matchers.every((matcher) => matches(matcher, action))\r\n  }\r\n}\r\n\r\n/**\r\n * @param action A redux action\r\n * @param validStatus An array of valid meta.requestStatus values\r\n *\r\n * @internal\r\n */\r\nexport function hasExpectedRequestMetadata(\r\n  action: any,\r\n  validStatus: readonly string[]\r\n) {\r\n  if (!action || !action.meta) return false\r\n\r\n  const hasValidRequestId = typeof action.meta.requestId === 'string'\r\n  const hasValidRequestStatus =\r\n    validStatus.indexOf(action.meta.requestStatus) > -1\r\n\r\n  return hasValidRequestId && hasValidRequestStatus\r\n}\r\n\r\nfunction isAsyncThunkArray(a: [any] | AnyAsyncThunk[]): a is AnyAsyncThunk[] {\r\n  return (\r\n    typeof a[0] === 'function' &&\r\n    'pending' in a[0] &&\r\n    'fulfilled' in a[0] &&\r\n    'rejected' in a[0]\r\n  )\r\n}\r\n\r\nexport type UnknownAsyncThunkPendingAction = ReturnType<\r\n  AsyncThunkPendingActionCreator<unknown>\r\n>\r\n\r\nexport type PendingActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['pending']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is pending.\r\n *\r\n * @public\r\n */\r\nexport function isPending(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkPendingAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is pending.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isPending<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is PendingActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a pending thunk action\r\n * @public\r\n */\r\nexport function isPending(action: any): action is UnknownAsyncThunkPendingAction\r\nexport function isPending<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['pending'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isPending()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is PendingActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      (asyncThunk) => asyncThunk.pending\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkRejectedAction = ReturnType<\r\n  AsyncThunkRejectedActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type RejectedActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['rejected']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is rejected.\r\n *\r\n * @public\r\n */\r\nexport function isRejected(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkRejectedAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is rejected.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isRejected<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is RejectedActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a rejected thunk action\r\n * @public\r\n */\r\nexport function isRejected(\r\n  action: any\r\n): action is UnknownAsyncThunkRejectedAction\r\nexport function isRejected<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['rejected'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isRejected()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      (asyncThunk) => asyncThunk.rejected\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkRejectedWithValueAction = ReturnType<\r\n  AsyncThunkRejectedActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type RejectedWithValueActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['rejected']> &\r\n    (T extends AsyncThunk<any, any, { rejectValue: infer RejectedValue }>\r\n      ? { payload: RejectedValue }\r\n      : unknown)\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is rejected with value.\r\n *\r\n * @public\r\n */\r\nexport function isRejectedWithValue(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkRejectedAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is rejected with value.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isRejectedWithValue<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (\r\n  action: any\r\n) => action is RejectedWithValueActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a rejected thunk action with value\r\n * @public\r\n */\r\nexport function isRejectedWithValue(\r\n  action: any\r\n): action is UnknownAsyncThunkRejectedAction\r\nexport function isRejectedWithValue<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  const hasFlag = (action: any): action is any => {\r\n    return action && action.meta && action.meta.rejectedWithValue\r\n  }\r\n\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => {\r\n      const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag)\r\n\r\n      return combinedMatcher(action)\r\n    }\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isRejectedWithValue()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is RejectedActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    const combinedMatcher = isAllOf(isRejected(...asyncThunks), hasFlag)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkFulfilledAction = ReturnType<\r\n  AsyncThunkFulfilledActionCreator<unknown, unknown>\r\n>\r\n\r\nexport type FulfilledActionFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  ActionFromMatcher<T['fulfilled']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator, and that\r\n * the action is fulfilled.\r\n *\r\n * @public\r\n */\r\nexport function isFulfilled(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkFulfilledAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators,\r\n * and that the action is fulfilled.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isFulfilled<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is FulfilledActionFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a fulfilled thunk action\r\n * @public\r\n */\r\nexport function isFulfilled(\r\n  action: any\r\n): action is UnknownAsyncThunkFulfilledAction\r\nexport function isFulfilled<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) => hasExpectedRequestMetadata(action, ['fulfilled'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isFulfilled()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is FulfilledActionFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = asyncThunks.map(\r\n      (asyncThunk) => asyncThunk.fulfilled\r\n    ) as any\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n\r\nexport type UnknownAsyncThunkAction =\r\n  | UnknownAsyncThunkPendingAction\r\n  | UnknownAsyncThunkRejectedAction\r\n  | UnknownAsyncThunkFulfilledAction\r\n\r\nexport type AnyAsyncThunk = {\r\n  pending: { match: (action: any) => action is any }\r\n  fulfilled: { match: (action: any) => action is any }\r\n  rejected: { match: (action: any) => action is any }\r\n}\r\n\r\nexport type ActionsFromAsyncThunk<T extends AnyAsyncThunk> =\r\n  | ActionFromMatcher<T['pending']>\r\n  | ActionFromMatcher<T['fulfilled']>\r\n  | ActionFromMatcher<T['rejected']>\r\n\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action was created by an async thunk action creator.\r\n *\r\n * @public\r\n */\r\nexport function isAsyncThunkAction(): (\r\n  action: any\r\n) => action is UnknownAsyncThunkAction\r\n/**\r\n * A higher-order function that returns a function that may be used to check\r\n * whether an action belongs to one of the provided async thunk action creators.\r\n *\r\n * @param asyncThunks (optional) The async thunk action creators to match against.\r\n *\r\n * @public\r\n */\r\nexport function isAsyncThunkAction<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(\r\n  ...asyncThunks: AsyncThunks\r\n): (action: any) => action is ActionsFromAsyncThunk<AsyncThunks[number]>\r\n/**\r\n * Tests if `action` is a thunk action\r\n * @public\r\n */\r\nexport function isAsyncThunkAction(\r\n  action: any\r\n): action is UnknownAsyncThunkAction\r\nexport function isAsyncThunkAction<\r\n  AsyncThunks extends [AnyAsyncThunk, ...AnyAsyncThunk[]]\r\n>(...asyncThunks: AsyncThunks | [any]) {\r\n  if (asyncThunks.length === 0) {\r\n    return (action: any) =>\r\n      hasExpectedRequestMetadata(action, ['pending', 'fulfilled', 'rejected'])\r\n  }\r\n\r\n  if (!isAsyncThunkArray(asyncThunks)) {\r\n    return isAsyncThunkAction()(asyncThunks[0])\r\n  }\r\n\r\n  return (\r\n    action: any\r\n  ): action is ActionsFromAsyncThunk<AsyncThunks[number]> => {\r\n    // note: this type will be correct because we have at least 1 asyncThunk\r\n    const matchers: [Matcher<any>, ...Matcher<any>[]] = [] as any\r\n\r\n    for (const asyncThunk of asyncThunks) {\r\n      matchers.push(\r\n        asyncThunk.pending,\r\n        asyncThunk.rejected,\r\n        asyncThunk.fulfilled\r\n      )\r\n    }\r\n\r\n    const combinedMatcher = isAnyOf(...matchers)\r\n\r\n    return combinedMatcher(action)\r\n  }\r\n}\r\n", "import type { AbortSignalWithReason } from './types'\r\n\r\nexport const assertFunction: (\r\n  func: unknown,\r\n  expected: string\r\n) => asserts func is (...args: unknown[]) => unknown = (\r\n  func: unknown,\r\n  expected: string\r\n) => {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(`${expected} is not a function`)\r\n  }\r\n}\r\n\r\nexport const noop = () => {}\r\n\r\nexport const catchRejection = <T>(\r\n  promise: Promise<T>,\r\n  onError = noop\r\n): Promise<T> => {\r\n  promise.catch(onError)\r\n\r\n  return promise\r\n}\r\n\r\nexport const addAbortSignalListener = (\r\n  abortSignal: AbortSignal,\r\n  callback: (evt: Event) => void\r\n) => {\r\n  abortSignal.addEventListener('abort', callback, { once: true })\r\n  return () => abortSignal.removeEventListener('abort', callback)\r\n}\r\n\r\n/**\r\n * Calls `abortController.abort(reason)` and patches `signal.reason`.\r\n * if it is not supported.\r\n *\r\n * At the time of writing `signal.reason` is available in FF chrome, edge node 17 and deno.\r\n * @param abortController\r\n * @param reason\r\n * @returns\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/reason\r\n */\r\nexport const abortControllerWithReason = <T>(\r\n  abortController: AbortController,\r\n  reason: T\r\n): void => {\r\n  type Consumer<T> = (val: T) => void\r\n\r\n  const signal = abortController.signal as AbortSignalWithReason<T>\r\n\r\n  if (signal.aborted) {\r\n    return\r\n  }\r\n\r\n  // Patch `reason` if necessary.\r\n  // - We use defineProperty here because reason is a getter of `AbortSignal.__proto__`.\r\n  // - We need to patch 'reason' before calling `.abort()` because listeners to the 'abort'\r\n  // event are are notified immediately.\r\n  if (!('reason' in signal)) {\r\n    Object.defineProperty(signal, 'reason', {\r\n      enumerable: true,\r\n      value: reason,\r\n      configurable: true,\r\n      writable: true,\r\n    })\r\n  }\r\n\r\n  ;(abortController.abort as Consumer<typeof reason>)(reason)\r\n}\r\n", "import type { SerializedError } from '@reduxjs/toolkit'\r\n\r\nconst task = 'task'\r\nconst listener = 'listener'\r\nconst completed = 'completed'\r\nconst cancelled = 'cancelled'\r\n\r\n/* TaskAbortError error codes  */\r\nexport const taskCancelled = `task-${cancelled}` as const\r\nexport const taskCompleted = `task-${completed}` as const\r\nexport const listenerCancelled = `${listener}-${cancelled}` as const\r\nexport const listenerCompleted = `${listener}-${completed}` as const\r\n\r\nexport class TaskAbortError implements SerializedError {\r\n  name = 'TaskAbortError'\r\n  message: string\r\n  constructor(public code: string | undefined) {\r\n    this.message = `${task} ${cancelled} (reason: ${code})`\r\n  }\r\n}\r\n", "import { TaskAbortError } from './exceptions'\r\nimport type { AbortSignalWithReason, TaskResult } from './types'\r\nimport { addAbortSignalListener, catchRejection, noop } from './utils'\r\n\r\n/**\r\n * Synchronously raises {@link TaskAbortError} if the task tied to the input `signal` has been cancelled.\r\n * @param signal\r\n * @param reason\r\n * @see {TaskAbortError}\r\n */\r\nexport const validateActive = (signal: AbortSignal): void => {\r\n  if (signal.aborted) {\r\n    throw new TaskAbortError((signal as AbortSignalWithReason<string>).reason)\r\n  }\r\n}\r\n\r\n/**\r\n * Generates a race between the promise(s) and the AbortSignal\r\n * This avoids `Promise.race()`-related memory leaks:\r\n * https://github.com/nodejs/node/issues/17469#issuecomment-349794909\r\n */\r\nexport function raceWithSignal<T>(\r\n  signal: AbortSignalWithReason<string>,\r\n  promise: Promise<T>\r\n): Promise<T> {\r\n  let cleanup = noop\r\n  return new Promise<T>((resolve, reject) => {\r\n    const notifyRejection = () => reject(new TaskAbortError(signal.reason))\r\n\r\n    if (signal.aborted) {\r\n      notifyRejection()\r\n      return\r\n    }\r\n\r\n    cleanup = addAbortSignalListener(signal, notifyRejection)\r\n    promise.finally(() => cleanup()).then(resolve, reject)\r\n  }).finally(() => {\r\n    // after this point, replace `cleanup` with a noop, so there is no reference to `signal` any more\r\n    cleanup = noop\r\n  })\r\n}\r\n\r\n/**\r\n * Runs a task and returns promise that resolves to {@link TaskResult}.\r\n * Second argument is an optional `cleanUp` function that always runs after task.\r\n *\r\n * **Note:** `runTask` runs the executor in the next microtask.\r\n * @returns\r\n */\r\nexport const runTask = async <T>(\r\n  task: () => Promise<T>,\r\n  cleanUp?: () => void\r\n): Promise<TaskResult<T>> => {\r\n  try {\r\n    await Promise.resolve()\r\n    const value = await task()\r\n    return {\r\n      status: 'ok',\r\n      value,\r\n    }\r\n  } catch (error: any) {\r\n    return {\r\n      status: error instanceof TaskAbortError ? 'cancelled' : 'rejected',\r\n      error,\r\n    }\r\n  } finally {\r\n    cleanUp?.()\r\n  }\r\n}\r\n\r\n/**\r\n * Given an input `AbortSignal` and a promise returns another promise that resolves\r\n * as soon the input promise is provided or rejects as soon as\r\n * `AbortSignal.abort` is `true`.\r\n * @param signal\r\n * @returns\r\n */\r\nexport const createPause = <T>(signal: AbortSignal) => {\r\n  return (promise: Promise<T>): Promise<T> => {\r\n    return catchRejection(\r\n      raceWithSignal(signal, promise).then((output) => {\r\n        validateActive(signal)\r\n        return output\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Given an input `AbortSignal` and `timeoutMs` returns a promise that resolves\r\n * after `timeoutMs` or rejects as soon as `AbortSignal.abort` is `true`.\r\n * @param signal\r\n * @returns\r\n */\r\nexport const createDelay = (signal: AbortSignal) => {\r\n  const pause = createPause<void>(signal)\r\n  return (timeoutMs: number): Promise<void> => {\r\n    return pause(new Promise<void>((resolve) => setTimeout(resolve, timeoutMs)))\r\n  }\r\n}\r\n", "import type { Dispatch, AnyAction, MiddlewareAPI } from 'redux'\r\nimport type { ThunkDispatch } from 'redux-thunk'\r\nimport { createAction, isAction } from '../createAction'\r\nimport { nanoid } from '../nanoid'\r\n\r\nimport type {\r\n  ListenerMiddleware,\r\n  ListenerMiddlewareInstance,\r\n  AddListenerOverloads,\r\n  AnyListenerPredicate,\r\n  CreateListenerMiddlewareOptions,\r\n  TypedAddListener,\r\n  TypedCreateListenerEntry,\r\n  FallbackAddListenerOptions,\r\n  ListenerEntry,\r\n  ListenerErrorHandler,\r\n  UnsubscribeListener,\r\n  TakePattern,\r\n  ListenerErrorInfo,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  TypedRemoveListener,\r\n  TaskResult,\r\n  AbortSignalWithReason,\r\n  UnsubscribeListenerOptions,\r\n  ForkOptions,\r\n} from './types'\r\nimport {\r\n  abortControllerWithReason,\r\n  addAbortSignalListener,\r\n  assertFunction,\r\n  catchRejection,\r\n} from './utils'\r\nimport {\r\n  listenerCancelled,\r\n  listenerCompleted,\r\n  TaskAbortError,\r\n  taskCancelled,\r\n  taskCompleted,\r\n} from './exceptions'\r\nimport {\r\n  runTask,\r\n  validateActive,\r\n  createPause,\r\n  createDelay,\r\n  raceWithSignal,\r\n} from './task'\r\nexport { TaskAbortError } from './exceptions'\r\nexport type {\r\n  ListenerEffect,\r\n  ListenerMiddleware,\r\n  ListenerEffectAPI,\r\n  ListenerMiddlewareInstance,\r\n  CreateListenerMiddlewareOptions,\r\n  ListenerErrorHandler,\r\n  TypedStartListening,\r\n  TypedAddListener,\r\n  TypedStopListening,\r\n  TypedRemoveListener,\r\n  UnsubscribeListener,\r\n  UnsubscribeListenerOptions,\r\n  ForkedTaskExecutor,\r\n  ForkedTask,\r\n  ForkedTaskAPI,\r\n  AsyncTaskExecutor,\r\n  SyncTaskExecutor,\r\n  TaskCancelled,\r\n  TaskRejected,\r\n  TaskResolved,\r\n  TaskResult,\r\n} from './types'\r\n\r\n//Overly-aggressive byte-shaving\r\nconst { assign } = Object\r\n/**\r\n * @internal\r\n */\r\nconst INTERNAL_NIL_TOKEN = {} as const\r\n\r\nconst alm = 'listenerMiddleware' as const\r\n\r\nconst createFork = (\r\n  parentAbortSignal: AbortSignalWithReason<unknown>,\r\n  parentBlockingPromises: Promise<any>[]\r\n) => {\r\n  const linkControllers = (controller: AbortController) =>\r\n    addAbortSignalListener(parentAbortSignal, () =>\r\n      abortControllerWithReason(controller, parentAbortSignal.reason)\r\n    )\r\n\r\n  return <T>(\r\n    taskExecutor: ForkedTaskExecutor<T>,\r\n    opts?: ForkOptions\r\n  ): ForkedTask<T> => {\r\n    assertFunction(taskExecutor, 'taskExecutor')\r\n    const childAbortController = new AbortController()\r\n\r\n    linkControllers(childAbortController)\r\n\r\n    const result = runTask<T>(\r\n      async (): Promise<T> => {\r\n        validateActive(parentAbortSignal)\r\n        validateActive(childAbortController.signal)\r\n        const result = (await taskExecutor({\r\n          pause: createPause(childAbortController.signal),\r\n          delay: createDelay(childAbortController.signal),\r\n          signal: childAbortController.signal,\r\n        })) as T\r\n        validateActive(childAbortController.signal)\r\n        return result\r\n      },\r\n      () => abortControllerWithReason(childAbortController, taskCompleted)\r\n    )\r\n\r\n    if (opts?.autoJoin) {\r\n      parentBlockingPromises.push(result)\r\n    }\r\n\r\n    return {\r\n      result: createPause<TaskResult<T>>(parentAbortSignal)(result),\r\n      cancel() {\r\n        abortControllerWithReason(childAbortController, taskCancelled)\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nconst createTakePattern = <S>(\r\n  startListening: AddListenerOverloads<\r\n    UnsubscribeListener,\r\n    S,\r\n    Dispatch<AnyAction>\r\n  >,\r\n  signal: AbortSignal\r\n): TakePattern<S> => {\r\n  /**\r\n   * A function that takes a ListenerPredicate and an optional timeout,\r\n   * and resolves when either the predicate returns `true` based on an action\r\n   * state combination or when the timeout expires.\r\n   * If the parent listener is canceled while waiting, this will throw a\r\n   * TaskAbortError.\r\n   */\r\n  const take = async <P extends AnyListenerPredicate<S>>(\r\n    predicate: P,\r\n    timeout: number | undefined\r\n  ) => {\r\n    validateActive(signal)\r\n\r\n    // Placeholder unsubscribe function until the listener is added\r\n    let unsubscribe: UnsubscribeListener = () => {}\r\n\r\n    const tuplePromise = new Promise<[AnyAction, S, S]>((resolve, reject) => {\r\n      // Inside the Promise, we synchronously add the listener.\r\n      let stopListening = startListening({\r\n        predicate: predicate as any,\r\n        effect: (action, listenerApi): void => {\r\n          // One-shot listener that cleans up as soon as the predicate passes\r\n          listenerApi.unsubscribe()\r\n          // Resolve the promise with the same arguments the predicate saw\r\n          resolve([\r\n            action,\r\n            listenerApi.getState(),\r\n            listenerApi.getOriginalState(),\r\n          ])\r\n        },\r\n      })\r\n      unsubscribe = () => {\r\n        stopListening()\r\n        reject()\r\n      }\r\n    })\r\n\r\n    const promises: (Promise<null> | Promise<[AnyAction, S, S]>)[] = [\r\n      tuplePromise,\r\n    ]\r\n\r\n    if (timeout != null) {\r\n      promises.push(\r\n        new Promise<null>((resolve) => setTimeout(resolve, timeout, null))\r\n      )\r\n    }\r\n\r\n    try {\r\n      const output = await raceWithSignal(signal, Promise.race(promises))\r\n\r\n      validateActive(signal)\r\n      return output\r\n    } finally {\r\n      // Always clean up the listener\r\n      unsubscribe()\r\n    }\r\n  }\r\n\r\n  return ((predicate: AnyListenerPredicate<S>, timeout: number | undefined) =>\r\n    catchRejection(take(predicate, timeout))) as TakePattern<S>\r\n}\r\n\r\nconst getListenerEntryPropsFrom = (options: FallbackAddListenerOptions) => {\r\n  let { type, actionCreator, matcher, predicate, effect } = options\r\n\r\n  if (type) {\r\n    predicate = createAction(type).match\r\n  } else if (actionCreator) {\r\n    type = actionCreator!.type\r\n    predicate = actionCreator.match\r\n  } else if (matcher) {\r\n    predicate = matcher\r\n  } else if (predicate) {\r\n    // pass\r\n  } else {\r\n    throw new Error(\r\n      'Creating or removing a listener requires one of the known fields for matching an action'\r\n    )\r\n  }\r\n\r\n  assertFunction(effect, 'options.listener')\r\n\r\n  return { predicate, type, effect }\r\n}\r\n\r\n/** Accepts the possible options for creating a listener, and returns a formatted listener entry */\r\nexport const createListenerEntry: TypedCreateListenerEntry<unknown> = (\r\n  options: FallbackAddListenerOptions\r\n) => {\r\n  const { type, predicate, effect } = getListenerEntryPropsFrom(options)\r\n\r\n  const id = nanoid()\r\n  const entry: ListenerEntry<unknown> = {\r\n    id,\r\n    effect,\r\n    type,\r\n    predicate,\r\n    pending: new Set<AbortController>(),\r\n    unsubscribe: () => {\r\n      throw new Error('Unsubscribe not initialized')\r\n    },\r\n  }\r\n\r\n  return entry\r\n}\r\n\r\nconst cancelActiveListeners = (\r\n  entry: ListenerEntry<unknown, Dispatch<AnyAction>>\r\n) => {\r\n  entry.pending.forEach((controller) => {\r\n    abortControllerWithReason(controller, listenerCancelled)\r\n  })\r\n}\r\n\r\nconst createClearListenerMiddleware = (\r\n  listenerMap: Map<string, ListenerEntry>\r\n) => {\r\n  return () => {\r\n    listenerMap.forEach(cancelActiveListeners)\r\n\r\n    listenerMap.clear()\r\n  }\r\n}\r\n\r\n/**\r\n * Safely reports errors to the `errorHandler` provided.\r\n * Errors that occur inside `errorHandler` are notified in a new task.\r\n * Inspired by [rxjs reportUnhandledError](https://github.com/ReactiveX/rxjs/blob/6fafcf53dc9e557439b25debaeadfd224b245a66/src/internal/util/reportUnhandledError.ts)\r\n * @param errorHandler\r\n * @param errorToNotify\r\n */\r\nconst safelyNotifyError = (\r\n  errorHandler: ListenerErrorHandler,\r\n  errorToNotify: unknown,\r\n  errorInfo: ListenerErrorInfo\r\n): void => {\r\n  try {\r\n    errorHandler(errorToNotify, errorInfo)\r\n  } catch (errorHandlerError) {\r\n    // We cannot let an error raised here block the listener queue.\r\n    // The error raised here will be picked up by `window.onerror`, `process.on('error')` etc...\r\n    setTimeout(() => {\r\n      throw errorHandlerError\r\n    }, 0)\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport const addListener = createAction(\r\n  `${alm}/add`\r\n) as TypedAddListener<unknown>\r\n\r\n/**\r\n * @public\r\n */\r\nexport const clearAllListeners = createAction(`${alm}/removeAll`)\r\n\r\n/**\r\n * @public\r\n */\r\nexport const removeListener = createAction(\r\n  `${alm}/remove`\r\n) as TypedRemoveListener<unknown>\r\n\r\nconst defaultErrorHandler: ListenerErrorHandler = (...args: unknown[]) => {\r\n  console.error(`${alm}/error`, ...args)\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport function createListenerMiddleware<\r\n  S = unknown,\r\n  D extends Dispatch<AnyAction> = ThunkDispatch<S, unknown, AnyAction>,\r\n  ExtraArgument = unknown\r\n>(middlewareOptions: CreateListenerMiddlewareOptions<ExtraArgument> = {}) {\r\n  const listenerMap = new Map<string, ListenerEntry>()\r\n  const { extra, onError = defaultErrorHandler } = middlewareOptions\r\n\r\n  assertFunction(onError, 'onError')\r\n\r\n  const insertEntry = (entry: ListenerEntry) => {\r\n    entry.unsubscribe = () => listenerMap.delete(entry!.id)\r\n\r\n    listenerMap.set(entry.id, entry)\r\n    return (cancelOptions?: UnsubscribeListenerOptions) => {\r\n      entry.unsubscribe()\r\n      if (cancelOptions?.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n  }\r\n\r\n  const findListenerEntry = (\r\n    comparator: (entry: ListenerEntry) => boolean\r\n  ): ListenerEntry | undefined => {\r\n    for (const entry of Array.from(listenerMap.values())) {\r\n      if (comparator(entry)) {\r\n        return entry\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }\r\n\r\n  const startListening = (options: FallbackAddListenerOptions) => {\r\n    let entry = findListenerEntry(\r\n      (existingEntry) => existingEntry.effect === options.effect\r\n    )\r\n\r\n    if (!entry) {\r\n      entry = createListenerEntry(options as any)\r\n    }\r\n\r\n    return insertEntry(entry)\r\n  }\r\n\r\n  const stopListening = (\r\n    options: FallbackAddListenerOptions & UnsubscribeListenerOptions\r\n  ): boolean => {\r\n    const { type, effect, predicate } = getListenerEntryPropsFrom(options)\r\n\r\n    const entry = findListenerEntry((entry) => {\r\n      const matchPredicateOrType =\r\n        typeof type === 'string'\r\n          ? entry.type === type\r\n          : entry.predicate === predicate\r\n\r\n      return matchPredicateOrType && entry.effect === effect\r\n    })\r\n\r\n    if (entry) {\r\n      entry.unsubscribe()\r\n      if (options.cancelActive) {\r\n        cancelActiveListeners(entry)\r\n      }\r\n    }\r\n\r\n    return !!entry\r\n  }\r\n\r\n  const notifyListener = async (\r\n    entry: ListenerEntry<unknown, Dispatch<AnyAction>>,\r\n    action: AnyAction,\r\n    api: MiddlewareAPI,\r\n    getOriginalState: () => S\r\n  ) => {\r\n    const internalTaskController = new AbortController()\r\n    const take = createTakePattern(\r\n      startListening,\r\n      internalTaskController.signal\r\n    )\r\n    const autoJoinPromises: Promise<any>[] = []\r\n\r\n    try {\r\n      entry.pending.add(internalTaskController)\r\n      await Promise.resolve(\r\n        entry.effect(\r\n          action,\r\n          // Use assign() rather than ... to avoid extra helper functions added to bundle\r\n          assign({}, api, {\r\n            getOriginalState,\r\n            condition: (\r\n              predicate: AnyListenerPredicate<any>,\r\n              timeout?: number\r\n            ) => take(predicate, timeout).then(Boolean),\r\n            take,\r\n            delay: createDelay(internalTaskController.signal),\r\n            pause: createPause<any>(internalTaskController.signal),\r\n            extra,\r\n            signal: internalTaskController.signal,\r\n            fork: createFork(internalTaskController.signal, autoJoinPromises),\r\n            unsubscribe: entry.unsubscribe,\r\n            subscribe: () => {\r\n              listenerMap.set(entry.id, entry)\r\n            },\r\n            cancelActiveListeners: () => {\r\n              entry.pending.forEach((controller, _, set) => {\r\n                if (controller !== internalTaskController) {\r\n                  abortControllerWithReason(controller, listenerCancelled)\r\n                  set.delete(controller)\r\n                }\r\n              })\r\n            },\r\n          })\r\n        )\r\n      )\r\n    } catch (listenerError) {\r\n      if (!(listenerError instanceof TaskAbortError)) {\r\n        safelyNotifyError(onError, listenerError, {\r\n          raisedBy: 'effect',\r\n        })\r\n      }\r\n    } finally {\r\n      await Promise.allSettled(autoJoinPromises)\r\n\r\n      abortControllerWithReason(internalTaskController, listenerCompleted) // Notify that the task has completed\r\n      entry.pending.delete(internalTaskController)\r\n    }\r\n  }\r\n\r\n  const clearListenerMiddleware = createClearListenerMiddleware(listenerMap)\r\n\r\n  const middleware: ListenerMiddleware<S, D, ExtraArgument> =\r\n    (api) => (next) => (action) => {\r\n      if (!isAction(action)) {\r\n        // we only want to notify listeners for action objects\r\n        return next(action)\r\n      }\r\n\r\n      if (addListener.match(action)) {\r\n        return startListening(action.payload)\r\n      }\r\n\r\n      if (clearAllListeners.match(action)) {\r\n        clearListenerMiddleware()\r\n        return\r\n      }\r\n\r\n      if (removeListener.match(action)) {\r\n        return stopListening(action.payload)\r\n      }\r\n\r\n      // Need to get this state _before_ the reducer processes the action\r\n      let originalState: S | typeof INTERNAL_NIL_TOKEN = api.getState()\r\n\r\n      // `getOriginalState` can only be called synchronously.\r\n      // @see https://github.com/reduxjs/redux-toolkit/discussions/1648#discussioncomment-1932820\r\n      const getOriginalState = (): S => {\r\n        if (originalState === INTERNAL_NIL_TOKEN) {\r\n          throw new Error(\r\n            `${alm}: getOriginalState can only be called synchronously`\r\n          )\r\n        }\r\n\r\n        return originalState as S\r\n      }\r\n\r\n      let result: unknown\r\n\r\n      try {\r\n        // Actually forward the action to the reducer before we handle listeners\r\n        result = next(action)\r\n\r\n        if (listenerMap.size > 0) {\r\n          let currentState = api.getState()\r\n          // Work around ESBuild+TS transpilation issue\r\n          const listenerEntries = Array.from(listenerMap.values())\r\n          for (let entry of listenerEntries) {\r\n            let runListener = false\r\n\r\n            try {\r\n              runListener = entry.predicate(action, currentState, originalState)\r\n            } catch (predicateError) {\r\n              runListener = false\r\n\r\n              safelyNotifyError(onError, predicateError, {\r\n                raisedBy: 'predicate',\r\n              })\r\n            }\r\n\r\n            if (!runListener) {\r\n              continue\r\n            }\r\n\r\n            notifyListener(entry, action, api, getOriginalState)\r\n          }\r\n        }\r\n      } finally {\r\n        // Remove `originalState` store from this scope.\r\n        originalState = INTERNAL_NIL_TOKEN\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n  return {\r\n    middleware,\r\n    startListening,\r\n    stopListening,\r\n    clearListeners: clearListenerMiddleware,\r\n  } as ListenerMiddlewareInstance<S, D, ExtraArgument>\r\n}\r\n", "import type { StoreEnhancer } from 'redux'\r\n\r\nexport const SHOULD_AUTOBATCH = 'RTK_autoBatch'\r\n\r\nexport const prepareAutoBatched =\r\n  <T>() =>\r\n  (payload: T): { payload: T; meta: unknown } => ({\r\n    payload,\r\n    meta: { [SHOULD_AUTOBATCH]: true },\r\n  })\r\n\r\n// TODO Remove this in 2.0\r\n// Copied from https://github.com/feross/queue-microtask\r\nlet promise: Promise<any>\r\nconst queueMicrotaskShim =\r\n  typeof queueMicrotask === 'function'\r\n    ? queueMicrotask.bind(\r\n        typeof window !== 'undefined'\r\n          ? window\r\n          : typeof global !== 'undefined'\r\n          ? global\r\n          : globalThis\r\n      )\r\n    : // reuse resolved promise, and allocate it lazily\r\n      (cb: () => void) =>\r\n        (promise || (promise = Promise.resolve())).then(cb).catch((err: any) =>\r\n          setTimeout(() => {\r\n            throw err\r\n          }, 0)\r\n        )\r\n\r\nconst createQueueWithTimer = (timeout: number) => {\r\n  return (notify: () => void) => {\r\n    setTimeout(notify, timeout)\r\n  }\r\n}\r\n\r\n// requestAnimationFrame won't exist in SSR environments.\r\n// Fall back to a vague approximation just to keep from erroring.\r\nconst rAF =\r\n  typeof window !== 'undefined' && window.requestAnimationFrame\r\n    ? window.requestAnimationFrame\r\n    : createQueueWithTimer(10)\r\n\r\nexport type AutoBatchOptions =\r\n  | { type: 'tick' }\r\n  | { type: 'timer'; timeout: number }\r\n  | { type: 'raf' }\r\n  | { type: 'callback'; queueNotification: (notify: () => void) => void }\r\n\r\n/**\r\n * A Redux store enhancer that watches for \"low-priority\" actions, and delays\r\n * notifying subscribers until either the queued callback executes or the\r\n * next \"standard-priority\" action is dispatched.\r\n *\r\n * This allows dispatching multiple \"low-priority\" actions in a row with only\r\n * a single subscriber notification to the UI after the sequence of actions\r\n * is finished, thus improving UI re-render performance.\r\n *\r\n * Watches for actions with the `action.meta[SHOULD_AUTOBATCH]` attribute.\r\n * This can be added to `action.meta` manually, or by using the\r\n * `prepareAutoBatched` helper.\r\n *\r\n * By default, it will queue a notification for the end of the event loop tick.\r\n * However, you can pass several other options to configure the behavior:\r\n * - `{type: 'tick'}: queues using `queueMicrotask` (default)\r\n * - `{type: 'timer, timeout: number}`: queues using `setTimeout`\r\n * - `{type: 'raf'}`: queues using `requestAnimationFrame`\r\n * - `{type: 'callback', queueNotification: (notify: () => void) => void}: lets you provide your own callback\r\n *\r\n *\r\n */\r\nexport const autoBatchEnhancer =\r\n  (options: AutoBatchOptions = { type: 'raf' }): StoreEnhancer =>\r\n  (next) =>\r\n  (...args) => {\r\n    const store = next(...args)\r\n\r\n    let notifying = true\r\n    let shouldNotifyAtEndOfTick = false\r\n    let notificationQueued = false\r\n\r\n    const listeners = new Set<() => void>()\r\n\r\n    const queueCallback =\r\n      options.type === 'tick'\r\n        ? queueMicrotaskShim\r\n        : options.type === 'raf'\r\n        ? rAF\r\n        : options.type === 'callback'\r\n        ? options.queueNotification\r\n        : createQueueWithTimer(options.timeout)\r\n\r\n    const notifyListeners = () => {\r\n      // We're running at the end of the event loop tick.\r\n      // Run the real listener callbacks to actually update the UI.\r\n      notificationQueued = false\r\n      if (shouldNotifyAtEndOfTick) {\r\n        shouldNotifyAtEndOfTick = false\r\n        listeners.forEach((l) => l())\r\n      }\r\n    }\r\n\r\n    return Object.assign({}, store, {\r\n      // Override the base `store.subscribe` method to keep original listeners\r\n      // from running if we're delaying notifications\r\n      subscribe(listener: () => void) {\r\n        // Each wrapped listener will only call the real listener if\r\n        // the `notifying` flag is currently active when it's called.\r\n        // This lets the base store work as normal, while the actual UI\r\n        // update becomes controlled by this enhancer.\r\n        const wrappedListener: typeof listener = () => notifying && listener()\r\n        const unsubscribe = store.subscribe(wrappedListener)\r\n        listeners.add(listener)\r\n        return () => {\r\n          unsubscribe()\r\n          listeners.delete(listener)\r\n        }\r\n      },\r\n      // Override the base `store.dispatch` method so that we can check actions\r\n      // for the `shouldAutoBatch` flag and determine if batching is active\r\n      dispatch(action: any) {\r\n        try {\r\n          // If the action does _not_ have the `shouldAutoBatch` flag,\r\n          // we resume/continue normal notify-after-each-dispatch behavior\r\n          notifying = !action?.meta?.[SHOULD_AUTOBATCH]\r\n          // If a `notifyListeners` microtask was queued, you can't cancel it.\r\n          // Instead, we set a flag so that it's a no-op when it does run\r\n          shouldNotifyAtEndOfTick = !notifying\r\n          if (shouldNotifyAtEndOfTick) {\r\n            // We've seen at least 1 action with `SHOULD_AUTOBATCH`. Try to queue\r\n            // a microtask to notify listeners at the end of the event loop tick.\r\n            // Make sure we only enqueue this _once_ per tick.\r\n            if (!notificationQueued) {\r\n              notificationQueued = true\r\n              queueCallback(notifyListeners)\r\n            }\r\n          }\r\n          // Go ahead and process the action as usual, including reducers.\r\n          // If normal notification behavior is enabled, the store will notify\r\n          // all of its own listeners, and the wrapper callbacks above will\r\n          // see `notifying` is true and pass on to the real listener callbacks.\r\n          // If we're \"batching\" behavior, then the wrapped callbacks will\r\n          // bail out, causing the base store notification behavior to be no-ops.\r\n          return store.dispatch(action)\r\n        } finally {\r\n          // Assume we're back to normal behavior after each action\r\n          notifying = true\r\n        }\r\n      },\r\n    })\r\n  }\r\n", null, "import {Middleware, AnyAction} from '@reduxjs/toolkit';\nimport {btoa as btoashim} from 'abab';\n\nexport const randomID = (prepend?: string, length = 5) =>\n  prepend +\n  Math.random()\n    .toString(36)\n    .substring(2, 2 + length);\n\nexport function isArray<T>(value: T | T[]): value is T[] {\n  return Array.isArray(value);\n}\n\nexport function isEmptyString(str: string) {\n  return str.trim() === '';\n}\n\nexport function removeDuplicates<T>(arr: T[], predicate: (value: T) => string) {\n  return [\n    ...arr\n      .reduce((map, item) => {\n        const key = predicate(item);\n\n        map.has(key) || map.set(key, item);\n\n        return map;\n      }, new Map())\n      .values(),\n  ];\n}\n\nexport function encodedBtoa(stringToEncode: string) {\n  return (typeof btoa !== 'undefined' ? btoa : btoashim)(\n    encodeURI(stringToEncode)\n  )!;\n}\n\nexport function omit<T>(key: keyof T, obj: T) {\n  const {[key]: omitted, ...rest} = obj;\n  return rest;\n}\n\nexport function getObjectHash<T>(obj: T) {\n  return encodedBtoa(JSON.stringify(obj));\n}\n\nconst doNotTrackValues = new Set(['1', 1, 'yes', true]);\n\n/**\n * Logic copied from coveo.analytics.\n */\nexport function doNotTrack() {\n  if (typeof navigator === 'undefined' || typeof window === 'undefined') {\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const nav = <any>navigator;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const win = <any>window;\n  return [\n    nav.globalPrivacyControl,\n    nav.doNotTrack,\n    nav.msDoNotTrack,\n    win.doNotTrack,\n  ].some((value) => doNotTrackValues.has(value));\n}\n\nexport function fromEntries<K extends PropertyKey, V>(\n  values: [K, V][]\n): Record<K, V> {\n  const newObject: Partial<Record<K, V>> = {};\n  for (const [key, value] of values) {\n    newObject[key] = value;\n  }\n  return newObject as Record<K, V>;\n}\n\nexport function resetTimeout(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => void,\n  timeoutId?: ReturnType<typeof setTimeout>,\n  ms?: number | undefined\n) {\n  clearTimeout(timeoutId);\n  return setTimeout(callback, ms);\n}\n\nexport function mapObject<TKey extends string, TInitialValue, TNewValue>(\n  obj: Record<TKey, TInitialValue>,\n  predicate: (value: TInitialValue, key: TKey) => TNewValue\n): Record<TKey, TNewValue> {\n  return Object.fromEntries(\n    Object.entries(obj).map(([key, value]) => [\n      key,\n      predicate(value as TInitialValue, key as TKey),\n    ])\n  ) as Record<TKey, TNewValue>;\n}\n\n// TODO: Could eventually be replaced with `structuredClone`.\n// However, this is not compatible with salesforce locker service.\nexport function clone<T>(value: T): T {\n  if (typeof value !== 'object') {\n    return value;\n  }\n  if (!value) {\n    return value;\n  }\n  // JSON parse/stringify can fail in some cases (ie: recursive objects)\n  // add defensive code to prevent the whole app from crashing\n  try {\n    return JSON.parse(JSON.stringify(value));\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction createDeferredPromise<T>(): {\n  promise: Promise<T>;\n  resolve(value: T): void;\n  reject(error: unknown): void;\n} {\n  let resolve: null | ((value: T) => void) = null;\n  let reject: null | ((error: unknown) => void) = null;\n  const promise = new Promise<T>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  return {promise, resolve: resolve!, reject: reject!};\n}\n\nexport function createWaitForActionMiddleware<TAction extends AnyAction>(\n  isDesiredAction: (action: AnyAction) => action is TAction\n): {promise: Promise<TAction>; middleware: Middleware} {\n  const {promise, resolve} = createDeferredPromise<TAction>();\n\n  const middleware: Middleware = () => (next) => (action) => {\n    next(action);\n    if (isDesiredAction(action)) {\n      resolve(action);\n    }\n  };\n\n  return {promise, middleware};\n}\n", "import {AnyAction} from '@reduxjs/toolkit';\nimport {Controller} from '../../controllers/controller/headless-controller';\nimport {clone, mapObject} from '../../utils/utils';\nimport {CoreEngine} from '../engine';\nimport {\n  ControllerDefinition,\n  ControllerDefinitionsMap,\n  ControllersMap,\n  EngineStaticState,\n  InferControllerFromDefinition,\n  InferControllerPropsFromDefinition,\n  InferControllerPropsMapFromDefinitions,\n  InferControllerStaticStateMapFromControllers,\n  InferControllersMapFromDefinition,\n} from './types/common';\n\nfunction buildControllerFromDefinition<\n  TControllerDefinition extends ControllerDefinition<TEngine, Controller>,\n  TEngine extends CoreEngine,\n>({\n  definition,\n  engine,\n  props,\n}: {\n  definition: TControllerDefinition;\n  engine: TEngine;\n  props?: InferControllerPropsFromDefinition<TControllerDefinition>;\n}): InferControllerFromDefinition<TControllerDefinition> {\n  return (\n    'build' in definition\n      ? definition.build(engine)\n      : definition.buildWithProps(engine, props)\n  ) as InferControllerFromDefinition<TControllerDefinition>;\n}\n\nexport function buildControllerDefinitions<\n  TControllerDefinitionsMap extends ControllerDefinitionsMap<\n    CoreEngine,\n    Controller\n  >,\n  TEngine extends CoreEngine,\n>({\n  definitionsMap,\n  engine,\n  propsMap,\n}: {\n  definitionsMap: TControllerDefinitionsMap;\n  engine: TEngine;\n  propsMap: InferControllerPropsMapFromDefinitions<TControllerDefinitionsMap>;\n}): InferControllersMapFromDefinition<TControllerDefinitionsMap> {\n  return mapObject(definitionsMap, (definition, key) =>\n    buildControllerFromDefinition({\n      definition,\n      engine,\n      props: propsMap?.[key as keyof typeof propsMap],\n    })\n  ) as InferControllersMapFromDefinition<TControllerDefinitionsMap>;\n}\n\nexport function createStaticState<\n  TSearchAction extends AnyAction,\n  TControllers extends ControllersMap,\n>({\n  searchAction,\n  controllers,\n}: {\n  searchAction: TSearchAction;\n  controllers: TControllers;\n}): EngineStaticState<\n  TSearchAction,\n  InferControllerStaticStateMapFromControllers<TControllers>\n> {\n  return {\n    controllers: mapObject(controllers, (controller) => ({\n      state: clone(controller.state),\n    })) as InferControllerStaticStateMapFromControllers<TControllers>,\n    searchAction: clone(searchAction),\n  };\n}\n\nexport function composeFunction<\n  TParameters extends Array<unknown>,\n  TReturn,\n  TChildren extends {},\n>(\n  parentFunction: (...params: TParameters) => TReturn,\n  children: TChildren\n): TChildren & {\n  (...params: TParameters): TReturn;\n} {\n  const newFunction = function (...params: TParameters) {\n    return parentFunction(...params);\n  } as {\n    (...params: TParameters): TReturn;\n  } & TChildren;\n  for (const [key, value] of Object.entries(children)) {\n    (newFunction as unknown as Record<typeof key, typeof value>)[key] = value;\n  }\n  return newFunction;\n}\n", "async function emit({ config, environment, event, listenerManager, }) {\n    const { url, token, mode } = config;\n    const isEnabled = mode !== \"disabled\";\n    if (isEnabled) {\n        listenerManager.call(event);\n        environment.send(url, token, event);\n    }\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nfunction createClientIdManager(environmentManager) {\n    const key = \"visitorId\";\n    return {\n        getClientId: () => {\n            const environment = environmentManager.get();\n            const storage = environment.storage;\n            const existingClientId = storage.getItem(key);\n            const clientId = existingClientId && validate(existingClientId)\n                ? existingClientId\n                : environment.generateUUID();\n            storage.setItem(key, clientId);\n            return clientId;\n        },\n        clear: () => {\n            environmentManager.get().storage.removeItem(key);\n        },\n    };\n}\n\nconst version = \"0.6.8\";\n\nfunction getEventConfig(config) {\n    const { trackingId } = config;\n    return { trackingId };\n}\nfunction getSource() {\n    return `relay@${version}`;\n}\nfunction createMeta(type, config, environment, clientIdManager) {\n    const { getReferrer, getLocation, getUserAgent } = environment;\n    const eventConfig = getEventConfig(config);\n    const clientId = clientIdManager.getClientId();\n    return Object.freeze({\n        type,\n        config: eventConfig,\n        ts: Date.now(),\n        source: getSource(),\n        clientId,\n        userAgent: getUserAgent(),\n        referrer: getReferrer(),\n        location: getLocation(),\n    });\n}\n\nfunction createRelayEvent(type, payload, config, environment, clientIdManager) {\n    return {\n        ...payload,\n        meta: createMeta(type, config, environment, clientIdManager),\n    };\n}\n\nconst ANY_EVENT_TYPE = \"*\";\nfunction createListenerManager() {\n    const listeners = [];\n    function getListenerIndex({ type, callback }) {\n        return listeners.findIndex((listener) => listener.type === type && listener.callback === callback);\n    }\n    function isMatchesType(listener, type) {\n        return listener.type === \"*\" || type === listener.type;\n    }\n    function add(listener) {\n        if (getListenerIndex(listener) < 0) {\n            listeners.push(listener);\n        }\n        return () => remove(listener.type, listener.callback);\n    }\n    function call(event) {\n        listeners.forEach((listener) => {\n            if (isMatchesType(listener, event.meta.type)) {\n                try {\n                    listener.callback(event);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            }\n        });\n    }\n    function removeMultiple(type) {\n        if (type === ANY_EVENT_TYPE) {\n            listeners.length = 0;\n        }\n        else {\n            for (let i = listeners.length - 1; i >= 0; i--) {\n                if (listeners[i].type === type) {\n                    listeners.splice(i, 1);\n                }\n            }\n        }\n    }\n    function removeOne(listener) {\n        const index = getListenerIndex(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    function remove(type, callback) {\n        !!callback ? removeOne({ type, callback }) : removeMultiple(type);\n    }\n    return {\n        add,\n        call,\n        remove,\n    };\n}\n\nfunction pick({ url, token, trackingId, ...rest }) {\n    return Object.freeze({\n        url,\n        token,\n        trackingId,\n        ...(!!rest.mode && { mode: rest.mode }),\n    });\n}\nfunction createConfigManager(initialConfig) {\n    let _config = pick(initialConfig);\n    return {\n        get: () => _config,\n        update: (updatedConfig) => {\n            _config = pick({ ..._config, ...updatedConfig });\n        },\n    };\n}\n\nfunction createExplorerMessenger() {\n  const isBrowser = typeof window !== \"undefined\";\n  return {\n    sendMessage(message) {\n      isBrowser && window.postMessage(message, \"*\");\n    }\n  };\n}\n\nconst cookieManager = createCookieManager();\nfunction createCookieManager() {\n    const prefix = \"coveo_\";\n    const getDomain = (host) => {\n        const parts = host.split(\".\").slice(-2);\n        return parts.length == 2 ? parts.join(\".\") : \"\";\n    };\n    return {\n        getItem(key) {\n            const cookiePrefix = `${prefix}${key}=`;\n            const cookieArray = document.cookie.split(\";\");\n            for (const cookie of cookieArray) {\n                const prettifyCookie = cookie.replace(/^\\s+/, \"\");\n                if (prettifyCookie.lastIndexOf(cookiePrefix, 0) === 0) {\n                    return prettifyCookie.substring(cookiePrefix.length, prettifyCookie.length);\n                }\n            }\n            return null;\n        },\n        setItem(key, data, expire) {\n            const domain = getDomain(window.location.hostname);\n            const expireSection = `;expires=${new Date(new Date().getTime() + expire).toUTCString()}`;\n            const domainSection = domain ? `;domain=${domain}` : \"\";\n            document.cookie = `${prefix}${key}=${data}${expireSection}${domainSection};path=/;SameSite=Lax`;\n        },\n        removeItem(key) {\n            this.setItem(key, \"\", -1);\n        },\n    };\n}\n\nfunction createBrowserStorage() {\n    return {\n        getItem(key) {\n            return cookieManager.getItem(key) || localStorage.getItem(key);\n        },\n        removeItem(key) {\n            cookieManager.removeItem(key);\n            localStorage.removeItem(key);\n        },\n        setItem(key, data) {\n            const oneYear = 31556952000;\n            localStorage.setItem(key, data);\n            cookieManager.setItem(key, data, oneYear);\n        },\n    };\n}\n\nasync function fetchAPI(url, init) {\n    return fetch(url, init).catch((err) => {\n        throw new Error(`${err.message}: The \"host\" value is invalid or a network error occured, according to the FetchAPI's response.`, { cause: err });\n    });\n}\n\nfunction getReferrer() {\n    const referrer = document.referrer;\n    return referrer === \"\" ? null : referrer;\n}\nfunction buildBrowserEnvironment() {\n    return {\n        runtime: \"browser\",\n        fetch: (url, init) => fetchAPI(url, init),\n        send: async (url, token, event) => {\n            const response = navigator.sendBeacon(`${url}?access_token=${token}`, new Blob([JSON.stringify([event])], {\n                type: \"application/json\",\n            }));\n            const messenger = createExplorerMessenger();\n            messenger.sendMessage({ kind: \"EVENT_PROTOCOL\", event, url, token });\n            if (!response) {\n                throw new Error(`Failed to send the event(s) because the payload size exceeded the maximum allowed size (32 KB). Please contact support if the problem persists.`);\n            }\n        },\n        getReferrer: () => getReferrer(),\n        getLocation: () => window.location.href,\n        getUserAgent: () => navigator.userAgent,\n        generateUUID: () => crypto.randomUUID(),\n        storage: createBrowserStorage(),\n    };\n}\n\nfunction createNullStorage() {\n    return {\n        getItem() {\n            return null;\n        },\n        removeItem() {\n            return;\n        },\n        setItem() {\n            return;\n        },\n    };\n}\n\nfunction buildNodeEnvironment() {\n    return {\n        runtime: \"node\",\n        fetch: (url, init) => fetchAPI(url, init),\n        send: async (url, token, event) => {\n            const headers = {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            };\n            fetchAPI(url, {\n                method: \"POST\",\n                body: JSON.stringify([event]),\n                headers,\n            });\n        },\n        getReferrer: () => null,\n        getLocation: () => null,\n        getUserAgent: () => null,\n        generateUUID: () => crypto.randomUUID(),\n        storage: createNullStorage(),\n    };\n}\n\nfunction currentEnvironment() {\n    return isBrowser() ? buildBrowserEnvironment() : buildNodeEnvironment();\n}\nfunction isBrowser() {\n    try {\n        return typeof window === \"object\";\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction buildNullEnvironment() {\n    return {\n        runtime: \"null\",\n        fetch: () => Promise.resolve(new Response(JSON.stringify(\"\"))),\n        send: async () => undefined,\n        getReferrer: () => null,\n        getLocation: () => null,\n        getUserAgent: () => null,\n        generateUUID: () => \"\",\n        storage: createNullStorage(),\n    };\n}\n\nfunction buildEnvironment(configManager) {\n    return configManager.get().mode == \"disabled\"\n        ? buildNullEnvironment()\n        : currentEnvironment();\n}\nfunction createEnvironmentManager(configManager) {\n    return {\n        get: () => Object.freeze(buildEnvironment(configManager)),\n    };\n}\n\n/**\n * Initializes the Relay library object.\n * @param {RelayConfig} initialConfig\n * @returns {Relay}\n */\nfunction createRelay(initialConfig) {\n    const configManager = createConfigManager(initialConfig);\n    const listenerManager = createListenerManager();\n    const environmentManager = createEnvironmentManager(configManager);\n    const clientIdManager = createClientIdManager(environmentManager);\n    return {\n        emit: (type, payload) => {\n            const config = configManager.get();\n            const environment = environmentManager.get();\n            const event = createRelayEvent(type, payload, config, environment, clientIdManager);\n            return emit({\n                config,\n                environment,\n                event,\n                listenerManager,\n            });\n        },\n        getMeta: (type) => createMeta(type, configManager.get(), environmentManager.get(), clientIdManager),\n        on: (type, callback) => listenerManager.add({ type, callback }),\n        off: (type, callback) => listenerManager.remove(type, callback),\n        updateConfig: (config) => configManager.update(config),\n        version,\n        clearStorage: () => {\n            clientIdManager.clear();\n        },\n    };\n}\n\nexport { createRelay };\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nvar EventType;\n(function (EventType) {\n    EventType[\"search\"] = \"search\";\n    EventType[\"click\"] = \"click\";\n    EventType[\"custom\"] = \"custom\";\n    EventType[\"view\"] = \"view\";\n    EventType[\"collect\"] = \"collect\";\n})(EventType || (EventType = {}));\n\nfunction hasWindow() {\n    return typeof window !== 'undefined';\n}\nfunction hasNavigator() {\n    return typeof navigator !== 'undefined';\n}\nfunction hasDocument() {\n    return typeof document !== 'undefined';\n}\nfunction hasLocalStorage() {\n    try {\n        return typeof localStorage !== 'undefined';\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction hasSessionStorage() {\n    try {\n        return typeof sessionStorage !== 'undefined';\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction hasCookieStorage() {\n    return hasNavigator() && navigator.cookieEnabled;\n}\n\nconst eventTypesForDefaultValues = [EventType.click, EventType.custom, EventType.search, EventType.view];\nconst addDefaultValues = (eventType, payload) => {\n    return eventTypesForDefaultValues.indexOf(eventType) !== -1\n        ? Object.assign({ language: hasDocument() ? document.documentElement.lang : 'unknown', userAgent: hasNavigator() ? navigator.userAgent : 'unknown' }, payload) : payload;\n};\n\nclass Cookie {\n    static set(name, value, expire) {\n        var domain, expirationDate, domainParts, host;\n        if (expire) {\n            expirationDate = new Date();\n            expirationDate.setTime(expirationDate.getTime() + expire);\n        }\n        host = window.location.hostname;\n        if (host.indexOf('.') === -1) {\n            writeCookie(name, value, expirationDate);\n        }\n        else {\n            domainParts = host.split('.');\n            domain = domainParts[domainParts.length - 2] + '.' + domainParts[domainParts.length - 1];\n            writeCookie(name, value, expirationDate, domain);\n        }\n    }\n    static get(name) {\n        var cookiePrefix = name + '=';\n        var cookieArray = document.cookie.split(';');\n        for (var i = 0; i < cookieArray.length; i++) {\n            var cookie = cookieArray[i];\n            cookie = cookie.replace(/^\\s+/, '');\n            if (cookie.lastIndexOf(cookiePrefix, 0) === 0) {\n                return cookie.substring(cookiePrefix.length, cookie.length);\n            }\n        }\n        return null;\n    }\n    static erase(name) {\n        Cookie.set(name, '', -1);\n    }\n}\nfunction writeCookie(name, value, expirationDate, domain) {\n    document.cookie =\n        `${name}=${value}` +\n            (expirationDate ? `;expires=${expirationDate.toUTCString()}` : '') +\n            (domain ? `;domain=${domain}` : '') +\n            ';path=/;SameSite=Lax';\n}\n\nfunction getAvailableStorage() {\n    if (hasLocalStorage()) {\n        return localStorage;\n    }\n    if (hasCookieStorage()) {\n        return new CookieStorage();\n    }\n    if (hasSessionStorage()) {\n        return sessionStorage;\n    }\n    return new NullStorage();\n}\nclass CookieStorage {\n    getItem(key) {\n        return Cookie.get(`${CookieStorage.prefix}${key}`);\n    }\n    removeItem(key) {\n        Cookie.erase(`${CookieStorage.prefix}${key}`);\n    }\n    setItem(key, data, expire) {\n        Cookie.set(`${CookieStorage.prefix}${key}`, data, expire);\n    }\n}\nCookieStorage.prefix = 'coveo_';\nclass CookieAndLocalStorage {\n    constructor() {\n        this.cookieStorage = new CookieStorage();\n    }\n    getItem(key) {\n        return localStorage.getItem(key) || this.cookieStorage.getItem(key);\n    }\n    removeItem(key) {\n        this.cookieStorage.removeItem(key);\n        localStorage.removeItem(key);\n    }\n    setItem(key, data) {\n        localStorage.setItem(key, data);\n        this.cookieStorage.setItem(key, data, 31556926000);\n    }\n}\nclass NullStorage {\n    getItem(key) {\n        return null;\n    }\n    removeItem(key) {\n    }\n    setItem(key, data) {\n    }\n}\n\nconst STORE_KEY = '__coveo.analytics.history';\nconst MAX_NUMBER_OF_HISTORY_ELEMENTS = 20;\nconst MIN_THRESHOLD_FOR_DUPLICATE_VALUE = 1000 * 60;\nconst MAX_VALUE_SIZE = 75;\nclass HistoryStore {\n    constructor(store) {\n        this.store = store || getAvailableStorage();\n    }\n    addElement(elem) {\n        elem.internalTime = new Date().getTime();\n        elem = this.cropQueryElement(this.stripEmptyQuery(elem));\n        let currentHistory = this.getHistoryWithInternalTime();\n        if (currentHistory != null) {\n            if (this.isValidEntry(elem)) {\n                this.setHistory([elem].concat(currentHistory));\n            }\n        }\n        else {\n            this.setHistory([elem]);\n        }\n    }\n    addElementAsync(elem) {\n        return __awaiter(this, void 0, void 0, function* () {\n            elem.internalTime = new Date().getTime();\n            elem = this.cropQueryElement(this.stripEmptyQuery(elem));\n            let currentHistory = yield this.getHistoryWithInternalTimeAsync();\n            if (currentHistory != null) {\n                if (this.isValidEntry(elem)) {\n                    this.setHistory([elem].concat(currentHistory));\n                }\n            }\n            else {\n                this.setHistory([elem]);\n            }\n        });\n    }\n    getHistory() {\n        const history = this.getHistoryWithInternalTime();\n        return this.stripEmptyQueries(this.stripInternalTime(history));\n    }\n    getHistoryAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const history = yield this.getHistoryWithInternalTimeAsync();\n            return this.stripEmptyQueries(this.stripInternalTime(history));\n        });\n    }\n    getHistoryWithInternalTime() {\n        try {\n            const elements = this.store.getItem(STORE_KEY);\n            if (elements && typeof elements === 'string') {\n                return JSON.parse(elements);\n            }\n            else {\n                return [];\n            }\n        }\n        catch (e) {\n            return [];\n        }\n    }\n    getHistoryWithInternalTimeAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const elements = yield this.store.getItem(STORE_KEY);\n                if (elements) {\n                    return JSON.parse(elements);\n                }\n                else {\n                    return [];\n                }\n            }\n            catch (e) {\n                return [];\n            }\n        });\n    }\n    setHistory(history) {\n        try {\n            this.store.setItem(STORE_KEY, JSON.stringify(history.slice(0, MAX_NUMBER_OF_HISTORY_ELEMENTS)));\n        }\n        catch (e) {\n        }\n    }\n    clear() {\n        try {\n            this.store.removeItem(STORE_KEY);\n        }\n        catch (e) {\n        }\n    }\n    getMostRecentElement() {\n        let currentHistory = this.getHistoryWithInternalTime();\n        if (Array.isArray(currentHistory)) {\n            const sorted = currentHistory.sort((first, second) => {\n                return (second.internalTime || 0) - (first.internalTime || 0);\n            });\n            return sorted[0];\n        }\n        return null;\n    }\n    cropQueryElement(part) {\n        if (part.name && part.value && part.name.toLowerCase() === 'query') {\n            part.value = part.value.slice(0, MAX_VALUE_SIZE);\n        }\n        return part;\n    }\n    isValidEntry(elem) {\n        let lastEntry = this.getMostRecentElement();\n        if (lastEntry && lastEntry.value == elem.value) {\n            return (elem.internalTime || 0) - (lastEntry.internalTime || 0) > MIN_THRESHOLD_FOR_DUPLICATE_VALUE;\n        }\n        return true;\n    }\n    stripInternalTime(history) {\n        if (Array.isArray(history)) {\n            return history.map((part) => {\n                const { name, time, value } = part;\n                return { name, time, value };\n            });\n        }\n        return [];\n    }\n    stripEmptyQuery(part) {\n        const { name, time, value } = part;\n        if (name && typeof value === 'string' && name.toLowerCase() === 'query' && value.trim() === '') {\n            return { name, time };\n        }\n        return part;\n    }\n    stripEmptyQueries(history) {\n        return history.map((part) => this.stripEmptyQuery(part));\n    }\n}\n\nvar history = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    HistoryStore: HistoryStore,\n    MAX_NUMBER_OF_HISTORY_ELEMENTS: MAX_NUMBER_OF_HISTORY_ELEMENTS,\n    MAX_VALUE_SIZE: MAX_VALUE_SIZE,\n    MIN_THRESHOLD_FOR_DUPLICATE_VALUE: MIN_THRESHOLD_FOR_DUPLICATE_VALUE,\n    STORE_KEY: STORE_KEY,\n    default: HistoryStore\n});\n\nconst enhanceViewEvent = (eventType, payload) => __awaiter(void 0, void 0, void 0, function* () {\n    if (eventType === EventType.view) {\n        yield addPageViewToHistory(payload.contentIdValue);\n        return Object.assign({ location: window.location.toString(), referrer: document.referrer, title: document.title }, payload);\n    }\n    return payload;\n});\nconst addPageViewToHistory = (pageViewValue) => __awaiter(void 0, void 0, void 0, function* () {\n    const store = new HistoryStore();\n    const historyElement = {\n        name: 'PageView',\n        value: pageViewValue,\n        time: new Date().toISOString(),\n    };\n    yield store.addElementAsync(historyElement);\n});\n\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL$1 = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL$1;\n  return generateUUID;\n}\n\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native = {\n  randomUUID\n};\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nconst v5 = v35('v5', 0x50, sha1);\nvar uuidv5 = v5;\n\nconst libVersion = \"2.28.23\" ;\n\nconst getFormattedLocation = (location) => `${location.protocol}//${location.hostname}${location.pathname.indexOf('/') === 0 ? location.pathname : `/${location.pathname}`}${location.search}`;\n\nconst BasePluginEventTypes = {\n    pageview: 'pageview',\n    event: 'event',\n};\nclass Plugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        this.client = client;\n        this.uuidGenerator = uuidGenerator;\n    }\n}\nclass BasePlugin extends Plugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        super({ client, uuidGenerator });\n        this.actionData = {};\n        this.pageViewId = uuidGenerator();\n        this.nextPageViewId = this.pageViewId;\n        this.currentLocation = getFormattedLocation(window.location);\n        this.lastReferrer = hasDocument() ? document.referrer : '';\n        this.addHooks();\n    }\n    getApi(name) {\n        switch (name) {\n            case 'setAction':\n                return this.setAction;\n            default:\n                return null;\n        }\n    }\n    setAction(action, options) {\n        this.action = action;\n        this.actionData = options;\n    }\n    clearData() {\n        this.clearPluginData();\n        this.action = undefined;\n        this.actionData = {};\n    }\n    getLocationInformation(eventType, payload) {\n        return Object.assign({ hitType: eventType }, this.getNextValues(eventType, payload));\n    }\n    updateLocationInformation(eventType, payload) {\n        this.updateLocationForNextPageView(eventType, payload);\n    }\n    getDefaultContextInformation(eventType) {\n        const documentContext = {\n            title: hasDocument() ? document.title : '',\n            encoding: hasDocument() ? document.characterSet : 'UTF-8',\n        };\n        const screenContext = {\n            screenResolution: `${screen.width}x${screen.height}`,\n            screenColor: `${screen.colorDepth}-bit`,\n        };\n        const navigatorContext = {\n            language: navigator.language,\n            userAgent: navigator.userAgent,\n        };\n        const eventContext = {\n            time: Date.now(),\n            eventId: this.uuidGenerator(),\n        };\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, eventContext), screenContext), navigatorContext), documentContext);\n    }\n    updateLocationForNextPageView(eventType, payload) {\n        const { pageViewId, referrer, location } = this.getNextValues(eventType, payload);\n        this.lastReferrer = referrer;\n        this.pageViewId = pageViewId;\n        this.currentLocation = location;\n        if (eventType === BasePluginEventTypes.pageview) {\n            this.nextPageViewId = this.uuidGenerator();\n            this.hasSentFirstPageView = true;\n        }\n    }\n    getNextValues(eventType, payload) {\n        return {\n            pageViewId: eventType === BasePluginEventTypes.pageview ? this.nextPageViewId : this.pageViewId,\n            referrer: eventType === BasePluginEventTypes.pageview && this.hasSentFirstPageView\n                ? this.currentLocation\n                : this.lastReferrer,\n            location: eventType === BasePluginEventTypes.pageview\n                ? this.getCurrentLocationFromPayload(payload)\n                : this.currentLocation,\n        };\n    }\n    getCurrentLocationFromPayload(payload) {\n        if (!!payload.page) {\n            const removeStartingSlash = (page) => page.replace(/^\\/?(.*)$/, '/$1');\n            const extractHostnamePart = (location) => location.split('/').slice(0, 3).join('/');\n            return `${extractHostnamePart(this.currentLocation)}${removeStartingSlash(payload.page)}`;\n        }\n        else {\n            return getFormattedLocation(window.location);\n        }\n    }\n}\n\nclass CoveoLinkParam {\n    constructor(clientId, timestamp) {\n        if (!validate(clientId))\n            throw Error('Not a valid uuid');\n        this.clientId = clientId;\n        this.creationDate = Math.floor(timestamp / 1000);\n    }\n    toString() {\n        return this.clientId.replace(/-/g, '') + '.' + this.creationDate.toString();\n    }\n    get expired() {\n        const age = Math.floor(Date.now() / 1000) - this.creationDate;\n        return age < 0 || age > CoveoLinkParam.expirationTime;\n    }\n    validate(referrerString, referrerList) {\n        return !this.expired && this.matchReferrer(referrerString, referrerList);\n    }\n    matchReferrer(referrerString, referrerList) {\n        try {\n            const url = new URL(referrerString);\n            return referrerList.some((value) => {\n                const hostRegExp = new RegExp(value.replace(/\\\\/g, '\\\\\\\\').replace(/\\./g, '\\\\.').replace(/\\*/g, '.*') + '$');\n                return hostRegExp.test(url.host);\n            });\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    static fromString(input) {\n        const parts = input.split('.');\n        if (parts.length !== 2) {\n            return null;\n        }\n        const [clientIdPart, creationDate] = parts;\n        if (clientIdPart.length !== 32 || isNaN(parseInt(creationDate))) {\n            return null;\n        }\n        const clientId = clientIdPart.substring(0, 8) +\n            '-' +\n            clientIdPart.substring(8, 12) +\n            '-' +\n            clientIdPart.substring(12, 16) +\n            '-' +\n            clientIdPart.substring(16, 20) +\n            '-' +\n            clientIdPart.substring(20, 32);\n        if (validate(clientId)) {\n            return new CoveoLinkParam(clientId, Number.parseInt(creationDate) * 1000);\n        }\n        else {\n            return null;\n        }\n    }\n}\nCoveoLinkParam.cvo_cid = 'cvo_cid';\nCoveoLinkParam.expirationTime = 120;\nclass LinkPlugin extends Plugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        super({ client, uuidGenerator });\n    }\n    getApi(name) {\n        switch (name) {\n            case 'decorate':\n                return this.decorate;\n            case 'acceptFrom':\n                return this.acceptFrom;\n            default:\n                return null;\n        }\n    }\n    decorate(urlString) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client.getCurrentVisitorId) {\n                throw new Error('Could not retrieve current clientId');\n            }\n            try {\n                const url = new URL(urlString);\n                const clientId = yield this.client.getCurrentVisitorId();\n                url.searchParams.set(CoveoLinkParam.cvo_cid, new CoveoLinkParam(clientId, Date.now()).toString());\n                return url.toString();\n            }\n            catch (error) {\n                throw new Error('Invalid URL provided');\n            }\n        });\n    }\n    acceptFrom(acceptedReferrers) {\n        this.client.setAcceptedLinkReferrers(acceptedReferrers);\n    }\n}\nLinkPlugin.Id = 'link';\n\nconst keysOf = Object.keys;\nfunction isObject(o) {\n    return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\n\nconst ticketKeysMapping = {\n    id: 'svc_ticket_id',\n    subject: 'svc_ticket_subject',\n    description: 'svc_ticket_description',\n    category: 'svc_ticket_category',\n    productId: 'svc_ticket_product_id',\n    custom: 'svc_ticket_custom',\n};\nconst ticketKeysMappingValues = keysOf(ticketKeysMapping).map((key) => ticketKeysMapping[key]);\nconst ticketSubKeysMatchGroup = [...ticketKeysMappingValues].join('|');\nconst ticketKeyRegex = new RegExp(`^(${ticketSubKeysMatchGroup}$)`);\nconst serviceActionsKeysMapping = {\n    svcAction: 'svc_action',\n    svcActionData: 'svc_action_data',\n};\nconst convertTicketToMeasurementProtocol = (ticket) => {\n    return keysOf(ticket)\n        .filter((key) => ticket[key] !== undefined)\n        .reduce((mappedTicket, key) => {\n        const newKey = ticketKeysMapping[key] || key;\n        return Object.assign(Object.assign({}, mappedTicket), { [newKey]: ticket[key] });\n    }, {});\n};\nconst isTicketKey = (key) => ticketKeyRegex.test(key);\nconst isServiceKey = [isTicketKey];\n\nconst productKeysMapping = {\n    id: 'id',\n    name: 'nm',\n    brand: 'br',\n    category: 'ca',\n    variant: 'va',\n    price: 'pr',\n    quantity: 'qt',\n    coupon: 'cc',\n    position: 'ps',\n    group: 'group',\n};\nconst impressionKeysMapping = {\n    id: 'id',\n    name: 'nm',\n    brand: 'br',\n    category: 'ca',\n    variant: 'va',\n    position: 'ps',\n    price: 'pr',\n    group: 'group',\n};\nconst productActionsKeysMapping = {\n    action: 'pa',\n    list: 'pal',\n    listSource: 'pls',\n};\nconst transactionActionsKeysMapping = {\n    id: 'ti',\n    revenue: 'tr',\n    tax: 'tt',\n    shipping: 'ts',\n    coupon: 'tcc',\n    affiliation: 'ta',\n    step: 'cos',\n    option: 'col',\n};\nconst coveoCommerceExtensionKeys = [\n    'loyaltyCardId',\n    'loyaltyTier',\n    'thirdPartyPersona',\n    'companyName',\n    'favoriteStore',\n    'storeName',\n    'userIndustry',\n    'userRole',\n    'userDepartment',\n    'businessUnit',\n];\nconst quoteActionsKeysMapping = {\n    id: 'quoteId',\n    affiliation: 'quoteAffiliation',\n};\nconst reviewActionsKeysMapping = {\n    id: 'reviewId',\n    rating: 'reviewRating',\n    comment: 'reviewComment',\n};\nconst commerceActionKeysMappingPerAction = {\n    add: productActionsKeysMapping,\n    bookmark_add: productActionsKeysMapping,\n    bookmark_remove: productActionsKeysMapping,\n    click: productActionsKeysMapping,\n    checkout: productActionsKeysMapping,\n    checkout_option: productActionsKeysMapping,\n    detail: productActionsKeysMapping,\n    impression: productActionsKeysMapping,\n    remove: productActionsKeysMapping,\n    refund: Object.assign(Object.assign({}, productActionsKeysMapping), transactionActionsKeysMapping),\n    purchase: Object.assign(Object.assign({}, productActionsKeysMapping), transactionActionsKeysMapping),\n    quickview: productActionsKeysMapping,\n    quote: Object.assign(Object.assign({}, productActionsKeysMapping), quoteActionsKeysMapping),\n    review: Object.assign(Object.assign({}, productActionsKeysMapping), reviewActionsKeysMapping),\n};\nconst productKeysMappingValues = keysOf(productKeysMapping).map((key) => productKeysMapping[key]);\nconst impressionKeysMappingValues = keysOf(impressionKeysMapping).map((key) => impressionKeysMapping[key]);\nconst productActionsKeysMappingValues = keysOf(productActionsKeysMapping).map((key) => productActionsKeysMapping[key]);\nconst transactionActionsKeysMappingValues = keysOf(transactionActionsKeysMapping).map((key) => transactionActionsKeysMapping[key]);\nconst reviewKeysMappingValues = keysOf(reviewActionsKeysMapping).map((key) => reviewActionsKeysMapping[key]);\nconst quoteKeysMappingValues = keysOf(quoteActionsKeysMapping).map((key) => quoteActionsKeysMapping[key]);\nconst productSubKeysMatchGroup = [...productKeysMappingValues, 'custom'].join('|');\nconst impressionSubKeysMatchGroup = [...impressionKeysMappingValues, 'custom'].join('|');\nconst productPrefixMatchGroup = '(pr[0-9]+)';\nconst impressionPrefixMatchGroup = '(il[0-9]+pi[0-9]+)';\nconst productKeyRegex = new RegExp(`^${productPrefixMatchGroup}(${productSubKeysMatchGroup})$`);\nconst impressionKeyRegex = new RegExp(`^(${impressionPrefixMatchGroup}(${impressionSubKeysMatchGroup}))|(il[0-9]+nm)$`);\nconst productActionsKeyRegex = new RegExp(`^(${productActionsKeysMappingValues.join('|')})$`);\nconst transactionActionsKeyRegex = new RegExp(`^(${transactionActionsKeysMappingValues.join('|')})$`);\nconst customProductKeyRegex = new RegExp(`^${productPrefixMatchGroup}custom$`);\nconst customImpressionKeyRegex = new RegExp(`^${impressionPrefixMatchGroup}custom$`);\nconst coveoCommerceExtensionKeysRegex = new RegExp(`^(${[...coveoCommerceExtensionKeys, ...reviewKeysMappingValues, ...quoteKeysMappingValues].join('|')})$`);\nconst isProductKey = (key) => productKeyRegex.test(key);\nconst isImpressionKey = (key) => impressionKeyRegex.test(key);\nconst isProductActionsKey = (key) => productActionsKeyRegex.test(key);\nconst isTransactionActionsKeyRegex = (key) => transactionActionsKeyRegex.test(key);\nconst isCoveoCommerceExtensionKey = (key) => coveoCommerceExtensionKeysRegex.test(key);\nconst isCommerceKey = [\n    isImpressionKey,\n    isProductKey,\n    isProductActionsKey,\n    isTransactionActionsKeyRegex,\n    isCoveoCommerceExtensionKey,\n];\nconst isCustomCommerceKey = [customProductKeyRegex, customImpressionKeyRegex];\n\nconst globalParamKeysMapping = {\n    anonymizeIp: 'aip',\n};\nconst eventKeysMapping = {\n    eventCategory: 'ec',\n    eventAction: 'ea',\n    eventLabel: 'el',\n    eventValue: 'ev',\n    page: 'dp',\n    visitorId: 'cid',\n    clientId: 'cid',\n    userId: 'uid',\n    currencyCode: 'cu',\n};\nconst contextInformationMapping = {\n    hitType: 't',\n    pageViewId: 'pid',\n    encoding: 'de',\n    location: 'dl',\n    referrer: 'dr',\n    screenColor: 'sd',\n    screenResolution: 'sr',\n    title: 'dt',\n    userAgent: 'ua',\n    language: 'ul',\n    eventId: 'z',\n    time: 'tm',\n};\nconst coveoExtensionsKeys = [\n    'contentId',\n    'contentIdKey',\n    'contentType',\n    'searchHub',\n    'tab',\n    'searchUid',\n    'permanentId',\n    'contentLocale',\n    'trackingId',\n];\nconst baseMeasurementProtocolKeysMapping = Object.assign(Object.assign(Object.assign(Object.assign({}, globalParamKeysMapping), eventKeysMapping), contextInformationMapping), coveoExtensionsKeys.reduce((all, key) => (Object.assign(Object.assign({}, all), { [key]: key })), {}));\n\nconst measurementProtocolKeysMapping = Object.assign(Object.assign({}, baseMeasurementProtocolKeysMapping), serviceActionsKeysMapping);\nconst convertKeysToMeasurementProtocol = (params) => {\n    const keysMappingForAction = (!!params.action && commerceActionKeysMappingPerAction[params.action]) || {};\n    return keysOf(params).reduce((mappedKeys, key) => {\n        const newKey = keysMappingForAction[key] || measurementProtocolKeysMapping[key] || key;\n        return Object.assign(Object.assign({}, mappedKeys), { [newKey]: params[key] });\n    }, {});\n};\nconst measurementProtocolKeysMappingValues = keysOf(measurementProtocolKeysMapping).map((key) => measurementProtocolKeysMapping[key]);\nconst isKnownMeasurementProtocolKey = (key) => measurementProtocolKeysMappingValues.indexOf(key) !== -1;\nconst isCustomKey = (key) => key === 'custom';\nconst isMeasurementProtocolKey = (key) => {\n    return [...isCommerceKey, ...isServiceKey, isKnownMeasurementProtocolKey, isCustomKey].some((test) => test(key));\n};\nconst convertCustomMeasurementProtocolKeys = (data) => {\n    return keysOf(data).reduce((all, current) => {\n        const match = getFirstCustomMeasurementProtocolKeyMatch(current);\n        if (match) {\n            return Object.assign(Object.assign({}, all), convertCustomObject(match, data[current]));\n        }\n        else {\n            return Object.assign(Object.assign({}, all), { [current]: data[current] });\n        }\n    }, {});\n};\nconst getFirstCustomMeasurementProtocolKeyMatch = (key) => {\n    let matchedKey = undefined;\n    [...isCustomCommerceKey].every((regex) => {\n        var _a;\n        matchedKey = (_a = regex.exec(key)) === null || _a === void 0 ? void 0 : _a[1];\n        return !Boolean(matchedKey);\n    });\n    return matchedKey;\n};\nconst convertCustomObject = (prefix, customData) => {\n    return keysOf(customData).reduce((allCustom, currentCustomKey) => (Object.assign(Object.assign({}, allCustom), { [`${prefix}${currentCustomKey}`]: customData[currentCustomKey] })), {});\n};\n\nclass AnalyticsBeaconClient {\n    constructor(opts) {\n        this.opts = opts;\n    }\n    sendEvent(eventType, originalPayload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable()) {\n                throw new Error(`navigator.sendBeacon is not supported in this browser. Consider adding a polyfill like \"sendbeacon-polyfill\".`);\n            }\n            const { baseUrl, preprocessRequest } = this.opts;\n            const paramsFragments = yield this.getQueryParamsForEventType(eventType);\n            const { url, payload } = yield this.preProcessRequestAsPotentialJSONString(`${baseUrl}/analytics/${eventType}?${paramsFragments}`, originalPayload, preprocessRequest);\n            const parsedRequestData = this.encodeForEventType(eventType, payload);\n            const body = new Blob([parsedRequestData], {\n                type: 'application/x-www-form-urlencoded',\n            });\n            navigator.sendBeacon(url, body);\n            return;\n        });\n    }\n    isAvailable() {\n        return 'sendBeacon' in navigator;\n    }\n    deleteHttpCookieVisitorId() {\n        return Promise.resolve();\n    }\n    preProcessRequestAsPotentialJSONString(originalURL, originalPayload, preprocessRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let returnedUrl = originalURL;\n            let returnedPayload = originalPayload;\n            if (preprocessRequest) {\n                const processedRequest = yield preprocessRequest({ url: originalURL, body: JSON.stringify(originalPayload) }, 'analyticsBeacon');\n                const { url: processedURL, body: processedBody } = processedRequest;\n                returnedUrl = processedURL || originalURL;\n                try {\n                    returnedPayload = JSON.parse(processedBody);\n                }\n                catch (e) {\n                    console.error('Unable to process the request body as a JSON string', e);\n                }\n            }\n            return {\n                payload: returnedPayload,\n                url: returnedUrl,\n            };\n        });\n    }\n    encodeForEventType(eventType, payload) {\n        return this.isEventTypeLegacy(eventType)\n            ? this.encodeForLegacyType(eventType, payload)\n            : this.encodeForFormUrlEncoded(Object.assign({ access_token: this.opts.token }, payload));\n    }\n    getQueryParamsForEventType(eventType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { token, visitorIdProvider } = this.opts;\n            const visitorId = yield visitorIdProvider.getCurrentVisitorId();\n            return [\n                token && this.isEventTypeLegacy(eventType) ? `access_token=${token}` : '',\n                visitorId ? `visitorId=${visitorId}` : '',\n                'discardVisitInfo=true',\n            ]\n                .filter((p) => !!p)\n                .join('&');\n        });\n    }\n    isEventTypeLegacy(eventType) {\n        return [EventType.click, EventType.custom, EventType.search, EventType.view].indexOf(eventType) !== -1;\n    }\n    encodeForLegacyType(eventType, payload) {\n        return `${eventType}Event=${encodeURIComponent(JSON.stringify(payload))}`;\n    }\n    encodeForFormUrlEncoded(payload) {\n        return Object.keys(payload)\n            .filter((key) => !!payload[key])\n            .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(this.encodeValue(payload[key]))}`)\n            .join('&');\n    }\n    encodeValue(value) {\n        return typeof value === 'number' || typeof value === 'string' || typeof value === 'boolean'\n            ? value\n            : JSON.stringify(value);\n    }\n}\n\nclass NoopAnalyticsClient {\n    sendEvent(_, __) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    deleteHttpCookieVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n}\n\nconst fetch$1 = window.fetch;\n\nclass AnalyticsFetchClient {\n    constructor(opts) {\n        this.opts = opts;\n    }\n    sendEvent(eventType, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { baseUrl, visitorIdProvider, preprocessRequest } = this.opts;\n            const visitorIdParam = this.shouldAppendVisitorId(eventType) ? yield this.getVisitorIdParam() : '';\n            const defaultOptions = {\n                url: `${baseUrl}/analytics/${eventType}${visitorIdParam}`,\n                credentials: 'include',\n                mode: 'cors',\n                headers: this.getHeaders(),\n                method: 'POST',\n                body: JSON.stringify(payload),\n            };\n            const _a = Object.assign(Object.assign({}, defaultOptions), (preprocessRequest ? yield preprocessRequest(defaultOptions, 'analyticsFetch') : {})), { url } = _a, fetchData = __rest(_a, [\"url\"]);\n            const response = yield fetch$1(url, fetchData);\n            if (response.ok) {\n                const visit = (yield response.json());\n                if (visit.visitorId) {\n                    visitorIdProvider.setCurrentVisitorId(visit.visitorId);\n                }\n                return visit;\n            }\n            else {\n                try {\n                    response.json();\n                }\n                catch (_b) {\n                }\n                console.error(`An error has occured when sending the \"${eventType}\" event.`, response, payload);\n                throw new Error(`An error has occurred when sending the \"${eventType}\" event. Check the console logs for more details.`);\n            }\n        });\n    }\n    deleteHttpCookieVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { baseUrl } = this.opts;\n            const url = `${baseUrl}/analytics/visit`;\n            yield fetch$1(url, { headers: this.getHeaders(), method: 'DELETE' });\n        });\n    }\n    shouldAppendVisitorId(eventType) {\n        return [EventType.click, EventType.custom, EventType.search, EventType.view].indexOf(eventType) !== -1;\n    }\n    getVisitorIdParam() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { visitorIdProvider } = this.opts;\n            const visitorId = yield visitorIdProvider.getCurrentVisitorId();\n            return visitorId ? `?visitor=${visitorId}` : '';\n        });\n    }\n    getHeaders() {\n        const { token } = this.opts;\n        return Object.assign(Object.assign({}, (token ? { Authorization: `Bearer ${token}` } : {})), { 'Content-Type': `application/json` });\n    }\n}\n\nclass BrowserRuntime {\n    constructor(clientOptions, getUnprocessedRequests) {\n        if (hasLocalStorage() && hasCookieStorage()) {\n            this.storage = new CookieAndLocalStorage();\n        }\n        else if (hasLocalStorage()) {\n            this.storage = localStorage;\n        }\n        else {\n            console.warn('BrowserRuntime detected no valid storage available.', this);\n            this.storage = new NullStorage();\n        }\n        this.client = new AnalyticsFetchClient(clientOptions);\n        this.beaconClient = new AnalyticsBeaconClient(clientOptions);\n        window.addEventListener('beforeunload', () => {\n            const requests = getUnprocessedRequests();\n            for (let { eventType, payload } of requests) {\n                this.beaconClient.sendEvent(eventType, payload);\n            }\n        });\n    }\n    getClientDependingOnEventType(eventType) {\n        return eventType === 'click' && this.beaconClient.isAvailable() ? this.beaconClient : this.client;\n    }\n}\nclass NodeJSRuntime {\n    constructor(clientOptions, storage) {\n        this.storage = storage || new NullStorage();\n        this.client = new AnalyticsFetchClient(clientOptions);\n    }\n    getClientDependingOnEventType(eventType) {\n        return this.client;\n    }\n}\nclass NoopRuntime {\n    constructor() {\n        this.storage = new NullStorage();\n        this.client = new NoopAnalyticsClient();\n    }\n    getClientDependingOnEventType(eventType) {\n        return this.client;\n    }\n}\n\nconst API_KEY_PREFIX = 'xx';\nconst isApiKey = (token) => (token === null || token === void 0 ? void 0 : token.startsWith(API_KEY_PREFIX)) || false;\n\nconst ReactNativeRuntimeWarning = `\n        We've detected you're using React Native but have not provided the corresponding runtime, \n        for an optimal experience please use the \"coveo.analytics/react-native\" subpackage.\n        Follow the Readme on how to set it up: https://github.com/coveo/coveo.analytics.js#using-react-native\n    `;\nfunction isReactNative() {\n    return typeof navigator != 'undefined' && navigator.product == 'ReactNative';\n}\n\nconst doNotTrackValues = ['1', 1, 'yes', true];\nfunction doNotTrack() {\n    return (hasNavigator() &&\n        [\n            navigator.globalPrivacyControl,\n            navigator.doNotTrack,\n            navigator.msDoNotTrack,\n            window.doNotTrack,\n        ].some((value) => doNotTrackValues.indexOf(value) !== -1));\n}\n\nconst Version = 'v15';\nconst Endpoints = {\n    default: 'https://analytics.cloud.coveo.com/rest/ua',\n    production: 'https://analytics.cloud.coveo.com/rest/ua',\n    hipaa: 'https://analyticshipaa.cloud.coveo.com/rest/ua',\n};\nfunction buildBaseUrl(endpoint = Endpoints.default, apiVersion = Version, isCustomEndpoint = false) {\n    endpoint = endpoint.replace(/\\/$/, '');\n    if (isCustomEndpoint) {\n        return `${endpoint}/${apiVersion}`;\n    }\n    const hasUARestEndpoint = endpoint.endsWith('/rest') || endpoint.endsWith('/rest/ua');\n    return `${endpoint}${hasUARestEndpoint ? '' : '/rest'}/${apiVersion}`;\n}\nconst COVEO_NAMESPACE = '38824e1f-37f5-42d3-8372-a4b8fa9df946';\nclass CoveoAnalyticsClient {\n    get defaultOptions() {\n        return {\n            endpoint: Endpoints.default,\n            isCustomEndpoint: false,\n            token: '',\n            version: Version,\n            beforeSendHooks: [],\n            afterSendHooks: [],\n        };\n    }\n    get version() {\n        return libVersion;\n    }\n    constructor(opts) {\n        this.acceptedLinkReferrers = [];\n        if (!opts) {\n            throw new Error('You have to pass options to this constructor');\n        }\n        this.options = Object.assign(Object.assign({}, this.defaultOptions), opts);\n        this.visitorId = '';\n        this.bufferedRequests = [];\n        this.beforeSendHooks = [enhanceViewEvent, addDefaultValues].concat(this.options.beforeSendHooks);\n        this.afterSendHooks = this.options.afterSendHooks;\n        this.eventTypeMapping = {};\n        const clientsOptions = {\n            baseUrl: this.baseUrl,\n            token: this.options.token,\n            visitorIdProvider: this,\n            preprocessRequest: this.options.preprocessRequest,\n        };\n        this.runtime = this.options.runtimeEnvironment || this.initRuntime(clientsOptions);\n        if (doNotTrack()) {\n            this.clear();\n            this.runtime.storage = new NullStorage();\n        }\n        this.addEventTypeMapping(EventType.view, { newEventType: EventType.view, addClientIdParameter: true });\n        this.addEventTypeMapping(EventType.click, { newEventType: EventType.click, addClientIdParameter: true });\n        this.addEventTypeMapping(EventType.custom, { newEventType: EventType.custom, addClientIdParameter: true });\n        this.addEventTypeMapping(EventType.search, { newEventType: EventType.search, addClientIdParameter: true });\n    }\n    initRuntime(clientsOptions) {\n        if (hasWindow() && hasDocument()) {\n            return new BrowserRuntime(clientsOptions, () => {\n                const copy = [...this.bufferedRequests];\n                this.bufferedRequests = [];\n                return copy;\n            });\n        }\n        else if (isReactNative()) {\n            console.warn(ReactNativeRuntimeWarning);\n        }\n        return new NodeJSRuntime(clientsOptions);\n    }\n    get storage() {\n        return this.runtime.storage;\n    }\n    determineVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return (this.extractClientIdFromLink(window.location.href) ||\n                    (yield this.storage.getItem('visitorId')) ||\n                    v4());\n            }\n            catch (err) {\n                console.log('Could not get visitor ID from the current runtime environment storage. Using a random ID instead.', err);\n                return v4();\n            }\n        });\n    }\n    getCurrentVisitorId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.visitorId) {\n                const id = yield this.determineVisitorId();\n                yield this.setCurrentVisitorId(id);\n            }\n            return this.visitorId;\n        });\n    }\n    setCurrentVisitorId(visitorId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.visitorId = visitorId;\n            yield this.storage.setItem('visitorId', visitorId);\n        });\n    }\n    setClientId(value, namespace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (validate(value)) {\n                this.setCurrentVisitorId(value.toLowerCase());\n            }\n            else {\n                if (!namespace) {\n                    throw Error('Cannot generate uuid client id without a specific namespace string.');\n                }\n                this.setCurrentVisitorId(uuidv5(value, uuidv5(namespace, COVEO_NAMESPACE)));\n            }\n        });\n    }\n    getParameters(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.resolveParameters(eventType, ...payload);\n        });\n    }\n    getPayload(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const parametersToSend = yield this.resolveParameters(eventType, ...payload);\n            return yield this.resolvePayloadForParameters(eventType, parametersToSend);\n        });\n    }\n    get currentVisitorId() {\n        const visitorId = this.visitorId || this.storage.getItem('visitorId');\n        if (typeof visitorId !== 'string') {\n            this.setCurrentVisitorId(v4());\n        }\n        return this.visitorId;\n    }\n    set currentVisitorId(visitorId) {\n        this.visitorId = visitorId;\n        this.storage.setItem('visitorId', visitorId);\n    }\n    extractClientIdFromLink(urlString) {\n        if (doNotTrack()) {\n            return null;\n        }\n        try {\n            const linkParam = new URL(urlString).searchParams.get(CoveoLinkParam.cvo_cid);\n            if (linkParam == null) {\n                return null;\n            }\n            const linker = CoveoLinkParam.fromString(linkParam);\n            if (!linker || !hasDocument() || !linker.validate(document.referrer, this.acceptedLinkReferrers)) {\n                return null;\n            }\n            return linker.clientId;\n        }\n        catch (error) {\n        }\n        return null;\n    }\n    resolveParameters(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { variableLengthArgumentsNames = [], addVisitorIdParameter = false, usesMeasurementProtocol = false, addClientIdParameter = false, } = this.eventTypeMapping[eventType] || {};\n            const processVariableArgumentNamesStep = (currentPayload) => variableLengthArgumentsNames.length > 0\n                ? this.parseVariableArgumentsPayload(variableLengthArgumentsNames, currentPayload)\n                : currentPayload[0];\n            const addVisitorIdStep = (currentPayload) => __awaiter(this, void 0, void 0, function* () {\n                return (Object.assign(Object.assign({}, currentPayload), { visitorId: addVisitorIdParameter ? yield this.getCurrentVisitorId() : '' }));\n            });\n            const addClientIdStep = (currentPayload) => __awaiter(this, void 0, void 0, function* () {\n                if (addClientIdParameter) {\n                    return Object.assign(Object.assign({}, currentPayload), { clientId: yield this.getCurrentVisitorId() });\n                }\n                return currentPayload;\n            });\n            const setAnonymousUserStep = (currentPayload) => usesMeasurementProtocol ? this.ensureAnonymousUserWhenUsingApiKey(currentPayload) : currentPayload;\n            const processBeforeSendHooksStep = (currentPayload) => this.beforeSendHooks.reduce((promisePayload, current) => __awaiter(this, void 0, void 0, function* () {\n                const payload = yield promisePayload;\n                return yield current(eventType, payload);\n            }), currentPayload);\n            const parametersToSend = yield [\n                processVariableArgumentNamesStep,\n                addVisitorIdStep,\n                addClientIdStep,\n                setAnonymousUserStep,\n                processBeforeSendHooksStep,\n            ].reduce((payloadPromise, step) => __awaiter(this, void 0, void 0, function* () {\n                const payload = yield payloadPromise;\n                return yield step(payload);\n            }), Promise.resolve(payload));\n            return parametersToSend;\n        });\n    }\n    resolvePayloadForParameters(eventType, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { usesMeasurementProtocol = false } = this.eventTypeMapping[eventType] || {};\n            const addTrackingIdStep = (currentPayload) => this.setTrackingIdIfTrackingIdNotPresent(currentPayload);\n            const cleanPayloadStep = (currentPayload) => this.removeEmptyPayloadValues(currentPayload, eventType);\n            const validateParams = (currentPayload) => this.validateParams(currentPayload, eventType);\n            const processMeasurementProtocolConversionStep = (currentPayload) => usesMeasurementProtocol ? convertKeysToMeasurementProtocol(currentPayload) : currentPayload;\n            const removeUnknownParameters = (currentPayload) => usesMeasurementProtocol ? this.removeUnknownParameters(currentPayload) : currentPayload;\n            const processCustomParameters = (currentPayload) => usesMeasurementProtocol\n                ? this.processCustomParameters(currentPayload)\n                : this.mapCustomParametersToCustomData(currentPayload);\n            const payloadToSend = yield [\n                addTrackingIdStep,\n                cleanPayloadStep,\n                validateParams,\n                processMeasurementProtocolConversionStep,\n                removeUnknownParameters,\n                processCustomParameters,\n            ].reduce((payloadPromise, step) => __awaiter(this, void 0, void 0, function* () {\n                const payload = yield payloadPromise;\n                return yield step(payload);\n            }), Promise.resolve(parameters));\n            return payloadToSend;\n        });\n    }\n    makeEvent(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { newEventType: eventTypeToSend = eventType } = this.eventTypeMapping[eventType] || {};\n            const parametersToSend = yield this.resolveParameters(eventType, ...payload);\n            const payloadToSend = yield this.resolvePayloadForParameters(eventType, parametersToSend);\n            return {\n                eventType: eventTypeToSend,\n                payload: payloadToSend,\n                log: (remainingPayload) => __awaiter(this, void 0, void 0, function* () {\n                    this.bufferedRequests.push({\n                        eventType: eventTypeToSend,\n                        payload: Object.assign(Object.assign({}, payloadToSend), remainingPayload),\n                    });\n                    yield Promise.all(this.afterSendHooks.map((hook) => hook(eventType, Object.assign(Object.assign({}, parametersToSend), remainingPayload))));\n                    yield this.deferExecution();\n                    return (yield this.sendFromBuffer());\n                }),\n            };\n        });\n    }\n    sendEvent(eventType, ...payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeEvent(eventType, ...payload)).log({});\n        });\n    }\n    deferExecution() {\n        return new Promise((resolve) => setTimeout(resolve, 0));\n    }\n    sendFromBuffer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const popped = this.bufferedRequests.shift();\n            if (popped) {\n                const { eventType, payload } = popped;\n                return this.runtime.getClientDependingOnEventType(eventType).sendEvent(eventType, payload);\n            }\n        });\n    }\n    clear() {\n        this.storage.removeItem('visitorId');\n        const store = new HistoryStore();\n        store.clear();\n    }\n    deleteHttpOnlyVisitorId() {\n        this.runtime.client.deleteHttpCookieVisitorId();\n    }\n    makeSearchEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.search, request);\n        });\n    }\n    sendSearchEvent(_a) {\n        var { searchQueryUid } = _a, preparedRequest = __rest(_a, [\"searchQueryUid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchEvent(preparedRequest)).log({ searchQueryUid });\n        });\n    }\n    makeClickEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.click, request);\n        });\n    }\n    sendClickEvent(_a) {\n        var { searchQueryUid } = _a, preparedRequest = __rest(_a, [\"searchQueryUid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClickEvent(preparedRequest)).log({ searchQueryUid });\n        });\n    }\n    makeCustomEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.custom, request);\n        });\n    }\n    sendCustomEvent(_a) {\n        var { lastSearchQueryUid } = _a, preparedRequest = __rest(_a, [\"lastSearchQueryUid\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCustomEvent(preparedRequest)).log({ lastSearchQueryUid });\n        });\n    }\n    makeViewEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeEvent(EventType.view, request);\n        });\n    }\n    sendViewEvent(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeViewEvent(request)).log({});\n        });\n    }\n    getVisit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(`${this.baseUrl}/analytics/visit`);\n            const visit = (yield response.json());\n            this.visitorId = visit.visitorId;\n            return visit;\n        });\n    }\n    getHealth() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(`${this.baseUrl}/analytics/monitoring/health`);\n            return (yield response.json());\n        });\n    }\n    registerBeforeSendEventHook(hook) {\n        this.beforeSendHooks.push(hook);\n    }\n    registerAfterSendEventHook(hook) {\n        this.afterSendHooks.push(hook);\n    }\n    addEventTypeMapping(eventType, eventConfig) {\n        this.eventTypeMapping[eventType] = eventConfig;\n    }\n    setAcceptedLinkReferrers(hosts) {\n        if (Array.isArray(hosts) && hosts.every((host) => typeof host == 'string'))\n            this.acceptedLinkReferrers = hosts;\n        else\n            throw Error('Parameter should be an array of domain strings');\n    }\n    parseVariableArgumentsPayload(fieldsOrder, payload) {\n        const parsedArguments = {};\n        for (let i = 0, length = payload.length; i < length; i++) {\n            const currentArgument = payload[i];\n            if (typeof currentArgument === 'string') {\n                parsedArguments[fieldsOrder[i]] = currentArgument;\n            }\n            else if (typeof currentArgument === 'object') {\n                return Object.assign(Object.assign({}, parsedArguments), currentArgument);\n            }\n        }\n        return parsedArguments;\n    }\n    isKeyAllowedEmpty(evtType, key) {\n        const keysThatCanBeEmpty = {\n            [EventType.search]: ['queryText'],\n        };\n        const match = keysThatCanBeEmpty[evtType] || [];\n        return match.indexOf(key) !== -1;\n    }\n    removeEmptyPayloadValues(payload, eventType) {\n        const isNotEmptyValue = (value) => typeof value !== 'undefined' && value !== null && value !== '';\n        return Object.keys(payload)\n            .filter((key) => this.isKeyAllowedEmpty(eventType, key) || isNotEmptyValue(payload[key]))\n            .reduce((newPayload, key) => (Object.assign(Object.assign({}, newPayload), { [key]: payload[key] })), {});\n    }\n    removeUnknownParameters(payload) {\n        const newPayload = Object.keys(payload)\n            .filter((key) => {\n            if (isMeasurementProtocolKey(key)) {\n                return true;\n            }\n            else {\n                console.log(key, 'is not processed by coveoua');\n            }\n        })\n            .reduce((newPayload, key) => (Object.assign(Object.assign({}, newPayload), { [key]: payload[key] })), {});\n        return newPayload;\n    }\n    processCustomParameters(payload) {\n        const { custom } = payload, rest = __rest(payload, [\"custom\"]);\n        let lowercasedCustom = {};\n        if (custom && isObject(custom)) {\n            lowercasedCustom = this.lowercaseKeys(custom);\n        }\n        const newPayload = convertCustomMeasurementProtocolKeys(rest);\n        return Object.assign(Object.assign({}, lowercasedCustom), newPayload);\n    }\n    mapCustomParametersToCustomData(payload) {\n        const { custom } = payload, rest = __rest(payload, [\"custom\"]);\n        if (custom && isObject(custom)) {\n            const lowercasedCustom = this.lowercaseKeys(custom);\n            return Object.assign(Object.assign({}, rest), { customData: Object.assign(Object.assign({}, lowercasedCustom), payload.customData) });\n        }\n        else {\n            return payload;\n        }\n    }\n    lowercaseKeys(custom) {\n        const keys = Object.keys(custom);\n        let result = {};\n        keys.forEach((key) => {\n            result[key.toLowerCase()] = custom[key];\n        });\n        return result;\n    }\n    validateParams(payload, eventType) {\n        const { anonymizeIp } = payload, rest = __rest(payload, [\"anonymizeIp\"]);\n        if (anonymizeIp !== undefined) {\n            if (['0', 'false', 'undefined', 'null', '{}', '[]', ''].indexOf(`${anonymizeIp}`.toLowerCase()) == -1) {\n                rest.anonymizeIp = 1;\n            }\n        }\n        if (eventType == EventType.view ||\n            eventType == EventType.click ||\n            eventType == EventType.search ||\n            eventType == EventType.custom) {\n            rest.originLevel3 = this.limit(rest.originLevel3, 128);\n        }\n        if (eventType == EventType.view) {\n            rest.location = this.limit(rest.location, 128);\n        }\n        if (eventType == 'pageview' || eventType == 'event') {\n            rest.referrer = this.limit(rest.referrer, 2048);\n            rest.location = this.limit(rest.location, 2048);\n            rest.page = this.limit(rest.page, 2048);\n        }\n        return rest;\n    }\n    ensureAnonymousUserWhenUsingApiKey(payload) {\n        const { userId } = payload, rest = __rest(payload, [\"userId\"]);\n        if (isApiKey(this.options.token) && !userId) {\n            rest['userId'] = 'anonymous';\n            return rest;\n        }\n        else {\n            return payload;\n        }\n    }\n    setTrackingIdIfTrackingIdNotPresent(payload) {\n        const { trackingId } = payload, rest = __rest(payload, [\"trackingId\"]);\n        if (trackingId) {\n            return payload;\n        }\n        if (rest.hasOwnProperty('custom') && isObject(rest.custom)) {\n            if (rest.custom.hasOwnProperty('context_website') || rest.custom.hasOwnProperty('siteName')) {\n                rest['trackingId'] = rest.custom.context_website || rest.custom.siteName;\n            }\n        }\n        if (rest.hasOwnProperty('customData') && isObject(rest.customData)) {\n            if (rest.customData.hasOwnProperty('context_website') || rest.customData.hasOwnProperty('siteName')) {\n                rest['trackingId'] = rest.customData.context_website || rest.customData.siteName;\n            }\n        }\n        return rest;\n    }\n    limit(input, length) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n        return input.substring(0, length);\n    }\n    get baseUrl() {\n        return buildBaseUrl(this.options.endpoint, this.options.version, this.options.isCustomEndpoint);\n    }\n}\n\nvar InsightEvents;\n(function (InsightEvents) {\n    InsightEvents[\"contextChanged\"] = \"contextChanged\";\n    InsightEvents[\"expandToFullUI\"] = \"expandToFullUI\";\n    InsightEvents[\"openUserActions\"] = \"openUserActions\";\n    InsightEvents[\"showPrecedingSessions\"] = \"showPrecedingSessions\";\n    InsightEvents[\"showFollowingSessions\"] = \"showFollowingSessions\";\n    InsightEvents[\"clickViewedDocument\"] = \"clickViewedDocument\";\n    InsightEvents[\"clickPageView\"] = \"clickPageView\";\n    InsightEvents[\"createArticle\"] = \"createArticle\";\n})(InsightEvents || (InsightEvents = {}));\n\nvar SearchPageEvents;\n(function (SearchPageEvents) {\n    SearchPageEvents[\"interfaceLoad\"] = \"interfaceLoad\";\n    SearchPageEvents[\"interfaceChange\"] = \"interfaceChange\";\n    SearchPageEvents[\"didyoumeanAutomatic\"] = \"didyoumeanAutomatic\";\n    SearchPageEvents[\"didyoumeanClick\"] = \"didyoumeanClick\";\n    SearchPageEvents[\"resultsSort\"] = \"resultsSort\";\n    SearchPageEvents[\"searchboxSubmit\"] = \"searchboxSubmit\";\n    SearchPageEvents[\"searchboxClear\"] = \"searchboxClear\";\n    SearchPageEvents[\"searchboxAsYouType\"] = \"searchboxAsYouType\";\n    SearchPageEvents[\"breadcrumbFacet\"] = \"breadcrumbFacet\";\n    SearchPageEvents[\"breadcrumbResetAll\"] = \"breadcrumbResetAll\";\n    SearchPageEvents[\"documentQuickview\"] = \"documentQuickview\";\n    SearchPageEvents[\"documentOpen\"] = \"documentOpen\";\n    SearchPageEvents[\"omniboxAnalytics\"] = \"omniboxAnalytics\";\n    SearchPageEvents[\"omniboxFromLink\"] = \"omniboxFromLink\";\n    SearchPageEvents[\"searchFromLink\"] = \"searchFromLink\";\n    SearchPageEvents[\"triggerNotify\"] = \"notify\";\n    SearchPageEvents[\"triggerExecute\"] = \"execute\";\n    SearchPageEvents[\"triggerQuery\"] = \"query\";\n    SearchPageEvents[\"undoTriggerQuery\"] = \"undoQuery\";\n    SearchPageEvents[\"triggerRedirect\"] = \"redirect\";\n    SearchPageEvents[\"pagerResize\"] = \"pagerResize\";\n    SearchPageEvents[\"pagerNumber\"] = \"pagerNumber\";\n    SearchPageEvents[\"pagerNext\"] = \"pagerNext\";\n    SearchPageEvents[\"pagerPrevious\"] = \"pagerPrevious\";\n    SearchPageEvents[\"pagerScrolling\"] = \"pagerScrolling\";\n    SearchPageEvents[\"staticFilterClearAll\"] = \"staticFilterClearAll\";\n    SearchPageEvents[\"staticFilterSelect\"] = \"staticFilterSelect\";\n    SearchPageEvents[\"staticFilterDeselect\"] = \"staticFilterDeselect\";\n    SearchPageEvents[\"facetClearAll\"] = \"facetClearAll\";\n    SearchPageEvents[\"facetSearch\"] = \"facetSearch\";\n    SearchPageEvents[\"facetSelect\"] = \"facetSelect\";\n    SearchPageEvents[\"facetSelectAll\"] = \"facetSelectAll\";\n    SearchPageEvents[\"facetDeselect\"] = \"facetDeselect\";\n    SearchPageEvents[\"facetExclude\"] = \"facetExclude\";\n    SearchPageEvents[\"facetUnexclude\"] = \"facetUnexclude\";\n    SearchPageEvents[\"facetUpdateSort\"] = \"facetUpdateSort\";\n    SearchPageEvents[\"facetShowMore\"] = \"showMoreFacetResults\";\n    SearchPageEvents[\"facetShowLess\"] = \"showLessFacetResults\";\n    SearchPageEvents[\"queryError\"] = \"query\";\n    SearchPageEvents[\"queryErrorBack\"] = \"errorBack\";\n    SearchPageEvents[\"queryErrorClear\"] = \"errorClearQuery\";\n    SearchPageEvents[\"queryErrorRetry\"] = \"errorRetry\";\n    SearchPageEvents[\"recommendation\"] = \"recommendation\";\n    SearchPageEvents[\"recommendationInterfaceLoad\"] = \"recommendationInterfaceLoad\";\n    SearchPageEvents[\"recommendationOpen\"] = \"recommendationOpen\";\n    SearchPageEvents[\"likeSmartSnippet\"] = \"likeSmartSnippet\";\n    SearchPageEvents[\"dislikeSmartSnippet\"] = \"dislikeSmartSnippet\";\n    SearchPageEvents[\"expandSmartSnippet\"] = \"expandSmartSnippet\";\n    SearchPageEvents[\"collapseSmartSnippet\"] = \"collapseSmartSnippet\";\n    SearchPageEvents[\"openSmartSnippetFeedbackModal\"] = \"openSmartSnippetFeedbackModal\";\n    SearchPageEvents[\"closeSmartSnippetFeedbackModal\"] = \"closeSmartSnippetFeedbackModal\";\n    SearchPageEvents[\"sendSmartSnippetReason\"] = \"sendSmartSnippetReason\";\n    SearchPageEvents[\"expandSmartSnippetSuggestion\"] = \"expandSmartSnippetSuggestion\";\n    SearchPageEvents[\"collapseSmartSnippetSuggestion\"] = \"collapseSmartSnippetSuggestion\";\n    SearchPageEvents[\"showMoreSmartSnippetSuggestion\"] = \"showMoreSmartSnippetSuggestion\";\n    SearchPageEvents[\"showLessSmartSnippetSuggestion\"] = \"showLessSmartSnippetSuggestion\";\n    SearchPageEvents[\"openSmartSnippetSource\"] = \"openSmartSnippetSource\";\n    SearchPageEvents[\"openSmartSnippetSuggestionSource\"] = \"openSmartSnippetSuggestionSource\";\n    SearchPageEvents[\"openSmartSnippetInlineLink\"] = \"openSmartSnippetInlineLink\";\n    SearchPageEvents[\"openSmartSnippetSuggestionInlineLink\"] = \"openSmartSnippetSuggestionInlineLink\";\n    SearchPageEvents[\"recentQueryClick\"] = \"recentQueriesClick\";\n    SearchPageEvents[\"clearRecentQueries\"] = \"clearRecentQueries\";\n    SearchPageEvents[\"recentResultClick\"] = \"recentResultClick\";\n    SearchPageEvents[\"clearRecentResults\"] = \"clearRecentResults\";\n    SearchPageEvents[\"noResultsBack\"] = \"noResultsBack\";\n    SearchPageEvents[\"showMoreFoldedResults\"] = \"showMoreFoldedResults\";\n    SearchPageEvents[\"showLessFoldedResults\"] = \"showLessFoldedResults\";\n    SearchPageEvents[\"copyToClipboard\"] = \"copyToClipboard\";\n    SearchPageEvents[\"caseSendEmail\"] = \"Case.SendEmail\";\n    SearchPageEvents[\"feedItemTextPost\"] = \"FeedItem.TextPost\";\n    SearchPageEvents[\"caseAttach\"] = \"caseAttach\";\n    SearchPageEvents[\"caseDetach\"] = \"caseDetach\";\n    SearchPageEvents[\"retryGeneratedAnswer\"] = \"retryGeneratedAnswer\";\n    SearchPageEvents[\"likeGeneratedAnswer\"] = \"likeGeneratedAnswer\";\n    SearchPageEvents[\"dislikeGeneratedAnswer\"] = \"dislikeGeneratedAnswer\";\n    SearchPageEvents[\"openGeneratedAnswerSource\"] = \"openGeneratedAnswerSource\";\n    SearchPageEvents[\"generatedAnswerStreamEnd\"] = \"generatedAnswerStreamEnd\";\n    SearchPageEvents[\"generatedAnswerSourceHover\"] = \"generatedAnswerSourceHover\";\n    SearchPageEvents[\"generatedAnswerCopyToClipboard\"] = \"generatedAnswerCopyToClipboard\";\n    SearchPageEvents[\"generatedAnswerHideAnswers\"] = \"generatedAnswerHideAnswers\";\n    SearchPageEvents[\"generatedAnswerShowAnswers\"] = \"generatedAnswerShowAnswers\";\n    SearchPageEvents[\"generatedAnswerFeedbackSubmit\"] = \"generatedAnswerFeedbackSubmit\";\n    SearchPageEvents[\"rephraseGeneratedAnswer\"] = \"rephraseGeneratedAnswer\";\n})(SearchPageEvents || (SearchPageEvents = {}));\nconst CustomEventsTypes = {\n    [SearchPageEvents.triggerNotify]: 'queryPipelineTriggers',\n    [SearchPageEvents.triggerExecute]: 'queryPipelineTriggers',\n    [SearchPageEvents.triggerQuery]: 'queryPipelineTriggers',\n    [SearchPageEvents.triggerRedirect]: 'queryPipelineTriggers',\n    [SearchPageEvents.queryError]: 'errors',\n    [SearchPageEvents.queryErrorBack]: 'errors',\n    [SearchPageEvents.queryErrorClear]: 'errors',\n    [SearchPageEvents.queryErrorRetry]: 'errors',\n    [SearchPageEvents.pagerNext]: 'getMoreResults',\n    [SearchPageEvents.pagerPrevious]: 'getMoreResults',\n    [SearchPageEvents.pagerNumber]: 'getMoreResults',\n    [SearchPageEvents.pagerResize]: 'getMoreResults',\n    [SearchPageEvents.pagerScrolling]: 'getMoreResults',\n    [SearchPageEvents.facetSearch]: 'facet',\n    [SearchPageEvents.facetShowLess]: 'facet',\n    [SearchPageEvents.facetShowMore]: 'facet',\n    [SearchPageEvents.recommendation]: 'recommendation',\n    [SearchPageEvents.likeSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.dislikeSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.expandSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.collapseSmartSnippet]: 'smartSnippet',\n    [SearchPageEvents.openSmartSnippetFeedbackModal]: 'smartSnippet',\n    [SearchPageEvents.closeSmartSnippetFeedbackModal]: 'smartSnippet',\n    [SearchPageEvents.sendSmartSnippetReason]: 'smartSnippet',\n    [SearchPageEvents.expandSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.collapseSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.showMoreSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.showLessSmartSnippetSuggestion]: 'smartSnippetSuggestions',\n    [SearchPageEvents.clearRecentQueries]: 'recentQueries',\n    [SearchPageEvents.recentResultClick]: 'recentlyClickedDocuments',\n    [SearchPageEvents.clearRecentResults]: 'recentlyClickedDocuments',\n    [SearchPageEvents.showLessFoldedResults]: 'folding',\n    [SearchPageEvents.caseDetach]: 'case',\n    [SearchPageEvents.likeGeneratedAnswer]: 'generatedAnswer',\n    [SearchPageEvents.dislikeGeneratedAnswer]: 'generatedAnswer',\n    [SearchPageEvents.openGeneratedAnswerSource]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerStreamEnd]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerSourceHover]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerCopyToClipboard]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerHideAnswers]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerShowAnswers]: 'generatedAnswer',\n    [SearchPageEvents.generatedAnswerFeedbackSubmit]: 'generatedAnswer',\n    [InsightEvents.expandToFullUI]: 'interface',\n    [InsightEvents.openUserActions]: 'User Actions',\n    [InsightEvents.showPrecedingSessions]: 'User Actions',\n    [InsightEvents.showFollowingSessions]: 'User Actions',\n    [InsightEvents.clickViewedDocument]: 'User Actions',\n    [InsightEvents.clickPageView]: 'User Actions',\n    [InsightEvents.createArticle]: 'createArticle',\n};\n\nclass NoopAnalytics {\n    constructor() {\n        this.runtime = new NoopRuntime();\n        this.currentVisitorId = '';\n    }\n    getPayload() {\n        return Promise.resolve();\n    }\n    getParameters() {\n        return Promise.resolve();\n    }\n    makeEvent(eventType) {\n        return Promise.resolve({ eventType: eventType, payload: null, log: () => Promise.resolve() });\n    }\n    sendEvent() {\n        return Promise.resolve();\n    }\n    makeSearchEvent() {\n        return this.makeEvent(EventType.search);\n    }\n    sendSearchEvent() {\n        return Promise.resolve();\n    }\n    makeClickEvent() {\n        return this.makeEvent(EventType.click);\n    }\n    sendClickEvent() {\n        return Promise.resolve();\n    }\n    makeCustomEvent() {\n        return this.makeEvent(EventType.custom);\n    }\n    sendCustomEvent() {\n        return Promise.resolve();\n    }\n    makeViewEvent() {\n        return this.makeEvent(EventType.view);\n    }\n    sendViewEvent() {\n        return Promise.resolve();\n    }\n    getVisit() {\n        return Promise.resolve({ id: '', visitorId: '' });\n    }\n    getHealth() {\n        return Promise.resolve({ status: '' });\n    }\n    registerBeforeSendEventHook() { }\n    registerAfterSendEventHook() { }\n    addEventTypeMapping() { }\n    get version() {\n        return libVersion;\n    }\n}\n\nfunction filterConsecutiveRepeatedValues(rawData) {\n    let prev = '';\n    return rawData.filter((value) => {\n        const isDifferent = value !== prev;\n        prev = value;\n        return isDifferent;\n    });\n}\nfunction removeSemicolons(rawData) {\n    return rawData.map((value) => {\n        return value.replace(/;/g, '');\n    });\n}\nfunction getDataString(data) {\n    const ANALYTICS_LENGTH_LIMIT = 256;\n    const formattedData = data.join(';');\n    if (formattedData.length <= ANALYTICS_LENGTH_LIMIT) {\n        return formattedData;\n    }\n    return getDataString(data.slice(1));\n}\nconst formatArrayForCoveoCustomData = (rawData) => {\n    const dataWithoutSemicolons = removeSemicolons(rawData);\n    const dataWithoutRepeatedValues = filterConsecutiveRepeatedValues(dataWithoutSemicolons);\n    return getDataString(dataWithoutRepeatedValues);\n};\n\nfunction formatOmniboxMetadata(meta) {\n    const partialQueries = typeof meta.partialQueries === 'string'\n        ? meta.partialQueries\n        : formatArrayForCoveoCustomData(meta.partialQueries);\n    const suggestions = typeof meta.suggestions === 'string' ? meta.suggestions : formatArrayForCoveoCustomData(meta.suggestions);\n    return Object.assign(Object.assign({}, meta), { partialQueries,\n        suggestions });\n}\n\nclass CoveoSearchPageClient {\n    constructor(opts, provider) {\n        this.opts = opts;\n        this.provider = provider;\n        const shouldDisableAnalytics = opts.enableAnalytics === false || doNotTrack();\n        this.coveoAnalyticsClient = shouldDisableAnalytics ? new NoopAnalytics() : new CoveoAnalyticsClient(opts);\n    }\n    disable() {\n        if (this.coveoAnalyticsClient instanceof CoveoAnalyticsClient) {\n            this.coveoAnalyticsClient.clear();\n        }\n        this.coveoAnalyticsClient = new NoopAnalytics();\n    }\n    enable() {\n        this.coveoAnalyticsClient = new CoveoAnalyticsClient(this.opts);\n    }\n    makeInterfaceLoad() {\n        return this.makeSearchEvent(SearchPageEvents.interfaceLoad);\n    }\n    logInterfaceLoad() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeInterfaceLoad()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecommendationInterfaceLoad() {\n        return this.makeSearchEvent(SearchPageEvents.recommendationInterfaceLoad);\n    }\n    logRecommendationInterfaceLoad() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecommendationInterfaceLoad()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecommendation() {\n        return this.makeCustomEvent(SearchPageEvents.recommendation);\n    }\n    logRecommendation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecommendation()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecommendationOpen(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.recommendationOpen, info, identifier);\n    }\n    logRecommendationOpen(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecommendationOpen(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeStaticFilterClearAll(meta) {\n        return this.makeSearchEvent(SearchPageEvents.staticFilterClearAll, meta);\n    }\n    logStaticFilterClearAll(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeStaticFilterClearAll(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeStaticFilterSelect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.staticFilterSelect, meta);\n    }\n    logStaticFilterSelect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeStaticFilterSelect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeStaticFilterDeselect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.staticFilterDeselect, meta);\n    }\n    logStaticFilterDeselect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeStaticFilterDeselect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFetchMoreResults() {\n        return this.makeCustomEvent(SearchPageEvents.pagerScrolling, { type: 'getMoreResults' });\n    }\n    logFetchMoreResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFetchMoreResults()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeInterfaceChange(metadata) {\n        return this.makeSearchEvent(SearchPageEvents.interfaceChange, metadata);\n    }\n    logInterfaceChange(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeInterfaceChange(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDidYouMeanAutomatic() {\n        return this.makeSearchEvent(SearchPageEvents.didyoumeanAutomatic);\n    }\n    logDidYouMeanAutomatic() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDidYouMeanAutomatic()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDidYouMeanClick() {\n        return this.makeSearchEvent(SearchPageEvents.didyoumeanClick);\n    }\n    logDidYouMeanClick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDidYouMeanClick()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeResultsSort(metadata) {\n        return this.makeSearchEvent(SearchPageEvents.resultsSort, metadata);\n    }\n    logResultsSort(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeResultsSort(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchboxSubmit() {\n        return this.makeSearchEvent(SearchPageEvents.searchboxSubmit);\n    }\n    logSearchboxSubmit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchboxSubmit()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchboxClear() {\n        return this.makeSearchEvent(SearchPageEvents.searchboxClear);\n    }\n    logSearchboxClear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchboxClear()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchboxAsYouType() {\n        return this.makeSearchEvent(SearchPageEvents.searchboxAsYouType);\n    }\n    logSearchboxAsYouType() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchboxAsYouType()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeBreadcrumbFacet(metadata) {\n        return this.makeSearchEvent(SearchPageEvents.breadcrumbFacet, metadata);\n    }\n    logBreadcrumbFacet(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeBreadcrumbFacet(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeBreadcrumbResetAll() {\n        return this.makeSearchEvent(SearchPageEvents.breadcrumbResetAll);\n    }\n    logBreadcrumbResetAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeBreadcrumbResetAll()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDocumentQuickview(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.documentQuickview, info, identifier);\n    }\n    logDocumentQuickview(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDocumentQuickview(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDocumentOpen(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.documentOpen, info, identifier);\n    }\n    logDocumentOpen(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDocumentOpen(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOmniboxAnalytics(meta) {\n        return this.makeSearchEvent(SearchPageEvents.omniboxAnalytics, formatOmniboxMetadata(meta));\n    }\n    logOmniboxAnalytics(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOmniboxAnalytics(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOmniboxFromLink(meta) {\n        return this.makeSearchEvent(SearchPageEvents.omniboxFromLink, formatOmniboxMetadata(meta));\n    }\n    logOmniboxFromLink(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOmniboxFromLink(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchFromLink() {\n        return this.makeSearchEvent(SearchPageEvents.searchFromLink);\n    }\n    logSearchFromLink() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchFromLink()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerNotify(meta) {\n        return this.makeCustomEvent(SearchPageEvents.triggerNotify, meta);\n    }\n    logTriggerNotify(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerNotify(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerExecute(meta) {\n        return this.makeCustomEvent(SearchPageEvents.triggerExecute, meta);\n    }\n    logTriggerExecute(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerExecute(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerQuery() {\n        return this.makeCustomEvent(SearchPageEvents.triggerQuery, { query: this.provider.getSearchEventRequestPayload().queryText }, 'queryPipelineTriggers');\n    }\n    logTriggerQuery() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerQuery()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeUndoTriggerQuery(meta) {\n        return this.makeSearchEvent(SearchPageEvents.undoTriggerQuery, meta);\n    }\n    logUndoTriggerQuery(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeUndoTriggerQuery(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeTriggerRedirect(meta) {\n        return this.makeCustomEvent(SearchPageEvents.triggerRedirect, Object.assign(Object.assign({}, meta), { query: this.provider.getSearchEventRequestPayload().queryText }));\n    }\n    logTriggerRedirect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeTriggerRedirect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerResize(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerResize, meta);\n    }\n    logPagerResize(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerResize(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerNumber(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerNumber, meta);\n    }\n    logPagerNumber(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerNumber(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerNext(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerNext, meta);\n    }\n    logPagerNext(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerNext(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerPrevious(meta) {\n        return this.makeCustomEvent(SearchPageEvents.pagerPrevious, meta);\n    }\n    logPagerPrevious(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerPrevious(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makePagerScrolling() {\n        return this.makeCustomEvent(SearchPageEvents.pagerScrolling);\n    }\n    logPagerScrolling() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makePagerScrolling()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetClearAll(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetClearAll, meta);\n    }\n    logFacetClearAll(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetClearAll(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetSearch(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetSearch, meta);\n    }\n    logFacetSearch(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetSearch(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetSelect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetSelect, meta);\n    }\n    logFacetSelect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetSelect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetDeselect(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetDeselect, meta);\n    }\n    logFacetDeselect(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetDeselect(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetExclude(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetExclude, meta);\n    }\n    logFacetExclude(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetExclude(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetUnexclude(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetUnexclude, meta);\n    }\n    logFacetUnexclude(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetUnexclude(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetSelectAll(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetSelectAll, meta);\n    }\n    logFacetSelectAll(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetSelectAll(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetUpdateSort(meta) {\n        return this.makeSearchEvent(SearchPageEvents.facetUpdateSort, meta);\n    }\n    logFacetUpdateSort(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetUpdateSort(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetShowMore(meta) {\n        return this.makeCustomEvent(SearchPageEvents.facetShowMore, meta);\n    }\n    logFacetShowMore(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetShowMore(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeFacetShowLess(meta) {\n        return this.makeCustomEvent(SearchPageEvents.facetShowLess, meta);\n    }\n    logFacetShowLess(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeFacetShowLess(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryError(meta) {\n        return this.makeCustomEvent(SearchPageEvents.queryError, meta);\n    }\n    logQueryError(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryError(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryErrorBack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customEventBuilder = yield this.makeCustomEvent(SearchPageEvents.queryErrorBack);\n            return {\n                description: customEventBuilder.description,\n                log: () => __awaiter(this, void 0, void 0, function* () {\n                    yield customEventBuilder.log({ searchUID: this.provider.getSearchUID() });\n                    return this.logSearchEvent(SearchPageEvents.queryErrorBack);\n                }),\n            };\n        });\n    }\n    logQueryErrorBack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryErrorBack()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryErrorRetry() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customEventBuilder = yield this.makeCustomEvent(SearchPageEvents.queryErrorRetry);\n            return {\n                description: customEventBuilder.description,\n                log: () => __awaiter(this, void 0, void 0, function* () {\n                    yield customEventBuilder.log({ searchUID: this.provider.getSearchUID() });\n                    return this.logSearchEvent(SearchPageEvents.queryErrorRetry);\n                }),\n            };\n        });\n    }\n    logQueryErrorRetry() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryErrorRetry()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeQueryErrorClear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customEventBuilder = yield this.makeCustomEvent(SearchPageEvents.queryErrorClear);\n            return {\n                description: customEventBuilder.description,\n                log: () => __awaiter(this, void 0, void 0, function* () {\n                    yield customEventBuilder.log({ searchUID: this.provider.getSearchUID() });\n                    return this.logSearchEvent(SearchPageEvents.queryErrorClear);\n                }),\n            };\n        });\n    }\n    logQueryErrorClear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeQueryErrorClear()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeLikeSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.likeSmartSnippet);\n    }\n    logLikeSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeLikeSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDislikeSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.dislikeSmartSnippet);\n    }\n    logDislikeSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDislikeSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeExpandSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.expandSmartSnippet);\n    }\n    logExpandSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeExpandSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCollapseSmartSnippet() {\n        return this.makeCustomEvent(SearchPageEvents.collapseSmartSnippet);\n    }\n    logCollapseSmartSnippet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCollapseSmartSnippet()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenSmartSnippetFeedbackModal() {\n        return this.makeCustomEvent(SearchPageEvents.openSmartSnippetFeedbackModal);\n    }\n    logOpenSmartSnippetFeedbackModal() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetFeedbackModal()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCloseSmartSnippetFeedbackModal() {\n        return this.makeCustomEvent(SearchPageEvents.closeSmartSnippetFeedbackModal);\n    }\n    logCloseSmartSnippetFeedbackModal() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCloseSmartSnippetFeedbackModal()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSmartSnippetFeedbackReason(reason, details) {\n        return this.makeCustomEvent(SearchPageEvents.sendSmartSnippetReason, { reason, details });\n    }\n    logSmartSnippetFeedbackReason(reason, details) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSmartSnippetFeedbackReason(reason, details)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeExpandSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.expandSmartSnippetSuggestion, 'documentId' in snippet ? snippet : { documentId: snippet });\n    }\n    logExpandSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeExpandSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCollapseSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.collapseSmartSnippetSuggestion, 'documentId' in snippet ? snippet : { documentId: snippet });\n    }\n    logCollapseSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCollapseSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowMoreSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.showMoreSmartSnippetSuggestion, snippet);\n    }\n    logShowMoreSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowMoreSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowLessSmartSnippetSuggestion(snippet) {\n        return this.makeCustomEvent(SearchPageEvents.showLessSmartSnippetSuggestion, snippet);\n    }\n    logShowLessSmartSnippetSuggestion(snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowLessSmartSnippetSuggestion(snippet)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenSmartSnippetSource(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetSource, info, identifier);\n    }\n    logOpenSmartSnippetSource(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetSource(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenSmartSnippetSuggestionSource(info, snippet) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetSuggestionSource, info, { contentIDKey: snippet.documentId.contentIdKey, contentIDValue: snippet.documentId.contentIdValue }, snippet);\n    }\n    makeCopyToClipboard(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.copyToClipboard, info, identifier);\n    }\n    logCopyToClipboard(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCopyToClipboard(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    logOpenSmartSnippetSuggestionSource(info, snippet) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetSuggestionSource(info, snippet)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeOpenSmartSnippetInlineLink(info, identifierAndLink) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetInlineLink, info, { contentIDKey: identifierAndLink.contentIDKey, contentIDValue: identifierAndLink.contentIDValue }, identifierAndLink);\n    }\n    logOpenSmartSnippetInlineLink(info, identifierAndLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetInlineLink(info, identifierAndLink)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink) {\n        return this.makeClickEvent(SearchPageEvents.openSmartSnippetSuggestionInlineLink, info, {\n            contentIDKey: snippetAndLink.documentId.contentIdKey,\n            contentIDValue: snippetAndLink.documentId.contentIdValue,\n        }, snippetAndLink);\n    }\n    logOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeRecentQueryClick() {\n        return this.makeSearchEvent(SearchPageEvents.recentQueryClick);\n    }\n    logRecentQueryClick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecentQueryClick()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeClearRecentQueries() {\n        return this.makeCustomEvent(SearchPageEvents.clearRecentQueries);\n    }\n    logClearRecentQueries() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClearRecentQueries()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRecentResultClick(info, identifier) {\n        return this.makeCustomEvent(SearchPageEvents.recentResultClick, { info, identifier });\n    }\n    logRecentResultClick(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRecentResultClick(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeClearRecentResults() {\n        return this.makeCustomEvent(SearchPageEvents.clearRecentResults);\n    }\n    logClearRecentResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClearRecentResults()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeNoResultsBack() {\n        return this.makeSearchEvent(SearchPageEvents.noResultsBack);\n    }\n    logNoResultsBack() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeNoResultsBack()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowMoreFoldedResults(info, identifier) {\n        return this.makeClickEvent(SearchPageEvents.showMoreFoldedResults, info, identifier);\n    }\n    logShowMoreFoldedResults(info, identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowMoreFoldedResults(info, identifier)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeShowLessFoldedResults() {\n        return this.makeCustomEvent(SearchPageEvents.showLessFoldedResults);\n    }\n    logShowLessFoldedResults() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeShowLessFoldedResults()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeEventDescription(preparedEvent, actionCause) {\n        var _a;\n        return { actionCause, customData: (_a = preparedEvent.payload) === null || _a === void 0 ? void 0 : _a.customData };\n    }\n    makeCustomEvent(event, metadata, eventType = CustomEventsTypes[event]) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.coveoAnalyticsClient.getParameters;\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            const request = Object.assign(Object.assign({}, (yield this.getBaseEventRequest(customData))), { eventType, eventValue: event });\n            const preparedEvent = yield this.coveoAnalyticsClient.makeCustomEvent(request);\n            return {\n                description: this.makeEventDescription(preparedEvent, event),\n                log: ({ searchUID }) => preparedEvent.log({ lastSearchQueryUid: searchUID }),\n            };\n        });\n    }\n    logCustomEvent(event, metadata, eventType = CustomEventsTypes[event]) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCustomEvent(event, metadata, eventType)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeCustomEventWithType(eventValue, eventType, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            const payload = Object.assign(Object.assign({}, (yield this.getBaseEventRequest(customData))), { eventType,\n                eventValue });\n            const preparedEvent = yield this.coveoAnalyticsClient.makeCustomEvent(payload);\n            return {\n                description: this.makeEventDescription(preparedEvent, eventValue),\n                log: ({ searchUID }) => preparedEvent.log({ lastSearchQueryUid: searchUID }),\n            };\n        });\n    }\n    logCustomEventWithType(eventValue, eventType, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeCustomEventWithType(eventValue, eventType, metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    logSearchEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeSearchEvent(event, metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeSearchEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = yield this.getBaseSearchEventRequest(event, metadata);\n            const preparedEvent = yield this.coveoAnalyticsClient.makeSearchEvent(request);\n            return {\n                description: this.makeEventDescription(preparedEvent, event),\n                log: ({ searchUID }) => preparedEvent.log({ searchQueryUid: searchUID }),\n            };\n        });\n    }\n    makeClickEvent(event, info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = Object.assign(Object.assign(Object.assign({}, info), (yield this.getBaseEventRequest(Object.assign(Object.assign({}, identifier), metadata)))), { queryPipeline: this.provider.getPipeline(), actionCause: event });\n            const preparedEvent = yield this.coveoAnalyticsClient.makeClickEvent(request);\n            return {\n                description: this.makeEventDescription(preparedEvent, event),\n                log: ({ searchUID }) => preparedEvent.log({ searchQueryUid: searchUID }),\n            };\n        });\n    }\n    logClickEvent(event, info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeClickEvent(event, info, identifier, metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    getBaseSearchEventRequest(event, metadata) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object.assign(Object.assign(Object.assign({}, (yield this.getBaseEventRequest(Object.assign(Object.assign({}, metadata), (_b = (_a = this.provider).getGeneratedAnswerMetadata) === null || _b === void 0 ? void 0 : _b.call(_a))))), this.provider.getSearchEventRequestPayload()), { queryPipeline: this.provider.getPipeline(), actionCause: event });\n        });\n    }\n    getBaseEventRequest(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            return Object.assign(Object.assign(Object.assign({}, this.getOrigins()), this.getSplitTestRun()), { customData, language: this.provider.getLanguage(), facetState: this.provider.getFacetState ? this.provider.getFacetState() : [], anonymous: this.provider.getIsAnonymous(), clientId: yield this.getClientId() });\n        });\n    }\n    getOrigins() {\n        var _a, _b;\n        return {\n            originContext: (_b = (_a = this.provider).getOriginContext) === null || _b === void 0 ? void 0 : _b.call(_a),\n            originLevel1: this.provider.getOriginLevel1(),\n            originLevel2: this.provider.getOriginLevel2(),\n            originLevel3: this.provider.getOriginLevel3(),\n        };\n    }\n    getClientId() {\n        return this.coveoAnalyticsClient instanceof CoveoAnalyticsClient\n            ? this.coveoAnalyticsClient.getCurrentVisitorId()\n            : undefined;\n    }\n    getSplitTestRun() {\n        const splitTestRunName = this.provider.getSplitTestRunName ? this.provider.getSplitTestRunName() : '';\n        const splitTestRunVersion = this.provider.getSplitTestRunVersion ? this.provider.getSplitTestRunVersion() : '';\n        return Object.assign(Object.assign({}, (splitTestRunName && { splitTestRunName })), (splitTestRunVersion && { splitTestRunVersion }));\n    }\n    makeLikeGeneratedAnswer(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.likeGeneratedAnswer, metadata);\n    }\n    logLikeGeneratedAnswer(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeLikeGeneratedAnswer(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeDislikeGeneratedAnswer(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.dislikeGeneratedAnswer, metadata);\n    }\n    logDislikeGeneratedAnswer(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeDislikeGeneratedAnswer(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeOpenGeneratedAnswerSource(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.openGeneratedAnswerSource, metadata);\n    }\n    logOpenGeneratedAnswerSource(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeOpenGeneratedAnswerSource(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerSourceHover(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerSourceHover, metadata);\n    }\n    logGeneratedAnswerSourceHover(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerSourceHover(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerCopyToClipboard(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerCopyToClipboard, metadata);\n    }\n    logGeneratedAnswerCopyToClipboard(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerCopyToClipboard(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerHideAnswers(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerHideAnswers, metadata);\n    }\n    logGeneratedAnswerHideAnswers(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerHideAnswers(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerShowAnswers(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerShowAnswers, metadata);\n    }\n    logGeneratedAnswerShowAnswers(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerShowAnswers(metadata)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeGeneratedAnswerFeedbackSubmit(meta) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerFeedbackSubmit, meta);\n    }\n    logGeneratedAnswerFeedbackSubmit(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerFeedbackSubmit(meta)).log({\n                searchUID: this.provider.getSearchUID(),\n            });\n        });\n    }\n    makeRephraseGeneratedAnswer(meta) {\n        return this.makeSearchEvent(SearchPageEvents.rephraseGeneratedAnswer, meta);\n    }\n    logRephraseGeneratedAnswer(meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRephraseGeneratedAnswer(meta)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeRetryGeneratedAnswer() {\n        return this.makeSearchEvent(SearchPageEvents.retryGeneratedAnswer);\n    }\n    logRetryGeneratedAnswer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeRetryGeneratedAnswer()).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n    makeGeneratedAnswerStreamEnd(metadata) {\n        return this.makeCustomEvent(SearchPageEvents.generatedAnswerStreamEnd, metadata);\n    }\n    logGeneratedAnswerStreamEnd(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.makeGeneratedAnswerStreamEnd(metadata)).log({ searchUID: this.provider.getSearchUID() });\n        });\n    }\n}\n\nconst SVCPluginEventTypes = Object.assign({}, BasePluginEventTypes);\nconst allSVCEventTypes = Object.keys(SVCPluginEventTypes).map((key) => SVCPluginEventTypes[key]);\nclass SVCPlugin extends BasePlugin {\n    constructor({ client, uuidGenerator = v4 }) {\n        super({ client, uuidGenerator });\n        this.ticket = {};\n    }\n    getApi(name) {\n        const superCall = super.getApi(name);\n        if (superCall !== null)\n            return superCall;\n        switch (name) {\n            case 'setTicket':\n                return this.setTicket;\n            default:\n                return null;\n        }\n    }\n    addHooks() {\n        this.addHooksForEvent();\n        this.addHooksForPageView();\n        this.addHooksForSVCEvents();\n    }\n    setTicket(ticket) {\n        this.ticket = ticket;\n    }\n    clearPluginData() {\n        this.ticket = {};\n    }\n    addHooksForSVCEvents() {\n        this.client.registerBeforeSendEventHook((eventType, ...[payload]) => {\n            return allSVCEventTypes.indexOf(eventType) !== -1 ? this.addSVCDataToPayload(eventType, payload) : payload;\n        });\n        this.client.registerAfterSendEventHook((eventType, ...[payload]) => {\n            if (allSVCEventTypes.indexOf(eventType) !== -1) {\n                this.updateLocationInformation(eventType, payload);\n            }\n            return payload;\n        });\n    }\n    addHooksForPageView() {\n        this.client.addEventTypeMapping(SVCPluginEventTypes.pageview, {\n            newEventType: EventType.collect,\n            variableLengthArgumentsNames: ['page'],\n            addVisitorIdParameter: true,\n            usesMeasurementProtocol: true,\n        });\n    }\n    addHooksForEvent() {\n        this.client.addEventTypeMapping(SVCPluginEventTypes.event, {\n            newEventType: EventType.collect,\n            variableLengthArgumentsNames: ['eventCategory', 'eventAction', 'eventLabel', 'eventValue'],\n            addVisitorIdParameter: true,\n            usesMeasurementProtocol: true,\n        });\n    }\n    addSVCDataToPayload(eventType, payload) {\n        var _a;\n        const svcPayload = Object.assign(Object.assign(Object.assign(Object.assign({}, this.getLocationInformation(eventType, payload)), this.getDefaultContextInformation(eventType)), (this.action ? { svcAction: this.action } : {})), (Object.keys((_a = this.actionData) !== null && _a !== void 0 ? _a : {}).length > 0 ? { svcActionData: this.actionData } : {}));\n        const ticketPayload = this.getTicketPayload();\n        this.clearData();\n        return Object.assign(Object.assign(Object.assign({}, ticketPayload), svcPayload), payload);\n    }\n    getTicketPayload() {\n        return convertTicketToMeasurementProtocol(this.ticket);\n    }\n}\nSVCPlugin.Id = 'svc';\n\nvar CaseAssistEvents;\n(function (CaseAssistEvents) {\n    CaseAssistEvents[\"click\"] = \"click\";\n    CaseAssistEvents[\"flowStart\"] = \"flowStart\";\n})(CaseAssistEvents || (CaseAssistEvents = {}));\nvar CaseAssistActions;\n(function (CaseAssistActions) {\n    CaseAssistActions[\"enterInterface\"] = \"ticket_create_start\";\n    CaseAssistActions[\"fieldUpdate\"] = \"ticket_field_update\";\n    CaseAssistActions[\"fieldSuggestionClick\"] = \"ticket_classification_click\";\n    CaseAssistActions[\"suggestionClick\"] = \"suggestion_click\";\n    CaseAssistActions[\"suggestionRate\"] = \"suggestion_rate\";\n    CaseAssistActions[\"nextCaseStep\"] = \"ticket_next_stage\";\n    CaseAssistActions[\"caseCancelled\"] = \"ticket_cancel\";\n    CaseAssistActions[\"caseSolved\"] = \"ticket_cancel\";\n    CaseAssistActions[\"caseCreated\"] = \"ticket_create\";\n})(CaseAssistActions || (CaseAssistActions = {}));\nvar CaseCancelledReasons;\n(function (CaseCancelledReasons) {\n    CaseCancelledReasons[\"quit\"] = \"Quit\";\n    CaseCancelledReasons[\"solved\"] = \"Solved\";\n})(CaseCancelledReasons || (CaseCancelledReasons = {}));\n\nclass CaseAssistClient {\n    constructor(options, provider) {\n        var _a;\n        this.options = options;\n        this.provider = provider;\n        const analyticsEnabled = ((_a = options.enableAnalytics) !== null && _a !== void 0 ? _a : true) && !doNotTrack();\n        this.coveoAnalyticsClient = analyticsEnabled ? new CoveoAnalyticsClient(options) : new NoopAnalytics();\n        this.svc = new SVCPlugin({ client: this.coveoAnalyticsClient });\n    }\n    disable() {\n        if (this.coveoAnalyticsClient instanceof CoveoAnalyticsClient) {\n            this.coveoAnalyticsClient.clear();\n        }\n        this.coveoAnalyticsClient = new NoopAnalytics();\n        this.svc = new SVCPlugin({ client: this.coveoAnalyticsClient });\n    }\n    enable() {\n        this.coveoAnalyticsClient = new CoveoAnalyticsClient(this.options);\n        this.svc = new SVCPlugin({ client: this.coveoAnalyticsClient });\n    }\n    logEnterInterface(meta) {\n        this.svc.setAction(CaseAssistActions.enterInterface);\n        this.svc.setTicket(meta.ticket);\n        return this.sendFlowStartEvent();\n    }\n    logUpdateCaseField(meta) {\n        this.svc.setAction(CaseAssistActions.fieldUpdate, {\n            fieldName: meta.fieldName,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logSelectFieldSuggestion(meta) {\n        this.svc.setAction(CaseAssistActions.fieldSuggestionClick, meta.suggestion);\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logSelectDocumentSuggestion(meta) {\n        this.svc.setAction(CaseAssistActions.suggestionClick, meta.suggestion);\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logRateDocumentSuggestion(meta) {\n        this.svc.setAction(CaseAssistActions.suggestionRate, Object.assign({ rate: meta.rating }, meta.suggestion));\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logMoveToNextCaseStep(meta) {\n        this.svc.setAction(CaseAssistActions.nextCaseStep, {\n            stage: meta === null || meta === void 0 ? void 0 : meta.stage,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logCaseCancelled(meta) {\n        this.svc.setAction(CaseAssistActions.caseCancelled, {\n            reason: CaseCancelledReasons.quit,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logCaseSolved(meta) {\n        this.svc.setAction(CaseAssistActions.caseSolved, {\n            reason: CaseCancelledReasons.solved,\n        });\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    logCaseCreated(meta) {\n        this.svc.setAction(CaseAssistActions.caseCreated);\n        this.svc.setTicket(meta.ticket);\n        return this.sendClickEvent();\n    }\n    sendFlowStartEvent() {\n        return this.coveoAnalyticsClient.sendEvent('event', 'svc', CaseAssistEvents.flowStart, this.provider\n            ? {\n                searchHub: this.provider.getOriginLevel1(),\n            }\n            : null);\n    }\n    sendClickEvent() {\n        return this.coveoAnalyticsClient.sendEvent('event', 'svc', CaseAssistEvents.click, this.provider\n            ? {\n                searchHub: this.provider.getOriginLevel1(),\n            }\n            : null);\n    }\n}\n\nconst extractContextFromMetadata = (meta) => {\n    const context = {};\n    if (meta.caseContext) {\n        Object.keys(meta.caseContext).forEach((contextKey) => {\n            var _a;\n            const value = (_a = meta.caseContext) === null || _a === void 0 ? void 0 : _a[contextKey];\n            if (value) {\n                const keyToBeSent = `context_${contextKey}`;\n                context[keyToBeSent] = value;\n            }\n        });\n    }\n    return context;\n};\nconst generateMetadataToSend = (metadata, includeContext = true) => {\n    const { caseContext, caseId, caseNumber } = metadata, metadataWithoutContext = __rest(metadata, [\"caseContext\", \"caseId\", \"caseNumber\"]);\n    const context = extractContextFromMetadata(metadata);\n    return Object.assign(Object.assign(Object.assign({ CaseId: caseId, CaseNumber: caseNumber }, metadataWithoutContext), (!!context.context_Case_Subject && { CaseSubject: context.context_Case_Subject })), (includeContext && context));\n};\nclass CoveoInsightClient {\n    constructor(opts, provider) {\n        this.opts = opts;\n        this.provider = provider;\n        const shouldDisableAnalytics = opts.enableAnalytics === false || doNotTrack();\n        this.coveoAnalyticsClient = shouldDisableAnalytics ? new NoopAnalytics() : new CoveoAnalyticsClient(opts);\n    }\n    disable() {\n        if (this.coveoAnalyticsClient instanceof CoveoAnalyticsClient) {\n            this.coveoAnalyticsClient.clear();\n        }\n        this.coveoAnalyticsClient = new NoopAnalytics();\n    }\n    enable() {\n        this.coveoAnalyticsClient = new CoveoAnalyticsClient(this.opts);\n    }\n    logInterfaceLoad(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.interfaceLoad, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.interfaceLoad);\n    }\n    logInterfaceChange(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.interfaceChange, metadataToSend);\n    }\n    logStaticFilterDeselect(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.staticFilterDeselect, metadataToSend);\n    }\n    logFetchMoreResults(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logCustomEvent(SearchPageEvents.pagerScrolling, Object.assign(Object.assign({}, metadataToSend), { type: 'getMoreResults' }));\n        }\n        return this.logCustomEvent(SearchPageEvents.pagerScrolling, { type: 'getMoreResults' });\n    }\n    logBreadcrumbFacet(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.breadcrumbFacet, metadataToSend);\n    }\n    logBreadcrumbResetAll(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.breadcrumbResetAll, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.breadcrumbResetAll);\n    }\n    logFacetSelect(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetSelect, metadataToSend);\n    }\n    logFacetExclude(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetExclude, metadataToSend);\n    }\n    logFacetDeselect(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetDeselect, metadataToSend);\n    }\n    logFacetUpdateSort(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetUpdateSort, metadataToSend);\n    }\n    logFacetClearAll(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.facetClearAll, metadataToSend);\n    }\n    logFacetShowMore(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.facetShowMore, metadataToSend);\n    }\n    logFacetShowLess(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.facetShowLess, metadataToSend);\n    }\n    logQueryError(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.queryError, metadataToSend);\n    }\n    logPagerNumber(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.pagerNumber, metadataToSend);\n    }\n    logPagerNext(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.pagerNext, metadataToSend);\n    }\n    logPagerPrevious(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(SearchPageEvents.pagerPrevious, metadataToSend);\n    }\n    logDidYouMeanAutomatic(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.didyoumeanAutomatic, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.didyoumeanAutomatic);\n    }\n    logDidYouMeanClick(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.didyoumeanClick, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.didyoumeanClick);\n    }\n    logResultsSort(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(SearchPageEvents.resultsSort, metadataToSend);\n    }\n    logSearchboxSubmit(metadata) {\n        if (metadata) {\n            const metadataToSend = generateMetadataToSend(metadata);\n            return this.logSearchEvent(SearchPageEvents.searchboxSubmit, metadataToSend);\n        }\n        return this.logSearchEvent(SearchPageEvents.searchboxSubmit);\n    }\n    logContextChanged(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logSearchEvent(InsightEvents.contextChanged, metadataToSend);\n    }\n    logExpandToFullUI(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata);\n        return this.logCustomEvent(InsightEvents.expandToFullUI, metadataToSend);\n    }\n    logOpenUserActions(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(InsightEvents.openUserActions, metadataToSend);\n    }\n    logShowPrecedingSessions(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(InsightEvents.showPrecedingSessions, metadataToSend);\n    }\n    logShowFollowingSessions(metadata) {\n        const metadataToSend = generateMetadataToSend(metadata, false);\n        return this.logCustomEvent(InsightEvents.showFollowingSessions, metadataToSend);\n    }\n    logViewedDocumentClick(document, metadata) {\n        return this.logCustomEvent(InsightEvents.clickViewedDocument, Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { document }));\n    }\n    logPageViewClick(pageView, metadata) {\n        return this.logCustomEvent(InsightEvents.clickPageView, Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { pageView }));\n    }\n    logCreateArticle(createArticleMetadata, metadata) {\n        return this.logCustomEvent(InsightEvents.createArticle, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), createArticleMetadata) : createArticleMetadata);\n    }\n    logDocumentOpen(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.documentOpen, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCopyToClipboard(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.copyToClipboard, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCaseSendEmail(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.caseSendEmail, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logFeedItemTextPost(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.feedItemTextPost, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logDocumentQuickview(info, identifier, caseMetadata) {\n        const metadata = {\n            documentTitle: info.documentTitle,\n            documentURL: info.documentUrl,\n        };\n        return this.logClickEvent(SearchPageEvents.documentQuickview, info, identifier, caseMetadata ? Object.assign(Object.assign({}, generateMetadataToSend(caseMetadata, false)), metadata) : metadata);\n    }\n    logCaseAttach(info, identifier, caseMetadata) {\n        const metadata = {\n            documentTitle: info.documentTitle,\n            documentURL: info.documentUrl,\n            resultUriHash: info.documentUriHash,\n        };\n        return this.logClickEvent(SearchPageEvents.caseAttach, info, identifier, caseMetadata ? Object.assign(Object.assign({}, generateMetadataToSend(caseMetadata, false)), metadata) : metadata);\n    }\n    logCaseDetach(resultUriHash, metadata) {\n        return this.logCustomEvent(SearchPageEvents.caseDetach, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { resultUriHash }) : { resultUriHash });\n    }\n    logLikeSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.likeSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logDislikeSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.dislikeSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logExpandSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.expandSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCollapseSmartSnippet(metadata) {\n        return this.logCustomEvent(SearchPageEvents.collapseSmartSnippet, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logOpenSmartSnippetFeedbackModal(metadata) {\n        return this.logCustomEvent(SearchPageEvents.openSmartSnippetFeedbackModal, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logCloseSmartSnippetFeedbackModal(metadata) {\n        return this.logCustomEvent(SearchPageEvents.closeSmartSnippetFeedbackModal, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logSmartSnippetFeedbackReason(reason, details, metadata) {\n        return this.logCustomEvent(SearchPageEvents.sendSmartSnippetReason, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), { reason, details }) : { reason, details });\n    }\n    logExpandSmartSnippetSuggestion(snippet, metadata) {\n        const snippetMetadata = 'documentId' in snippet ? snippet : { documentId: snippet };\n        return this.logCustomEvent(SearchPageEvents.expandSmartSnippetSuggestion, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippetMetadata) : snippetMetadata);\n    }\n    logCollapseSmartSnippetSuggestion(snippet, metadata) {\n        const snippetMetadata = 'documentId' in snippet ? snippet : { documentId: snippet };\n        return this.logCustomEvent(SearchPageEvents.collapseSmartSnippetSuggestion, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippetMetadata) : snippetMetadata);\n    }\n    logOpenSmartSnippetSource(info, identifier, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetSource, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n    }\n    logOpenSmartSnippetSuggestionSource(info, snippet, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetSuggestionSource, info, { contentIDKey: snippet.documentId.contentIdKey, contentIDValue: snippet.documentId.contentIdValue }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippet) : snippet);\n    }\n    logOpenSmartSnippetInlineLink(info, identifierAndLink, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetInlineLink, info, { contentIDKey: identifierAndLink.contentIDKey, contentIDValue: identifierAndLink.contentIDValue }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), identifierAndLink) : identifierAndLink);\n    }\n    logOpenSmartSnippetSuggestionInlineLink(info, snippetAndLink, metadata) {\n        return this.logClickEvent(SearchPageEvents.openSmartSnippetSuggestionInlineLink, info, {\n            contentIDKey: snippetAndLink.documentId.contentIdKey,\n            contentIDValue: snippetAndLink.documentId.contentIdValue,\n        }, metadata ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), snippetAndLink) : snippetAndLink);\n    }\n    logLikeGeneratedAnswer(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.likeGeneratedAnswer, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logDislikeGeneratedAnswer(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.dislikeGeneratedAnswer, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logOpenGeneratedAnswerSource(generatedAnswerSourceMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.openGeneratedAnswerSource, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerSourceMetadata) : generatedAnswerSourceMetadata);\n    }\n    logGeneratedAnswerSourceHover(generatedAnswerSourceMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerSourceHover, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerSourceMetadata) : generatedAnswerSourceMetadata);\n    }\n    logGeneratedAnswerCopyToClipboard(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerCopyToClipboard, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerHideAnswers(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerHideAnswers, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerShowAnswers(generatedAnswerMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerShowAnswers, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerMetadata) : generatedAnswerMetadata);\n    }\n    logGeneratedAnswerFeedbackSubmit(generatedAnswerFeedbackMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerFeedbackSubmit, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerFeedbackMetadata) : generatedAnswerFeedbackMetadata);\n    }\n    logRephraseGeneratedAnswer(generatedAnswerRephraseMetadata, metadata) {\n        return this.logSearchEvent(SearchPageEvents.rephraseGeneratedAnswer, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerRephraseMetadata) : generatedAnswerRephraseMetadata);\n    }\n    logRetryGeneratedAnswer(metadata) {\n        return this.logSearchEvent(SearchPageEvents.retryGeneratedAnswer, metadata ? Object.assign({}, generateMetadataToSend(metadata, false)) : {});\n    }\n    logGeneratedAnswerStreamEnd(generatedAnswerStreamEndMetadata, metadata) {\n        return this.logCustomEvent(SearchPageEvents.generatedAnswerStreamEnd, metadata\n            ? Object.assign(Object.assign({}, generateMetadataToSend(metadata, false)), generatedAnswerStreamEndMetadata) : generatedAnswerStreamEndMetadata);\n    }\n    logCustomEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            const payload = Object.assign(Object.assign({}, (yield this.getBaseCustomEventRequest(customData))), { eventType: CustomEventsTypes[event], eventValue: event });\n            return this.coveoAnalyticsClient.sendCustomEvent(payload);\n        });\n    }\n    logSearchEvent(event, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.coveoAnalyticsClient.sendSearchEvent(yield this.getBaseSearchEventRequest(event, metadata));\n        });\n    }\n    logClickEvent(event, info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = Object.assign(Object.assign(Object.assign({}, info), (yield this.getBaseEventRequest(Object.assign(Object.assign({}, identifier), metadata)))), { searchQueryUid: this.provider.getSearchUID(), queryPipeline: this.provider.getPipeline(), actionCause: event });\n            return this.coveoAnalyticsClient.sendClickEvent(payload);\n        });\n    }\n    logShowMoreFoldedResults(info, identifier, metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.logClickEvent(SearchPageEvents.showMoreFoldedResults, info, identifier, metadata ? generateMetadataToSend(metadata, false) : undefined);\n        });\n    }\n    logShowLessFoldedResults(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.logCustomEvent(SearchPageEvents.showLessFoldedResults, metadata ? generateMetadataToSend(metadata, false) : undefined);\n        });\n    }\n    getBaseCustomEventRequest(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object.assign(Object.assign({}, (yield this.getBaseEventRequest(metadata))), { lastSearchQueryUid: this.provider.getSearchUID() });\n        });\n    }\n    getBaseSearchEventRequest(event, metadata) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object.assign(Object.assign(Object.assign({}, (yield this.getBaseEventRequest(Object.assign(Object.assign({}, metadata), (_b = (_a = this.provider).getGeneratedAnswerMetadata) === null || _b === void 0 ? void 0 : _b.call(_a))))), this.provider.getSearchEventRequestPayload()), { searchQueryUid: this.provider.getSearchUID(), queryPipeline: this.provider.getPipeline(), actionCause: event });\n        });\n    }\n    getBaseEventRequest(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const customData = Object.assign(Object.assign({}, this.provider.getBaseMetadata()), metadata);\n            return Object.assign(Object.assign({}, this.getOrigins()), { customData, language: this.provider.getLanguage(), facetState: this.provider.getFacetState ? this.provider.getFacetState() : [], anonymous: this.provider.getIsAnonymous(), clientId: yield this.getClientId() });\n        });\n    }\n    getOrigins() {\n        var _a, _b;\n        return {\n            originContext: (_b = (_a = this.provider).getOriginContext) === null || _b === void 0 ? void 0 : _b.call(_a),\n            originLevel1: this.provider.getOriginLevel1(),\n            originLevel2: this.provider.getOriginLevel2(),\n            originLevel3: this.provider.getOriginLevel3(),\n        };\n    }\n    getClientId() {\n        return this.coveoAnalyticsClient instanceof CoveoAnalyticsClient\n            ? this.coveoAnalyticsClient.getCurrentVisitorId()\n            : undefined;\n    }\n}\n\nexport { CaseAssistClient, CoveoAnalyticsClient, CoveoInsightClient, CoveoSearchPageClient, history };\n", "export const DESIRED_COUNT_MINIMUM = 1;\nexport const DESIRED_COUNT_MAXIMUM = 10;\nexport const DESIRED_COUNT_DEFAULT = 5;\n\nexport const NUMBER_OF_VALUE_MINIMUM = 1;\nexport const NUMBER_OF_VALUE_DEFAULT = 8;\n", "import {\n  DESIRED_COUNT_DEFAULT,\n  NUMBER_OF_VALUE_DEFAULT,\n} from './automatic-facet-set-constants';\nimport {AutomaticFacetResponse} from './interfaces/response';\n\nexport type AutomaticFacetSlice = {\n  response: AutomaticFacetResponse;\n};\n\nexport type AutomaticFacetSetState = {\n  /**\n   * The desired count of facets.\n   *\n   * Minimum: `1`\n   * Maximum: `10`\n   * @defaultValue `5`\n   */\n  desiredCount: number;\n  /**\n   * The desired number of automatically generated facet values.\n   *\n   * Minimum: `1`\n   * @defaultValue `8`\n   */\n  numberOfValues: number;\n  /**\n   * A map of automatic facet field to an automatic facet slice containing the response.\n   */\n  set: Record<string, AutomaticFacetSlice>;\n};\n\nexport function getAutomaticFacetSetInitialState(): AutomaticFacetSetState {\n  return {\n    desiredCount: DESIRED_COUNT_DEFAULT,\n    numberOfValues: NUMBER_OF_VALUE_DEFAULT,\n    set: {},\n  };\n}\n", "import {\n  ProductListingSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {FacetSection} from '../../../state/state-sections';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response';\nimport {FacetResponse, FacetValue} from './interfaces/response';\n\nexport type FacetResponseSection = SearchSection | ProductListingSection;\n\nexport const baseFacetResponseSelector = (\n  state: Partial<FacetResponseSection>,\n  id: string\n) => {\n  const findById = (response: {facetId: string}) => response.facetId === id;\n  if (\n    'productListing' in state &&\n    state.productListing &&\n    'facets' in state.productListing &&\n    'results' in state.productListing.facets\n  ) {\n    return state.productListing.facets.results.find(findById);\n  }\n\n  if ('search' in state && state.search) {\n    return state.search.response.facets.find(findById);\n  }\n  return undefined;\n};\n\nexport const facetRequestSelector = (state: FacetSection, id: string) => {\n  return state.facetSet[id]?.request;\n};\n\nfunction isFacetResponse(\n  state: FacetSection,\n  response: AnyFacetResponse | undefined\n): response is FacetResponse {\n  return !!response && response.facetId in state.facetSet;\n}\nexport const facetResponseSelector = (\n  state: FacetResponseSection & FacetSection,\n  facetId: string\n) => {\n  const response = baseFacetResponseSelector(state, facetId);\n  if (isFacetResponse(state, response)) {\n    return response;\n  }\n\n  return undefined;\n};\n\nexport const facetResponseSelectedValuesSelector = (\n  state: FacetResponseSection & FacetSection,\n  facetId: string\n): FacetValue[] => {\n  const response = facetResponseSelector(state, facetId);\n  if (!response) {\n    return [];\n  }\n\n  return response.values.filter((value) => value.state === 'selected');\n};\n\nexport const facetResponseActiveValuesSelector = (\n  state: FacetResponseSection & FacetSection,\n  facetId: string\n): FacetValue[] => {\n  const response = facetResponseSelector(state, facetId);\n  if (!response) {\n    return [];\n  }\n\n  return response.values.filter((value) => value.state !== 'idle');\n};\n\nexport const isFacetLoadingResponseSelector = (state: FacetResponseSection) => {\n  if ('productListing' in state) {\n    return state.productListing.isLoading;\n  }\n\n  return state.search.isLoading;\n};\n", "import {CategoryFacetValueCommon} from './interfaces/commons';\nimport {CategoryFacetValueRequest} from './interfaces/request';\nimport {CategoryFacetValue} from './interfaces/response';\n\ntype GenericCategoryFacetValue = CategoryFacetValueRequest | CategoryFacetValue;\n\ntype CategoryFacetValuePartition<T extends GenericCategoryFacetValue> = {\n  parents: T[];\n  values: T[];\n};\n\nexport function partitionIntoParentsAndValues<\n  T extends GenericCategoryFacetValue,\n>(nestedValues: T[] | undefined): CategoryFacetValuePartition<T> {\n  if (!nestedValues) {\n    return {parents: [], values: []};\n  }\n\n  let parents: T[] = [];\n  let values = nestedValues;\n\n  while (values.length && values[0].children.length) {\n    parents = [...parents, ...values];\n    values = values[0].children as T[];\n  }\n\n  const selectedLeafValue = values.find((v) => v.state === 'selected');\n\n  if (selectedLeafValue) {\n    parents = [...parents, selectedLeafValue];\n    values = [];\n  }\n\n  return {parents, values};\n}\n\nexport function findActiveValueAncestry(\n  valuesAsTress: CategoryFacetValueRequest[]\n): CategoryFacetValueRequest[];\nexport function findActiveValueAncestry(\n  valuesAsTress: CategoryFacetValue[]\n): CategoryFacetValue[];\nexport function findActiveValueAncestry(\n  valuesAsTree: CategoryFacetValueCommon[]\n): CategoryFacetValueCommon[] {\n  const {activeValue, ancestryMap} =\n    getActiveValueAndAncestryFromValueTree(valuesAsTree);\n  return activeValue ? getActiveValueAncestry(activeValue, ancestryMap) : [];\n}\n\nfunction getActiveValueAndAncestryFromValueTree(\n  valuesAsTrees: CategoryFacetValueCommon[]\n) {\n  const valueToVisit: CategoryFacetValueCommon[] = [...valuesAsTrees];\n  const ancestryMap = new Map<\n    CategoryFacetValueCommon,\n    CategoryFacetValueCommon\n  >();\n  while (valueToVisit.length > 0) {\n    const currentValue: CategoryFacetValueCommon = valueToVisit.shift()!;\n    if (currentValue.state === 'selected') {\n      return {activeValue: currentValue, ancestryMap};\n    }\n    if (ancestryMap) {\n      for (const childValue of currentValue.children) {\n        ancestryMap.set(childValue, currentValue);\n      }\n    }\n    valueToVisit.unshift(...currentValue.children);\n  }\n  return {};\n}\n\nfunction getActiveValueAncestry(\n  activeValue: CategoryFacetValueCommon | undefined,\n  valueToParentMap: Map<CategoryFacetValueCommon, CategoryFacetValueCommon>\n): CategoryFacetValueCommon[] {\n  const activeValueAncestry: CategoryFacetValueCommon[] = [];\n  if (!activeValue) {\n    return [];\n  }\n  let lastParent: CategoryFacetValueCommon | undefined = activeValue;\n  do {\n    activeValueAncestry.unshift(lastParent);\n    lastParent = valueToParentMap.get(lastParent);\n  } while (lastParent);\n  return activeValueAncestry;\n}\n", "import {CategoryFacetSection} from '../../../state/state-sections';\nimport {\n  baseFacetResponseSelector,\n  FacetResponseSection,\n} from '../facet-set/facet-set-selectors';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response';\nimport {findActiveValueAncestry} from './category-facet-utils';\nimport {CategoryFacetResponse} from './interfaces/response';\n\nfunction isCategoryFacetResponse(\n  state: CategoryFacetSection,\n  response: AnyFacetResponse | undefined\n): response is CategoryFacetResponse {\n  return !!response && response.facetId in state.categoryFacetSet;\n}\n\nexport const categoryFacetResponseSelector = (\n  state: CategoryFacetSection & Partial<FacetResponseSection>,\n  facetId: string\n) => {\n  const response = baseFacetResponseSelector(state, facetId);\n  if (isCategoryFacetResponse(state, response)) {\n    return response;\n  }\n\n  return undefined;\n};\n\nexport const categoryFacetRequestSelector = (\n  state: CategoryFacetSection,\n  id: string\n) => {\n  return state.categoryFacetSet[id]?.request;\n};\n\nexport const categoryFacetResponseSelectedValuesSelector = (\n  state: CategoryFacetSection & Partial<FacetResponseSection>,\n  facetId: string\n) => {\n  const facetResponse = categoryFacetResponseSelector(state, facetId);\n  return findActiveValueAncestry(facetResponse?.values ?? []);\n};\n\nexport const categoryFacetRequestSelectedValuesSelector = (\n  state: CategoryFacetSection,\n  facetId: string\n) => {\n  const facetRequest = categoryFacetRequestSelector(state, facetId);\n  return findActiveValueAncestry(facetRequest?.currentValues ?? []);\n};\n", "import {CategoryFacetRequest} from './interfaces/request';\n\nexport type CategoryFacetSlice = {\n  request: CategoryFacetRequest;\n  initialNumberOfValues: number;\n};\n\nexport type CategoryFacetSetState = Record<string, CategoryFacetSlice>;\n\nexport function getCategoryFacetSetInitialState(): CategoryFacetSetState {\n  return {};\n}\n", "import {DateFacetRequest} from './interfaces/request';\n\nexport type DateFacetSlice = {\n  request: DateFacetRequest;\n};\n\nexport type DateFacetSetState = Record<string, DateFacetSlice>;\n\nexport function getDateFacetSetSliceInitialState(\n  request: DateFacetRequest\n): DateFacetSlice {\n  return {request};\n}\n\nexport function getDateFacetSetInitialState(): DateFacetSetState {\n  return {};\n}\n", "import {NumericFacetRequest} from './interfaces/request';\n\nexport type NumericFacetSlice = {\n  request: NumericFacetRequest;\n};\n\nexport type NumericFacetSetState = Record<string, NumericFacetSlice>;\n\nexport function getNumericFacetSetSliceInitialState(\n  request: NumericFacetRequest\n): NumericFacetSlice {\n  return {request};\n}\n\nexport function getNumericFacetSetInitialState(): NumericFacetSetState {\n  return {};\n}\n", "import {FacetRequest} from './interfaces/request';\n\nexport type FacetSlice = {\n  request: FacetRequest;\n  hasBreadcrumbs: boolean;\n};\n\n/**\n * A map of specific facet identifier (typically, the facet field) to a facet request\n */\nexport type FacetSetState = Record<string, FacetSlice>;\n\nexport function getFacetSetSliceInitialState(\n  request: FacetRequest\n): FacetSlice {\n  return {request, hasBreadcrumbs: true};\n}\n\nexport function getFacetSetInitialState(): FacetSetState {\n  return {};\n}\n", "import {FacetStateMetadata} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {\n  AutomaticFacetSection,\n  CategoryFacetSection,\n  DateFacetSection,\n  FacetSection,\n  NumericFacetSection,\n} from '../../../state/state-sections';\nimport {getAutomaticFacetSetInitialState} from '../automatic-facet-set/automatic-facet-set-state';\nimport {AutomaticFacetResponse} from '../automatic-facet-set/interfaces/response';\nimport {categoryFacetRequestSelectedValuesSelector} from '../category-facet-set/category-facet-set-selectors';\nimport {getCategoryFacetSetInitialState} from '../category-facet-set/category-facet-set-state';\nimport {CategoryFacetRequest} from '../category-facet-set/interfaces/request';\nimport {FacetType} from '../facet-api/request';\nimport {\n  AnyFacetRequest,\n  AnyFacetValueRequest,\n} from '../generic/interfaces/generic-facet-request';\nimport {getDateFacetSetInitialState} from '../range-facets/date-facet-set/date-facet-set-state';\nimport {\n  DateFacetRequest,\n  DateRangeRequest,\n} from '../range-facets/date-facet-set/interfaces/request';\nimport {\n  NumericFacetRequest,\n  NumericRangeRequest,\n} from '../range-facets/numeric-facet-set/interfaces/request';\nimport {getNumericFacetSetInitialState} from '../range-facets/numeric-facet-set/numeric-facet-set-state';\nimport {getFacetSetInitialState} from './facet-set-state';\nimport {FacetRequest, FacetValueRequest} from './interfaces/request';\n\nexport type SectionNeededForFacetMetadata = FacetSection &\n  CategoryFacetSection &\n  DateFacetSection &\n  NumericFacetSection &\n  AutomaticFacetSection;\n\nexport type FacetSelectionChangeMetadata = {\n  facetId: string;\n  facetValue: string;\n};\n\nexport const buildFacetBaseMetadata = (\n  facetId: string,\n  state: SectionNeededForFacetMetadata\n) => {\n  const facet = getFacetRequest(state, facetId);\n\n  const facetField = facet ? facet.field : '';\n  const facetTitle = getFacetTitle(facetField, facetId);\n\n  return {facetId, facetField, facetTitle};\n};\n\nexport function buildFacetSelectionChangeMetadata(\n  payload: FacetSelectionChangeMetadata,\n  state: SectionNeededForFacetMetadata\n) {\n  const {facetId, facetValue} = payload;\n  const base = buildFacetBaseMetadata(facetId, state);\n  const facetType = getFacetType(state, facetId);\n  return {\n    ...base,\n    facetValue:\n      facetType === 'hierarchical'\n        ? getCategoryFacetSelectedValue(state, facetId)\n        : facetValue,\n  };\n}\n\nexport function getStateNeededForFacetMetadata(\n  s: Partial<SectionNeededForFacetMetadata>\n): SectionNeededForFacetMetadata {\n  return {\n    facetSet: s.facetSet ?? getFacetSetInitialState(),\n    categoryFacetSet: s.categoryFacetSet ?? getCategoryFacetSetInitialState(),\n    dateFacetSet: s.dateFacetSet ?? getDateFacetSetInitialState(),\n    numericFacetSet: s.numericFacetSet ?? getNumericFacetSetInitialState(),\n    automaticFacetSet:\n      s.automaticFacetSet ?? getAutomaticFacetSetInitialState(),\n  };\n}\n\nexport const buildFacetStateMetadata = (\n  state: SectionNeededForFacetMetadata\n) => {\n  const facetState: FacetStateMetadata[] = [];\n\n  getFacetRequests(state).forEach((facetRequest, facetIndex) => {\n    const facetType = getFacetType(state, facetRequest.facetId);\n    const facetRequestAnalytics = mapFacetRequestToAnalytics(\n      facetRequest,\n      facetIndex + 1\n    );\n\n    if (isCategoryFacetRequest(facetRequest)) {\n      const hasSelectedValue = !!categoryFacetRequestSelectedValuesSelector(\n        state,\n        facetRequest.facetId\n      ).length;\n\n      if (!hasSelectedValue) {\n        return;\n      }\n\n      facetState.push({\n        ...facetRequestAnalytics,\n        ...mapCategoryFacetValueToAnalytics(state, facetRequest.facetId),\n        facetType,\n        state: 'selected',\n      });\n\n      return;\n    }\n\n    facetRequest.currentValues.forEach((facetValue, facetValueIndex) => {\n      if (facetValue.state === 'idle') {\n        return;\n      }\n\n      const facetValueAnalytics = mapFacetValueToAnalytics(\n        facetValue,\n        facetValueIndex + 1,\n        facetType\n      );\n\n      const facetDisplayValueAnalytics = isSpecificFacetRequest(facetRequest)\n        ? mapFacetDisplayValueToAnalytics(facetValue as FacetValueRequest)\n        : mapRangeDisplayFacetValueToAnalytics(\n            facetValue as NumericRangeRequest | DateRangeRequest\n          );\n\n      facetState.push({\n        ...facetRequestAnalytics,\n        ...facetValueAnalytics,\n        ...facetDisplayValueAnalytics,\n      });\n    });\n  });\n\n  getAutomaticFacets(state).forEach((facet, facetIndex) => {\n    const facetAnalytics = mapAutomaticFacetToAnalytics(facet, facetIndex + 1);\n\n    facet.values.forEach((facetValue, facetValueIndex) => {\n      if (facetValue.state === 'idle') {\n        return;\n      }\n\n      const facetValueAnalytics = mapFacetValueToAnalytics(\n        facetValue,\n        facetValueIndex + 1,\n        'specific'\n      );\n\n      const facetDisplayValueAnalytics =\n        mapFacetDisplayValueToAnalytics(facetValue);\n\n      facetState.push({\n        ...facetAnalytics,\n        ...facetValueAnalytics,\n        ...facetDisplayValueAnalytics,\n      });\n    });\n  });\n\n  return facetState;\n};\n\nconst isSpecificFacetRequest = (\n  request: AnyFacetRequest\n): request is FacetRequest => request.type === 'specific';\n\nconst isCategoryFacetRequest = (\n  request: AnyFacetRequest\n): request is CategoryFacetRequest => request.type === 'hierarchical';\n\nconst getFacetRequests = (state: SectionNeededForFacetMetadata) => {\n  return [\n    ...Object.values(state.facetSet),\n    ...Object.values(state.categoryFacetSet),\n    ...Object.values(state.dateFacetSet),\n    ...Object.values(state.numericFacetSet),\n  ].map((facet) => facet.request);\n};\n\nconst getAutomaticFacets = (\n  state: SectionNeededForFacetMetadata\n): AutomaticFacetResponse[] => {\n  return [...Object.values(state.automaticFacetSet.set)].map(\n    (facet) => facet.response\n  );\n};\n\nconst mapFacetValueToAnalytics = (\n  facetValue: AnyFacetValueRequest,\n  valuePosition: number,\n  facetType: FacetType\n) => {\n  return {\n    state: facetValue.state,\n    valuePosition,\n    facetType,\n  };\n};\n\nconst mapRangeDisplayFacetValueToAnalytics = (\n  facetValue: NumericRangeRequest | DateRangeRequest\n) => {\n  return {\n    displayValue: `${facetValue.start}..${facetValue.end}`,\n    value: `${facetValue.start}..${facetValue.end}`,\n    start: facetValue.start,\n    end: facetValue.end,\n    endInclusive: facetValue.endInclusive,\n  };\n};\n\nconst mapFacetDisplayValueToAnalytics = (facetValue: FacetValueRequest) => {\n  return {\n    displayValue: facetValue.value,\n    value: facetValue.value,\n  };\n};\n\nconst getCategoryFacetSelectedValue = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n) => {\n  const selectedCategoryFacetValues =\n    categoryFacetRequestSelectedValuesSelector(state, facetId);\n  return selectedCategoryFacetValues\n    .map((selectedCategoryFacetValue) => selectedCategoryFacetValue.value)\n    .join(';');\n};\n\nconst mapCategoryFacetValueToAnalytics = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n) => {\n  const valuePosition = 1;\n  const value = getCategoryFacetSelectedValue(state, facetId);\n  return {\n    value,\n    valuePosition,\n    displayValue: value,\n  };\n};\n\nconst mapAutomaticFacetToAnalytics = (\n  facet: AutomaticFacetResponse,\n  facetPosition: number\n) => {\n  return {\n    title: getFacetTitle(facet.field, facet.field),\n    field: facet.field,\n    id: facet.field,\n    facetPosition,\n  };\n};\n\nconst mapFacetRequestToAnalytics = (\n  request: AnyFacetRequest,\n  facetPosition: number\n) => {\n  return {\n    title: getFacetTitle(request.field, request.facetId),\n    field: request.field,\n    id: request.facetId,\n    facetPosition,\n  };\n};\n\nconst getFacetTitle = (field: string, facetId: string) => {\n  return `${field}_${facetId}`;\n};\n\nconst getFacetRequest = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n):\n  | FacetRequest\n  | CategoryFacetRequest\n  | DateFacetRequest\n  | NumericFacetRequest\n  | undefined => {\n  return (\n    state.facetSet[facetId]?.request ||\n    state.categoryFacetSet[facetId]?.request ||\n    state.dateFacetSet[facetId]?.request ||\n    state.numericFacetSet[facetId]?.request ||\n    state.automaticFacetSet.set[facetId]?.response\n  );\n};\n\nconst getFacetType = (\n  state: SectionNeededForFacetMetadata,\n  facetId: string\n) => {\n  const facet = getFacetRequest(state, facetId);\n  return facet ? facet.type : 'specific';\n};\n", "export interface QueryState {\n  /**\n   * The basic query expression (e.g., `acme tornado seeds`).\n   */\n  q: string;\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   */\n  enableQuerySyntax: boolean;\n}\n\nexport const getQueryInitialState: () => QueryState = () => ({\n  q: '',\n  enableQuerySyntax: false,\n});\n", "import {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport {ExtendedResults} from '../../api/search/search/extended-results';\nimport {QuestionsAnswers} from '../../api/search/search/question-answering';\nimport {Result} from '../../api/search/search/result';\nimport {SearchResponseSuccess} from '../../api/search/search/search-response';\n\nexport interface SearchState {\n  /** The search response. For a full description, refer to {@link https://docs.coveo.com/en/13/cloud-v2-api-reference/search-api#operation/searchUsingPost}*/\n  response: SearchResponseSuccess;\n  /**\n   * The time it took to execute the request against the Coveo platform.\n   */\n  duration: number;\n  /**\n   * The query (searchbox content) that was executed against the Coveo platform.\n   */\n  queryExecuted: string;\n  /**\n   * The error returned by the Coveo platform while executing the search request, if any. `null` otherwise.\n   */\n  error: SearchAPIErrorWithStatusCode | null;\n  /**\n   * Specifies if the query was automatically corrected by Headless.\n   * This happens when there is no result returned by the API for a particular misspelling.\n   */\n  automaticallyCorrected: boolean;\n  /**\n   * `true` if the search request is currently being executed against the Coveo platform, `false` otherwise.\n   */\n  isLoading: boolean;\n  /**\n   * The list of results.\n   */\n  results: Result[];\n  /**\n   * The unique ID of the response, taken from the response's `searchUid`. This value will not change when loading more results or fetching new facet values.\n   */\n  searchResponseId: string;\n  /**\n   * The unique ID of the latest request, generated by Headless each time a search is executed. This value is not to be confused with `searchResponseId` or `searchUid`, which are generated by the Coveo platform.\n   */\n  requestId: string;\n  /**\n   * The question and answers related to the smart snippet.\n   */\n  questionAnswer: QuestionsAnswers;\n  /**\n   * The extended results.\n   */\n  extendedResults: ExtendedResults;\n}\n\nexport function emptyQuestionAnswer() {\n  return {\n    answerSnippet: '',\n    documentId: {\n      contentIdKey: '',\n      contentIdValue: '',\n    },\n    question: '',\n    relatedQuestions: [],\n    score: 0,\n  };\n}\n\nexport function getSearchInitialState(): SearchState {\n  return {\n    response: {\n      results: [],\n      searchUid: '',\n      totalCountFiltered: 0,\n      facets: [],\n      generateAutomaticFacets: {facets: []},\n      queryCorrections: [],\n      triggers: [],\n      questionAnswer: emptyQuestionAnswer(),\n      pipeline: '',\n      splitTestRun: '',\n      termsToHighlight: {},\n      phrasesToHighlight: {},\n      extendedResults: {},\n    },\n    duration: 0,\n    queryExecuted: '',\n    error: null,\n    automaticallyCorrected: false,\n    isLoading: false,\n    results: [],\n    searchResponseId: '',\n    requestId: '',\n    questionAnswer: emptyQuestionAnswer(),\n    extendedResults: {},\n  };\n}\n", "/**\n * @license\n *\n * Copyright 2023 Coveo Solutions Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *       http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// src/schema.ts\nfunction buildSchemaValidationError(errors, context) {\n  const message = `\n  The following properties are invalid:\n\n    ${errors.join(\"\\n\t\")}\n  \n  ${context}\n  `;\n  return new SchemaValidationError(message);\n}\nvar SchemaValidationError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"SchemaValidationError\";\n  }\n};\nvar Schema = class {\n  constructor(definition) {\n    this.definition = definition;\n  }\n  validate(values = {}, message = \"\") {\n    const mergedValues = {\n      ...this.default,\n      ...values\n    };\n    const errors = [];\n    for (const property in this.definition) {\n      const error = this.definition[property].validate(mergedValues[property]);\n      error && errors.push(`${property}: ${error}`);\n    }\n    if (errors.length) {\n      throw buildSchemaValidationError(errors, message);\n    }\n    return mergedValues;\n  }\n  get default() {\n    const defaultValues = {};\n    for (const property in this.definition) {\n      const defaultValue = this.definition[property].default;\n      if (defaultValue !== void 0) {\n        defaultValues[property] = defaultValue;\n      }\n    }\n    return defaultValues;\n  }\n};\n\n// src/values/value.ts\nvar Value = class {\n  constructor(baseConfig = {}) {\n    this.baseConfig = baseConfig;\n  }\n  validate(value) {\n    if (this.baseConfig.required && isNullOrUndefined(value)) {\n      return \"value is required.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.baseConfig.default instanceof Function ? this.baseConfig.default() : this.baseConfig.default;\n  }\n  get required() {\n    return this.baseConfig.required === true;\n  }\n};\nfunction isUndefined(value) {\n  return value === void 0;\n}\nfunction isNull(value) {\n  return value === null;\n}\nfunction isNullOrUndefined(value) {\n  return isUndefined(value) || isNull(value);\n}\n\n// src/values/number-value.ts\nvar NumberValue = class {\n  constructor(config = {}) {\n    this.config = config;\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (!isNumberOrUndefined(value)) {\n      return \"value is not a number.\";\n    }\n    if (value < this.config.min) {\n      return `minimum value of ${this.config.min} not respected.`;\n    }\n    if (value > this.config.max) {\n      return `maximum value of ${this.config.max} not respected.`;\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isNumberOrUndefined(value) {\n  return isUndefined(value) || isNumber(value);\n}\nfunction isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n}\n\n// src/values/boolean-value.ts\nvar BooleanValue = class {\n  constructor(config = {}) {\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (!isBooleanOrUndefined(value)) {\n      return \"value is not a boolean.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isBooleanOrUndefined(value) {\n  return isUndefined(value) || isBoolean(value);\n}\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n\n// src/values/string-value.ts\nvar urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar StringValue = class {\n  constructor(config = {}) {\n    this.config = {\n      emptyAllowed: true,\n      url: false,\n      ...config\n    };\n    this.value = new Value(this.config);\n  }\n  validate(value) {\n    const { emptyAllowed, url, regex, constrainTo } = this.config;\n    const valueValidation = this.value.validate(value);\n    if (valueValidation) {\n      return valueValidation;\n    }\n    if (isUndefined(value)) {\n      return null;\n    }\n    if (!isString(value)) {\n      return \"value is not a string.\";\n    }\n    if (!emptyAllowed && !value.length) {\n      return \"value is an empty string.\";\n    }\n    if (url && !urlRegex.test(value)) {\n      return \"value is not a valid URL.\";\n    }\n    if (regex && !regex.test(value)) {\n      return `value did not match provided regex ${regex}`;\n    }\n    if (constrainTo && !constrainTo.includes(value)) {\n      const values = constrainTo.join(\", \");\n      return `value should be one of: ${values}.`;\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\n\n// src/values/complex-value.ts\nvar RecordValue = class {\n  constructor(config = {}) {\n    this.config = {\n      options: { required: false },\n      values: {},\n      ...config\n    };\n  }\n  validate(input) {\n    if (isUndefined(input)) {\n      return this.config.options.required ? \"value is required and is currently undefined\" : null;\n    }\n    if (!isRecord(input)) {\n      return \"value is not an object\";\n    }\n    for (const [k, v] of Object.entries(this.config.values)) {\n      if (v.required && isNullOrUndefined(input[k])) {\n        return `value does not contain ${k}`;\n      }\n    }\n    let out = \"\";\n    for (const [key, validator] of Object.entries(this.config.values)) {\n      const value = input[key];\n      const invalidValue = validator.validate(value);\n      if (invalidValue !== null) {\n        out += \" \" + invalidValue;\n      }\n    }\n    return out === \"\" ? null : out;\n  }\n  get default() {\n    return void 0;\n  }\n  get required() {\n    return !!this.config.options.required;\n  }\n};\nfunction isRecord(value) {\n  return value !== void 0 && typeof value === \"object\";\n}\nvar ArrayValue = class {\n  constructor(config = {}) {\n    this.config = config;\n    this.value = new Value(this.config);\n  }\n  validate(input) {\n    if (!isNullOrUndefined(input) && !Array.isArray(input)) {\n      return \"value is not an array\";\n    }\n    const invalid = this.value.validate(input);\n    if (invalid !== null) {\n      return invalid;\n    }\n    if (isNullOrUndefined(input)) {\n      return null;\n    }\n    if (this.config.max !== void 0 && input.length > this.config.max) {\n      return `value contains more than ${this.config.max}`;\n    }\n    if (this.config.min !== void 0 && input.length < this.config.min) {\n      return `value contains less than ${this.config.min}`;\n    }\n    if (this.config.each !== void 0) {\n      let out = \"\";\n      input.forEach((el) => {\n        if (this.config.each.required && isNullOrUndefined(el)) {\n          out = `value is null or undefined: ${input.join(\",\")}`;\n        }\n        const isInvalid = this.validatePrimitiveValue(el, this.config.each);\n        if (isInvalid !== null) {\n          out += \" \" + isInvalid;\n        }\n      });\n      return out === \"\" ? null : out;\n    }\n    return null;\n  }\n  validatePrimitiveValue(v, validator) {\n    if (isBoolean(v)) {\n      return validator.validate(v);\n    } else if (isString(v)) {\n      return validator.validate(v);\n    } else if (isNumber(v)) {\n      return validator.validate(v);\n    } else if (isRecord(v)) {\n      return validator.validate(v);\n    }\n    return \"value is not a primitive value\";\n  }\n  get default() {\n    return void 0;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\n// src/values/enum-value.ts\nvar EnumValue = class {\n  constructor(config) {\n    this.config = config;\n    this.value = new Value(config);\n  }\n  validate(value) {\n    const invalid = this.value.validate(value);\n    if (invalid !== null) {\n      return invalid;\n    }\n    if (isUndefined(value)) {\n      return null;\n    }\n    const valueInEnum = Object.values(this.config.enum).find((enumValue) => enumValue === value);\n    if (!valueInEnum) {\n      return \"value is not in enum.\";\n    }\n    return null;\n  }\n  get default() {\n    return this.value.default;\n  }\n  get required() {\n    return this.value.required;\n  }\n};\nexport {\n  ArrayValue,\n  BooleanValue,\n  EnumValue,\n  NumberValue,\n  RecordValue,\n  Schema,\n  SchemaValidationError,\n  StringValue,\n  Value,\n  isArray,\n  isBoolean,\n  isBooleanOrUndefined,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isNumberOrUndefined,\n  isRecord,\n  isString,\n  isUndefined\n};\n", "import {EnumValue, isArray, RecordValue, StringValue} from '@coveo/bueno';\n\n/**\n * The available sort orders.\n */\nexport enum SortOrder {\n  Ascending = 'ascending',\n  Descending = 'descending',\n}\n\n/**\n * The available criteria that can be used to sort query results.\n */\nexport enum SortBy {\n  /**\n   * Uses standard index ranking factors (adjacency, TDIDF) and custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n   */\n  Relevancy = 'relevancy',\n  /**\n   * Uses only custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n   */\n  QRE = 'qre',\n  /**\n   * Uses the date field to sort the query results. This field typically contains the last modification date of each item. May be in ascending or descending order.\n   */\n  Date = 'date',\n  /**\n   * Uses the value of a specific sortable field to sort the query results. May be in ascending or descending order.\n   */\n  Field = 'field',\n  /**\n   * Does not sort the query results; the index will return result items in an essentially random order.\n   */\n  NoSort = 'nosort',\n}\n\n/**\n * Uses standard index ranking factors (adjacency, TDIDF) and custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n */\nexport type SortByRelevancy = {by: SortBy.Relevancy};\n/**\n * Uses only custom ranking expressions (QREs and QRFs) to compute a ranking score for each query result item, and sorts the query results by descending score value.\n */\nexport type SortByQRE = {by: SortBy.QRE};\n/**\n * Uses the date field to sort the query results. This field typically contains the last modification date of each item. May be in ascending or descending order.\n */\nexport type SortByDate = {by: SortBy.Date; order: SortOrder};\n/**\n * Uses the value of a specific sortable field to sort the query results. May be in ascending or descending order.\n */\nexport type SortByField = {by: SortBy.Field; field: string; order: SortOrder};\n/**\n * Does not sort the query results; the index will return result items in an essentially random order.\n */\nexport type SortByNoSort = {by: SortBy.NoSort};\n\n/** Represents a criterion that can be used to sort query results. */\nexport type SortCriterion =\n  | SortByRelevancy\n  | SortByQRE\n  | SortByDate\n  | SortByField\n  | SortByNoSort;\n\n/**\n * Builds a sort expression that can be understood and executed by the Coveo Platform.\n * @param criterion The criterion to translate to a valid sort query expression.\n */\nexport const buildCriterionExpression = (\n  criterion: SortCriterion | SortCriterion[]\n): string => {\n  if (isArray(criterion)) {\n    return criterion.map((c) => buildCriterionExpression(c)).join(',');\n  }\n\n  switch (criterion.by) {\n    case SortBy.Relevancy:\n    case SortBy.QRE:\n    case SortBy.NoSort:\n      return criterion.by;\n    case SortBy.Date:\n      return `date ${criterion.order}`;\n    case SortBy.Field:\n      return `@${criterion.field} ${criterion.order}`;\n    default:\n      return '';\n  }\n};\n\n/**\n * Utility function that builds a valid `SortByRelevancy` criterion.\n * @returns A `SortByRelevancy` criterion.\n */\nexport const buildRelevanceSortCriterion = (): SortByRelevancy => ({\n  by: SortBy.Relevancy,\n});\n\n/**\n * Utility function that builds a valid `SortByDate` criterion.\n * @param order The order (ascending/descending) on which to sort.\n * @returns A `SortByDate` criterion.\n */\nexport const buildDateSortCriterion = (order: SortOrder): SortByDate => ({\n  by: SortBy.Date,\n  order,\n});\n\n/**\n * Utility function that builds a valid `SortByField` criterion.\n * @param field The sortable field on which to sort.\n * @param order The order (ascending/descending) on which to sort.\n * @returns A `SortByField` criterion.\n */\nexport const buildFieldSortCriterion = (\n  field: string,\n  order: SortOrder\n): SortByField => ({\n  by: SortBy.Field,\n  order,\n  field,\n});\n\n/**\n * Utility function that builds a valid `SortByQRE` criterion.\n * @returns A `SortByQRE` criterion.\n */\nexport const buildQueryRankingExpressionSortCriterion = (): SortByQRE => ({\n  by: SortBy.QRE,\n});\n\n/**\n * Utility function that builds a valid `SortByNoSort` criterion.\n * @returns A `SortByNoSort` criterion.\n */\nexport const buildNoSortCriterion = (): SortByNoSort => ({by: SortBy.NoSort});\n\nexport const criterionDefinition = new RecordValue({\n  values: {\n    by: new EnumValue({enum: SortBy, required: true}),\n    order: new EnumValue({enum: SortOrder}),\n    field: new StringValue(),\n  },\n});\n", "import {\n  buildCriterionExpression,\n  buildRelevanceSortCriterion,\n} from './criteria';\n\nexport type SortCriteriaState = string;\n\nexport function getSortCriteriaInitialState(): SortCriteriaState {\n  return buildCriterionExpression(buildRelevanceSortCriterion());\n}\n", "export const getSearchHubInitialState = () => 'default';\n", "export const VERSION = process.env.VERSION || 'Test version';\n", "import {SearchPageClientProvider} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events';\nimport {getSearchHubInitialState} from '../../features/search-hub/search-hub-state';\nimport {\n  ConfigurationSection,\n  ContextSection,\n  PipelineSection,\n  QuerySection,\n  SearchHubSection,\n} from '../../state/state-sections';\nimport {VERSION} from '../../utils/version';\n\nexport const getLanguage = (state: ConfigurationSection) => {\n  const langKey = state.configuration.search.locale.split('-')[0];\n  if (!langKey || langKey.length !== 2) {\n    return 'en';\n  }\n  return langKey;\n};\n\nexport type StateNeededByBaseAnalyticsProvider = ConfigurationSection &\n  Partial<SearchHubSection & PipelineSection & QuerySection & ContextSection>;\n\nexport abstract class BaseAnalyticsProvider<\n  T extends StateNeededByBaseAnalyticsProvider,\n> implements SearchPageClientProvider\n{\n  protected readonly state: T;\n  constructor(protected getState: () => T) {\n    this.state = getState();\n  }\n\n  public abstract getSearchUID(): string;\n  public abstract getPipeline(): string;\n  public abstract getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  >;\n\n  public getLanguage() {\n    return getLanguage(this.state);\n  }\n\n  public getBaseMetadata() {\n    const {context} = this.state;\n    const contextValues = context?.contextValues || {};\n    const formattedObject: Record<string, string | string[]> = {};\n    for (const [key, value] of Object.entries(contextValues)) {\n      const formattedKey = `context_${key}`;\n      formattedObject[formattedKey] = value;\n    }\n    formattedObject['coveoHeadlessVersion'] = VERSION;\n    return formattedObject;\n  }\n\n  public getOriginContext() {\n    return this.state.configuration.analytics.originContext;\n  }\n\n  public getOriginLevel1() {\n    return this.state.searchHub || getSearchHubInitialState();\n  }\n\n  public getOriginLevel2() {\n    return this.state.configuration.analytics.originLevel2;\n  }\n\n  public getOriginLevel3() {\n    return this.state.configuration.analytics.originLevel3;\n  }\n\n  public getIsAnonymous() {\n    return this.state.configuration.analytics.anonymous;\n  }\n}\n", "import {\n  AnalyticsClientSendEventHook,\n  CoveoAnalyticsClient,\n  IRuntimeEnvironment,\n  history,\n} from 'coveo.analytics';\nimport {Logger} from 'pino';\nimport {clone} from '../../utils/utils';\nimport {PreprocessRequest} from '../preprocess-request';\n\nexport const getVisitorID = (options: {\n  runtimeEnvironment?: IRuntimeEnvironment;\n}) => new CoveoAnalyticsClient(options).getCurrentVisitorId();\n\nexport const clearAnalyticsClient = (options: {\n  runtimeEnvironment?: IRuntimeEnvironment;\n}) => {\n  const client = new CoveoAnalyticsClient(options);\n  client.clear();\n  client.deleteHttpOnlyVisitorId();\n};\n\nexport const historyStore = new history.HistoryStore();\n\nexport const wrapPreprocessRequest = (\n  logger: Logger,\n  preprocessRequest?: PreprocessRequest\n) => {\n  return typeof preprocessRequest === 'function'\n    ? (...args: Parameters<PreprocessRequest>) => {\n        const untaintedOutput = clone(args[0]);\n        try {\n          return preprocessRequest.apply(preprocessRequest, args);\n        } catch (e) {\n          logger.error(\n            e as Error,\n            'Error in analytics preprocessRequest. Returning original request.'\n          );\n          return untaintedOutput;\n        }\n      }\n    : undefined;\n};\n\nexport const wrapAnalyticsClientSendEventHook = (\n  logger: Logger,\n  hook: AnalyticsClientSendEventHook\n) => {\n  return (...args: Parameters<AnalyticsClientSendEventHook>) => {\n    const untaintedOutput = clone(args[1]);\n    try {\n      return hook.apply(hook, args);\n    } catch (e) {\n      logger.error(\n        e as Error,\n        'Error in analytics hook. Returning original request.'\n      );\n      return untaintedOutput;\n    }\n  };\n};\n", "import {createRelay} from '@coveo/relay';\nimport {\n  CoveoSearchPageClient,\n  SearchPageClientProvider,\n  AnalyticsClientSendEventHook,\n} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events';\nimport {Logger} from 'pino';\nimport {\n  buildFacetStateMetadata,\n  getStateNeededForFacetMetadata,\n} from '../../features/facets/facet-set/facet-set-analytics-actions-utils';\nimport {FacetSortCriterion} from '../../features/facets/facet-set/interfaces/request';\nimport {DateFacetValue} from '../../features/facets/range-facets/date-facet-set/interfaces/response';\nimport {RangeFacetSortCriterion} from '../../features/facets/range-facets/generic/interfaces/request';\nimport {NumericFacetValue} from '../../features/facets/range-facets/numeric-facet-set/interfaces/response';\nimport {OmniboxSuggestionMetadata} from '../../features/query-suggest/query-suggest-analytics-actions';\nimport {getQueryInitialState} from '../../features/query/query-state';\nimport {getSearchInitialState} from '../../features/search/search-state';\nimport {getSortCriteriaInitialState} from '../../features/sort-criteria/sort-criteria-state';\nimport {StaticFilterValueMetadata} from '../../features/static-filter-set/static-filter-set-actions';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {ConfigurationSection} from '../../state/state-sections';\nimport {PreprocessRequest} from '../preprocess-request';\nimport {BaseAnalyticsProvider} from './base-analytics';\nimport {\n  historyStore,\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils';\n\nexport type StateNeededBySearchAnalyticsProvider = ConfigurationSection &\n  Partial<Omit<SearchAppState, 'configuration'>>;\n\nexport class SearchAnalyticsProvider\n  extends BaseAnalyticsProvider<StateNeededBySearchAnalyticsProvider>\n  implements SearchPageClientProvider\n{\n  private static fallbackPipelineName = 'default';\n\n  public getFacetState() {\n    return buildFacetStateMetadata(\n      getStateNeededForFacetMetadata(this.getState())\n    );\n  }\n\n  public getPipeline() {\n    return (\n      this.state.pipeline ||\n      this.state.search?.response.pipeline ||\n      SearchAnalyticsProvider.fallbackPipelineName\n    );\n  }\n\n  public getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  > {\n    return {\n      queryText: this.queryText,\n      responseTime: this.responseTime,\n      results: this.resultURIs,\n      numberOfResults: this.numberOfResults,\n    };\n  }\n\n  public getSearchUID(): string {\n    const newState = this.getState();\n    return (\n      newState.search?.searchResponseId ||\n      newState.search?.response.searchUid ||\n      getSearchInitialState().response.searchUid\n    );\n  }\n\n  public getSplitTestRunName(): string | undefined {\n    return this.state.search?.response.splitTestRun;\n  }\n\n  public getSplitTestRunVersion(): string | undefined {\n    const hasSplitTestRun = !!this.getSplitTestRunName();\n    const effectivePipelineWithSplitTestRun =\n      this.state.search?.response.pipeline ||\n      this.state.pipeline ||\n      SearchAnalyticsProvider.fallbackPipelineName;\n\n    return hasSplitTestRun ? effectivePipelineWithSplitTestRun : undefined;\n  }\n\n  public getBaseMetadata() {\n    const state = this.getState();\n    const baseObject = super.getBaseMetadata();\n\n    const generativeQuestionAnsweringId =\n      state.search?.response?.extendedResults?.generativeQuestionAnsweringId;\n\n    if (generativeQuestionAnsweringId) {\n      baseObject['generativeQuestionAnsweringId'] =\n        generativeQuestionAnsweringId;\n    }\n\n    return baseObject;\n  }\n\n  public getFacetMetadata(facetId: string, facetValue: string) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      facetValue,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  public getFacetClearAllMetadata(facetId: string) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  public getFacetSortMetadata(\n    facetId: string,\n    criteria: FacetSortCriterion | RangeFacetSortCriterion\n  ) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      criteria,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  public getRangeFacetBreadcrumbMetadata(\n    facetId: string,\n    facetValue: DateFacetValue | NumericFacetValue\n  ) {\n    const facetRequest = this.getFacetRequest(facetId);\n    const facetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      facetId,\n      facetField,\n      facetRangeEnd: facetValue.end,\n      facetRangeEndInclusive: facetValue.endInclusive,\n      facetRangeStart: facetValue.start,\n      facetTitle: `${facetField}_${facetId}`,\n    };\n  }\n\n  private getFacetRequest = (id: string) => {\n    return (\n      this.state.facetSet?.[id]?.request ||\n      this.state.categoryFacetSet?.[id]?.request ||\n      this.state.dateFacetSet?.[id]?.request ||\n      this.state.numericFacetSet?.[id]?.request ||\n      this.state.automaticFacetSet?.set[id]?.response\n    );\n  };\n\n  public getResultSortMetadata() {\n    return {\n      ...this.getBaseMetadata(),\n      resultsSortBy: this.state.sortCriteria ?? getSortCriteriaInitialState(),\n    };\n  }\n\n  public getStaticFilterToggleMetadata(\n    staticFilterId: string,\n    staticFilterValue: StaticFilterValueMetadata\n  ) {\n    return {\n      ...this.getBaseMetadata(),\n      staticFilterId,\n      staticFilterValue,\n    };\n  }\n\n  public getStaticFilterClearAllMetadata(staticFilterId: string) {\n    return {\n      ...this.getBaseMetadata(),\n      staticFilterId,\n    };\n  }\n\n  public getUndoTriggerQueryMetadata(undoneQuery: string) {\n    return {\n      ...this.getBaseMetadata(),\n      undoneQuery,\n    };\n  }\n\n  public getCategoryFacetBreadcrumbMetadata(\n    categoryFacetId: string,\n    categoryFacetPath: string[]\n  ) {\n    const facetRequest = this.getFacetRequest(categoryFacetId);\n    const categoryFacetField = facetRequest?.field ?? '';\n    return {\n      ...this.getBaseMetadata(),\n      categoryFacetId,\n      categoryFacetField,\n      categoryFacetPath,\n      categoryFacetTitle: `${categoryFacetField}_${categoryFacetId}`,\n    };\n  }\n\n  public getOmniboxAnalyticsMetadata(id: string, suggestion: string) {\n    const querySuggest = this.state.querySuggest && this.state.querySuggest[id];\n    const suggestions = querySuggest!.completions.map(\n      (completion) => completion.expression\n    );\n\n    const lastIndex = querySuggest!.partialQueries.length - 1;\n    const partialQuery = querySuggest!.partialQueries[lastIndex] || '';\n    const querySuggestResponseId = querySuggest!.responseId;\n    return {\n      ...this.getBaseMetadata(),\n      suggestionRanking: suggestions.indexOf(suggestion),\n      partialQuery,\n      partialQueries:\n        querySuggest!.partialQueries.length > 0\n          ? querySuggest!.partialQueries\n          : '',\n      suggestions: suggestions.length > 0 ? suggestions : '',\n      querySuggestResponseId,\n    };\n  }\n\n  public getInterfaceChangeMetadata() {\n    return {\n      ...this.getBaseMetadata(),\n      interfaceChangeTo: this.state.configuration.analytics.originLevel2,\n    };\n  }\n\n  public getOmniboxFromLinkMetadata(metadata: OmniboxSuggestionMetadata) {\n    return {\n      ...this.getBaseMetadata(),\n      ...metadata,\n    };\n  }\n\n  public getGeneratedAnswerMetadata() {\n    const state = this.getState();\n    const formattedObject: Record<string, string | boolean> = {};\n    if (state.generatedAnswer?.isVisible !== undefined) {\n      formattedObject['showGeneratedAnswer'] = state.generatedAnswer.isVisible;\n    }\n    return formattedObject;\n  }\n\n  private get resultURIs() {\n    return this.results?.map((r) => ({\n      documentUri: r.uri,\n      documentUriHash: r.raw.urihash,\n    }));\n  }\n\n  protected get results() {\n    return this.state.search?.response.results;\n  }\n\n  protected get queryText() {\n    return this.state.query?.q || getQueryInitialState().q;\n  }\n\n  protected get responseTime() {\n    return this.state.search?.duration || getSearchInitialState().duration;\n  }\n\n  protected get numberOfResults() {\n    return (\n      this.state.search?.response.totalCountFiltered ||\n      getSearchInitialState().response.totalCountFiltered\n    );\n  }\n}\n\ninterface LegacyConfigureAnalyticsOptions {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: SearchPageClientProvider;\n  getState(): StateNeededBySearchAnalyticsProvider;\n}\n\nexport const configureAnalytics = (\n  state: StateNeededBySearchAnalyticsProvider\n) => {\n  const token = state.configuration.accessToken;\n  const trackingId = state.configuration.analytics.trackingId;\n  const {emit} = createRelay({\n    url: state.configuration.analytics.nextApiBaseUrl,\n    token,\n    trackingId,\n  });\n  return emit;\n};\n\nexport const configureLegacyAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new SearchAnalyticsProvider(getState),\n}: LegacyConfigureAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const endpoint = state.configuration.analytics.apiBaseUrl;\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enableAnalytics = state.configuration.analytics.enabled;\n  const client = new CoveoSearchPageClient(\n    {\n      token,\n      endpoint,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enableAnalytics) {\n    client.disable();\n  }\n  return client;\n};\n\nexport const getPageID = () => {\n  const actions = historyStore.getHistory();\n  const lastPageView = actions.reverse().find((action) => {\n    return action.name === 'PageView' && action.value;\n  });\n\n  if (!lastPageView) {\n    return '';\n  }\n\n  return lastPageView.value!;\n};\n", null, null, "export function createAbortController(): AbortController | null {\n  // For nodejs environments only, we want to load the implementation of AbortController from node-abort-controller package.\n  // For browser environments, we need to make sure that we don't use AbortController as it might not be available (Locker Service in Salesforce)\n  // This is not something that can be polyfilled in a meaningful manner.\n  // This is a low level browser API after all, and only JS code inside a polyfill cannot actually cancel network requests done by the browser.\n\n  if (typeof window === 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const {AbortController: nodeAbort} = require('node-abort-controller');\n    return new nodeAbort() as AbortController;\n  }\n  return typeof AbortController === 'undefined' ? null : new AbortController();\n}\n", "export class URLPath {\n  private _basePath: string;\n  private _params: Record<string, string> = {};\n\n  constructor(basePath: string) {\n    this._basePath = basePath;\n  }\n\n  public addParam(name: string, value: string) {\n    this._params = {\n      ...this.params,\n      [name]: value,\n    };\n  }\n\n  get basePath() {\n    return this._basePath;\n  }\n\n  get params() {\n    return this._params;\n  }\n\n  get hasParams() {\n    return Object.entries(this._params).length;\n  }\n\n  get href() {\n    return this.hasParams\n      ? `${this.basePath}?${Object.entries(this.params)\n          .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n          .join('&')}`\n      : this.basePath;\n  }\n}\n\nexport type PlatformCombination =\n  | {env: 'dev'; region: 'us' | 'eu'}\n  | {env: 'stg'; region: 'us'}\n  | {env: 'hipaa'; region: 'us'}\n  | {env: 'prod'; region: 'us' | 'eu' | 'au'};\n\nexport type PlatformEnvironment = PlatformCombination['env'];\n\nexport const isCoveoPlatformURL = (url: string) =>\n  /^https:\\/\\/platform(dev|stg|hipaa)?(-)?(eu|au)?\\.cloud\\.coveo\\.com/.test(\n    url\n  );\n\nexport const matchCoveoOrganizationEndpointUrl = (\n  url: string,\n  organizationId: string\n): {organizationId?: string; environment?: PlatformEnvironment} | null => {\n  const match = matchCoveoOrganizationEndpointUrlAnyOrganization(url);\n  return match && match.organizationId === organizationId ? match : null;\n};\n\nexport const matchCoveoOrganizationEndpointUrlAnyOrganization = (\n  url: string\n): {organizationId?: string; environment?: PlatformEnvironment} | null => {\n  const match = url.match(\n    /^https:\\/\\/(?<organizationId>\\w+)\\.org(?<environment>dev|stg|hipaa)?\\.coveo\\.com/\n  );\n  return match?.groups ? match.groups : null;\n};\n", "import {fetchEventSource} from '@microsoft/fetch-event-source';\nimport {Logger} from 'pino';\nimport {SearchAppState} from '../..';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {GeneratedAnswerErrorPayload} from '../../features/generated-answer/generated-answer-actions';\nimport {createAbortController} from '../../utils/abort-controller-polyfill';\nimport {URLPath} from '../../utils/url-utils';\nimport {resetTimeout} from '../../utils/utils';\nimport {SearchAPIClient} from '../search/search-api-client';\nimport {GeneratedAnswerStreamEventData} from './generated-answer-event-payload';\nimport {GeneratedAnswerStreamRequest} from './generated-answer-request';\n\nexport interface GeneratedAnswerAPIClientOptions {\n  logger: Logger;\n}\n\nexport interface AsyncThunkGeneratedAnswerOptions<\n  T extends Partial<SearchAppState>,\n> extends AsyncThunkOptions<\n    T,\n    ClientThunkExtraArguments<SearchAPIClient, GeneratedAnswerAPIClient>\n  > {}\n\nconst buildStreamingUrl = (url: string, orgId: string, streamId: string) =>\n  new URLPath(\n    `${url}/rest/organizations/${orgId}/machinelearning/streaming/${streamId}`\n  ).href;\n\nconst MAX_RETRIES = 3;\nconst MAX_TIMEOUT = 5000;\nconst EVENT_STREAM_CONTENT_TYPE = 'text/event-stream';\nexport const RETRYABLE_STREAM_ERROR_CODE = 1;\n\nclass RetryableError extends Error {}\nclass FatalError extends Error {\n  constructor(public payload: GeneratedAnswerErrorPayload) {\n    super(payload.message);\n  }\n}\n\ninterface StreamCallbacks {\n  write: (data: GeneratedAnswerStreamEventData) => void;\n  abort: (error: GeneratedAnswerErrorPayload) => void;\n  close: () => void;\n  resetAnswer: () => void;\n}\n\nexport class GeneratedAnswerAPIClient {\n  private logger: Logger;\n\n  constructor(options: GeneratedAnswerAPIClientOptions) {\n    this.logger = options.logger;\n  }\n\n  streamGeneratedAnswer(\n    params: GeneratedAnswerStreamRequest,\n    callbacks: StreamCallbacks\n  ) {\n    const {url, organizationId, streamId, accessToken} = params;\n    const {write, abort, close, resetAnswer} = callbacks;\n\n    if (!streamId) {\n      this.logger.error('No stream ID found');\n      return;\n    }\n\n    let retryCount = 0;\n    let timeout: ReturnType<typeof setTimeout> | undefined;\n\n    const retryStream = () => {\n      abortController?.abort();\n      resetAnswer();\n      stream();\n    };\n\n    const refreshTimeout = () => {\n      timeout = resetTimeout(retryStream, timeout, MAX_TIMEOUT);\n    };\n\n    const abortController = createAbortController();\n\n    const stream = () =>\n      fetchEventSource(buildStreamingUrl(url, organizationId, streamId), {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          accept: '*/*',\n        },\n        signal: abortController?.signal,\n        async onopen(response) {\n          if (\n            response.ok &&\n            response.headers.get('content-type') === EVENT_STREAM_CONTENT_TYPE\n          ) {\n            return;\n          }\n          const isClientSideError =\n            response.status >= 400 &&\n            response.status < 500 &&\n            response.status !== 429;\n          if (isClientSideError) {\n            throw new FatalError({\n              message: 'Error opening stream',\n              code: response.status,\n            });\n          } else {\n            throw new RetryableError();\n          }\n        },\n        onmessage: (event) => {\n          const data: GeneratedAnswerStreamEventData = JSON.parse(event.data);\n          if (data.finishReason === 'ERROR') {\n            clearTimeout(timeout);\n            abortController?.abort();\n            abort({\n              message: data.errorMessage,\n              code: data.statusCode,\n            });\n            return;\n          }\n          write(data);\n          retryCount = 0;\n          if (data.finishReason === 'COMPLETED') {\n            clearTimeout(timeout);\n            close();\n          } else {\n            refreshTimeout();\n          }\n        },\n        onerror: (err) => {\n          clearTimeout(timeout);\n          if (err instanceof FatalError) {\n            abortController?.abort();\n            abort(err);\n            throw err;\n          }\n          if (++retryCount > MAX_RETRIES) {\n            this.logger.info('Maximum retry exceeded.');\n            const error = {\n              message: 'Failed to complete stream.',\n              code: RETRYABLE_STREAM_ERROR_CODE,\n            };\n            abortController?.abort();\n            abort(error);\n            throw new FatalError(error);\n          }\n          this.logger.info(`Retrying...(${retryCount}/${MAX_RETRIES})`);\n          resetAnswer();\n        },\n      });\n\n    stream();\n\n    return abortController;\n  }\n}\n", "import {AnalyticsClientOrigin} from 'coveo.analytics/dist/definitions/client/analyticsRequestClient';\nimport {SearchApiMethod, SearchOrigin} from './search/search-metadata';\n\nexport interface PlatformRequestOptions extends RequestInit {\n  url: string;\n}\n\nexport type PlatformClientOrigin =\n  | AnalyticsClientOrigin\n  | 'searchApiFetch'\n  | 'insightApiFetch'\n  | 'caseAssistApiFetch'\n  | 'commerceApiFetch';\n\nexport interface RequestMetadata {\n  /**\n   * Method called on the client.\n   */\n  method: SearchApiMethod;\n  /**\n   * Origin of the client, helps differentiate in between features using the same method.\n   */\n  origin?: SearchOrigin;\n}\n\nexport type PreprocessRequest = (\n  /**\n   * The HTTP request sent to the Platform.\n   */\n  request: PlatformRequestOptions,\n  /**\n   * Origin of the request.\n   */\n  clientOrigin: PlatformClientOrigin,\n  /**\n   * Optional metadata provided for the request.\n   */\n  metadata?: RequestMetadata\n) => PlatformRequestOptions | Promise<PlatformRequestOptions>;\n\nexport const NoopPreprocessRequest: PreprocessRequest = (request) => request;\n", "import {PlatformResponse} from './platform-client';\nimport {BaseParam} from './platform-service-params';\nimport {AllSearchAPIResponse} from './search/search-api-client';\nimport {\n  SearchAPIErrorWithStatusCode,\n  SearchAPIErrorWithExceptionInBody,\n} from './search/search-api-error-response';\nimport {AuthenticationParam} from './search/search-api-params';\n\nexport function pickNonBaseParams<\n  Params extends BaseParam & AuthenticationParam,\n>(req: Params) {\n  // cheap version of _.omit\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {url, accessToken, organizationId, authentication, ...nonBase} = req;\n  return nonBase;\n}\n\nexport const unwrapError = (\n  payload: PlatformResponse<AllSearchAPIResponse>\n): SearchAPIErrorWithStatusCode => {\n  const {response} = payload;\n\n  if (response.body) {\n    return unwrapSearchApiError(payload);\n  }\n\n  return unwrapClientError(response);\n};\n\nconst unwrapSearchApiError = (\n  payload: PlatformResponse<AllSearchAPIResponse>\n) => {\n  if (isSearchAPIException(payload)) {\n    return unwrapErrorByException(payload);\n  }\n\n  if (isSearchAPIErrorWithStatusCode(payload)) {\n    return payload.body;\n  }\n\n  return {message: 'unknown', statusCode: 0, type: 'unknown'};\n};\n\nconst unwrapClientError = (response: Response) => {\n  // Transform an error to an object https://stackoverflow.com/a/26199752\n  const body = JSON.parse(\n    JSON.stringify(response, Object.getOwnPropertyNames(response))\n  ) as Error;\n\n  return {\n    ...body,\n    message: `Client side error: ${body.message || ''}`,\n    statusCode: 400,\n    type: 'ClientError',\n  };\n};\n\nfunction isSearchAPIErrorWithStatusCode(\n  r: PlatformResponse<AllSearchAPIResponse>\n): r is PlatformResponse<SearchAPIErrorWithStatusCode> {\n  return (\n    (r as PlatformResponse<SearchAPIErrorWithStatusCode>).body.statusCode !==\n    undefined\n  );\n}\n\nfunction isSearchAPIException(\n  r: PlatformResponse<AllSearchAPIResponse>\n): r is PlatformResponse<SearchAPIErrorWithExceptionInBody> {\n  return (\n    (r as PlatformResponse<SearchAPIErrorWithExceptionInBody>).body\n      .exception !== undefined\n  );\n}\n\nconst unwrapErrorByException = (\n  res: PlatformResponse<SearchAPIErrorWithExceptionInBody>\n): SearchAPIErrorWithStatusCode => ({\n  message: res.body.exception.code,\n  statusCode: res.response.status,\n  type: res.body.exception.code,\n});\n", "//TODO V3: remove this import, global fetch is a requirement now.\n//@ts-expect-error package is just an alias.\nimport fetch from '@coveo/please-give-me-fetch';\nimport {backOff} from 'exponential-backoff';\nimport {Logger} from 'pino';\nimport {DisconnectedError, ExpiredTokenError} from '../utils/errors';\nimport {PlatformCombination, PlatformEnvironment} from '../utils/url-utils';\nimport {clone} from '../utils/utils';\nimport {canBeFormUrlEncoded, encodeAsFormUrl} from './form-url-encoder';\nimport {\n  PlatformClientOrigin,\n  PlatformRequestOptions,\n  PreprocessRequest,\n  RequestMetadata,\n} from './preprocess-request';\n\nexport type HttpMethods = 'POST' | 'GET' | 'DELETE' | 'PUT';\nexport type HTTPContentType =\n  | 'application/json'\n  | 'application/x-www-form-urlencoded'\n  | 'text/html';\n\nfunction isThrottled(status: number): boolean {\n  return status === 429;\n}\n\nexport interface PlatformClientCallOptions {\n  origin: PlatformClientOrigin;\n  url: string;\n  method: HttpMethods;\n  contentType: HTTPContentType;\n  headers?: Record<string, string>;\n  requestParams: unknown;\n  accessToken: string;\n  preprocessRequest: PreprocessRequest;\n  requestMetadata?: RequestMetadata;\n  logger: Logger;\n  signal?: AbortSignal;\n}\n\nexport interface PlatformResponse<T> {\n  body: T;\n  response: Response;\n}\n\nexport type PlatformClientCallError =\n  | ExpiredTokenError\n  | DisconnectedError\n  | Error;\n\nexport class PlatformClient {\n  static async call(\n    options: PlatformClientCallOptions\n  ): Promise<Response | PlatformClientCallError> {\n    const defaultRequestOptions = buildDefaultRequestOptions(options);\n    const {logger} = options;\n\n    const requestInfo = await PlatformClient.preprocessRequest(\n      defaultRequestOptions,\n      options\n    );\n\n    logger.info(requestInfo, 'Platform request');\n\n    const {url, ...requestData} = requestInfo;\n    const request = async () => {\n      const response = await fetch(url, requestData);\n      if (isThrottled(response.status)) {\n        throw response;\n      }\n      return response;\n    };\n\n    try {\n      const response = await backOff(request, {\n        retry: (e: Response) => {\n          const shouldRetry = e && isThrottled(e.status);\n          shouldRetry && logger.info('Platform retrying request');\n          return shouldRetry;\n        },\n      });\n\n      if (response.status === 419) {\n        logger.info('Platform renewing token');\n        throw new ExpiredTokenError();\n      }\n\n      if (response.status === 404) {\n        throw new DisconnectedError(url, response.status);\n      }\n\n      logger.info({response, requestInfo}, 'Platform response');\n\n      return response;\n    } catch (error) {\n      if ((error as PlatformClientCallError).message === 'Failed to fetch') {\n        return new DisconnectedError(url);\n      }\n\n      return error as PlatformClientCallError;\n    }\n  }\n\n  private static async preprocessRequest(\n    defaultRequestOptions: PlatformRequestOptions,\n    options: PlatformClientCallOptions\n  ) {\n    const {origin, preprocessRequest, logger, requestMetadata} = options;\n    const {signal, ...withoutSignal} = defaultRequestOptions;\n    const untaintedOutput: PlatformRequestOptions = clone(withoutSignal);\n\n    try {\n      const processedRequest = await preprocessRequest(\n        defaultRequestOptions,\n        origin,\n        requestMetadata\n      );\n      return {\n        ...defaultRequestOptions,\n        ...processedRequest,\n      };\n    } catch (e) {\n      logger.error(\n        e as Error,\n        'Platform request preprocessing failed. Returning default request options.'\n      );\n    }\n    return untaintedOutput;\n  }\n}\n\ninterface URLOptions<E extends PlatformEnvironment> {\n  environment?: E;\n  region?: Extract<PlatformCombination, {env: E}>['region'];\n  multiRegionSubDomain?: string;\n}\n\nfunction coveoCloudURL<E extends PlatformEnvironment>(\n  subdomain: string,\n  options?: URLOptions<E>\n) {\n  const urlEnv =\n    !options || !options.environment || options.environment === 'prod'\n      ? ''\n      : options.environment;\n  const urlRegion =\n    !options || !options.region || options.region === 'us'\n      ? ''\n      : `-${options.region}`;\n\n  return `https://${subdomain}${urlEnv}${urlRegion}.cloud.coveo.com`;\n}\n\n/**\n * Returns the unique endpoint(s) for a given organization identifier.\n * @param orgId The organization identifier.\n * @param env Optional. The environment (prod, hipaa, staging, dev) that the organization belongs to. Defaults to `prod`.\n * @returns\n */\nexport function getOrganizationEndpoints(\n  orgId: string,\n  env: PlatformEnvironment = 'prod'\n) {\n  const envSuffix = env === 'prod' ? '' : env;\n\n  const platform = `https://${orgId}.org${envSuffix}.coveo.com`;\n  const analytics = `https://${orgId}.analytics.org${envSuffix}.coveo.com`;\n  const search = `${platform}/rest/search/v2`;\n  const admin = `https://${orgId}.admin.org${envSuffix}.coveo.com`;\n\n  return {platform, analytics, search, admin};\n}\n\n/**\n * Returns the base Coveo platform URL, based on environment and region.\n * @deprecated Coveo now offers organization-specific endpoints. Consider using the getOrganizationEndpoints utility function instead.\n *\n * @param options\n * @returns string\n */\nexport function platformUrl<E extends PlatformEnvironment>(\n  options?: URLOptions<E>\n) {\n  if (options?.multiRegionSubDomain) {\n    return `https://${options.multiRegionSubDomain}.org.coveo.com`;\n  }\n\n  return coveoCloudURL('platform', options);\n}\n\n/**\n * Returns the Coveo analytics platform URL, based on environment and region.\n * @deprecated Coveo now offers organization-specific endpoints. Consider using the getOrganizationEndpoints utility function instead.\n *\n * @param options\n * @returns\n */\nexport function analyticsUrl<E extends PlatformEnvironment = 'prod'>(\n  options?: URLOptions<E>\n) {\n  return coveoCloudURL('analytics', options);\n}\n\nfunction buildDefaultRequestOptions(\n  options: PlatformClientCallOptions\n): PlatformRequestOptions {\n  const {url, method, requestParams, contentType, accessToken, signal} =\n    options;\n  const isMethodWithBody =\n    options.method === 'POST' || options.method === 'PUT';\n  const body = encodeBody(requestParams, contentType);\n\n  return {\n    url,\n    method,\n    headers: {\n      'Content-Type': contentType,\n      Authorization: `Bearer ${accessToken}`,\n      ...options.headers,\n    },\n    ...(isMethodWithBody && {body}),\n    signal,\n  };\n}\n\nfunction encodeBody(body: unknown, contentType: HTTPContentType) {\n  if (contentType === 'application/x-www-form-urlencoded') {\n    return canBeFormUrlEncoded(body) ? encodeAsFormUrl(body) : '';\n  }\n\n  return JSON.stringify(body);\n}\n", "export const loadReducerError = new Error('Failed to load reducers.');\n\nexport class ExpiredTokenError extends Error {\n  constructor() {\n    super();\n    this.name = 'ExpiredToken';\n    this.message = 'The token being used to perform the request is expired.';\n  }\n}\n\nexport class DisconnectedError extends Error {\n  public statusCode: number;\n  constructor(url: string, statusCode?: number) {\n    super();\n    this.name = 'Disconnected';\n    this.message = `Client could not connect to the following URL: ${url}`;\n    this.statusCode = statusCode ?? 0;\n  }\n}\n", "type FormEncodable = Record<string, string | number | boolean>;\n\nexport function encodeAsFormUrl(obj: FormEncodable) {\n  const body = [];\n\n  for (const property in obj) {\n    const key = encodeURIComponent(property);\n    const value = encodeURIComponent(obj[property]);\n    body.push(`${key}=${value}`);\n  }\n\n  return body.join('&');\n}\n\nexport function canBeFormUrlEncoded(obj: unknown): obj is FormEncodable {\n  if (typeof obj !== 'object') {\n    return false;\n  }\n\n  if (!obj) {\n    return false;\n  }\n\n  return Object.values(obj).every(isPrimitive);\n}\n\nfunction isPrimitive(val: unknown) {\n  return (\n    typeof val === 'string' ||\n    typeof val === 'number' ||\n    typeof val === 'boolean'\n  );\n}\n", "import {Logger} from 'pino';\nimport {createAbortController} from '../../utils/abort-controller-polyfill';\n\nexport class APICallsQueue {\n  private currentAbortController: AbortController | null = null;\n\n  /**\n   * Enqueue an API call so that it can get cancelled if another call is enqueued before it finishes.\n   */\n  public async enqueue<T>(\n    call: (signal: AbortSignal | null) => Promise<T>,\n    options: {logger: Logger; warnOnAbort: boolean}\n  ) {\n    const lastAbortController = this.currentAbortController;\n    const abortController = (this.currentAbortController =\n      createAbortController());\n    if (lastAbortController) {\n      if (options.warnOnAbort) {\n        options.logger.warn('Cancelling current pending search query');\n      }\n      lastAbortController.abort();\n    }\n    try {\n      return await call(abortController?.signal ?? null);\n    } finally {\n      if (this.currentAbortController === abortController) {\n        this.currentAbortController = null;\n      }\n    }\n  }\n}\n", "export function findEncoding(response: Response) {\n  const contentType = response.headers.get('content-type') || '';\n  const charset =\n    contentType.split(';').find((part) => part.indexOf('charset=') !== -1) ||\n    '';\n\n  return charset.split('=')[1] || 'UTF-8';\n}\n", "import {history} from 'coveo.analytics';\nimport {FacetOptions} from '../../features/facet-options/facet-options';\nimport {AutomaticFacetRequest} from '../../features/facets/automatic-facet-set/interfaces/request';\nimport {AnyFacetRequest} from '../../features/facets/generic/interfaces/generic-facet-request';\nimport {GeneratedAnswerStyle} from '../../features/generated-answer/generated-response-format';\nimport {URLPath} from '../../utils/url-utils';\nimport {\n  HTTPContentType,\n  HttpMethods,\n  PlatformClientCallOptions,\n} from '../platform-client';\nimport {BaseParam} from '../platform-service-params';\n\nexport interface QueryParam {\n  q?: string;\n}\n\nexport interface PipelineParam {\n  pipeline?: string;\n}\n\nexport interface SearchHubParam {\n  searchHub?: string;\n}\n\nexport interface AdvancedQueryParam {\n  aq?: string;\n}\n\nexport interface ConstantQueryParam {\n  cq?: string;\n}\n\nexport interface LargeQueryParam {\n  lq?: string;\n}\n\nexport interface DisjunctionQueryParam {\n  dq?: string;\n}\n\nexport interface SortCriteriaParam {\n  sortCriteria?: string;\n}\n\nexport interface FirstResultParam {\n  firstResult?: number;\n}\n\nexport interface FacetsParam {\n  facets?: AnyFacetRequest[];\n}\n\nexport interface EnableDidYouMeanParam {\n  enableDidYouMean?: boolean;\n}\n\nexport interface EnableQuerySyntaxParam {\n  enableQuerySyntax?: boolean;\n}\n\nexport interface FieldsToIncludeParam {\n  fieldsToInclude?: string[];\n}\n\nexport interface FacetOptionsParam {\n  facetOptions?: FacetOptions;\n}\n\nexport interface TabParam {\n  tab: string;\n}\n\nexport interface ReferrerParam {\n  referrer: string;\n}\n\nexport interface RecommendationParam {\n  recommendation: string;\n}\n\nexport interface MachineLearningParam {\n  mlParameters: MachineLearningECommerceParameters;\n}\n\nexport interface MachineLearningECommerceParameters {\n  itemIds?: string[];\n  categoryFilter?: string;\n  brandFilter?: string;\n  itemIdsToFilterOut?: string[];\n  removeRecentlySeen?: boolean;\n  recentlySeenConsideredMinutes?: number;\n}\n\nexport interface MaximumAgeParam {\n  maximumAge: number;\n}\n\nexport interface ActionsHistoryParam {\n  actionsHistory?: history.HistoryElement[];\n}\n\nexport interface TimezoneParam {\n  timezone: string;\n}\n\nexport interface AnalyticsParam {\n  analytics?: {\n    actionCause?: string;\n    customData?: object;\n    clientId: string;\n    deviceId?: string;\n    pageId?: string;\n    clientTimestamp: string;\n    documentReferrer: string;\n    originContext: string;\n    userDisplayName?: string;\n    documentLocation?: string;\n    trackingId?: string;\n    capture?: boolean;\n  };\n}\n\nexport interface ExcerptLength {\n  excerptLength?: number;\n}\n\nexport interface AuthenticationParam {\n  authentication?: string;\n}\nexport interface AutomaticFacetsParams {\n  generateAutomaticFacets?: {\n    desiredCount: number;\n    numberOfValues?: number;\n    currentFacets?: AutomaticFacetRequest[];\n  };\n}\n\nexport interface PipelineRuleParams {\n  pipelineRuleParameters?: PipelineRuleParameters;\n}\n\nexport interface PipelineRuleParameters {\n  mlGenerativeQuestionAnswering?: GenQAParameters;\n}\n\nexport interface GenQAParameters {\n  responseFormat: ResponseFormatParameters;\n}\n\nexport interface ResponseFormatParameters {\n  answerStyle: GeneratedAnswerStyle;\n}\n\nexport const baseSearchRequest = (\n  req: BaseParam & AuthenticationParam,\n  method: HttpMethods,\n  contentType: HTTPContentType,\n  path: string\n): Pick<\n  PlatformClientCallOptions,\n  'accessToken' | 'method' | 'contentType' | 'url' | 'origin'\n> => {\n  const url = new URLPath(`${req.url}${path}`);\n\n  url.addParam('organizationId', req.organizationId);\n\n  if (req.authentication) {\n    url.addParam('authentication', req.authentication);\n  }\n  return {\n    accessToken: req.accessToken,\n    method,\n    contentType,\n    url: url.href,\n    origin: 'searchApiFetch',\n  };\n};\n\nexport const getOrganizationIdQueryParam = (req: BaseParam) =>\n  `organizationId=${req.organizationId}`;\n\nexport const getAuthenticationQueryParam = (req: AuthenticationParam) =>\n  `authentication=${encodeURIComponent(req.authentication!)}`;\n", "import {Logger} from 'pino';\nimport {URLPath} from '../../../utils/url-utils';\nimport {pickNonBaseParams, unwrapError} from '../../api-client-utils';\nimport {PlatformClient} from '../../platform-client';\nimport {PreprocessRequest, RequestMetadata} from '../../preprocess-request';\nimport {findEncoding} from '../encoding-finder';\nimport {SearchAPIErrorWithStatusCode} from '../search-api-error-response';\nimport {baseSearchRequest} from '../search-api-params';\nimport {HtmlRequest} from './html-request';\n\nexport interface HtmlApiClient {\n  html: (req: HtmlRequest) => Promise<\n    | {\n        success: string;\n        error?: undefined;\n      }\n    | {\n        error: SearchAPIErrorWithStatusCode;\n        success?: undefined;\n      }\n  >;\n}\n\nexport interface HtmlAPIClientOptions {\n  logger: Logger;\n  preprocessRequest: PreprocessRequest;\n  requestMetadata?: RequestMetadata;\n}\n\nexport const buildContentURL = (req: HtmlRequest, path: string) => {\n  const url = new URLPath(`${req.url}${path}`);\n  url.addParam('access_token', req.accessToken);\n  url.addParam('organizationId', req.organizationId);\n  url.addParam('uniqueId', req.uniqueId);\n  if (req.q !== undefined) {\n    url.addParam('q', req.q);\n  }\n  if (req.enableNavigation !== undefined) {\n    url.addParam('enableNavigation', `${req.enableNavigation}`);\n  }\n  if (req.requestedOutputSize !== undefined) {\n    url.addParam('requestedOutputSize', `${req.requestedOutputSize}`);\n  }\n  if (req.visitorId !== undefined) {\n    url.addParam('visitorId', `${req.visitorId}`);\n  }\n  return url.href;\n};\n\nexport const getHtml = async (\n  req: HtmlRequest,\n  options: HtmlAPIClientOptions\n) => {\n  const response = await PlatformClient.call({\n    ...baseSearchRequest(\n      req,\n      'POST',\n      'application/x-www-form-urlencoded',\n      '/html'\n    ),\n    requestParams: pickNonBaseParams(req),\n    requestMetadata: {method: 'html'},\n    ...options,\n  });\n\n  if (response instanceof Error) {\n    throw response;\n  }\n\n  const encoding = findEncoding(response);\n  const buffer = await response.arrayBuffer();\n  const decoder = new TextDecoder(encoding);\n  const body = decoder.decode(buffer);\n\n  if (isSuccessHtmlResponse(body)) {\n    return {success: body};\n  }\n\n  return {error: unwrapError({response, body})};\n};\n\nfunction isSuccessHtmlResponse(body: unknown): body is string {\n  return typeof body === 'string';\n}\n", "import {DisconnectedError} from '../../utils/errors';\nimport {QueryException} from './search/query-exception';\n\nexport interface SearchAPIErrorWithStatusCode {\n  statusCode: number;\n  message: string;\n  type: string;\n  ignored?: boolean;\n}\n\nexport interface SearchAPIErrorWithExceptionInBody {\n  exception: QueryException;\n}\n\nfunction buildDisconnectedError(\n  error: DisconnectedError\n): SearchAPIErrorWithStatusCode {\n  return {\n    statusCode: error.statusCode,\n    type: error.name,\n    message: error.message,\n  };\n}\n\nfunction buildIgnoredAbortedError(\n  error: DOMException\n): SearchAPIErrorWithStatusCode {\n  return {\n    statusCode: error.code,\n    type: error.name,\n    message: error.message,\n    ignored: true,\n  };\n}\n\nexport function buildAPIResponseFromErrorOrThrow(\n  error: Error | DOMException,\n  disableAbortWarning?: boolean\n): {\n  error: SearchAPIErrorWithStatusCode;\n} {\n  if (disableAbortWarning && error.name === 'AbortError') {\n    return {\n      error: buildIgnoredAbortedError(error as DOMException),\n    };\n  }\n  if (error instanceof DisconnectedError) {\n    return {error: buildDisconnectedError(error)};\n  }\n  throw error;\n}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {emptyQuestionAnswer} from '../../features/search/search-state';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {pickNonBaseParams, unwrapError} from '../api-client-utils';\nimport {PlatformClient} from '../platform-client';\nimport {BaseParam} from '../platform-service-params';\nimport {APICallsQueue} from './api-calls-queue';\nimport {FacetSearchRequest} from './facet-search/facet-search-request';\nimport {FacetSearchResponse} from './facet-search/facet-search-response';\nimport {\n  FieldDescription,\n  FieldDescriptionsResponseSuccess,\n} from './fields/fields-response';\nimport {getHtml, HtmlAPIClientOptions} from './html/html-api-client';\nimport {HtmlRequest} from './html/html-request';\nimport {PlanRequest} from './plan/plan-request';\nimport {PlanResponseSuccess, Plan} from './plan/plan-response';\nimport {ProductRecommendationsRequest} from './product-recommendations/product-recommendations-request';\nimport {QuerySuggestRequest} from './query-suggest/query-suggest-request';\nimport {\n  QuerySuggestSuccessResponse,\n  QuerySuggest,\n} from './query-suggest/query-suggest-response';\nimport {RecommendationRequest} from './recommendation/recommendation-request';\nimport {\n  PostprocessFacetSearchResponseMiddleware,\n  PostprocessQuerySuggestResponseMiddleware,\n  PostprocessSearchResponseMiddleware,\n} from './search-api-client-middleware';\nimport {\n  SearchAPIErrorWithStatusCode,\n  buildAPIResponseFromErrorOrThrow,\n} from './search-api-error-response';\nimport {baseSearchRequest} from './search-api-params';\nimport {SearchOrigin} from './search-metadata';\nimport {SearchRequest} from './search/search-request';\nimport {Search, SearchResponseSuccess} from './search/search-response';\n\nexport interface FacetSearchAPIClient {\n  facetSearch(req: FacetSearchRequest): Promise<FacetSearchResponse>;\n}\n\nexport interface SearchOptions {\n  disableAbortWarning?: boolean;\n  origin: SearchOrigin;\n}\n\nexport type AllSearchAPIResponse =\n  | Plan\n  | Search\n  | QuerySuggest\n  | FieldDescription;\n\nexport interface AsyncThunkSearchOptions<T extends Partial<SearchAppState>>\n  extends AsyncThunkOptions<T, ClientThunkExtraArguments<SearchAPIClient>> {\n  rejectValue: SearchAPIErrorWithStatusCode;\n}\n\nexport interface SearchAPIClientOptions extends HtmlAPIClientOptions {\n  postprocessSearchResponseMiddleware: PostprocessSearchResponseMiddleware;\n  postprocessQuerySuggestResponseMiddleware: PostprocessQuerySuggestResponseMiddleware;\n  postprocessFacetSearchResponseMiddleware: PostprocessFacetSearchResponseMiddleware;\n}\n\nexport type SearchAPIClientResponse<T> =\n  | {success: T}\n  | {error: SearchAPIErrorWithStatusCode};\n\nexport class SearchAPIClient implements FacetSearchAPIClient {\n  constructor(private options: SearchAPIClientOptions) {}\n\n  async plan(\n    req: PlanRequest\n  ): Promise<SearchAPIClientResponse<PlanResponseSuccess>> {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', '/plan'),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'plan'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(response);\n    }\n\n    const body = await response.json();\n\n    if (isSuccessPlanResponse(body)) {\n      return {success: body};\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n\n  async querySuggest(\n    req: QuerySuggestRequest\n  ): Promise<SearchAPIClientResponse<QuerySuggestSuccessResponse>> {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', '/querySuggest'),\n      requestMetadata: {method: 'querySuggest'},\n      requestParams: pickNonBaseParams(req),\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(response);\n    }\n\n    const body = await response.json();\n    const payload = {response, body};\n\n    if (isSuccessQuerySuggestionsResponse(body)) {\n      const processedResponse =\n        await this.options.postprocessQuerySuggestResponseMiddleware(payload);\n      return {\n        success: processedResponse.body,\n      };\n    }\n    return {\n      error: unwrapError(payload),\n    };\n  }\n\n  private apiCallsQueues: Record<SearchOrigin | 'unknown', APICallsQueue> = {\n    unknown: new APICallsQueue(),\n    mainSearch: new APICallsQueue(),\n    facetValues: new APICallsQueue(),\n    foldingCollection: new APICallsQueue(),\n    instantResults: new APICallsQueue(),\n  };\n\n  async search(\n    req: SearchRequest,\n    options?: SearchOptions\n  ): Promise<SearchAPIClientResponse<SearchResponseSuccess>> {\n    const origin = options?.origin ?? 'unknown';\n\n    const response = await this.apiCallsQueues[origin].enqueue(\n      (signal) =>\n        PlatformClient.call({\n          ...baseSearchRequest(req, 'POST', 'application/json', ''),\n          requestParams: pickNonBaseParams(req),\n          requestMetadata: {method: 'search', origin: options?.origin},\n          ...this.options,\n          signal: signal ?? undefined,\n        }),\n      {logger: this.options.logger, warnOnAbort: !options?.disableAbortWarning}\n    );\n\n    if (response instanceof Error) {\n      return buildAPIResponseFromErrorOrThrow(\n        response,\n        options?.disableAbortWarning\n      );\n    }\n\n    const body = await response.json();\n    const payload = {response, body};\n\n    if (isSuccessSearchResponse(body)) {\n      payload.body = shimResponse(body);\n      const processedResponse =\n        await this.options.postprocessSearchResponseMiddleware(payload);\n      return {\n        success: processedResponse.body,\n      };\n    }\n\n    return {\n      error: unwrapError(payload),\n    };\n  }\n\n  async facetSearch(req: FacetSearchRequest) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', '/facet'),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'facetSearch'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      throw response;\n    }\n\n    const body = await response.json();\n    const payload = {response, body};\n\n    const processedResponse =\n      await this.options.postprocessFacetSearchResponseMiddleware(payload);\n\n    return processedResponse.body;\n  }\n\n  async recommendations(req: RecommendationRequest) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', ''),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'recommendations'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      throw response;\n    }\n\n    const body = await response.json();\n\n    if (isSuccessSearchResponse(body)) {\n      return {success: body};\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n\n  async html(req: HtmlRequest) {\n    return getHtml(req, {...this.options});\n  }\n\n  async productRecommendations(req: ProductRecommendationsRequest) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'POST', 'application/json', ''),\n      requestParams: pickNonBaseParams(req),\n      requestMetadata: {method: 'productRecommendations'},\n      ...this.options,\n    });\n\n    if (response instanceof Error) {\n      throw response;\n    }\n\n    const body = await response.json();\n\n    if (isSuccessSearchResponse(body)) {\n      return {success: body};\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n\n  async fieldDescriptions(req: BaseParam) {\n    const response = await PlatformClient.call({\n      ...baseSearchRequest(req, 'GET', 'application/json', '/fields'),\n      requestParams: {},\n      requestMetadata: {method: 'fieldDescriptions'},\n      ...this.options,\n    });\n    if (response instanceof Error) {\n      throw response;\n    }\n    const body = await response.json();\n\n    if (isSuccessFieldsDescriptionResponse(body)) {\n      return {success: body};\n    }\n\n    return {\n      error: unwrapError({response, body}),\n    };\n  }\n}\n\nexport const isSuccessResponse = <T>(\n  r: SearchAPIClientResponse<T>\n): r is {success: T} => {\n  return (r as {success: T}).success !== undefined;\n};\n\nexport const isErrorResponse = <T>(\n  r: SearchAPIClientResponse<T>\n): r is {error: SearchAPIErrorWithStatusCode} => {\n  return (r as {error: SearchAPIErrorWithStatusCode}).error !== undefined;\n};\n\nexport function isSuccessSearchResponse(\n  body: unknown\n): body is SearchResponseSuccess {\n  return (body as SearchResponseSuccess).results !== undefined;\n}\n\nexport function shimResponse(response: SearchResponseSuccess) {\n  const empty = emptyQuestionAnswer();\n  if (isNullOrUndefined(response.questionAnswer)) {\n    response.questionAnswer = empty;\n    return response;\n  }\n\n  response.questionAnswer = {...empty, ...response.questionAnswer};\n  return response;\n}\n\nfunction isSuccessQuerySuggestionsResponse(\n  body: unknown\n): body is QuerySuggestSuccessResponse {\n  return (body as QuerySuggestSuccessResponse).completions !== undefined;\n}\n\nfunction isSuccessPlanResponse(body: unknown): body is PlanResponseSuccess {\n  return (body as PlanResponseSuccess).preprocessingOutput !== undefined;\n}\n\nfunction isSuccessFieldsDescriptionResponse(\n  body: unknown\n): body is FieldDescriptionsResponseSuccess {\n  return (body as FieldDescriptionsResponseSuccess).fields !== undefined;\n}\n", "import {PlatformResponse} from '../platform-client';\nimport {FacetSearchResponse} from './facet-search/facet-search-response';\nimport {QuerySuggestSuccessResponse} from './query-suggest/query-suggest-response';\nimport {SearchResponseSuccess} from './search/search-response';\n\nexport type PostprocessSearchResponseMiddleware = (\n  response: PlatformResponse<SearchResponseSuccess>\n) =>\n  | PlatformResponse<SearchResponseSuccess>\n  | Promise<PlatformResponse<SearchResponseSuccess>>;\n\nexport type PostprocessFacetSearchResponseMiddleware = (\n  response: PlatformResponse<FacetSearchResponse>\n) =>\n  | PlatformResponse<FacetSearchResponse>\n  | Promise<PlatformResponse<FacetSearchResponse>>;\n\nexport type PostprocessQuerySuggestResponseMiddleware = (\n  response: PlatformResponse<QuerySuggestSuccessResponse>\n) =>\n  | PlatformResponse<QuerySuggestSuccessResponse>\n  | Promise<PlatformResponse<QuerySuggestSuccessResponse>>;\n\nexport const NoopPostprocessSearchResponseMiddleware: PostprocessSearchResponseMiddleware =\n  (response) => response;\n\nexport const NoopPostprocessFacetSearchResponseMiddleware: PostprocessFacetSearchResponseMiddleware =\n  (response) => response;\n\nexport const NoopPostprocessQuerySuggestResponseMiddleware: PostprocessQuerySuggestResponseMiddleware =\n  (response) => response;\n", "import {\n  SchemaDefinition,\n  SchemaValue,\n  Schema,\n  SchemaValidationError,\n  StringValue,\n  RecordValue,\n} from '@coveo/bueno';\nimport {SerializedError} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../app/engine';\n\nexport const requiredNonEmptyString = new StringValue({\n  required: true,\n  emptyAllowed: false,\n});\n\nexport const nonEmptyString = new StringValue({\n  required: false,\n  emptyAllowed: false,\n});\n\nexport const requiredEmptyAllowedString = new StringValue({\n  required: true,\n  emptyAllowed: true,\n});\n\nexport const serializeSchemaValidationError = ({\n  message,\n  name,\n  stack,\n}: SchemaValidationError): SerializedError => ({message, name, stack});\n\n/**\n * Validates an action payload and throws an error if invalid\n * @param payload the action payload\n * @param definition Either a Bueno SchemaDefinition or a SchemaValue\n */\nexport const validatePayloadAndThrow = <P>(\n  payload: P,\n  definition: SchemaDefinition<Required<P>> | SchemaValue<P>\n) => {\n  const isSchemaValue = 'required' in definition;\n  if (isSchemaValue) {\n    return {\n      payload: new Schema({\n        value: definition as SchemaValue<P>,\n      }).validate({value: payload}).value as P,\n    };\n  }\n\n  const asRecordValue = new RecordValue({\n    options: {required: true},\n    values: definition as SchemaDefinition<Record<string, Object>>,\n  });\n\n  const isInvalid = asRecordValue.validate(payload);\n  if (isInvalid) {\n    throw new SchemaValidationError(isInvalid);\n  }\n  return {payload};\n};\n\n/**\n * Validates an action payload and return an `error` alongside the payload if it's invalid\n * @param payload the action payload\n * @param definition Either a Bueno SchemaDefinition or a SchemaValue\n */\nexport const validatePayload = <P>(\n  payload: P,\n  definition: SchemaDefinition<Required<P>> | SchemaValue<P>\n): {payload: P; error?: SerializedError} => {\n  try {\n    return validatePayloadAndThrow(payload, definition);\n  } catch (error) {\n    return {\n      payload,\n      error: serializeSchemaValidationError(error as Error),\n    };\n  }\n};\n\nexport const validateInitialState = <T extends object>(\n  engine: CoreEngine,\n  schema: Schema<T>,\n  obj: T | undefined,\n  functionName: string\n) => {\n  const message = `Check the initialState of ${functionName}`;\n  return validateObject(\n    engine,\n    schema,\n    obj,\n    message,\n    'Controller initialization error'\n  );\n};\n\nexport const validateOptions = <T extends object>(\n  engine: CoreEngine<object>,\n  schema: Schema<T>,\n  obj: Partial<T> | undefined,\n  functionName: string\n) => {\n  const message = `Check the options of ${functionName}`;\n  return validateObject(\n    engine,\n    schema,\n    obj,\n    message,\n    'Controller initialization error'\n  );\n};\n\nconst validateObject = <T extends object>(\n  engine: CoreEngine<object>,\n  schema: Schema<T>,\n  obj: T | undefined,\n  validationMessage: string,\n  errorMessage: string\n) => {\n  try {\n    return schema.validate(obj, validationMessage);\n  } catch (error) {\n    engine.logger.error(error as Error, errorMessage);\n    throw error;\n  }\n};\n", "import {\n  AnalyticsClientSendEventHook,\n  CaseAssistClient,\n  CaseAssistClientProvider,\n} from 'coveo.analytics';\nimport {Logger} from 'pino';\nimport {getSearchHubInitialState} from '../../features/search-hub/search-hub-state';\nimport {\n  CaseAssistConfigurationSection,\n  ConfigurationSection,\n  SearchHubSection,\n} from '../../state/state-sections';\nimport {PreprocessRequest} from '../preprocess-request';\nimport {\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils';\n\nexport type StateNeededByCaseAssistAnalytics = ConfigurationSection &\n  Partial<CaseAssistConfigurationSection> &\n  Partial<SearchHubSection>;\n\nexport class CaseAssistAnalyticsProvider implements CaseAssistClientProvider {\n  private state: StateNeededByCaseAssistAnalytics;\n  constructor(getState: () => StateNeededByCaseAssistAnalytics) {\n    this.state = getState();\n  }\n\n  public getSearchUID() {\n    return null as unknown as string;\n  }\n\n  public getOriginLevel1() {\n    return this.state.searchHub || getSearchHubInitialState();\n  }\n}\n\ninterface ConfigureCaseAssistAnalyticsOptions {\n  getState: () => StateNeededByCaseAssistAnalytics;\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: CaseAssistClientProvider;\n}\n\nexport const configureCaseAssistAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new CaseAssistAnalyticsProvider(getState),\n}: ConfigureCaseAssistAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const endpoint = state.configuration.analytics.apiBaseUrl;\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enableAnalytics = state.configuration.analytics.enabled;\n  const client = new CaseAssistClient(\n    {\n      enableAnalytics,\n      token,\n      endpoint,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enableAnalytics) {\n    client.disable();\n  }\n  return client;\n};\n", "import {ProductListingAPIErrorStatusResponse} from '../../api/commerce/product-listings/product-listing-api-client';\nimport {ProductRecommendation} from '../../api/search/search/product-recommendation';\nimport {AnyFacetResponse} from '../facets/generic/interfaces/generic-facet-response';\n\nexport interface ProductListingState {\n  url: string;\n  clientId: string;\n  additionalFields: string[];\n  advancedParameters: {\n    debug: boolean;\n  };\n  products: ProductRecommendation[];\n  facets: {\n    results: AnyFacetResponse[];\n  };\n  error: ProductListingAPIErrorStatusResponse | null;\n  isLoading: boolean;\n  responseId: string;\n}\n\nexport const getProductListingInitialState = (): ProductListingState => ({\n  url: '',\n  clientId: '',\n  additionalFields: [],\n  advancedParameters: {\n    debug: false,\n  },\n  products: [],\n  facets: {\n    results: [],\n  },\n  error: null,\n  isLoading: false,\n  responseId: '',\n});\n", "import {\n  AnalyticsClientSendEventHook,\n  CoveoSearchPageClient,\n  SearchPageClientProvider,\n} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events';\nimport {Logger} from 'pino';\nimport {SectionNeededForFacetMetadata} from '../../features/facets/facet-set/facet-set-analytics-actions-utils';\nimport {\n  ConfigurationSection,\n  ProductListingV2Section,\n  SearchHubSection,\n} from '../../state/state-sections';\nimport {PreprocessRequest} from '../preprocess-request';\nimport {getProductListingInitialState} from './../../features/product-listing/product-listing-state';\nimport {BaseAnalyticsProvider} from './base-analytics';\nimport {\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils';\n\nexport type StateNeededByCommerceAnalyticsProvider = ConfigurationSection &\n  ProductListingV2Section &\n  Partial<SearchHubSection & SectionNeededForFacetMetadata>;\n\nexport class CommerceAnalyticsProvider\n  extends BaseAnalyticsProvider<StateNeededByCommerceAnalyticsProvider>\n  implements SearchPageClientProvider\n{\n  private initialState = getProductListingInitialState();\n\n  public getPipeline(): string {\n    return '';\n  }\n\n  public getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  > {\n    return {\n      queryText: '',\n      responseTime: 0,\n      results: this.mapResultsToAnalyticsDocument(),\n      numberOfResults: this.numberOfResults,\n    };\n  }\n\n  public getSearchUID() {\n    const newState = this.getState();\n    return newState.productListing?.responseId || this.initialState.responseId;\n  }\n\n  private mapResultsToAnalyticsDocument() {\n    return this.state.productListing?.products.map((p) => ({\n      documentUri: p.documentUri,\n      documentUriHash: p.documentUriHash,\n      permanentid: p.permanentid,\n    }));\n  }\n\n  private get numberOfResults() {\n    return this.state.productListing.products.length;\n  }\n}\n\ninterface ConfigureCommerceAnalyticsOptions {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: SearchPageClientProvider;\n  getState(): StateNeededByCommerceAnalyticsProvider;\n}\n\nexport const configureCommerceAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new CommerceAnalyticsProvider(getState),\n}: ConfigureCommerceAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const endpoint = state.configuration.analytics.apiBaseUrl;\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enabled = state.configuration.analytics.enabled;\n  const client = new CoveoSearchPageClient(\n    {\n      token,\n      endpoint,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enabled) {\n    client.disable();\n  }\n\n  return client;\n};\n", "import {\n  AnalyticsClientSendEventHook,\n  InsightClientProvider,\n  CoveoInsightClient,\n} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events';\nimport {Logger} from 'pino';\nimport {\n  buildFacetStateMetadata,\n  getStateNeededForFacetMetadata,\n  SectionNeededForFacetMetadata,\n} from '../../features/facets/facet-set/facet-set-analytics-actions-utils';\nimport {getQueryInitialState} from '../../features/query/query-state';\nimport {getSearchInitialState} from '../../features/search/search-state';\nimport {InsightAppState} from '../../state/insight-app-state';\nimport {\n  ConfigurationSection,\n  GeneratedAnswerSection,\n  PipelineSection,\n  QuerySection,\n  SearchHubSection,\n  SearchSection,\n} from '../../state/state-sections';\nimport {PreprocessRequest} from '../preprocess-request';\nimport {BaseAnalyticsProvider} from './base-analytics';\nimport {\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils';\n\nexport type StateNeededByInsightAnalyticsProvider = ConfigurationSection &\n  Partial<InsightAppState> &\n  Partial<\n    SearchHubSection &\n      SearchSection &\n      PipelineSection &\n      QuerySection &\n      SectionNeededForFacetMetadata &\n      GeneratedAnswerSection\n  >;\n\nexport class InsightAnalyticsProvider\n  extends BaseAnalyticsProvider<StateNeededByInsightAnalyticsProvider>\n  implements InsightClientProvider\n{\n  public getSearchUID(): string {\n    const newState = this.getState();\n    return (\n      newState.search?.searchResponseId ||\n      newState.search?.response.searchUid ||\n      getSearchInitialState().response.searchUid\n    );\n  }\n  public getPipeline(): string {\n    return (\n      this.state.pipeline || this.state.search?.response.pipeline || 'default'\n    );\n  }\n  public getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  > {\n    return {\n      queryText: this.queryText,\n      responseTime: this.responseTime,\n      results: this.mapResultsToAnalyticsDocument(),\n      numberOfResults: this.numberOfResults,\n    };\n  }\n\n  public getFacetState() {\n    return buildFacetStateMetadata(getStateNeededForFacetMetadata(this.state));\n  }\n\n  private get queryText() {\n    return this.state.query?.q || getQueryInitialState().q;\n  }\n\n  private get responseTime() {\n    return this.state.search?.duration || getSearchInitialState().duration;\n  }\n\n  private mapResultsToAnalyticsDocument() {\n    return this.state.search?.response.results.map((r) => ({\n      documentUri: r.uri,\n      documentUriHash: r.raw.urihash,\n    }));\n  }\n\n  private get numberOfResults() {\n    return (\n      this.state.search?.response.results.length ||\n      getSearchInitialState().response.results.length\n    );\n  }\n}\n\ninterface ConfigureInsightAnalyticsOptions {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: InsightClientProvider;\n  getState(): StateNeededByInsightAnalyticsProvider;\n}\n\nexport const configureInsightAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new InsightAnalyticsProvider(getState),\n}: ConfigureInsightAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const apiBaseUrl = state.configuration.analytics.apiBaseUrl;\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enabled = state.configuration.analytics.enabled;\n\n  const client = new CoveoInsightClient(\n    {\n      enableAnalytics: enabled,\n      token,\n      endpoint: apiBaseUrl,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint: apiBaseUrl,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enabled) {\n    client.disable();\n  }\n\n  return client;\n};\n", "import {\n  AnalyticsClientSendEventHook,\n  CoveoSearchPageClient,\n  SearchPageClientProvider,\n} from 'coveo.analytics';\nimport {SearchEventRequest} from 'coveo.analytics/dist/definitions/events';\nimport {Logger} from 'pino';\nimport {SectionNeededForFacetMetadata} from '../../features/facets/facet-set/facet-set-analytics-actions-utils';\nimport {\n  ConfigurationSection,\n  ProductListingSection,\n  SearchHubSection,\n} from '../../state/state-sections';\nimport {PreprocessRequest} from '../preprocess-request';\nimport {getProductListingInitialState} from './../../features/product-listing/product-listing-state';\nimport {BaseAnalyticsProvider} from './base-analytics';\nimport {\n  wrapAnalyticsClientSendEventHook,\n  wrapPreprocessRequest,\n} from './coveo-analytics-utils';\n\nexport type StateNeededByProductListingAnalyticsProvider =\n  ConfigurationSection &\n    ProductListingSection &\n    Partial<SearchHubSection & SectionNeededForFacetMetadata>;\n\nexport class ProductListingAnalyticsProvider\n  extends BaseAnalyticsProvider<StateNeededByProductListingAnalyticsProvider>\n  implements SearchPageClientProvider\n{\n  private initialState = getProductListingInitialState();\n\n  public getPipeline(): string {\n    return '';\n  }\n\n  public getSearchEventRequestPayload(): Omit<\n    SearchEventRequest,\n    'actionCause' | 'searchQueryUid'\n  > {\n    return {\n      queryText: '',\n      responseTime: 0,\n      results: this.mapResultsToAnalyticsDocument(),\n      numberOfResults: this.numberOfResults,\n    };\n  }\n\n  public getSearchUID() {\n    const newState = this.getState();\n    return newState.productListing?.responseId || this.initialState.responseId;\n  }\n\n  private mapResultsToAnalyticsDocument() {\n    return this.state.productListing?.products.map((p) => ({\n      documentUri: p.documentUri,\n      documentUriHash: p.documentUriHash,\n      permanentid: p.permanentid,\n    }));\n  }\n\n  private get numberOfResults() {\n    return this.state.productListing.products.length;\n  }\n}\n\ninterface ConfigureProductListingAnalyticsOptions {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: SearchPageClientProvider;\n  getState(): StateNeededByProductListingAnalyticsProvider;\n}\n\nexport const configureProductListingAnalytics = ({\n  logger,\n  getState,\n  analyticsClientMiddleware = (_, p) => p,\n  preprocessRequest,\n  provider = new ProductListingAnalyticsProvider(getState),\n}: ConfigureProductListingAnalyticsOptions) => {\n  const state = getState();\n  const token = state.configuration.accessToken;\n  const endpoint = state.configuration.analytics.apiBaseUrl;\n  const runtimeEnvironment = state.configuration.analytics.runtimeEnvironment;\n  const enabled = state.configuration.analytics.enabled;\n\n  const client = new CoveoSearchPageClient(\n    {\n      token,\n      endpoint,\n      runtimeEnvironment,\n      preprocessRequest: wrapPreprocessRequest(logger, preprocessRequest),\n      beforeSendHooks: [\n        wrapAnalyticsClientSendEventHook(logger, analyticsClientMiddleware),\n        (type, payload) => {\n          logger.info(\n            {\n              ...payload,\n              type,\n              endpoint,\n              token,\n            },\n            'Analytics request'\n          );\n          return payload;\n        },\n      ],\n    },\n    provider\n  );\n\n  if (!enabled) {\n    client.disable();\n  }\n\n  return client;\n};\n", "import {removeDuplicates} from '../../utils/utils';\nimport {ResultWithFolding} from './folding-slice';\n\nexport function getAllIncludedResultsFrom(relevantResult: ResultWithFolding) {\n  const foldedResults = getChildResultsRecursively(relevantResult);\n\n  const parentResults = [relevantResult, ...foldedResults]\n    .filter((result) => result.parentResult)\n    .map((result) => result.parentResult!);\n\n  const resultsInCollection = removeDuplicates(\n    [relevantResult, ...foldedResults, ...parentResults],\n    (result) => result.uniqueId\n  );\n\n  return resultsInCollection;\n}\n\nfunction getChildResultsRecursively(\n  result: ResultWithFolding\n): ResultWithFolding[] {\n  if (!result.childResults) {\n    return [];\n  }\n  return result.childResults.flatMap((childResult) => [\n    childResult,\n    ...getChildResultsRecursively(childResult),\n  ]);\n}\n", "export const getPipelineInitialState = () => '';\n", "import {\n  isNullOrUndefined,\n  RecordValue,\n  Schema,\n  StringValue,\n} from '@coveo/bueno';\nimport {type createRelay} from '@coveo/relay';\nimport {\n  AsyncThunk,\n  AsyncThunkPayloadCreator,\n  createAsyncThunk,\n} from '@reduxjs/toolkit';\nimport type {\n  CoveoSearchPageClient,\n  SearchPageClientProvider,\n  CaseAssistClient,\n  CoveoInsightClient,\n  EventBuilder,\n  EventDescription,\n  AnalyticsClientSendEventHook,\n} from 'coveo.analytics';\nimport {AnalyticsClient} from 'coveo.analytics/dist/definitions/client/analytics';\nimport {SearchEventResponse} from 'coveo.analytics/dist/definitions/events';\nimport {\n  PartialDocumentInformation,\n  DocumentIdentifier,\n} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {Logger} from 'pino';\nimport {\n  CaseAssistAnalyticsProvider,\n  configureCaseAssistAnalytics,\n  StateNeededByCaseAssistAnalytics,\n} from '../../api/analytics/case-assist-analytics';\nimport {\n  StateNeededByCommerceAnalyticsProvider,\n  CommerceAnalyticsProvider,\n  configureCommerceAnalytics,\n} from '../../api/analytics/commerce-analytics';\nimport {\n  configureInsightAnalytics,\n  InsightAnalyticsProvider,\n  StateNeededByInsightAnalyticsProvider,\n} from '../../api/analytics/insight-analytics';\nimport {StateNeededByInstantResultsAnalyticsProvider} from '../../api/analytics/instant-result-analytics';\nimport {\n  configureProductListingAnalytics,\n  ProductListingAnalyticsProvider,\n  StateNeededByProductListingAnalyticsProvider,\n} from '../../api/analytics/product-listing-analytics';\nimport {StateNeededByProductRecommendationsAnalyticsProvider} from '../../api/analytics/product-recommendations-analytics';\nimport {\n  configureAnalytics,\n  configureLegacyAnalytics,\n  SearchAnalyticsProvider,\n  StateNeededBySearchAnalyticsProvider,\n} from '../../api/analytics/search-analytics';\nimport {PreprocessRequest} from '../../api/preprocess-request';\nimport {Raw} from '../../api/search/search/raw';\nimport {Result} from '../../api/search/search/result';\nimport {ThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {ProductRecommendation} from '../../product-listing.index';\nimport {RecommendationAppState} from '../../state/recommendation-app-state';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {\n  ConfigurationSection,\n  PipelineSection,\n} from '../../state/state-sections';\nimport {requiredNonEmptyString} from '../../utils/validate-payload';\nimport {ResultWithFolding} from '../folding/folding-slice';\nimport {getAllIncludedResultsFrom} from '../folding/folding-utils';\nimport {getPipelineInitialState} from '../pipeline/pipeline-state';\n\nexport interface PreparableAnalyticsActionOptions<\n  StateNeeded extends ConfigurationSection,\n> {\n  analyticsClientMiddleware: AnalyticsClientSendEventHook;\n  preprocessRequest: PreprocessRequest | undefined;\n  logger: Logger;\n  getState(): StateNeeded;\n}\n\nexport type AnalyticsAsyncThunk<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> = AsyncThunk<void, void, AsyncThunkAnalyticsOptions<StateNeeded>>;\n\nexport function makeBasicNewSearchAnalyticsAction(\n  actionCause: string,\n  getState: () => StateNeededBySearchAnalyticsProvider\n) {\n  return {\n    ...new SearchAnalyticsProvider(getState).getBaseMetadata(),\n    actionCause,\n    type: actionCause,\n  };\n}\n\nexport interface PreparedAnalyticsAction<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> {\n  description?: EventDescription;\n  action: AnalyticsAsyncThunk<StateNeeded>;\n}\n\ntype PrepareAnalyticsFunction<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> = (\n  options: PreparableAnalyticsActionOptions<StateNeeded>\n) => Promise<PreparedAnalyticsAction<StateNeeded>>;\n\nexport interface PreparableAnalyticsAction<\n  StateNeeded extends\n    ConfigurationSection = StateNeededBySearchAnalyticsProvider,\n> extends AnalyticsAsyncThunk<StateNeeded> {\n  prepare: PrepareAnalyticsFunction<StateNeeded>;\n}\n\nexport type SearchAction =\n  PreparableAnalyticsAction<StateNeededBySearchAnalyticsProvider>;\n\nexport type CustomAction =\n  PreparableAnalyticsAction<StateNeededBySearchAnalyticsProvider>;\n\nexport type ClickAction =\n  PreparableAnalyticsAction<StateNeededBySearchAnalyticsProvider>;\n\nexport type InstantResultsSearchAction =\n  PreparableAnalyticsAction<StateNeededByInstantResultsAnalyticsProvider>;\n\nexport type InstantResultsClickAction =\n  PreparableAnalyticsAction<StateNeededByInstantResultsAnalyticsProvider>;\n\nexport type InsightAction =\n  PreparableAnalyticsAction<StateNeededByInsightAnalyticsProvider>;\n\nexport type CaseAssistAction =\n  PreparableAnalyticsAction<StateNeededByCaseAssistAnalytics>;\n\nexport type ProductRecommendationAction =\n  PreparableAnalyticsAction<StateNeededByProductRecommendationsAnalyticsProvider>;\n\nexport type ProductListingAction =\n  PreparableAnalyticsAction<StateNeededByProductListingAnalyticsProvider>;\n\nexport type ProductListingV2Action =\n  PreparableAnalyticsAction<StateNeededByCommerceAnalyticsProvider>;\n\nexport interface AsyncThunkAnalyticsOptions<\n  T extends StateNeededBySearchAnalyticsProvider,\n> {\n  state: T;\n  extra: ThunkExtraArguments;\n}\n\nexport interface AsyncThunkInsightAnalyticsOptions<\n  T extends Partial<StateNeededByInsightAnalyticsProvider>,\n> {\n  state: T;\n  extra: ThunkExtraArguments;\n}\n\nfunction makeInstantlyCallable<T extends object>(action: T) {\n  return Object.assign(action, {instantlyCallable: true}) as T;\n}\n\nfunction makePreparableAnalyticsAction<\n  EventType extends void,\n  StateNeeded extends ConfigurationSection,\n>(\n  prefix: string,\n  buildEvent: (\n    options: PreparableAnalyticsActionOptions<StateNeeded>\n  ) => Promise<{\n    log: (\n      options: AsyncThunkAnalyticsOptions<StateNeeded>\n    ) => Promise<EventType>;\n    description?: EventDescription;\n  }>\n): PreparableAnalyticsAction<StateNeeded> {\n  const createAnalyticsAction = (\n    body: AsyncThunkPayloadCreator<\n      EventType,\n      void,\n      AsyncThunkAnalyticsOptions<StateNeeded>\n    >\n  ) =>\n    makeInstantlyCallable(\n      createAsyncThunk<\n        EventType,\n        void,\n        AsyncThunkAnalyticsOptions<StateNeeded>\n      >(prefix, body) as unknown as AnalyticsAsyncThunk<StateNeeded>\n    );\n\n  const rootAction = createAnalyticsAction(async (_, {getState, extra}) => {\n    const {analyticsClientMiddleware, preprocessRequest, logger} = extra;\n    return await (\n      await buildEvent({\n        getState,\n        analyticsClientMiddleware,\n        preprocessRequest,\n        logger,\n      })\n    ).log({state: getState(), extra});\n  });\n\n  const prepare: PrepareAnalyticsFunction<StateNeeded> = async ({\n    getState,\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  }) => {\n    const {description, log} = await buildEvent({\n      getState,\n      analyticsClientMiddleware,\n      preprocessRequest,\n      logger,\n    });\n    return {\n      description,\n      action: createAnalyticsAction(\n        async (_, {getState: getNewState, extra: newExtra}) => {\n          return await log({state: getNewState(), extra: newExtra});\n        }\n      ),\n    };\n  };\n\n  Object.assign(rootAction, {\n    prepare,\n  });\n\n  return rootAction as PreparableAnalyticsAction<StateNeeded>;\n}\n\nexport type AnalyticsActionOptions<\n  LegacyStateNeeded extends StateNeededBySearchAnalyticsProvider,\n  StateNeeded extends StateNeededBySearchAnalyticsProvider,\n  LegacyGetBuilderType,\n  LegacyProvider,\n  Client,\n  PayloadType,\n> = Exclude<\n  LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider>,\n  '__legacy__getBuilder'\n> &\n  Partial<NextAnalyticsOptions<StateNeeded, PayloadType>> & {\n    __legacy__getBuilder: LegacyGetBuilderType;\n  };\n\nexport interface NextAnalyticsOptions<\n  StateNeeded extends InternalLegacyStateNeeded,\n  PayloadType,\n> {\n  analyticsType: string;\n  analyticsPayloadBuilder: (state: StateNeeded) => PayloadType;\n}\nexport interface LegacyAnalyticsOptions<\n  StateNeeded extends InternalLegacyStateNeeded,\n  Client,\n  Provider,\n> {\n  prefix: string;\n  __legacy__getBuilder: (\n    client: Client,\n    state: StateNeeded\n  ) => Promise<EventBuilder | null> | null;\n  __legacy__provider?: (getState: () => StateNeeded) => Provider;\n}\n\ninterface ProviderClass<StateNeeded, LegacyProvider> {\n  new (param: () => StateNeeded): LegacyProvider;\n}\n\nconst makeAnalyticsActionFactory = <\n  LegacyStateNeededByProvider extends InternalLegacyStateNeeded,\n  StateNeededByProvider extends InternalLegacyStateNeeded,\n  Client extends CommonClient,\n  LegacyProvider extends LegacyProviderCommon,\n  LegacyGetBuilderType = LegacyAnalyticsOptions<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  >['__legacy__getBuilder'],\n  Configurator extends AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  > = AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  >,\n>(\n  configurator: Configurator,\n  legacyGetBuilderConverter: (\n    original: LegacyGetBuilderType\n  ) => LegacyAnalyticsOptions<\n    LegacyStateNeededByProvider,\n    Client,\n    LegacyProvider\n  >['__legacy__getBuilder'],\n  providerClass: ProviderClass<LegacyStateNeededByProvider, LegacyProvider>\n) => {\n  function makeAnalyticsAction<\n    LegacyStateNeeded extends\n      LegacyStateNeededByProvider = LegacyStateNeededByProvider,\n    ComputedLegacyAnalyticsOptions extends LegacyAnalyticsOptions<\n      LegacyStateNeeded,\n      Client,\n      LegacyProvider\n    > = LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider>,\n  >(\n    prefix: string,\n    __legacy__getBuilder: LegacyGetBuilderType,\n    __legacy__provider?: ComputedLegacyAnalyticsOptions['__legacy__provider']\n  ): PreparableAnalyticsAction<LegacyStateNeeded>;\n  function makeAnalyticsAction<\n    LegacyStateNeeded extends\n      LegacyStateNeededByProvider = LegacyStateNeededByProvider,\n    StateNeeded extends StateNeededByProvider = StateNeededByProvider,\n    PayloadType = {},\n  >({\n    prefix,\n    __legacy__getBuilder,\n    __legacy__provider,\n    analyticsPayloadBuilder,\n    analyticsType,\n  }: AnalyticsActionOptions<\n    LegacyStateNeeded,\n    StateNeeded,\n    LegacyGetBuilderType,\n    LegacyProvider,\n    Client,\n    PayloadType\n  >): PreparableAnalyticsAction<StateNeeded>;\n  function makeAnalyticsAction<\n    LegacyStateNeeded extends\n      LegacyStateNeededByProvider = LegacyStateNeededByProvider,\n    ComputedLegacyAnalyticsOptions extends LegacyAnalyticsOptions<\n      LegacyStateNeeded,\n      Client,\n      LegacyProvider\n    > = LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider>,\n    StateNeeded extends StateNeededByProvider = StateNeededByProvider,\n    PayloadType = {},\n  >(\n    ...params:\n      | [\n          ComputedLegacyAnalyticsOptions['prefix'],\n          LegacyGetBuilderType,\n          ComputedLegacyAnalyticsOptions['__legacy__provider']?,\n        ]\n      | [\n          AnalyticsActionOptions<\n            LegacyStateNeeded,\n            StateNeeded,\n            LegacyGetBuilderType,\n            LegacyProvider,\n            Client,\n            PayloadType\n          >,\n        ]\n  ): PreparableAnalyticsAction<LegacyStateNeeded & StateNeeded> {\n    const options =\n      params.length === 1\n        ? {\n            ...params[0],\n            __legacy__getBuilder: legacyGetBuilderConverter(\n              params[0].__legacy__getBuilder\n            ),\n            analyticsConfigurator: configurator,\n            providerClass: providerClass,\n          }\n        : {\n            prefix: params[0],\n            __legacy__getBuilder: legacyGetBuilderConverter(params[1]),\n            __legacy__provider: params[2],\n            analyticsConfigurator: configurator,\n            providerClass: providerClass,\n          };\n    return internalMakeAnalyticsAction(options);\n  }\n  return makeAnalyticsAction;\n};\n\nconst shouldSendLegacyEvent = (state: ConfigurationSection) =>\n  state.configuration.analytics.analyticsMode === 'legacy';\nconst shouldSendNextEvent = (state: ConfigurationSection) =>\n  state.configuration.analytics.analyticsMode === 'next';\n\ntype CommonClient = {coveoAnalyticsClient: AnalyticsClient};\n\ntype AnalyticsConfiguratorFromStateNeeded<\n  StateNeeded extends InternalLegacyStateNeeded,\n  ReturnType extends CommonClient,\n  LegacyProvider,\n> = (\n  options: AnalyticsConfiguratorOptions<StateNeeded, LegacyProvider>\n) => ReturnType;\ninterface AnalyticsConfiguratorOptions<\n  StateNeeded extends InternalLegacyStateNeeded,\n  LegacyProvider,\n> {\n  logger: Logger;\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  preprocessRequest?: PreprocessRequest;\n  provider?: LegacyProvider;\n  getState(): StateNeeded;\n}\n\ntype InternalMakeAnalyticsActionOptions<\n  LegacyStateNeeded extends InternalLegacyStateNeeded,\n  StateNeeded extends InternalLegacyStateNeeded,\n  PayloadType,\n  AnalyticsConfigurator extends AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeeded,\n    Client,\n    LegacyProvider\n  >,\n  Client extends CommonClient,\n  LegacyProvider,\n> = LegacyAnalyticsOptions<LegacyStateNeeded, Client, LegacyProvider> &\n  Partial<NextAnalyticsOptions<StateNeeded, PayloadType>> & {\n    analyticsConfigurator: AnalyticsConfigurator;\n  } & {\n    providerClass: ProviderClass<LegacyStateNeeded, LegacyProvider>;\n  };\n\ntype InternalLegacyStateNeeded =\n  | StateNeededBySearchAnalyticsProvider\n  | StateNeededByProductListingAnalyticsProvider\n  | StateNeededByCaseAssistAnalytics;\n\ninterface LegacyProviderCommon {\n  getSearchUID: () => string;\n}\n\nconst internalMakeAnalyticsAction = <\n  LegacyStateNeeded extends InternalLegacyStateNeeded,\n  StateNeeded extends InternalLegacyStateNeeded,\n  PayloadType,\n  Client extends CommonClient,\n  LegacyProvider extends LegacyProviderCommon,\n>({\n  prefix,\n  __legacy__getBuilder,\n  __legacy__provider,\n  analyticsPayloadBuilder,\n  analyticsType,\n  analyticsConfigurator,\n  providerClass,\n}: InternalMakeAnalyticsActionOptions<\n  LegacyStateNeeded,\n  StateNeeded,\n  PayloadType,\n  AnalyticsConfiguratorFromStateNeeded<\n    LegacyStateNeeded,\n    Client,\n    LegacyProvider\n  >,\n  Client,\n  LegacyProvider\n>): PreparableAnalyticsAction<LegacyStateNeeded & StateNeeded> => {\n  __legacy__provider ??= (getState) => new providerClass(getState);\n  return makePreparableAnalyticsAction(\n    prefix,\n    async ({\n      getState,\n      analyticsClientMiddleware,\n      preprocessRequest,\n      logger,\n    }) => {\n      const loggers: ((\n        state: LegacyStateNeeded & StateNeeded\n      ) => Promise<void>)[] = [];\n      const analyticsAction: {\n        log: (\n          options: AsyncThunkAnalyticsOptions<LegacyStateNeeded & StateNeeded>\n        ) => Promise<void>;\n        description?: EventDescription;\n      } = {\n        log: async ({state}) => {\n          for (const log of loggers) {\n            await log(state);\n          }\n        },\n      };\n      const state = getState();\n      const client = analyticsConfigurator({\n        getState,\n        logger,\n        analyticsClientMiddleware,\n        preprocessRequest,\n        provider: __legacy__provider!(getState),\n      });\n      const builder = await __legacy__getBuilder(client, getState());\n      analyticsAction.description = builder?.description;\n      loggers.push(async (state: LegacyStateNeeded & StateNeeded) => {\n        if (shouldSendLegacyEvent(state)) {\n          await logLegacyEvent<LegacyStateNeeded, LegacyProvider>(\n            builder,\n            __legacy__provider!,\n            state,\n            logger,\n            client.coveoAnalyticsClient\n          );\n        }\n      });\n      const emitEvent = configureAnalytics(state);\n      loggers.push(async (state: LegacyStateNeeded & StateNeeded) => {\n        if (\n          shouldSendNextEvent(state) &&\n          analyticsType &&\n          analyticsPayloadBuilder\n        ) {\n          const payload = analyticsPayloadBuilder(state);\n          await logNextEvent(emitEvent, analyticsType, payload);\n        }\n      });\n      return analyticsAction;\n    }\n  );\n};\n\nasync function logLegacyEvent<\n  StateNeeded extends InternalLegacyStateNeeded,\n  Provider extends LegacyProviderCommon,\n>(\n  builder: EventBuilder | null,\n  __legacy__provider: (getState: () => StateNeeded) => Provider,\n  state: StateNeeded,\n  logger: Logger,\n  client: AnalyticsClient\n) {\n  __legacy__provider(() => state);\n  const response = await builder?.log({\n    searchUID: __legacy__provider!(() => state).getSearchUID(),\n  });\n  logger.info({client, response}, 'Analytics response');\n}\n\ntype LogFunction<Client, StateNeeded> = (\n  client: Client,\n  state: StateNeeded\n) => Promise<void | SearchEventResponse> | void | null;\n\nconst fromLogToLegacyBuilder =\n  <Client extends CommonClient, StateNeeded>(\n    log: (\n      client: Client,\n      state: StateNeeded\n    ) => Promise<void | SearchEventResponse> | void | null\n  ): ((client: Client, state: StateNeeded) => Promise<EventBuilder>) =>\n  (client, state) =>\n    Promise.resolve({\n      description: {actionCause: 'caseAssist'},\n      log: async (_metadata: {searchUID: string}) => {\n        log(client, state);\n      },\n    });\n\nexport const makeAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededBySearchAnalyticsProvider,\n  StateNeededBySearchAnalyticsProvider,\n  CoveoSearchPageClient,\n  SearchPageClientProvider\n>(configureLegacyAnalytics, (original) => original, SearchAnalyticsProvider);\n\nexport const makeCaseAssistAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededByCaseAssistAnalytics,\n  StateNeededByCaseAssistAnalytics,\n  CaseAssistClient,\n  CaseAssistAnalyticsProvider,\n  LogFunction<CaseAssistClient, StateNeededByCaseAssistAnalytics>\n>(\n  configureCaseAssistAnalytics,\n  fromLogToLegacyBuilder,\n  CaseAssistAnalyticsProvider\n);\n\nexport const makeInsightAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededByInsightAnalyticsProvider,\n  StateNeededByInsightAnalyticsProvider,\n  CoveoInsightClient,\n  InsightAnalyticsProvider,\n  LogFunction<CoveoInsightClient, StateNeededByInsightAnalyticsProvider>\n>(configureInsightAnalytics, fromLogToLegacyBuilder, InsightAnalyticsProvider);\n\nexport const makeCommerceAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededByCommerceAnalyticsProvider,\n  StateNeededByCommerceAnalyticsProvider,\n  CoveoSearchPageClient,\n  CommerceAnalyticsProvider\n>(\n  configureCommerceAnalytics,\n  (original) => original,\n  CommerceAnalyticsProvider\n);\n\nexport const makeProductListingAnalyticsAction = makeAnalyticsActionFactory<\n  StateNeededByProductListingAnalyticsProvider,\n  StateNeededByProductListingAnalyticsProvider,\n  CoveoSearchPageClient,\n  ProductListingAnalyticsProvider\n>(\n  configureProductListingAnalytics,\n  (original) => original,\n  ProductListingAnalyticsProvider\n);\n\nexport const makeNoopAnalyticsAction = () =>\n  makeAnalyticsAction('analytics/noop', () => null);\n\nexport const noopSearchAnalyticsAction = (): SearchAction =>\n  makeNoopAnalyticsAction();\n\nexport const partialDocumentInformation = (\n  result: Result,\n  state: Partial<SearchAppState>\n): PartialDocumentInformation => {\n  const paginationBasedIndex = (index: number) =>\n    index + (state.pagination?.firstResult ?? 0);\n\n  let resultIndex = -1;\n\n  const parentResults = state.search?.results as ResultWithFolding[];\n  resultIndex = findPositionWithUniqueId(result, parentResults);\n\n  if (resultIndex < 0) {\n    resultIndex = findPositionInChildResults(result, parentResults);\n  }\n\n  if (resultIndex < 0) {\n    // \u00AF\\_(\u30C4)_/\u00AF\n    resultIndex = 0;\n  }\n\n  return buildPartialDocumentInformation(\n    result,\n    paginationBasedIndex(resultIndex),\n    state\n  );\n};\n\nexport const partialRecommendationInformation = (\n  result: Result,\n  state: Partial<RecommendationAppState>\n): PartialDocumentInformation => {\n  const resultIndex =\n    state.recommendation?.recommendations.findIndex(\n      ({uniqueId}) => result.uniqueId === uniqueId\n    ) || 0;\n\n  return buildPartialDocumentInformation(result, resultIndex, state);\n};\nfunction buildPartialDocumentInformation(\n  result: Result,\n  resultIndex: number,\n  state: Partial<PipelineSection>\n): PartialDocumentInformation {\n  const collection = result.raw.collection;\n  const collectionName =\n    typeof collection === 'string' ? collection : 'default';\n\n  return {\n    collectionName,\n    documentAuthor: getDocumentAuthor(result),\n    documentPosition: resultIndex + 1,\n    documentTitle: result.title,\n    documentUri: result.uri,\n    documentUriHash: result.raw.urihash,\n    documentUrl: result.clickUri,\n    rankingModifier: result.rankingModifier || '',\n    sourceName: getSourceName(result),\n    queryPipeline: state.pipeline || getPipelineInitialState(),\n  };\n}\n\nexport const documentIdentifier = (result: Result): DocumentIdentifier => {\n  if (!result.raw.permanentid) {\n    console.warn(\n      'Missing field permanentid on result. This might cause many issues with your Coveo deployment. See https://docs.coveo.com/en/1913 and https://docs.coveo.com/en/1640 for more information.',\n      result\n    );\n  }\n  return {\n    contentIDKey: 'permanentid',\n    contentIDValue: result.raw.permanentid || '',\n  };\n};\n\nconst rawPartialDefinition = {\n  urihash: new StringValue(),\n  sourcetype: new StringValue(),\n  permanentid: new StringValue(),\n};\n\nexport const resultPartialDefinition = {\n  uniqueId: requiredNonEmptyString,\n  raw: new RecordValue({values: rawPartialDefinition}),\n  title: requiredNonEmptyString,\n  uri: requiredNonEmptyString,\n  clickUri: requiredNonEmptyString,\n  rankingModifier: new StringValue({required: false, emptyAllowed: true}),\n};\n\nexport const productRecommendationPartialDefinition = {\n  permanentid: requiredNonEmptyString,\n  documentUri: requiredNonEmptyString,\n  clickUri: requiredNonEmptyString,\n};\nfunction partialRawPayload(raw: Raw): Partial<Raw> {\n  return Object.assign(\n    {},\n    ...Object.keys(rawPartialDefinition).map((key) => ({[key]: raw[key]}))\n  );\n}\n\nfunction partialResultPayload(result: Result): Partial<Result> {\n  return Object.assign(\n    {},\n    ...Object.keys(resultPartialDefinition).map((key) => ({\n      [key]: result[key as keyof typeof resultPartialDefinition],\n    })),\n    {raw: partialRawPayload(result.raw)}\n  );\n}\n\nfunction getDocumentAuthor(result: Result) {\n  const author = result.raw['author'];\n  if (isNullOrUndefined(author)) {\n    return 'unknown';\n  }\n\n  return Array.isArray(author) ? author.join(';') : `${author}`;\n}\n\nfunction getSourceName(result: Result) {\n  const source = result.raw['source'];\n  if (isNullOrUndefined(source)) {\n    return 'unknown';\n  }\n  return source;\n}\n\nexport const validateResultPayload = (result: Result) =>\n  new Schema(resultPartialDefinition).validate(partialResultPayload(result));\n\nfunction findPositionInChildResults(\n  targetResult: Result,\n  parentResults: ResultWithFolding[]\n) {\n  for (const [i, parent] of parentResults.entries()) {\n    const children = getAllIncludedResultsFrom(parent);\n    const childIndex = findPositionWithUniqueId(targetResult, children);\n    if (childIndex !== -1) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction findPositionWithUniqueId(\n  targetResult: Result,\n  results: ResultWithFolding[] | Result[] = []\n) {\n  return results.findIndex(({uniqueId}) => uniqueId === targetResult.uniqueId);\n}\n\nexport const validateProductRecommendationPayload = (\n  productRec: ProductRecommendation\n) => new Schema(productRecommendationPartialDefinition).validate(productRec);\n\nasync function logNextEvent<PayloadType>(\n  emitEvent: ReturnType<typeof createRelay>['emit'],\n  type: string,\n  payload: PayloadType\n): Promise<void> {\n  //@ts-expect-error will be fixed when relay updates\n  await emitEvent(type, payload);\n  return;\n}\n", "import {SearchPageEvents} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {Result} from '../../api/search/search/result';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  nonEmptyString,\n} from '../../utils/validate-payload';\nimport {OmniboxSuggestionMetadata} from '../query-suggest/query-suggest-analytics-actions';\nimport {\n  ClickAction,\n  CustomAction,\n  documentIdentifier,\n  makeAnalyticsAction,\n  partialDocumentInformation,\n  SearchAction,\n  validateResultPayload,\n} from './analytics-utils';\n\nexport interface SearchEventPayload {\n  /** The identifier of the search action (e.g., `interfaceLoad`). */\n  evt: SearchPageEvents | string;\n  /** The event metadata. */\n  meta?: Record<string, unknown>;\n}\n\nexport interface ClickEventPayload {\n  /**\n   * The identifier of the click action.\n   */\n  evt: SearchPageEvents | string;\n  /**\n   * The result associated with the click event.\n   */\n  result: Result;\n  /**\n   * The event metadata.\n   */\n  meta?: Record<string, unknown>;\n}\n\nexport interface CustomEventPayload {\n  /**\n   * The event cause identifier of the custom action\n   */\n  evt: SearchPageEvents | string;\n  /**\n   * The event type identifier of the custom action\n   */\n  type: string;\n  /** The event metadata. */\n  meta?: Record<string, unknown>;\n}\n\nconst validateEvent = (p: {evt: string; type?: string}) =>\n  validatePayload(p, {\n    evt: requiredNonEmptyString,\n    type: nonEmptyString,\n  });\n\nexport interface LogSearchEventActionCreatorPayload {\n  /**\n   * The identifier of the search action (e.g., `interfaceLoad`).\n   * */\n  evt: string;\n  /**\n   * The event metadata.\n   * */\n  meta?: Record<string, unknown>;\n}\n\nexport const logSearchEvent = (\n  p: LogSearchEventActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/generic/search', (client) => {\n    validateEvent(p);\n    const {evt, meta} = p;\n    return client.makeSearchEvent(evt as SearchPageEvents, meta);\n  });\n\nexport interface LogClickEventActionCreatorPayload {\n  /**\n   * The identifier of the click action (e.g., `documentOpen`).\n   * */\n  evt: string;\n\n  /**\n   * The result associated with the click event.\n   */\n  result: Result;\n\n  /**\n   * The event metadata.\n   * */\n  meta?: Record<string, unknown>;\n}\n\nexport const logClickEvent = (\n  p: LogClickEventActionCreatorPayload\n): ClickAction =>\n  makeAnalyticsAction('analytics/generic/click', (client, state) => {\n    validateResultPayload(p.result);\n    validateEvent(p);\n\n    return client.makeClickEvent(\n      p.evt as SearchPageEvents,\n      partialDocumentInformation(p.result, state),\n      documentIdentifier(p.result),\n      p.meta\n    );\n  });\n\nexport interface LogCustomEventActionCreatorPayload {\n  /**\n   * The event cause identifier of the custom action\n   */\n  evt: string;\n  /**\n   * The event type identifier of the custom action\n   */\n  type: string;\n  /**\n   * The event metadata.\n   * */\n  meta?: Record<string, unknown>;\n}\n\nexport const logCustomEvent = (\n  p: LogCustomEventActionCreatorPayload\n): CustomAction =>\n  makeAnalyticsAction('analytics/generic/custom', (client) => {\n    validateEvent(p);\n    return client.makeCustomEventWithType(p.evt, p.type, p.meta);\n  });\n\n//TODO: KIT-2859\nexport const logInterfaceLoad = (): SearchAction =>\n  makeAnalyticsAction('analytics/interface/load', (client) =>\n    client.makeInterfaceLoad()\n  );\n\n//TODO: KIT-2859\nexport const logInterfaceChange = (): SearchAction =>\n  makeAnalyticsAction('analytics/interface/change', (client, state) =>\n    client.makeInterfaceChange({\n      interfaceChangeTo: state.configuration.analytics.originLevel2,\n    })\n  );\n\n//TODO: KIT-2859\nexport const logSearchFromLink = (): SearchAction =>\n  makeAnalyticsAction('analytics/interface/searchFromLink', (client) =>\n    client.makeSearchFromLink()\n  );\n\n//TODO: KIT-2859\nexport const logOmniboxFromLink = (\n  metadata: OmniboxSuggestionMetadata\n): SearchAction =>\n  makeAnalyticsAction('analytics/interface/omniboxFromLink', (client) =>\n    client.makeOmniboxFromLink(metadata)\n  );\n", "export enum SearchPageEvents {\n  /**\n   * Identifies the search event that gets logged when the initial query is performed as a result of loading a search interface.\n   */\n  interfaceLoad = 'interfaceLoad',\n  /**\n   * Identifies the search event that gets logged when a new tab is selected in the search interface.\n   */\n  interfaceChange = 'interfaceChange',\n  /**\n   * Identifies the search event that gets logged when `enableAutoCorrection: true` and the query is automatically corrected.\n   */\n  didyoumeanAutomatic = 'didyoumeanAutomatic',\n  /**\n   * Identifies the search event that gets logged when the query suggestion with the corrected term is selected and successfully updates the query.\n   */\n  didyoumeanClick = 'didyoumeanClick',\n  /**\n   * Identifies the search event that gets logged when a sorting method is selected.\n   */\n  resultsSort = 'resultsSort',\n  /**\n   * Identifies the search event that gets logged when a submit button is selected on a search box.\n   */\n  searchboxSubmit = 'searchboxSubmit',\n  /**\n   * Identifies the search event that gets logged when a clear button is selected on a search box.\n   */\n  searchboxClear = 'searchboxClear',\n  /**\n   * The search-as-you-type event that gets logged when a query is automatically generated, and results are displayed while a user is entering text in the search box before they voluntarily submit the query.\n   */\n  searchboxAsYouType = 'searchboxAsYouType',\n  /**\n   * The event that gets logged when a breadcrumb facet is selected and the query is updated.\n   */\n  breadcrumbFacet = 'breadcrumbFacet',\n  /**\n   * Identifies the search event that gets logged when the event to clear the current breadcrumbs is triggered.\n   */\n  breadcrumbResetAll = 'breadcrumbResetAll',\n  /**\n   * Identifies the click event that gets logged when the Quick View element is selected and a Quick View modal of the document is displayed.\n   */\n  documentQuickview = 'documentQuickview',\n  /**\n   * Identifies the click event that gets logged when a user clicks on a search result to open an item.\n   */\n  documentOpen = 'documentOpen',\n  /**\n   * Identifies the search event that gets logged when a user clicks a query suggestion based on the usage analytics recorded queries.\n   */\n  omniboxAnalytics = 'omniboxAnalytics',\n  /**\n   * Identifies the search event that gets logged when a suggested search query is selected from a standalone searchbox.\n   */\n  omniboxFromLink = 'omniboxFromLink',\n  /**\n   * Identifies the search event that gets logged when the search page loads with a query, such as when a user clicks a link pointing to a search results page with a query or enters a query in a standalone search box that points to a search page.\n   */\n  searchFromLink = 'searchFromLink',\n  /**\n   * Identifies the custom event that gets logged when a user action triggers a notification set in the effective query pipeline on the search page.\n   */\n  triggerNotify = 'notify',\n  /**\n   * Identifies the custom event that gets logged when a user action executes a JavaScript function set in the effective query pipeline on the search page.\n   */\n  triggerExecute = 'execute',\n  /**\n   * Identifies the custom event that gets logged when a user action triggers a new query set in the effective query pipeline on the search page.\n   */\n  triggerQuery = 'query',\n  /**\n   * Identifies the custom event that gets logged when a user undoes a query set in the effective query pipeline on the search page.\n   */\n  undoTriggerQuery = 'undoQuery',\n  /**\n   * Identifies the custom event that gets logged when a user action redirects them to a URL set in the effective query pipeline on the search page.\n   */\n  triggerRedirect = 'redirect',\n  /**\n   * Identifies the custom event that gets logged when the Results per page component is selected.\n   */\n  pagerResize = 'pagerResize',\n  /**\n   * Identifies the custom event that gets logged when a page number is selected and more items are loaded.\n   */\n  pagerNumber = 'pagerNumber',\n  /**\n   * Identifies the custom event that gets logged when the Next Page link is selected and more items are loaded.\n   */\n  pagerNext = 'pagerNext',\n  /**\n   * Identifies the custom event that gets logged when the Previous Page link is selected and more items are loaded.\n   */\n  pagerPrevious = 'pagerPrevious',\n  /**\n   * Identifies the custom event that gets logged when the user scrolls to the bottom of the item page and more results are loaded.\n   */\n  pagerScrolling = 'pagerScrolling',\n  /**\n   * Identifies the search event that gets logged when the clearing all selected values of a static filter.\n   */\n  staticFilterClearAll = 'staticFilterClearAll',\n  /**\n   * Identifies the search event that gets logged when a static filter check box is selected and the query is updated.\n   */\n  staticFilterSelect = 'staticFilterSelect',\n  /**\n   * Identifies the search event that gets logged when a static filter check box is deselected and the query is updated.\n   */\n  staticFilterDeselect = 'staticFilterDeselect',\n  /**\n   * Identifies the search event that gets logged when the Clear Facet button is selected.\n   */\n  facetClearAll = 'facetClearAll',\n  /**\n   * Identifies the custom event that gets logged when a query is being typed into the facet search box.\n   */\n  facetSearch = 'facetSearch',\n  /**\n   * Identifies the search event that gets logged when a facet check box is selected and the query is updated.\n   */\n  facetSelect = 'facetSelect',\n  /**\n   * Identifies the search event that gets logged when all filters on a facet are selected.\n   */\n  facetSelectAll = 'facetSelectAll',\n  /**\n   * Identifies the search event that gets logged when a facet check box is deselected and the query is updated.\n   */\n  facetDeselect = 'facetDeselect',\n  /**\n   * Identifies the search event that gets logged when a user clicks a facet value to filter out results containing the facet value.\n   */\n  facetExclude = 'facetExclude',\n  /**\n   * Identifies the search event that gets logged when a user clicks a facet value to not filter out results containing the facet value.\n   */\n  facetUnexclude = 'facetUnexclude',\n  /**\n   * Identifies the search event that gets logged when the sort criteria on a facet is updated.\n   */\n  facetUpdateSort = 'facetUpdateSort',\n  /**\n   * The custom event that gets logged when an end-user expands a facet to see additional values.\n   */\n  facetShowMore = 'showMoreFacetResults',\n  /**\n   * The custom event that gets logged when an end-user collapses a facet to see less values.\n   */\n  facetShowLess = 'showLessFacetResults',\n  /**\n   * Identifies the custom event that gets logged when a user query encounters an error during execution.\n   */\n  //eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  queryError = 'query',\n  /**\n   * Identifies the search and custom event that gets logged when a user clicks the Go Back link after an error page.\n   */\n  queryErrorBack = 'errorBack',\n  /**\n   * Identifies the search and custom event that gets logged when a user clears the query box after an error page.\n   */\n  queryErrorClear = 'errorClearQuery',\n  /**\n   * Identifies the search and custom event that gets logged when a user clicks the Retry link after an error page.\n   */\n  queryErrorRetry = 'errorRetry',\n  /**\n   * Identifies the custom event that gets logged when a user performs a query that returns recommendations in the Recommendations panel.\n   */\n  recommendation = 'recommendation',\n  /**\n   * Identifies the search event that gets logged when a user action (that is not a query) reloads the Recommendations panel with new recommendations.\n   */\n  recommendationInterfaceLoad = 'recommendationInterfaceLoad',\n  /**\n   * Identifies the click event that gets logged when a user clicks a recommendation in the Recommendations panel.\n   */\n  recommendationOpen = 'recommendationOpen',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a smart snippet answer as relevant.\n   */\n  likeSmartSnippet = 'likeSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a smart snippet answer as irrelevant.\n   */\n  dislikeSmartSnippet = 'dislikeSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user expand a smart snippet answer.\n   */\n  expandSmartSnippet = 'expandSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user collapse a smart snippet answer.\n   */\n  collapseSmartSnippet = 'collapseSmartSnippet',\n  /**\n   * Identifies the custom event that gets logged when a user open a smart snippet explanation modal for feedback.\n   */\n  openSmartSnippetFeedbackModal = 'openSmartSnippetFeedbackModal',\n  /**\n   * Identifies the custom event that gets logged when a user close a smart snippet explanation modal for feedback.\n   */\n  closeSmartSnippetFeedbackModal = 'closeSmartSnippetFeedbackModal',\n  /**\n   * Identifies the custom event that gets logged when a user sends an explanation for a smart snippet irrelevant answer.\n   */\n  sendSmartSnippetReason = 'sendSmartSnippetReason',\n  /**\n   * Identifies the custom event that gets logged when a snippet suggestion for a related question is expanded.\n   */\n  expandSmartSnippetSuggestion = 'expandSmartSnippetSuggestion',\n  /**\n   * Identifies the custom event that gets logged when a snippet suggestion for a related question is collapsed.\n   */\n  collapseSmartSnippetSuggestion = 'collapseSmartSnippetSuggestion',\n  /**\n   * Identifies the custom event that gets logged when the user presses \"show more\" on a snippet suggestion for a related question.\n   *\n   * @deprecated\n   */\n  showMoreSmartSnippetSuggestion = 'showMoreSmartSnippetSuggestion',\n  /**\n   * Identifies the custom event that gets logged when the user presses \"show less\" on a snippet suggestion for a related question.\n   *\n   * @deprecated\n   */\n  showLessSmartSnippetSuggestion = 'showLessSmartSnippetSuggestion',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on the source of an answer in a smart snippet.\n   */\n  openSmartSnippetSource = 'openSmartSnippetSource',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on the source of a snippet suggestion for a related question.\n   */\n  openSmartSnippetSuggestionSource = 'openSmartSnippetSuggestionSource',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on a link in the answer of a smart snippet.\n   */\n  openSmartSnippetInlineLink = 'openSmartSnippetInlineLink',\n  /**\n   * Identifies the custom event that gets logged when a user clicks on a link in the snippet suggestion for a related question.\n   */\n  openSmartSnippetSuggestionInlineLink = 'openSmartSnippetSuggestionInlineLink',\n  /**\n   * Identifies the search event that gets logged when a recent queries list item gets clicked.\n   */\n  recentQueryClick = 'recentQueriesClick',\n  /**\n   * Identifies the custom event that gets logged when a recent queries list gets cleared.\n   */\n  clearRecentQueries = 'clearRecentQueries',\n  /**\n   * Identifies the custom event that gets logged when a recently clicked results list item gets clicked.\n   */\n  recentResultClick = 'recentResultClick',\n  /**\n   * Identifies the custom event that gets logged when a recently clicked results list gets cleared.\n   */\n  clearRecentResults = 'clearRecentResults',\n  /**\n   * Identifies the search event that gets logged when a user clicks the Cancel last action link when no results are returned following their last action.\n   */\n  noResultsBack = 'noResultsBack',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Show More link under a search result that support the folding component.\n   */\n  showMoreFoldedResults = 'showMoreFoldedResults',\n  /**\n   * Identifies the custom event that gets logged when a user clicks the Show Less link under a search result that support the folding component.\n   */\n  showLessFoldedResults = 'showLessFoldedResults',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Copy To Clipboard result action.\n   */\n  copyToClipboard = 'copyToClipboard',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Send As Email result action.\n   */\n  caseSendEmail = 'Case.SendEmail',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Post To Feed result action.\n   */\n  feedItemTextPost = 'FeedItem.TextPost',\n  /**\n   * Identifies the click event that gets logged when a user clicks the Attach To Case result action.\n   */\n  caseAttach = 'caseAttach',\n  /**\n   * Identifies the custom event that gets logged when a user clicks the Detach From Case result action.\n   */\n  caseDetach = 'caseDetach',\n  /**\n   * Identifies the cause of a search request being retried in order to regenerate an answer stream that failed.\n   */\n  retryGeneratedAnswer = 'retryGeneratedAnswer',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a generated answer as relevant.\n   */\n  likeGeneratedAnswer = 'likeGeneratedAnswer',\n  /**\n   * Identifies the custom event that gets logged when a user identifies a generated answer as irrelevant.\n   */\n  dislikeGeneratedAnswer = 'dislikeGeneratedAnswer',\n  /**\n   * Identifies the custom event that gets logged when a user opens a generated answer citation.\n   */\n  openGeneratedAnswerSource = 'openGeneratedAnswerSource',\n  /**\n   * Identified the custom event that gets logged when a generated answer stream is completed.\n   */\n  generatedAnswerStreamEnd = 'generatedAnswerStreamEnd',\n\n  historyForward = 'historyForward',\n\n  historyBackward = 'historyBackward',\n}\n", "import {ArrayValue, BooleanValue, StringValue, Value} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {IRuntimeEnvironment} from 'coveo.analytics';\nimport {doNotTrack} from '../../utils/utils';\nimport {\n  nonEmptyString,\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\n\nconst originSchemaOnConfigUpdate = () => nonEmptyString;\n\nconst originSchemaOnUpdate = () => requiredNonEmptyString;\n\nexport interface UpdateBasicConfigurationActionCreatorPayload {\n  /**\n   * The access token to use to authenticate requests against the Coveo Cloud endpoints. Typically, this will be an API key or search token that grants the privileges to execute queries and push usage analytics data in the target Coveo Cloud organization.\n   */\n  accessToken?: string;\n\n  /**\n   * The unique identifier of the target Coveo Cloud organization (e.g., `mycoveocloudorganizationg8tp8wu3`)\n   */\n  organizationId?: string;\n\n  /**\n   * The Platform URL to use (e.g., `https://platform.cloud.coveo.com`).\n   */\n  platformUrl?: string;\n}\n\nexport const updateBasicConfiguration = createAction(\n  'configuration/updateBasicConfiguration',\n  (payload: UpdateBasicConfigurationActionCreatorPayload) =>\n    validatePayload(payload, {\n      accessToken: nonEmptyString,\n      organizationId: nonEmptyString,\n      platformUrl: nonEmptyString,\n    })\n);\n\nexport interface UpdateSearchConfigurationActionCreatorPayload {\n  /**\n   * The Search API base URL to use (e.g., `https://platform.cloud.coveo.com/rest/search/v2`).\n   */\n  apiBaseUrl?: string;\n\n  /**\n   * The name of the query pipeline to use for the query (e.g., `External Search`).\n   */\n  pipeline?: string;\n\n  /**\n   * The first level of origin of the request, typically the identifier of the graphical search interface from which the request originates (e.g., `ExternalSearch`).\n   */\n  searchHub?: string;\n\n  /**\n   * The locale of the current user. Must comply with IETF\u2019s BCP 47 definition: https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n   */\n  locale?: string;\n\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone of the user.\n   */\n  timezone?: string;\n  /**\n   * Specifies the name of the authentication providers to use to perform queries.\n   *\n   * See [SAML Authentication](https://docs.coveo.com/en/91/).\n   */\n  authenticationProviders?: string[];\n}\n\nexport const updateSearchConfiguration = createAction(\n  'configuration/updateSearchConfiguration',\n  (payload: UpdateSearchConfigurationActionCreatorPayload) => {\n    return validatePayload(payload, {\n      apiBaseUrl: nonEmptyString,\n      pipeline: new StringValue({required: false, emptyAllowed: true}),\n      searchHub: nonEmptyString,\n      timezone: nonEmptyString,\n      locale: nonEmptyString,\n      authenticationProviders: new ArrayValue({\n        required: false,\n        each: requiredNonEmptyString,\n      }),\n    });\n  }\n);\n\nexport interface UpdateAnalyticsConfigurationActionCreatorPayload {\n  /**\n   * Whether to enable usage analytics tracking.\n   */\n  enabled?: boolean;\n\n  /**\n   * Sets the Origin Context dimension on the analytic events.\n   *\n   * You can use this dimension to specify the context of your application.\n   * Suggested values are \"Search\", \"InternalSearch\" and \"CommunitySearch\"\n   */\n  originContext?: string;\n\n  /**\n   * The origin level 2 usage analytics event metadata whose value should typically be the identifier of the tab from which the usage analytics event originates (e.g., `All`).\n   */\n  originLevel2?: string;\n\n  /**\n   * The origin level 3 usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface that\u2019s making the request (e.g., `https://connect.coveo.com/s/`).\n   */\n  originLevel3?: string;\n\n  /**\n   * The Usage Analytics API base URL to use (e.g., `https://platform.cloud.coveo.com/rest/ua`).\n   */\n  apiBaseUrl?: string;\n\n  /**\n   * The Usage Analytics API base URL to use (e.g., `https://platform.cloud.coveo.com/rest/organizations/${organizationId}/events/v1`).\n   */\n  nextApiBaseUrl?: string;\n\n  /**\n   * The Coveo analytics runtime to use, see https://github.com/coveo/coveo.analytics.js for more info.\n   */\n  runtimeEnvironment?: AnalyticsRuntimeEnvironment;\n  /**\n   * Whether analytics events should be logged anonymously.\n   * If set to true, the Usage Analytics Write API will not extract the name and userDisplayName, if present, from the search token\n   */\n  anonymous?: boolean;\n  /**\n   *  The name of the device that the end user is using. It should be explicitly configured in the context of a native mobile app.\n   */\n  deviceId?: string;\n  /**\n   * Specifies the user display name for the usage analytics logs.\n   */\n  userDisplayName?: string;\n  /**\n   * Specifies the URL of the current page or component.\n   */\n  documentLocation?: string;\n  /**\n   * TBD\n   */\n  trackingId?: string;\n\n  analyticsMode?: 'legacy' | 'next';\n}\n\nexport type AnalyticsRuntimeEnvironment = IRuntimeEnvironment;\n\nexport const updateAnalyticsConfiguration = createAction(\n  'configuration/updateAnalyticsConfiguration',\n  (payload: UpdateAnalyticsConfigurationActionCreatorPayload) => {\n    if (doNotTrack()) {\n      payload.enabled = false;\n    }\n    return validatePayload(payload, {\n      enabled: new BooleanValue({default: true}),\n      originContext: originSchemaOnConfigUpdate(),\n      originLevel2: originSchemaOnConfigUpdate(),\n      originLevel3: originSchemaOnConfigUpdate(),\n      apiBaseUrl: nonEmptyString,\n      nextApiBaseUrl: nonEmptyString,\n      runtimeEnvironment: new Value(),\n      anonymous: new BooleanValue({default: false}),\n      deviceId: nonEmptyString,\n      userDisplayName: nonEmptyString,\n      documentLocation: nonEmptyString,\n      trackingId: nonEmptyString,\n      analyticsMode: new StringValue<'legacy' | 'next'>({\n        constrainTo: ['legacy', 'next'],\n        required: false,\n        default: 'legacy',\n      }),\n    });\n  }\n);\n\nexport const disableAnalytics = createAction('configuration/analytics/disable');\nexport const enableAnalytics = createAction('configuration/analytics/enable');\n\nexport interface SetOriginLevel2ActionCreatorPayload {\n  /**\n   * The origin level 2 usage analytics event metadata whose value should typically be the identifier of the tab (e.g., `All`).\n   */\n  originLevel2: string;\n}\n\nexport const setOriginLevel2 = createAction(\n  'configuration/analytics/originlevel2',\n  (payload: SetOriginLevel2ActionCreatorPayload) =>\n    validatePayload(payload, {originLevel2: originSchemaOnUpdate()})\n);\n\nexport interface SetOriginLevel3ActionCreatorPayload {\n  /**\n   * The origin level 3 usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface (e.g., `https://connect.coveo.com/s/`).\n   */\n  originLevel3: string;\n}\n\nexport const setOriginLevel3 = createAction(\n  'configuration/analytics/originlevel3',\n  (payload: SetOriginLevel3ActionCreatorPayload) =>\n    validatePayload(payload, {originLevel3: originSchemaOnUpdate()})\n);\n", "import {\n  BooleanValue,\n  StringValue,\n  SchemaDefinition,\n  NumberValue,\n  RecordValue,\n} from '@coveo/bueno';\nimport {SearchParameters} from './search-parameter-actions';\n\nexport const searchParametersDefinition: SchemaDefinition<\n  Required<SearchParameters>\n> = {\n  q: new StringValue(),\n  enableQuerySyntax: new BooleanValue(),\n  aq: new StringValue(),\n  cq: new StringValue(),\n  firstResult: new NumberValue({min: 0}),\n  numberOfResults: new NumberValue({min: 0}),\n  sortCriteria: new StringValue(),\n  f: new RecordValue(),\n  fExcluded: new RecordValue(),\n  cf: new RecordValue(),\n  nf: new RecordValue(),\n  df: new RecordValue(),\n  debug: new BooleanValue(),\n  sf: new RecordValue(),\n  tab: new StringValue(),\n  af: new RecordValue(),\n};\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {DateRangeRequest} from '../facets/range-facets/date-facet-set/interfaces/request';\nimport {NumericRangeRequest} from '../facets/range-facets/numeric-facet-set/interfaces/request';\nimport {searchParametersDefinition} from './search-parameter-schema';\n\n/**\n * The parameters affecting the search response.\n */\nexport interface SearchParameters {\n  /**\n   * The advanced query expression.\n   */\n  aq?: string;\n\n  /**\n   * A record of the category facets, where the key is the facet id, and value is an array containing the parts of the selected path.\n   */\n  cf?: Record<string, string[]>;\n\n  /**\n   * The constant query expression.\n   */\n  cq?: string;\n\n  /**\n   * Determines whether to return debug information for a query.\n   */\n  debug?: boolean;\n\n  /**\n   * A record of the date facets, where the key is the facet id, and value is an array containing the date ranges to request.\n   */\n  df?: Record<string, DateRangeRequest[]>;\n\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   */\n  enableQuerySyntax?: boolean;\n\n  /**\n   * A record of the facets, where the key is the facet id, and value is an array containing the selected values.\n   */\n  f?: Record<string, string[]>;\n\n  /**\n   * A record of the excluded facets, where the key is the facet id, and value is an array containing the excluded values.\n   */\n  fExcluded?: Record<string, string[]>;\n\n  /**\n   * A zero-based index of the first result.\n   */\n  firstResult?: number;\n\n  /**\n   * A record of the numeric facets, where the key is the facet id, and value is an array containing the numeric ranges to request.\n   */\n  nf?: Record<string, NumericRangeRequest[]>;\n\n  /**\n   * The number of results to return.\n   */\n  numberOfResults?: number;\n\n  /**\n   * The query.\n   */\n  q?: string;\n\n  /**\n   * The sort expression to order returned results by.\n   */\n  sortCriteria?: string;\n\n  /**\n   * A record of the static filters, where the key is the static filter id, and value is an array containing the selected static filter captions.\n   */\n  sf?: Record<string, string[]>;\n\n  /**\n   * The active tab id.\n   */\n  tab?: string;\n\n  /**\n   * A record of the automatic facets, where the key is the facet id, and value is an array containing the selected values.\n   */\n  af?: Record<string, string[]>;\n}\n\nexport const restoreSearchParameters = createAction(\n  'searchParameters/restore',\n  (payload: SearchParameters) =>\n    validatePayload(payload, searchParametersDefinition)\n);\n", "import {createAction} from '@reduxjs/toolkit';\n\nexport const enableDebug = createAction('debug/enable');\nexport const disableDebug = createAction('debug/disable');\n", "export const getDebugInitialState = () => false;\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {enableDebug, disableDebug} from './debug-actions';\nimport {getDebugInitialState} from './debug-state';\n\nexport const debugReducer = createReducer(getDebugInitialState(), (builder) => {\n  builder\n    .addCase(enableDebug, () => true)\n    .addCase(disableDebug, () => false)\n    .addCase(restoreSearchParameters, (state, action) => {\n      return action.payload.debug ?? state;\n    });\n});\n", "import {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {HistoryState} from './history-state';\n\nexport const undo = createAction('history/undo');\nexport const redo = createAction('history/redo');\n\nexport const snapshot = createAction<HistoryState>('history/snapshot');\n\nexport const back = createAsyncThunk('history/back', async (_, {dispatch}) => {\n  dispatch(undo());\n  await dispatch(change());\n});\n\nexport const forward = createAsyncThunk(\n  'history/forward',\n  async (_, {dispatch}) => {\n    dispatch(redo());\n    await dispatch(change());\n  }\n);\n\nexport const change = createAsyncThunk(\n  'history/change',\n  async (_, {getState}) => {\n    const s = getState() as SearchAppState;\n    return s.history.present;\n  }\n);\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nexport const setPipeline = createAction('pipeline/set', (payload: string) =>\n  validatePayload(\n    payload,\n    new StringValue({required: true, emptyAllowed: true})\n  )\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {updateSearchConfiguration} from '../configuration/configuration-actions';\nimport {change} from '../history/history-actions';\nimport {setPipeline} from './pipeline-actions';\nimport {getPipelineInitialState} from './pipeline-state';\n\nexport const pipelineReducer = createReducer(\n  getPipelineInitialState(),\n  (builder) => {\n    builder\n      .addCase(setPipeline, (_, action) => action.payload)\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.pipeline ?? state\n      )\n      .addCase(\n        updateSearchConfiguration,\n        (state, action) => action.payload.pipeline || state\n      );\n  }\n);\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nexport const setSearchHub = createAction('searchHub/set', (payload: string) =>\n  validatePayload(\n    payload,\n    new StringValue({required: true, emptyAllowed: true})\n  )\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {updateSearchConfiguration} from '../configuration/configuration-actions';\nimport {change} from '../history/history-actions';\nimport {setSearchHub} from './search-hub-actions';\nimport {getSearchHubInitialState} from './search-hub-state';\n\nexport const searchHubReducer = createReducer(\n  getSearchHubInitialState(),\n  (builder) => {\n    builder\n      .addCase(setSearchHub, (_, action) => action.payload)\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.searchHub ?? state\n      )\n      .addCase(\n        updateSearchConfiguration,\n        (state, action) => action.payload.searchHub || state\n      );\n  }\n);\n", "import {createAction} from '@reduxjs/toolkit';\n\nexport const deselectAllBreadcrumbs = createAction('breadcrumb/deselectAll');\nexport const deselectAllNonBreadcrumbs = createAction(\n  'breadcrumb/deselectAllNonBreadcrumbs'\n);\n", "import {BooleanValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../utils/validate-payload';\n\nexport interface UpdateFacetAutoSelectionActionCreatorPayload {\n  /**\n   * Whether to allow or prevent automatic selection in all facets.\n   */\n  allow: boolean;\n}\n\nexport const updateFacetAutoSelection = createAction(\n  'facet/updateFacetAutoSelection',\n  (payload: UpdateFacetAutoSelectionActionCreatorPayload) =>\n    validatePayload(payload, {\n      allow: new BooleanValue({required: true}),\n    })\n);\n", "import {createAction} from '@reduxjs/toolkit';\nimport {Result} from '../../index';\nimport {InstantResultSection} from '../../state/state-sections';\nimport {\n  validatePayload,\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\nimport {StateNeededByExecuteSearch} from '../search/search-actions';\n\nexport interface RegisterInstantResultActionCreatorPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n}\n\nexport interface UpdateInstantResultQueryActionCreatorPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n  /**\n   * The initial basic query expression for instant results.\n   */\n  q: string;\n}\n\nexport interface ClearExpiredInstantResultsActionCreatorPayload {\n  /**\n   * The search box id.\n   */\n  id: string;\n}\n\nconst instantResultsRegisterDefinition = {\n  id: requiredNonEmptyString,\n};\n\nconst instantResultsQueryDefinition = {\n  ...instantResultsRegisterDefinition,\n  q: requiredEmptyAllowedString,\n};\n\nexport const registerInstantResults = createAction(\n  'instantResults/register',\n  (payload: RegisterInstantResultActionCreatorPayload) =>\n    validatePayload(payload, instantResultsRegisterDefinition)\n);\n\nexport const updateInstantResultsQuery = createAction(\n  'instantResults/updateQuery',\n  (payload: UpdateInstantResultQueryActionCreatorPayload) =>\n    validatePayload(payload, instantResultsQueryDefinition)\n);\n\nexport const clearExpiredResults = createAction(\n  'instantResults/clearExpired',\n  (payload: ClearExpiredInstantResultsActionCreatorPayload) =>\n    validatePayload(payload, instantResultsRegisterDefinition)\n);\n\nexport interface FetchInstantResultsActionCreatorPayload {\n  /**\n   * The search box ID.\n   */\n  id: string;\n  /**\n   * The query for which instant results are retrieved.\n   */\n  q: string;\n  /**\n   * The maximum items to be stored in the instant result list for each query.\n   */\n  maxResultsPerQuery: number;\n  /**\n   * Number in milliseconds that cached results will be valid for. Set to 0 so that results never expire.\n   */\n  cacheTimeout?: number;\n}\n\nexport interface FetchInstantResultsThunkReturn {\n  results: Result[];\n  searchUid: string;\n  totalCountFiltered: number;\n  duration: number;\n}\n\nexport type StateNeededByInstantResults = StateNeededByExecuteSearch &\n  InstantResultSection;\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nconst numberValue = new NumberValue({required: true, min: 0});\n\nexport const registerNumberOfResults = createAction(\n  'pagination/registerNumberOfResults',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const updateNumberOfResults = createAction(\n  'pagination/updateNumberOfResults',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const registerPage = createAction(\n  'pagination/registerPage',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const updatePage = createAction(\n  'pagination/updatePage',\n  (payload: number) => validatePayload(payload, numberValue)\n);\n\nexport const nextPage = createAction('pagination/nextPage');\n\nexport const previousPage = createAction('pagination/previousPage');\n", "import {BooleanValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nexport interface UpdateQueryActionCreatorPayload {\n  /**\n   * The basic query expression (e.g., `acme tornado seeds`).\n   */\n  q?: string;\n\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   */\n  enableQuerySyntax?: boolean;\n}\n\nexport const updateQuery = createAction(\n  'query/updateQuery',\n  (payload: UpdateQueryActionCreatorPayload) =>\n    validatePayload(payload, {\n      q: new StringValue(),\n      enableQuerySyntax: new BooleanValue(),\n    })\n);\n", "import {EventDescription} from 'coveo.analytics';\nimport {getVisitorID} from '../../api/analytics/coveo-analytics-utils';\nimport {getPageID} from '../../api/analytics/search-analytics';\nimport {AnalyticsParam} from '../../api/search/search-api-params';\nimport {AnalyticsState} from './configuration-state';\n\nexport const fromAnalyticsStateToAnalyticsParams = async (\n  s: AnalyticsState,\n  eventDescription?: EventDescription\n): Promise<AnalyticsParam> => {\n  return {\n    analytics: {\n      clientId: await getVisitorID(s),\n      clientTimestamp: new Date().toISOString(),\n      documentReferrer: s.originLevel3,\n      originContext: s.originContext,\n      ...(eventDescription && {\n        actionCause: eventDescription.actionCause,\n        customData: eventDescription.customData,\n      }),\n      ...(s.userDisplayName && {userDisplayName: s.userDisplayName}),\n      ...(s.documentLocation && {documentLocation: s.documentLocation}),\n      ...(s.deviceId && {deviceId: s.deviceId}),\n      ...(getPageID() && {pageId: getPageID()}),\n      ...(s.analyticsMode && s.trackingId && {trackingId: s.trackingId}),\n      ...{capture: s.analyticsMode === 'next' ?? false},\n    },\n  };\n};\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {EventDescription} from 'coveo.analytics';\nimport {\n  getVisitorID,\n  historyStore,\n} from '../../api/analytics/coveo-analytics-utils';\nimport {SearchRequest} from '../../api/search/search/search-request';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {ConfigurationSection} from '../../state/state-sections';\nimport {fromAnalyticsStateToAnalyticsParams} from '../configuration/analytics-params';\n\ntype StateNeededByExecuteSearchAndFolding = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport const buildSearchAndFoldingLoadCollectionRequest = async (\n  state: StateNeededByExecuteSearchAndFolding,\n  eventDescription?: EventDescription\n): Promise<SearchRequest> => {\n  return {\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    url: state.configuration.search.apiBaseUrl,\n    locale: state.configuration.search.locale,\n    debug: state.debug,\n    tab: state.configuration.analytics.originLevel2,\n    referrer: state.configuration.analytics.originLevel3,\n    timezone: state.configuration.search.timezone,\n    ...(state.configuration.analytics.enabled && {\n      visitorId: await getVisitorID(state.configuration.analytics),\n      actionsHistory: historyStore.getHistory(),\n    }),\n    ...(state.advancedSearchQueries?.aq && {\n      aq: state.advancedSearchQueries.aq,\n    }),\n    ...(state.advancedSearchQueries?.cq && {\n      cq: state.advancedSearchQueries.cq,\n    }),\n    ...(state.advancedSearchQueries?.lq && {\n      lq: state.advancedSearchQueries.lq,\n    }),\n    ...(state.advancedSearchQueries?.dq && {\n      dq: state.advancedSearchQueries.dq,\n    }),\n    ...(state.context && {\n      context: state.context.contextValues,\n    }),\n    ...(state.fields &&\n      !state.fields.fetchAllFields && {\n        fieldsToInclude: state.fields.fieldsToInclude,\n      }),\n    ...(state.dictionaryFieldContext && {\n      dictionaryFieldContext: state.dictionaryFieldContext.contextValues,\n    }),\n    ...(state.pipeline && {\n      pipeline: state.pipeline,\n    }),\n    ...(state.query && {\n      q: state.query.q,\n      enableQuerySyntax: state.query.enableQuerySyntax,\n    }),\n    ...(state.searchHub && {\n      searchHub: state.searchHub,\n    }),\n    ...(state.sortCriteria && {\n      sortCriteria: state.sortCriteria,\n    }),\n    ...(state.configuration.analytics.enabled &&\n      (await fromAnalyticsStateToAnalyticsParams(\n        state.configuration.analytics,\n        eventDescription\n      ))),\n    ...(state.excerptLength &&\n      !isNullOrUndefined(state.excerptLength.length) && {\n        excerptLength: state.excerptLength.length,\n      }),\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {getQueryInitialState} from '../../features/query/query-state';\nimport {getSearchInitialState} from '../../features/search/search-state';\nimport {InstantResultSection} from '../../state/state-sections';\nimport {\n  SearchAnalyticsProvider,\n  StateNeededBySearchAnalyticsProvider,\n} from './search-analytics';\n\nexport type StateNeededByInstantResultsAnalyticsProvider =\n  StateNeededBySearchAnalyticsProvider & InstantResultSection;\n\nexport class InstantResultsAnalyticsProvider extends SearchAnalyticsProvider {\n  constructor(\n    protected getState: () => StateNeededByInstantResultsAnalyticsProvider\n  ) {\n    super(getState);\n  }\n\n  private get activeInstantResultQuery() {\n    const state = this.getState().instantResults;\n    for (const id in state) {\n      for (const query in state[id].cache) {\n        if (state[id].cache[query].isActive) {\n          return state[id].q;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  private get activeInstantResultCache() {\n    const state = this.getState().instantResults;\n    for (const id in state) {\n      for (const query in state[id].cache) {\n        if (state[id].cache[query].isActive) {\n          return state[id].cache[query];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  protected get results() {\n    return this.activeInstantResultCache?.results;\n  }\n\n  protected get queryText() {\n    return this.activeInstantResultQuery ?? getQueryInitialState().q;\n  }\n\n  protected get responseTime() {\n    return (\n      this.activeInstantResultCache?.duration ??\n      getSearchInitialState().duration\n    );\n  }\n\n  protected get numberOfResults() {\n    return (\n      this.activeInstantResultCache?.totalCountFiltered ??\n      getSearchInitialState().response.totalCountFiltered\n    );\n  }\n\n  public getSearchUID(): string {\n    const searchUid = this.activeInstantResultCache?.searchUid;\n    return searchUid || super.getSearchUID();\n  }\n}\n", "import {ItemClick} from '@coveo/relay-event-types';\nimport {\n  InstantResultsAnalyticsProvider,\n  StateNeededByInstantResultsAnalyticsProvider,\n} from '../../api/analytics/instant-result-analytics';\nimport {Result} from '../../api/search/search/result';\nimport {\n  partialDocumentInformation,\n  documentIdentifier,\n  validateResultPayload,\n  makeAnalyticsAction,\n  InstantResultsSearchAction,\n  InstantResultsClickAction,\n} from '../analytics/analytics-utils';\n\nexport const logInstantResultOpen = (\n  result: Result\n): InstantResultsClickAction =>\n  makeAnalyticsAction({\n    prefix: 'analytics/instantResult/open',\n    __legacy__getBuilder: (client, state) => {\n      validateResultPayload(result);\n      return client.makeDocumentOpen(\n        partialDocumentInformation(result, state),\n        documentIdentifier(result)\n      );\n    },\n    __legacy__provider: (\n      getState: () => StateNeededByInstantResultsAnalyticsProvider\n    ) => new InstantResultsAnalyticsProvider(getState),\n\n    analyticsType: 'itemClick',\n    analyticsPayloadBuilder: (state): ItemClick => {\n      const docInfo = partialDocumentInformation(result, state);\n      const docId = documentIdentifier(result);\n      return {\n        searchUid: state.search?.response.searchUid ?? '',\n        position: docInfo.documentPosition,\n        itemMetadata: {\n          uniqueFieldName: docId.contentIDKey,\n          uniqueFieldValue: docId.contentIDValue,\n          title: docInfo.documentTitle,\n          author: docInfo.documentAuthor,\n          url: docInfo.documentUrl,\n        },\n      };\n    },\n  });\n\nexport const logInstantResultsSearch = (): InstantResultsSearchAction =>\n  makeAnalyticsAction(\n    'analytics/instantResult/searchboxAsYouType',\n    (client) => client.makeSearchboxAsYouType(),\n    (getState) => new InstantResultsAnalyticsProvider(getState)\n  );\n", "export interface AdvancedSearchQueriesDefaultFiltersState {\n  /**\n   * The initial cq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  cq: string;\n\n  /**\n   * The initial aq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  aq: string;\n\n  /**\n   * The initial lq filter, or large query expression filter\n   */\n  lq: string;\n\n  /**\n   * The initial dq filter, or disjunction query expression filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  dq: string;\n}\n\nexport interface AdvancedSearchQueriesState {\n  /**\n   * The cq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  cq: string;\n\n  /**\n   * Whether the cq filter was manually set.\n   *\n   * If the cq was manually set and the cq is registered, the cq will not be overridden by the default filter.\n   */\n  cqWasSet: boolean;\n\n  /**\n   * The aq filter (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  aq: string;\n\n  /**\n   * Whether the aq filter was manually set.\n   *\n   * If the aq was manually set and the aq is registered, the aq will not be overridden by the default filter.\n   */\n  aqWasSet: boolean;\n\n  /**\n   * The lq filter, or large query expression filter.\n   *\n   * The large query expression (lq) is a part of the combined query expression which typically contains a case\n   * description, a long textual query, or any other form of text that can help refine a query.\n   */\n  lq: string;\n\n  /**\n   * Whether the lq filter was manually set.\n   *\n   * If the lq was manually set and the lq is registered, the lq will not be overridden by the default filter.\n   */\n  lqWasSet: boolean;\n\n  /**\n   * The dq filter, or disjunction query expression.\n   *\n   * This is the disjunctive part of the query expression that is merged with the other expression parts using an OR boolean operator (e.g., `((q AND aq) OR dq) AND cq).\n   */\n  dq: string;\n  /**\n   * Whether the dq filter was manually set.\n   *\n   * If the dq was manually set and the dq is registered, the dq will not be overridden by the default filter.\n   */\n  dqWasSet: boolean;\n\n  /**\n   * The initial filters meant to be used as default values for the cq filter and aq filter.\n   */\n  defaultFilters: AdvancedSearchQueriesDefaultFiltersState;\n}\n\nexport const getAdvancedSearchQueriesInitialState: () => AdvancedSearchQueriesState =\n  () => ({\n    cq: '',\n    cqWasSet: false,\n    aq: '',\n    aqWasSet: false,\n    lq: '',\n    lqWasSet: false,\n    dq: '',\n    dqWasSet: false,\n    defaultFilters: {\n      cq: '',\n      aq: '',\n      lq: '',\n      dq: '',\n    },\n  });\n", "import {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport {getAdvancedSearchQueriesInitialState} from '../advanced-search-queries/advanced-search-queries-state';\nimport {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\nimport {getQueryInitialState} from '../query/query-state';\n\nexport const logFetchMoreResults = (): SearchAction =>\n  makeAnalyticsAction('search/logFetchMoreResults', (client) =>\n    client.makeFetchMoreResults()\n  );\n\nexport const logQueryError = (\n  error: SearchAPIErrorWithStatusCode\n): SearchAction =>\n  makeAnalyticsAction('search/queryError', (client, state) =>\n    client.makeQueryError({\n      query: state.query?.q || getQueryInitialState().q,\n      aq:\n        state.advancedSearchQueries?.aq ||\n        getAdvancedSearchQueriesInitialState().aq,\n      cq:\n        state.advancedSearchQueries?.cq ||\n        getAdvancedSearchQueriesInitialState().cq,\n      dq:\n        state.advancedSearchQueries?.dq ||\n        getAdvancedSearchQueriesInitialState().dq,\n      errorType: error.type,\n      errorMessage: error.message,\n    })\n  );\n", "import {NumberValue, Schema, StringValue} from '@coveo/bueno';\nimport dayjs, {QUnitType} from 'dayjs';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\nimport {assertDateAboveAPIMinimum, formatDateForSearchApi} from './date-format';\n\ndayjs.extend(quarterOfYear);\n\n/**\n * The period to set the date relative to.\n */\nexport type RelativeDatePeriod = 'past' | 'now' | 'next';\nconst validRelativeDatePeriods = ['past', 'now', 'next'];\n\n/**\n * The unit of time in which the date is set relative to.\n */\nexport type RelativeDateUnit =\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'week'\n  | 'month'\n  | 'quarter'\n  | 'year';\nconst validRelativeDateUnits = [\n  'minute',\n  'hour',\n  'day',\n  'week',\n  'month',\n  'quarter',\n  'year',\n];\n\n/**\n * Defines a date relative to the current moment.\n */\nexport interface RelativeDate {\n  /**\n   * The relative period of time.\n   */\n  period: RelativeDatePeriod;\n  /**\n   * The unit of time in which the date is set relative to. When `period` is set as `now`, the `unit` does not have to be defined.\n   */\n  unit?: RelativeDateUnit;\n  /**\n   * The amount of the `unit` of time. When `period` is set as `now`, the `amount` does not have to be defined.\n   */\n  amount?: number;\n}\n\nconst buildRelativeDateDefinition = (period: RelativeDatePeriod) => {\n  const isNow = period === 'now';\n  return {\n    amount: new NumberValue({required: !isNow, min: 1}),\n    unit: new StringValue({\n      required: !isNow,\n      constrainTo: validRelativeDateUnits,\n    }),\n    period: new StringValue({\n      required: true,\n      constrainTo: validRelativeDatePeriods,\n    }),\n  };\n};\n\n/**\n * Validates a relative date and throws if it's invalid.\n * @param date The relative date, in `RelativeDate` or string format\n */\nexport function validateRelativeDate(date: RelativeDate | string) {\n  if (typeof date === 'string' && !isRelativeDateFormat(date)) {\n    throw new Error(\n      `The value \"${date}\" is not respecting the relative date format \"period-amount-unit\"`\n    );\n  }\n\n  const relativeDate =\n    typeof date === 'string' ? parseRelativeDate(date) : date;\n\n  new Schema(buildRelativeDateDefinition(relativeDate.period)).validate(\n    relativeDate\n  );\n\n  const dayJsDate = relativeToAbsoluteDate(relativeDate);\n  const stringifiedDate = JSON.stringify(relativeDate);\n  if (!dayJsDate.isValid()) {\n    throw new Error(`Date is invalid: ${stringifiedDate}`);\n  }\n\n  assertDateAboveAPIMinimum(dayJsDate);\n}\n\nexport function serializeRelativeDate(relativeDate: RelativeDate) {\n  const {period, amount, unit} = relativeDate;\n\n  switch (period) {\n    case 'past':\n    case 'next':\n      return `${period}-${amount}-${unit}`;\n    case 'now':\n      return period;\n  }\n}\n\nfunction relativeToAbsoluteDate(relativeDate: RelativeDate) {\n  const {period, amount, unit} = relativeDate;\n  switch (period) {\n    case 'past':\n      return dayjs().subtract(amount!, unit as QUnitType);\n    case 'next':\n      return dayjs().add(amount!, unit as QUnitType);\n    case 'now':\n      return dayjs();\n  }\n}\n\nexport function formatRelativeDateForSearchApi(relativeDate: string) {\n  return formatDateForSearchApi(\n    relativeToAbsoluteDate(parseRelativeDate(relativeDate))\n  );\n}\n\nfunction splitDate(date: string) {\n  return date.toLocaleLowerCase().split('-');\n}\n\nexport function isRelativeDateFormat(date: string) {\n  const [period, amount, unit] = splitDate(date);\n  if (period === 'now') {\n    return true;\n  }\n\n  if (!validRelativeDatePeriods.includes(period)) {\n    return false;\n  }\n\n  if (!validRelativeDateUnits.includes(unit)) {\n    return false;\n  }\n\n  const intAmount = parseInt(amount);\n  if (isNaN(intAmount) || intAmount <= 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isRelativeDate(date: unknown): date is RelativeDate {\n  return !!date && typeof date === 'object' && 'period' in date!;\n}\n\nfunction parseRelativeDate(date: string): RelativeDate {\n  const [period, amount, unit] = splitDate(date);\n  if (period === 'now') {\n    return {\n      period: 'now',\n    };\n  }\n\n  return {\n    period: period as RelativeDatePeriod,\n    amount: amount ? parseInt(amount) : undefined,\n    unit: unit ? (unit as RelativeDateUnit) : undefined,\n  };\n}\n\n/**\n * Deserializes a relative date string value into a valid `RelativeDate` object.\n * Throws an error if the date is invalid.\n * @param date The string serialized with the format \"period-amount-unit\"\n * @returns The parsed `RelativeDate` object.\n */\nexport function deserializeRelativeDate(date: string) {\n  validateRelativeDate(date);\n  return parseRelativeDate(date);\n}\n", "import dayjs, {ConfigType} from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\ndayjs.extend(customParseFormat);\n\n/**\n * The date format supported by the Search API.\n */\nexport const API_DATE_FORMAT = 'YYYY/MM/DD@HH:mm:ss';\nconst API_DATE_MINIMUM = '1401-01-01';\n\nexport type AbsoluteDate = string | number | Date;\n\nexport function parseDate(date: ConfigType, format?: string) {\n  const parsedDate = dayjs(date, format);\n  if (!parsedDate.isValid() && !format) {\n    return dayjs(date, API_DATE_FORMAT);\n  }\n  return parsedDate;\n}\n\nexport function formatDateForSearchApi(date: dayjs.Dayjs) {\n  return date.format(API_DATE_FORMAT);\n}\n\nexport function isSearchApiDate(date: string) {\n  return formatDateForSearchApi(parseDate(date)) === date;\n}\n\nexport function validateAbsoluteDate(date: AbsoluteDate, dateFormat?: string) {\n  const dayJSDate = parseDate(date, dateFormat);\n\n  if (!dayJSDate.isValid()) {\n    const provideFormat =\n      '. Please provide a date format string in the configuration options. See https://day.js.org/docs/en/parse/string-format for more information.';\n    const withFormat = ` with the format \"${dateFormat}\"\"`;\n    throw new Error(\n      `Could not parse the provided date \"${date}\"${\n        dateFormat ? withFormat : provideFormat\n      }`\n    );\n  }\n\n  assertDateAboveAPIMinimum(dayJSDate);\n}\n\nexport function assertDateAboveAPIMinimum(date: dayjs.Dayjs) {\n  if (date.isBefore(API_DATE_MINIMUM)) {\n    throw new Error(\n      `Date is before year 1401, which is unsupported by the API: ${date}`\n    );\n  }\n}\n", "import {CurrentValues, Type} from '../../../facet-api/request';\nimport {FacetValueState} from '../../../facet-api/value';\nimport {AnyFacetRequest} from '../../../generic/interfaces/generic-facet-request';\nimport {BaseRangeFacetRequest} from '../../generic/interfaces/request';\n\n/**\n * The options defining a value to display in a `DateFacet`.\n */\nexport interface DateRangeRequest {\n  /**\n   * The starting value for the date range, formatted as `YYYY/MM/DD@HH:mm:ss` or the [Relative Date](https://docs.coveo.com/en/headless/latest/reference/search/search-date-facet-controller/relative-date-format/) format \"period-amount-unit\".\n   */\n  start: string;\n\n  /**\n   * The ending value for the date range, formatted as `YYYY/MM/DD@HH:mm:ss` or the [Relative Date](https://docs.coveo.com/en/headless/latest/reference/search/search-date-facet-controller/relative-date-format/) format \"period-amount-unit\".\n   */\n  end: string;\n\n  /**\n   * Whether to include the `end` value in the range.\n   */\n  endInclusive: boolean;\n\n  /**\n   * The current facet value state.\n   */\n  state: FacetValueState;\n}\n\nexport function isDateFacetRequest(\n  request: AnyFacetRequest\n): request is DateFacetRequest {\n  return request.type === 'dateRange';\n}\n\nexport interface DateFacetRequest\n  extends BaseRangeFacetRequest,\n    CurrentValues<DateRangeRequest>,\n    Type<'dateRange'> {}\n", "import {\n  formatRelativeDateForSearchApi,\n  isRelativeDateFormat,\n} from '../../api/search/date/relative-date';\nimport {SearchAPIClientResponse} from '../../api/search/search-api-client';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport {FacetsParam} from '../../api/search/search-api-params';\nimport {SearchRequest} from '../../api/search/search/search-request';\nimport {SearchResponseSuccess} from '../../api/search/search/search-response';\nimport {AnyFacetRequest} from '../facets/generic/interfaces/generic-facet-request';\nimport {AnyFacetResponse} from '../facets/generic/interfaces/generic-facet-response';\nimport {\n  DateRangeRequest,\n  isDateFacetRequest,\n} from '../facets/range-facets/date-facet-set/interfaces/request';\nimport {\n  DateFacetResponse,\n  DateFacetValue,\n} from '../facets/range-facets/date-facet-set/interfaces/response';\n\nfunction formatStartFacetValue(value: string) {\n  return `start${value}`;\n}\n\nfunction formatEndFacetValue(value: string) {\n  return `end${value}`;\n}\n\ninterface SearchMappings {\n  dateFacetValueMap: Record<string, Record<string, string>>;\n}\n\nconst initialSearchMappings: () => SearchMappings = () => ({\n  dateFacetValueMap: {},\n});\n\nfunction mapDateRangeRequest(\n  value: DateRangeRequest,\n  facetId: string,\n  mappings: SearchMappings\n) {\n  let start = value.start;\n  let end = value.end;\n  if (isRelativeDateFormat(start)) {\n    start = formatRelativeDateForSearchApi(start);\n    mappings.dateFacetValueMap[facetId][formatStartFacetValue(start)] =\n      value.start;\n  }\n  if (isRelativeDateFormat(end)) {\n    end = formatRelativeDateForSearchApi(end);\n    mappings.dateFacetValueMap[facetId][formatEndFacetValue(end)] = value.end;\n  }\n\n  return {...value, start, end};\n}\n\nfunction mapFacetRequest(\n  facetRequest: AnyFacetRequest,\n  mappings: SearchMappings\n) {\n  if (isDateFacetRequest(facetRequest)) {\n    const {facetId, currentValues} = facetRequest;\n    mappings.dateFacetValueMap[facetId] = {};\n    return {\n      ...facetRequest,\n      currentValues: currentValues.map((value) =>\n        mapDateRangeRequest(value, facetId, mappings)\n      ),\n    };\n  }\n\n  return facetRequest;\n}\n\nexport interface MappedSearchRequest<T extends FacetsParam = SearchRequest> {\n  request: T;\n  mappings: SearchMappings;\n}\n\nexport function mapSearchRequest<T extends FacetsParam = SearchRequest>(\n  searchRequest: T\n): MappedSearchRequest<T> {\n  const mappings = initialSearchMappings();\n  const request: T = {\n    ...searchRequest,\n    facets: searchRequest.facets?.map((facetRequest) =>\n      mapFacetRequest(facetRequest, mappings)\n    ),\n  };\n  return {request, mappings};\n}\n\nfunction mapDateRangeResponse(\n  value: DateFacetValue,\n  facetId: string,\n  mappings: SearchMappings\n) {\n  return {\n    ...value,\n    start:\n      mappings.dateFacetValueMap[facetId][formatStartFacetValue(value.start)] ||\n      value.start,\n    end:\n      mappings.dateFacetValueMap[facetId][formatEndFacetValue(value.end)] ||\n      value.end,\n  };\n}\n\nfunction isDateFacetResponse(\n  facetResponse: AnyFacetResponse,\n  mappings: SearchMappings\n): facetResponse is DateFacetResponse {\n  return facetResponse.facetId in mappings.dateFacetValueMap;\n}\n\nfunction mapFacetResponse(\n  facetResponse: AnyFacetResponse,\n  mappings: SearchMappings\n) {\n  if (isDateFacetResponse(facetResponse, mappings)) {\n    return {\n      ...facetResponse,\n      values: facetResponse.values.map((value) =>\n        mapDateRangeResponse(value, facetResponse.facetId, mappings)\n      ),\n    };\n  }\n  return facetResponse;\n}\n\nexport type ErrorResponse = {\n  error: SearchAPIErrorWithStatusCode;\n};\nexport type SuccessResponse = {\n  success: SearchResponseSuccess;\n};\n\nexport function mapSearchResponse<\n  ResponseSuccess extends SearchAPIClientResponse<SearchResponseSuccess>,\n>(\n  response: ResponseSuccess,\n  mappings: SearchMappings\n): SuccessResponse | ErrorResponse {\n  if ('success' in response) {\n    const success: SearchResponseSuccess = {\n      ...response.success,\n      facets: response.success.facets?.map((facetResponse) =>\n        mapFacetResponse(facetResponse, mappings)\n      ),\n    };\n    return {success};\n  }\n\n  return response;\n}\n", "export function sortFacets<T extends {facetId: string}>(\n  facets: T[],\n  sortOrder: string[]\n) {\n  const payloadMap: Record<string, T> = {};\n  facets.forEach((f) => (payloadMap[f.facetId] = f));\n\n  const sortedFacets: T[] = [];\n  sortOrder.forEach((facetId) => {\n    if (facetId in payloadMap) {\n      sortedFacets.push(payloadMap[facetId]);\n      delete payloadMap[facetId];\n    }\n  });\n  const remainingFacets = Object.values(payloadMap);\n\n  return [...sortedFacets, ...remainingFacets];\n}\n", "import {\n  CategoryFacetRequest,\n  CategoryFacetValueRequest,\n} from '../../category-facet-set/interfaces/request';\nimport {\n  FacetRequest,\n  FacetValueRequest,\n} from '../../facet-set/interfaces/request';\nimport {DateRangeRequest} from '../../range-facets/date-facet-set/interfaces/request';\nimport {RangeFacetRequest} from '../../range-facets/generic/interfaces/range-facet';\nimport {NumericRangeRequest} from '../../range-facets/numeric-facet-set/interfaces/request';\nimport {AnyFacetSetState} from './generic-facet-section';\n\nexport type AnyFacetRequest =\n  | FacetRequest\n  | RangeFacetRequest\n  | CategoryFacetRequest;\n\nexport type AnyFacetValueRequest =\n  | FacetValueRequest\n  | CategoryFacetValueRequest\n  | NumericRangeRequest\n  | DateRangeRequest;\n\ntype InferRequestFromFacetSetState<T extends AnyFacetSetState> =\n  T[string]['request'];\n\nexport function getFacetRequests<T extends AnyFacetSetState>(state: T) {\n  return Object.values(state).map(\n    (slice) => slice.request\n  ) as InferRequestFromFacetSetState<T>[];\n}\n", "export const minimumPage = 1;\nexport const maximumNumberOfResultsFromIndex = 5000;\n", "import {EventDescription} from 'coveo.analytics';\nimport {SearchAppState} from '../..';\nimport {ConfigurationSection} from '../../state/state-sections';\nimport {sortFacets} from '../../utils/facet-utils';\nimport {AutomaticFacetRequest} from '../facets/automatic-facet-set/interfaces/request';\nimport {AutomaticFacetResponse} from '../facets/automatic-facet-set/interfaces/response';\nimport {FacetSetState} from '../facets/facet-set/facet-set-state';\nimport {getFacetRequests} from '../facets/generic/interfaces/generic-facet-request';\nimport {AnyFacetValue} from '../facets/generic/interfaces/generic-facet-response';\nimport {RangeFacetSetState} from '../facets/range-facets/generic/interfaces/range-facet';\nimport {maximumNumberOfResultsFromIndex} from '../pagination/pagination-constants';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../search-and-folding/search-and-folding-request';\nimport {mapSearchRequest} from './search-mappings';\n\ntype StateNeededBySearchRequest = ConfigurationSection &\n  Partial<SearchAppState>;\n\nexport const buildSearchRequest = async (\n  state: StateNeededBySearchRequest,\n  eventDescription?: EventDescription\n) => {\n  const cq = buildConstantQuery(state);\n  const facets = getFacets(state);\n  const automaticFacets = getAutomaticFacets(state);\n  const sharedWithFoldingRequest =\n    await buildSearchAndFoldingLoadCollectionRequest(state, eventDescription);\n\n  // Corner case:\n  // If the number of results requested would go over the index limit (maximumNumberOfResultsFromIndex)\n  // we need to request fewer results in order to ensure we do not receive an exception from the index\n  const getNumberOfResultsWithinIndexLimit = () => {\n    if (!state.pagination) {\n      return undefined;\n    }\n\n    const isOverIndexLimit =\n      state.pagination.firstResult + state.pagination.numberOfResults >\n      maximumNumberOfResultsFromIndex;\n\n    if (isOverIndexLimit) {\n      return maximumNumberOfResultsFromIndex - state.pagination.firstResult;\n    }\n    return state.pagination.numberOfResults;\n  };\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      enableDidYouMean: state.didYouMean.enableDidYouMean,\n    }),\n    ...(cq && {cq}),\n    ...(facets.length && {facets}),\n    ...(state.pagination && {\n      numberOfResults: getNumberOfResultsWithinIndexLimit(),\n      firstResult: state.pagination.firstResult,\n    }),\n    ...(state.facetOptions && {\n      facetOptions: {freezeFacetOrder: state.facetOptions.freezeFacetOrder},\n    }),\n    ...(state.folding?.enabled && {\n      filterField: state.folding.fields.collection,\n      childField: state.folding.fields.parent,\n      parentField: state.folding.fields.child,\n      filterFieldRange: state.folding.filterFieldRange,\n    }),\n    ...(state.automaticFacetSet && {\n      generateAutomaticFacets: {\n        desiredCount: state.automaticFacetSet.desiredCount,\n        numberOfValues: state.automaticFacetSet.numberOfValues,\n        currentFacets: automaticFacets,\n      },\n    }),\n    ...(state.generatedAnswer?.responseFormat && {\n      pipelineRuleParameters: {\n        mlGenerativeQuestionAnswering: {\n          responseFormat: state.generatedAnswer.responseFormat,\n        },\n      },\n    }),\n  });\n};\n\nfunction getFacets(state: StateNeededBySearchRequest) {\n  return sortFacets(getAllEnabledFacets(state), state.facetOrder ?? []);\n}\n\nfunction getAutomaticFacets(state: StateNeededBySearchRequest) {\n  const facets = state.automaticFacetSet?.set;\n\n  return facets\n    ? Object.values(facets)\n        .map((facet) => facet.response)\n        .map(responseToAutomaticFacetRequest)\n        .filter((facetRequest) => facetRequest.currentValues.length > 0)\n    : undefined;\n}\nfunction responseToAutomaticFacetRequest(\n  response: AutomaticFacetResponse\n): AutomaticFacetRequest {\n  const {field, label, values} = response;\n\n  const selectedValues = values.filter((value) => value.state === 'selected');\n  return {\n    field,\n    label,\n    currentValues: selectedValues,\n  };\n}\nfunction getAllEnabledFacets(state: StateNeededBySearchRequest) {\n  return getAllFacets(state).filter(\n    ({facetId}) => state.facetOptions?.facets[facetId]?.enabled ?? true\n  );\n}\n\nfunction getAllFacets(state: StateNeededBySearchRequest) {\n  return [\n    ...getSpecificFacetRequests(state.facetSet ?? {}),\n    ...getRangeFacetRequests(state.numericFacetSet ?? {}),\n    ...getRangeFacetRequests(state.dateFacetSet ?? {}),\n    ...getFacetRequests(state.categoryFacetSet ?? {}),\n  ];\n}\n\nfunction getSpecificFacetRequests<T extends FacetSetState>(state: T) {\n  return getFacetRequests(state).map((request) => {\n    /* The Search API does not support 'alphanumericDescending' as a string value and instead relies on a new sort mechanism to specify sort order.\n    At the moment, this is only supported for alphanumeric sorting, but will likely transition to this pattern for other types in the future. */\n    if (request.sortCriteria === 'alphanumericDescending') {\n      return {\n        ...request,\n        sortCriteria: {\n          type: 'alphanumeric',\n          order: 'descending',\n        },\n      };\n    }\n\n    return request;\n  });\n}\n\nfunction getRangeFacetRequests<T extends RangeFacetSetState>(state: T) {\n  return getFacetRequests(state).map((request) => {\n    const currentValues = request.currentValues as AnyFacetValue[];\n    const hasActiveValues = currentValues.some(({state}) => state !== 'idle');\n\n    if (request.generateAutomaticRanges && !hasActiveValues) {\n      return {...request, currentValues: []};\n    }\n\n    return request;\n  });\n}\n\nfunction buildConstantQuery(state: StateNeededBySearchRequest) {\n  const cq = state.advancedSearchQueries?.cq.trim() || '';\n  const activeTab = Object.values(state.tabSet || {}).find(\n    (tab) => tab.isActive\n  );\n  const tabExpression = activeTab?.expression.trim() || '';\n  const filterExpressions = getStaticFilterExpressions(state);\n\n  return [cq, tabExpression, ...filterExpressions]\n    .filter((expression) => !!expression)\n    .join(' AND ');\n}\n\nfunction getStaticFilterExpressions(state: StateNeededBySearchRequest) {\n  const filters = Object.values(state.staticFilterSet || {});\n  return filters.map((filter) => {\n    const selected = filter.values.filter(\n      (value) => value.state === 'selected' && !!value.expression.trim()\n    );\n\n    const expression = selected.map((value) => value.expression).join(' OR ');\n    return selected.length > 1 ? `(${expression})` : expression;\n  });\n}\n", "import {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\n\nexport const enableDidYouMean = createAction('didYouMean/enable');\n\nexport const disableDidYouMean = createAction('didYouMean/disable');\n\nexport const disableAutomaticQueryCorrection = createAction(\n  'didYouMean/automaticCorrections/disable'\n);\n\nexport const enableAutomaticQueryCorrection = createAction(\n  'didYouMean/automaticCorrections/enable'\n);\n\nexport const applyDidYouMeanCorrection = createAction(\n  'didYouMean/correction',\n  (payload: string) => validatePayload(payload, requiredNonEmptyString)\n);\n", "import {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\n\n//TODO: KIT-2859\nexport const logDidYouMeanClick = (): SearchAction =>\n  makeAnalyticsAction('analytics/didyoumean/click', (client) =>\n    client.makeDidYouMeanClick()\n  );\n\nexport const logDidYouMeanAutomatic = (): SearchAction =>\n  makeAnalyticsAction('analytics/didyoumean/automatic', (client) =>\n    client.makeDidYouMeanAutomatic()\n  );\n", "/**\n * Represents a contextual value, which can be a string or an array of string.\n */\nexport type ContextValue = string | string[];\n/**\n * Represents a key/value pair of contextual information.\n */\nexport type ContextPayload = Record<string, ContextValue>;\nexport type ContextState = {\n  /**\n   * Hold the contextual information that can be [leveraged by the Coveo platform to provide relevant results](https://docs.coveo.com/en/2081/coveo-machine-learning/understanding-custom-context).\n   */\n  contextValues: ContextPayload;\n};\n\nexport function getContextInitialState(): ContextState {\n  return {\n    contextValues: {},\n  };\n}\n", "export type DictionaryFieldContextPayload = Record<string, string>;\nexport type DictionaryFieldContextState = {\n  /**\n   * Holds the [dictionary field context](https://docs.coveo.com/en/2036/index-content/about-fields#dictionary-fields) information.\n   */\n  contextValues: DictionaryFieldContextPayload;\n};\n\nexport function getDictionaryFieldContextInitialState(): DictionaryFieldContextState {\n  return {\n    contextValues: {},\n  };\n}\n", "export type FacetOptionsSlice = {enabled: boolean};\n\nexport type FacetOptionsState = {\n  freezeFacetOrder: boolean;\n  facets: Record<string, FacetOptionsSlice>;\n};\n\nexport function getFacetOptionsSliceInitialState(): FacetOptionsSlice {\n  return {enabled: true};\n}\n\nexport function getFacetOptionsInitialState(): FacetOptionsState {\n  return {\n    freezeFacetOrder: false,\n    facets: {},\n  };\n}\n", "export type FacetOrderState = string[];\n\nexport function getFacetOrderInitialState(): FacetOrderState {\n  return [];\n}\n", "import {SerializedError} from '@reduxjs/toolkit';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport {Result} from '../../index';\n\nexport type InstantResultCache = {\n  expiresAt: number;\n  isLoading: boolean;\n  error: SearchAPIErrorWithStatusCode | SerializedError | null;\n  results: Result[];\n  isActive: boolean;\n  searchUid: string;\n  totalCountFiltered: number;\n  duration: number;\n};\n\nexport type InstantResultsState = Record<\n  string,\n  {\n    /**\n     * The basic query expression (e.g., `acme tornado seeds`).\n     */\n    q: string;\n    /**\n     * The cache of instant results for each query previously requested.\n     */\n    cache: Record<string, InstantResultCache>;\n  }\n>;\n\nexport function getInstantResultsInitialState(): InstantResultsState {\n  return {};\n}\n\nexport function hasExpired(cached: InstantResultCache | undefined) {\n  if (!cached) {\n    return false;\n  }\n  return cached.expiresAt && Date.now() >= cached.expiresAt;\n}\n", "export interface PaginationState {\n  firstResult: number;\n  defaultNumberOfResults: number;\n  numberOfResults: number;\n  totalCountFiltered: number;\n}\n\nexport function getPaginationInitialState(): PaginationState {\n  return {\n    firstResult: 0,\n    defaultNumberOfResults: 10,\n    numberOfResults: 10,\n    totalCountFiltered: 0,\n  };\n}\n", "export type QuerySetState = Record<string, string>;\n\nexport function getQuerySetInitialState(): QuerySetState {\n  return {};\n}\n", "import {FacetValueState} from '../facets/facet-api/value';\n\nexport type StaticFilterSetState = Record<string, StaticFilterSlice>;\n\nexport interface StaticFilterSlice {\n  id: string;\n  values: StaticFilterValue[];\n}\n\nexport interface StaticFilterValue {\n  /**\n   * A human-readable caption for the expression (e.g., `Youtube`).\n   */\n  caption: string;\n\n  /**\n   * The query filter expression to apply when the value is selected (e.g., `@filetype==\"youtubevideo\"`).\n   */\n  expression: string;\n\n  /**\n   * The state of the static filter value. The possible values are `idle`, `selected`, `excluded`.\n   */\n  state: StaticFilterValueState;\n}\n\nexport type StaticFilterValueState = FacetValueState;\n\nexport function getStaticFilterSetInitialState(): StaticFilterSetState {\n  return {};\n}\n", "export type TabSetState = Record<string, TabSlice>;\n\nexport type TabSlice = {\n  id: string;\n  expression: string;\n  isActive: boolean;\n};\n\nexport function getTabSetInitialState(): TabSetState {\n  return {};\n}\n", "import {SearchParametersState} from '../../state/search-app-state';\nimport {getAdvancedSearchQueriesInitialState} from '../advanced-search-queries/advanced-search-queries-state';\nimport {getContextInitialState} from '../context/context-state';\nimport {getDebugInitialState} from '../debug/debug-state';\nimport {getDictionaryFieldContextInitialState} from '../dictionary-field-context/dictionary-field-context-state';\nimport {getFacetOptionsInitialState} from '../facet-options/facet-options-state';\nimport {getAutomaticFacetSetInitialState} from '../facets/automatic-facet-set/automatic-facet-set-state';\nimport {getCategoryFacetSetInitialState} from '../facets/category-facet-set/category-facet-set-state';\nimport {getFacetOrderInitialState} from '../facets/facet-order/facet-order-state';\nimport {getFacetSetInitialState} from '../facets/facet-set/facet-set-state';\nimport {getDateFacetSetInitialState} from '../facets/range-facets/date-facet-set/date-facet-set-state';\nimport {getNumericFacetSetInitialState} from '../facets/range-facets/numeric-facet-set/numeric-facet-set-state';\nimport {getInstantResultsInitialState} from '../instant-results/instant-results-state';\nimport {getPaginationInitialState} from '../pagination/pagination-state';\nimport {getPipelineInitialState} from '../pipeline/pipeline-state';\nimport {getQuerySetInitialState} from '../query-set/query-set-state';\nimport {getQueryInitialState} from '../query/query-state';\nimport {getSearchHubInitialState} from '../search-hub/search-hub-state';\nimport {getSortCriteriaInitialState} from '../sort-criteria/sort-criteria-state';\nimport {getStaticFilterSetInitialState} from '../static-filter-set/static-filter-set-state';\nimport {getTabSetInitialState} from '../tab-set/tab-set-state';\n\nexport interface HistoryState extends SearchParametersState {\n  facetOrder: string[];\n}\n\nexport function getHistoryInitialState(): HistoryState {\n  return extractHistory({});\n}\n\nexport function extractHistory(state: Partial<HistoryState>): HistoryState {\n  return {\n    context: state.context || getContextInitialState(),\n    dictionaryFieldContext:\n      state.dictionaryFieldContext || getDictionaryFieldContextInitialState(),\n    facetSet: state.facetSet || getFacetSetInitialState(),\n    numericFacetSet: state.numericFacetSet || getNumericFacetSetInitialState(),\n    dateFacetSet: state.dateFacetSet || getDateFacetSetInitialState(),\n    categoryFacetSet:\n      state.categoryFacetSet || getCategoryFacetSetInitialState(),\n    automaticFacetSet:\n      state.automaticFacetSet ?? getAutomaticFacetSetInitialState(),\n    pagination: state.pagination || getPaginationInitialState(),\n    query: state.query || getQueryInitialState(),\n    tabSet: state.tabSet || getTabSetInitialState(),\n    advancedSearchQueries:\n      state.advancedSearchQueries || getAdvancedSearchQueriesInitialState(),\n    staticFilterSet: state.staticFilterSet || getStaticFilterSetInitialState(),\n    querySet: state.querySet || getQuerySetInitialState(),\n    instantResults: state.instantResults || getInstantResultsInitialState(),\n    sortCriteria: state.sortCriteria || getSortCriteriaInitialState(),\n    pipeline: state.pipeline || getPipelineInitialState(),\n    searchHub: state.searchHub || getSearchHubInitialState(),\n    facetOptions: state.facetOptions || getFacetOptionsInitialState(),\n    facetOrder: state.facetOrder ?? getFacetOrderInitialState(),\n    debug: state.debug ?? getDebugInitialState(),\n  };\n}\n", "import {RecordValue} from '@coveo/bueno';\nimport {\n  requiredEmptyAllowedString,\n  validatePayload,\n} from '../../utils/validate-payload';\nimport {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\n\nexport interface LogUndoTriggerQueryActionCreatorPayload {\n  /**\n   * The query that was undone.\n   */\n  undoneQuery: string;\n}\n\nconst logUndoTriggerQueryPayloadDefinition = new RecordValue({\n  values: {\n    undoneQuery: requiredEmptyAllowedString,\n  },\n  options: {required: true},\n});\n\nexport const logTriggerQuery = (): SearchAction =>\n  makeAnalyticsAction('analytics/trigger/query', (client, state) => {\n    if (state.triggers?.queryModification.newQuery) {\n      return client.makeTriggerQuery();\n    }\n    return null;\n  });\n\n//TODO: KIT-2859\nexport const logUndoTriggerQuery = (\n  payload: LogUndoTriggerQueryActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/trigger/query/undo', (client) => {\n    validatePayload(payload, logUndoTriggerQueryPayloadDefinition);\n    return client.makeUndoTriggerQuery(payload);\n  });\n\nexport const logNotifyTrigger = (): SearchAction =>\n  makeAnalyticsAction('analytics/trigger/notify', (client, state) => {\n    if (!state.triggers?.notifications.length) {\n      return null;\n    }\n    return client.makeTriggerNotify({\n      notifications: state.triggers.notifications,\n    });\n  });\n\nexport const logTriggerRedirect = (): SearchAction =>\n  makeAnalyticsAction('analytics/trigger/redirect', (client, state) => {\n    if (state.triggers?.redirectTo) {\n      return client.makeTriggerRedirect({\n        redirectedTo: state.triggers.redirectTo,\n      });\n    }\n    return null;\n  });\n\n/**\n * Log trigger execute\n */\nexport const logTriggerExecute = (): SearchAction =>\n  makeAnalyticsAction('analytics/trigger/execute', (client, state) => {\n    if (!state.triggers?.executions.length) {\n      return null;\n    }\n    return client.makeTriggerExecute({\n      executions: state.triggers.executions,\n    });\n  });\n", "import {RecordValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {nonEmptyString, validatePayload} from '../../utils/validate-payload';\n\nexport interface ApplyQueryTriggerModificationPayload {\n  originalQuery: string;\n  newQuery: string;\n}\n\nexport const updateIgnoreQueryTrigger = createAction(\n  'trigger/query/ignore',\n  (q: string) =>\n    validatePayload(q, new StringValue({emptyAllowed: true, required: true}))\n);\n\nexport const applyQueryTriggerModification = createAction(\n  'trigger/query/modification',\n  (payload: ApplyQueryTriggerModificationPayload) =>\n    validatePayload<ApplyQueryTriggerModificationPayload>(\n      payload,\n      new RecordValue({\n        values: {originalQuery: nonEmptyString, modification: nonEmptyString},\n      })\n    )\n);\n", "import {AnyAction} from '@reduxjs/toolkit';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {StateNeededBySearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {\n  isErrorResponse,\n  isSuccessResponse,\n  SearchAPIClient,\n} from '../../../api/search/search-api-client';\nimport {SearchAPIErrorWithStatusCode} from '../../../api/search/search-api-error-response';\nimport {SearchOrigin} from '../../../api/search/search-metadata';\nimport {SearchRequest} from '../../../api/search/search/search-request';\nimport {SearchResponseSuccess} from '../../../api/search/search/search-response';\nimport {ClientThunkExtraArguments} from '../../../app/thunk-extra-arguments';\nimport {\n  AdvancedSearchQueriesSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  ContextSection,\n  DateFacetSection,\n  DebugSection,\n  DidYouMeanSection,\n  FacetOptionsSection,\n  FacetOrderSection,\n  FacetSection,\n  FieldsSection,\n  FoldingSection,\n  NumericFacetSection,\n  PaginationSection,\n  PipelineSection,\n  QuerySection,\n  QuerySetSection,\n  SearchHubSection,\n  SearchSection,\n  SortSection,\n  TriggerSection,\n} from '../../../state/state-sections';\nimport {AnalyticsAsyncThunk} from '../../analytics/analytics-utils';\nimport {applyDidYouMeanCorrection} from '../../did-you-mean/did-you-mean-actions';\nimport {logDidYouMeanAutomatic} from '../../did-you-mean/did-you-mean-analytics-actions';\nimport {snapshot} from '../../history/history-actions';\nimport {extractHistory} from '../../history/history-state';\nimport {updateQuery} from '../../query/query-actions';\nimport {getQueryInitialState} from '../../query/query-state';\nimport {logTriggerQuery} from '../../triggers/trigger-analytics-actions';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from '../../triggers/triggers-actions';\nimport {logQueryError} from '../search-analytics-actions';\nimport {\n  ErrorResponse,\n  MappedSearchRequest,\n  mapSearchResponse,\n  SuccessResponse,\n} from '../search-mappings';\nimport {buildSearchRequest} from '../search-request';\nimport {getSearchInitialState} from '../search-state';\nimport {ExecuteSearchThunkReturn} from './search-actions';\n\nexport type StateNeededByExecuteSearch = ConfigurationSection &\n  Partial<\n    QuerySection &\n      AdvancedSearchQueriesSection &\n      PaginationSection &\n      SortSection &\n      FacetSection &\n      NumericFacetSection &\n      CategoryFacetSection &\n      DateFacetSection &\n      ContextSection &\n      DidYouMeanSection &\n      FieldsSection &\n      PipelineSection &\n      SearchHubSection &\n      QuerySetSection &\n      FacetOptionsSection &\n      FacetOrderSection &\n      DebugSection &\n      SearchSection &\n      FoldingSection &\n      TriggerSection\n  >;\n\ninterface FetchedResponse {\n  response: SuccessResponse | ErrorResponse;\n  duration: number;\n  queryExecuted: string;\n  requestExecuted: SearchRequest;\n}\n\ntype ValidReturnTypeFromProcessingStep<RejectionType> =\n  | ExecuteSearchThunkReturn\n  | RejectionType;\n\nexport interface AsyncThunkConfig {\n  getState: () => StateNeededByExecuteSearch;\n  dispatch: ThunkDispatch<\n    StateNeededByExecuteSearch,\n    ClientThunkExtraArguments<SearchAPIClient> & {\n      searchAPIClient?: SearchAPIClient | undefined;\n    },\n    AnyAction\n  >;\n\n  rejectWithValue: (err: SearchAPIErrorWithStatusCode) => unknown;\n  analyticsAction: AnalyticsAsyncThunk | null;\n  extra: ClientThunkExtraArguments<SearchAPIClient>;\n}\n\ntype QueryCorrectionCallback = (modification: string) => void;\n\nexport interface FetchFromAPIOptions {\n  origin: SearchOrigin;\n  disableAbortWarning?: boolean;\n}\n\nexport class AsyncSearchThunkProcessor<RejectionType> {\n  constructor(\n    private config: AsyncThunkConfig,\n    private onUpdateQueryForCorrection: QueryCorrectionCallback = (\n      modification\n    ) => {\n      this.dispatch(updateQuery({q: modification}));\n    }\n  ) {}\n\n  public async fetchFromAPI(\n    {mappings, request}: MappedSearchRequest,\n    options: FetchFromAPIOptions\n  ) {\n    const startedAt = new Date().getTime();\n    const response = mapSearchResponse(\n      await this.extra.apiClient.search(request, options),\n      mappings\n    );\n    const duration = new Date().getTime() - startedAt;\n    const queryExecuted = this.getState().query?.q || '';\n    return {response, duration, queryExecuted, requestExecuted: request};\n  }\n\n  public async process(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType>> {\n    return (\n      this.processQueryErrorOrContinue(fetched) ??\n      (await this.processQueryCorrectionsOrContinue(fetched)) ??\n      (await this.processQueryTriggersOrContinue(fetched)) ??\n      this.processSuccessResponse(fetched)\n    );\n  }\n\n  private processQueryErrorOrContinue(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> | null {\n    if (isErrorResponse(fetched.response)) {\n      this.dispatch(logQueryError(fetched.response.error));\n      return this.rejectWithValue(fetched.response.error) as RejectionType;\n    }\n\n    return null;\n  }\n\n  private async processQueryCorrectionsOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const state = this.getState();\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse || !state.didYouMean) {\n      return null;\n    }\n\n    const {enableDidYouMean, automaticallyCorrectQuery} = state.didYouMean;\n    const {results, queryCorrections} = successResponse;\n\n    const shouldBeAutomaticallyRetried =\n      results.length === 0 &&\n      queryCorrections.length !== 0 &&\n      enableDidYouMean &&\n      automaticallyCorrectQuery;\n\n    if (!shouldBeAutomaticallyRetried) {\n      return null;\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const {correctedQuery} = successResponse.queryCorrections[0];\n\n    const retried =\n      await this.automaticallyRetryQueryWithCorrection(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.analyticsAction &&\n      this.analyticsAction()(\n        this.dispatch,\n        () =>\n          this.getStateAfterResponse(\n            fetched.queryExecuted,\n            fetched.duration,\n            state,\n            successResponse\n          ),\n        this.extra\n      );\n    this.dispatch(snapshot(extractHistory(this.getState())));\n\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n        queryCorrections: successResponse.queryCorrections,\n      },\n      automaticallyCorrected: true,\n      originalQuery,\n      analyticsAction: logDidYouMeanAutomatic(),\n    };\n  }\n\n  private async processQueryTriggersOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse) {\n      return null;\n    }\n    const correctedQuery =\n      (successResponse.triggers.find((trigger) => trigger.type === 'query')\n        ?.content as string) || '';\n\n    if (!correctedQuery) {\n      return null;\n    }\n\n    const ignored = this.getState().triggers?.queryModification.queryToIgnore;\n\n    if (ignored === correctedQuery) {\n      this.dispatch(updateIgnoreQueryTrigger(''));\n      return null;\n    }\n\n    if (this.analyticsAction) {\n      await this.dispatch(this.analyticsAction);\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const retried =\n      await this.automaticallyRetryQueryWithTriggerModification(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n      },\n      automaticallyCorrected: false,\n      originalQuery,\n      analyticsAction: logTriggerQuery(),\n    };\n  }\n\n  private processSuccessResponse(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> {\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...fetched,\n      response: this.getSuccessResponse(fetched)!,\n      automaticallyCorrected: false,\n      originalQuery: this.getCurrentQuery(),\n      analyticsAction: this.analyticsAction!,\n    };\n  }\n\n  private getSuccessResponse(fetched: FetchedResponse) {\n    if (isSuccessResponse(fetched.response)) {\n      return fetched.response.success;\n    }\n    return null;\n  }\n\n  private async automaticallyRetryQueryWithCorrection(correction: string) {\n    this.onUpdateQueryForCorrection(correction);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState()),\n      {origin: 'mainSearch'}\n    );\n    this.dispatch(applyDidYouMeanCorrection(correction));\n    return fetched;\n  }\n\n  private async automaticallyRetryQueryWithTriggerModification(\n    modified: string\n  ) {\n    this.dispatch(\n      applyQueryTriggerModification({\n        newQuery: modified,\n        originalQuery: this.getCurrentQuery(),\n      })\n    );\n    this.onUpdateQueryForCorrection(modified);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState()),\n      {origin: 'mainSearch'}\n    );\n\n    return fetched;\n  }\n\n  private getStateAfterResponse(\n    query: string,\n    duration: number,\n    previousState: StateNeededByExecuteSearch,\n    response: SearchResponseSuccess\n  ): StateNeededBySearchAnalyticsProvider {\n    return {\n      ...previousState,\n      query: {\n        q: query,\n        enableQuerySyntax:\n          previousState.query?.enableQuerySyntax ??\n          getQueryInitialState().enableQuerySyntax,\n      },\n      search: {\n        ...getSearchInitialState(),\n        duration,\n        response,\n        results: response.results,\n      },\n    };\n  }\n\n  private getCurrentQuery() {\n    const state = this.getState();\n    return state.query?.q !== undefined ? state.query.q : '';\n  }\n\n  private get extra() {\n    return this.config.extra;\n  }\n\n  private getState() {\n    return this.config.getState();\n  }\n\n  private get dispatch() {\n    return this.config.dispatch;\n  }\n\n  private get analyticsAction() {\n    return this.config.analyticsAction;\n  }\n\n  private get rejectWithValue() {\n    return this.config.rejectWithValue;\n  }\n}\n", "import {BooleanValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {EventDescription} from 'coveo.analytics';\nimport {historyStore} from '../../../api/analytics/coveo-analytics-utils';\nimport {AsyncThunkSearchOptions} from '../../../api/search/search-api-client';\nimport {SearchResponseSuccess} from '../../../api/search/search/search-response';\nimport {AsyncThunkOptions} from '../../../app/async-thunk-options';\nimport {InstantResultSection} from '../../../state/state-sections';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload';\nimport {\n  AnalyticsAsyncThunk,\n  SearchAction,\n} from '../../analytics/analytics-utils';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from '../../breadcrumb/breadcrumb-actions';\nimport {updateFacetAutoSelection} from '../../facets/generic/facet-actions';\nimport {logInstantResultsSearch} from '../../instant-results/instant-result-analytics-actions';\nimport {\n  FetchInstantResultsActionCreatorPayload,\n  FetchInstantResultsThunkReturn,\n  updateInstantResultsQuery,\n} from '../../instant-results/instant-results-actions';\nimport {updatePage} from '../../pagination/pagination-actions';\nimport {\n  updateQuery,\n  UpdateQueryActionCreatorPayload,\n} from '../../query/query-actions';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../../search-and-folding/search-and-folding-request';\nimport {logFetchMoreResults} from '../search-analytics-actions';\nimport {MappedSearchRequest, mapSearchRequest} from '../search-mappings';\nimport {buildSearchRequest} from '../search-request';\nimport {\n  AsyncSearchThunkProcessor,\n  StateNeededByExecuteSearch,\n} from './search-actions-thunk-processor';\n\nexport type {StateNeededByExecuteSearch} from './search-actions-thunk-processor';\n\nexport interface ExecuteSearchThunkReturn {\n  /** The successful search response. */\n  response: SearchResponseSuccess;\n  /** The number of milliseconds it took to receive the response. */\n  duration: number;\n  /** The query that was executed. */\n  queryExecuted: string;\n  /** Whether the query was automatically corrected. */\n  automaticallyCorrected: boolean;\n  /** The original query that was performed when an automatic correction is executed.*/\n  originalQuery: string;\n  /** The analytics action to log after the query. */\n  analyticsAction: AnalyticsAsyncThunk;\n}\n\ninterface PrepareForSearchWithQueryOptions {\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters: boolean;\n}\n\nexport const prepareForSearchWithQuery = createAsyncThunk<\n  void,\n  UpdateQueryActionCreatorPayload & PrepareForSearchWithQueryOptions,\n  AsyncThunkOptions<StateNeededByExecuteSearch>\n>('search/prepareForSearchWithQuery', (payload, thunk) => {\n  const {dispatch} = thunk;\n  validatePayload(payload, {\n    q: new StringValue(),\n    enableQuerySyntax: new BooleanValue(),\n    clearFilters: new BooleanValue(),\n  });\n\n  if (payload.clearFilters) {\n    dispatch(deselectAllBreadcrumbs());\n    dispatch(deselectAllNonBreadcrumbs());\n  }\n\n  dispatch(updateFacetAutoSelection({allow: true}));\n  dispatch(\n    updateQuery({q: payload.q, enableQuerySyntax: payload.enableQuerySyntax})\n  );\n  dispatch(updatePage(1));\n});\n\nexport const executeSearch = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  SearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/executeSearch', async (searchAction: SearchAction, config) => {\n  const state = config.getState();\n  return await legacyExecuteSearch(state, config, searchAction);\n});\n\nexport const fetchPage = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  SearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchPage', async (searchAction: SearchAction, config) => {\n  const state = config.getState();\n  return await legacyFetchPage(state, config, searchAction);\n});\n\nexport const fetchMoreResults = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  void,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchMoreResults', async (_, config) => {\n  const state = config.getState();\n\n  return await legacyFetchMoreResults(config, state);\n});\n\nexport const fetchFacetValues = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  SearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchFacetValues', async (searchAction: SearchAction, config) => {\n  const state = config.getState();\n\n  return await legacyFetchFacetValues(config, searchAction, state);\n});\n\nexport const fetchInstantResults = createAsyncThunk<\n  FetchInstantResultsThunkReturn,\n  FetchInstantResultsActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch & InstantResultSection>\n>(\n  'search/fetchInstantResults',\n  async (payload: FetchInstantResultsActionCreatorPayload, config) => {\n    return legacyFetchInstantResults(payload, config);\n  }\n);\n\nconst buildFetchMoreRequest = async (\n  state: StateNeededByExecuteSearch,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(state, eventDescription);\n  mappedRequest.request = {\n    ...mappedRequest.request,\n    firstResult:\n      (state.pagination?.firstResult ?? 0) +\n      (state.search?.results.length ?? 0),\n  };\n  return mappedRequest;\n};\n\nexport const buildInstantResultSearchRequest = async (\n  state: StateNeededByExecuteSearch,\n  q: string,\n  numberOfResults: number\n) => {\n  const sharedWithFoldingRequest =\n    await buildSearchAndFoldingLoadCollectionRequest(state);\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      enableDidYouMean: state.didYouMean.enableDidYouMean,\n    }),\n    numberOfResults,\n    q,\n  });\n};\n\nconst buildFetchFacetValuesRequest = async (\n  state: StateNeededByExecuteSearch,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(state, eventDescription);\n  // Specifying a numberOfResults of 0 will not log the query as a full fledged query in the API\n  // it will also alleviate the load on the index\n  mappedRequest.request.numberOfResults = 0;\n  return mappedRequest;\n};\n\nconst addEntryInActionsHistory = (state: StateNeededByExecuteSearch) => {\n  if (state.configuration.analytics.enabled) {\n    historyStore.addElement({\n      name: 'Query',\n      ...(state.query?.q && {\n        value: state.query.q,\n      }),\n      time: JSON.stringify(new Date()),\n    });\n  }\n};\n\nexport async function legacyFetchInstantResults(\n  payload: FetchInstantResultsActionCreatorPayload,\n  config: any //eslint-disable-line @typescript-eslint/no-explicit-any\n) {\n  validatePayload(payload, {\n    id: requiredNonEmptyString,\n    q: requiredNonEmptyString,\n    maxResultsPerQuery: new NumberValue({\n      required: true,\n      min: 1,\n    }),\n    cacheTimeout: new NumberValue(),\n  });\n  const {q, maxResultsPerQuery} = payload;\n  const state = config.getState();\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({...config, analyticsAction: logInstantResultsSearch()}, (modification) => {\n    config.dispatch(\n      updateInstantResultsQuery({q: modification, id: payload.id})\n    );\n  });\n\n  const request = await buildInstantResultSearchRequest(\n    state,\n    q,\n    maxResultsPerQuery\n  );\n\n  const fetched = await processor.fetchFromAPI(request, {\n    origin: 'instantResults',\n    disableAbortWarning: true,\n  });\n  const processed = await processor.process(fetched);\n  if ('response' in processed) {\n    return {\n      results: processed.response.results,\n      searchUid: processed.response.searchUid,\n      analyticsAction: processed.analyticsAction,\n      totalCountFiltered: processed.response.totalCountFiltered,\n      duration: processed.duration,\n    };\n  }\n  return processed as ReturnType<typeof config.rejectWithValue>;\n}\n\nexport async function legacyFetchPage(\n  state: StateNeededByExecuteSearch,\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  searchAction: SearchAction\n) {\n  addEntryInActionsHistory(state);\n\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await searchAction.prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction: searchAction,\n  });\n\n  const request = await buildSearchRequest(state, eventDescription);\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n}\n\nexport async function legacyFetchMoreResults(\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  state: StateNeededByExecuteSearch\n) {\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await logFetchMoreResults().prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction: logFetchMoreResults(),\n  });\n\n  const request = await buildFetchMoreRequest(state, eventDescription);\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n}\n\nexport async function legacyFetchFacetValues(\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  searchAction: SearchAction,\n  state: StateNeededByExecuteSearch\n) {\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await searchAction.prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({...config, analyticsAction: searchAction});\n\n  const request = await buildFetchFacetValuesRequest(state, eventDescription);\n  const fetched = await processor.fetchFromAPI(request, {\n    origin: 'facetValues',\n  });\n\n  return await processor.process(fetched);\n}\n\nexport async function legacyExecuteSearch(\n  state: StateNeededByExecuteSearch,\n  config: any, //eslint-disable-line @typescript-eslint/no-explicit-any\n  searchAction: SearchAction\n) {\n  addEntryInActionsHistory(state);\n\n  const {analyticsClientMiddleware, preprocessRequest, logger} = config.extra;\n  const {description: eventDescription} = await searchAction.prepare({\n    getState: () => config.getState(),\n    analyticsClientMiddleware,\n    preprocessRequest,\n    logger,\n  });\n\n  const request = await buildSearchRequest(state, eventDescription);\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({...config, analyticsAction: searchAction});\n\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n}\n", "import {AnyAction} from '@reduxjs/toolkit';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {\n  isErrorResponse,\n  isSuccessResponse,\n  SearchAPIClient,\n} from '../../api/search/search-api-client';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport {SearchOrigin} from '../../api/search/search-metadata';\nimport {SearchRequest} from '../../api/search/search/search-request';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {\n  AdvancedSearchQueriesSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  ContextSection,\n  DateFacetSection,\n  DebugSection,\n  DidYouMeanSection,\n  FacetOptionsSection,\n  FacetOrderSection,\n  FacetSection,\n  FieldsSection,\n  FoldingSection,\n  NumericFacetSection,\n  PaginationSection,\n  PipelineSection,\n  QuerySection,\n  QuerySetSection,\n  SearchHubSection,\n  SearchSection,\n  SortSection,\n  TriggerSection,\n} from '../../state/state-sections';\nimport {makeBasicNewSearchAnalyticsAction} from '../analytics/analytics-utils';\nimport {SearchPageEvents} from '../analytics/search-action-cause';\nimport {applyDidYouMeanCorrection} from '../did-you-mean/did-you-mean-actions';\nimport {snapshot} from '../history/history-actions';\nimport {extractHistory} from '../history/history-state';\nimport {updateQuery} from '../query/query-actions';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from '../triggers/triggers-actions';\nimport {ExecuteSearchThunkReturn} from './search-actions';\nimport {logQueryError} from './search-analytics-actions';\nimport {\n  ErrorResponse,\n  MappedSearchRequest,\n  mapSearchResponse,\n  SuccessResponse,\n} from './search-mappings';\nimport {buildSearchRequest} from './search-request';\n\nexport interface AnalyticsAction {\n  actionCause: string;\n}\n\nexport type StateNeededByExecuteSearch = ConfigurationSection &\n  Partial<\n    QuerySection &\n      AdvancedSearchQueriesSection &\n      PaginationSection &\n      SortSection &\n      FacetSection &\n      NumericFacetSection &\n      CategoryFacetSection &\n      DateFacetSection &\n      ContextSection &\n      DidYouMeanSection &\n      FieldsSection &\n      PipelineSection &\n      SearchHubSection &\n      QuerySetSection &\n      FacetOptionsSection &\n      FacetOrderSection &\n      DebugSection &\n      SearchSection &\n      FoldingSection &\n      TriggerSection\n  >;\n\ninterface FetchedResponse {\n  response: SuccessResponse | ErrorResponse;\n  duration: number;\n  queryExecuted: string;\n  requestExecuted: SearchRequest;\n}\n\ntype ValidReturnTypeFromProcessingStep<RejectionType> =\n  | ExecuteSearchThunkReturn\n  | RejectionType;\n\nexport interface AsyncThunkConfig {\n  getState: () => StateNeededByExecuteSearch;\n  dispatch: ThunkDispatch<\n    StateNeededByExecuteSearch,\n    ClientThunkExtraArguments<SearchAPIClient> & {\n      searchAPIClient?: SearchAPIClient | undefined;\n    },\n    AnyAction\n  >;\n\n  rejectWithValue: (err: SearchAPIErrorWithStatusCode) => unknown;\n  analyticsAction: AnalyticsAction;\n  extra: ClientThunkExtraArguments<SearchAPIClient>;\n}\n\ntype QueryCorrectionCallback = (modification: string) => void;\n\nexport interface FetchFromAPIOptions {\n  origin: SearchOrigin;\n  disableAbortWarning?: boolean;\n}\n\nexport class AsyncSearchThunkProcessor<RejectionType> {\n  constructor(\n    private config: AsyncThunkConfig,\n    private onUpdateQueryForCorrection: QueryCorrectionCallback = (\n      modification\n    ) => {\n      this.dispatch(updateQuery({q: modification}));\n    }\n  ) {}\n\n  public async fetchFromAPI(\n    {mappings, request}: MappedSearchRequest,\n    options: FetchFromAPIOptions\n  ) {\n    const startedAt = new Date().getTime();\n    const response = mapSearchResponse(\n      await this.extra.apiClient.search(request, options),\n      mappings\n    );\n    const duration = new Date().getTime() - startedAt;\n    const queryExecuted = this.getState().query?.q || '';\n    return {response, duration, queryExecuted, requestExecuted: request};\n  }\n\n  public async process(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType>> {\n    return (\n      this.processQueryErrorOrContinue(fetched) ??\n      (await this.processQueryCorrectionsOrContinue(fetched)) ??\n      (await this.processQueryTriggersOrContinue(fetched)) ??\n      this.processSuccessResponse(fetched)\n    );\n  }\n\n  private processQueryErrorOrContinue(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> | null {\n    if (isErrorResponse(fetched.response)) {\n      this.dispatch(logQueryError(fetched.response.error));\n      return this.rejectWithValue(fetched.response.error) as RejectionType;\n    }\n\n    return null;\n  }\n\n  private async processQueryCorrectionsOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const state = this.getState();\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse || !state.didYouMean) {\n      return null;\n    }\n\n    const {enableDidYouMean, automaticallyCorrectQuery} = state.didYouMean;\n    const {results, queryCorrections} = successResponse;\n\n    const shouldBeAutomaticallyRetried =\n      results.length === 0 &&\n      queryCorrections.length !== 0 &&\n      enableDidYouMean &&\n      automaticallyCorrectQuery;\n\n    if (!shouldBeAutomaticallyRetried) {\n      return null;\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const {correctedQuery} = successResponse.queryCorrections[0];\n\n    const retried =\n      await this.automaticallyRetryQueryWithCorrection(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n        queryCorrections: successResponse.queryCorrections,\n      },\n      automaticallyCorrected: true,\n      originalQuery,\n      analyticsAction: makeBasicNewSearchAnalyticsAction(\n        SearchPageEvents.didyoumeanAutomatic,\n        this.getState\n      ),\n    };\n  }\n\n  private async processQueryTriggersOrContinue(\n    fetched: FetchedResponse\n  ): Promise<ValidReturnTypeFromProcessingStep<RejectionType> | null> {\n    const successResponse = this.getSuccessResponse(fetched);\n    if (!successResponse) {\n      return null;\n    }\n    const correctedQuery =\n      (successResponse.triggers.find((trigger) => trigger.type === 'query')\n        ?.content as string) || '';\n\n    if (!correctedQuery) {\n      return null;\n    }\n\n    const ignored = this.getState().triggers?.queryModification.queryToIgnore;\n\n    if (ignored === correctedQuery) {\n      this.dispatch(updateIgnoreQueryTrigger(''));\n      return null;\n    }\n\n    const originalQuery = this.getCurrentQuery();\n    const retried =\n      await this.automaticallyRetryQueryWithTriggerModification(correctedQuery);\n\n    if (isErrorResponse(retried.response)) {\n      this.dispatch(logQueryError(retried.response.error));\n      return this.rejectWithValue(retried.response.error) as RejectionType;\n    }\n\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...retried,\n      response: {\n        ...retried.response.success,\n      },\n      automaticallyCorrected: false,\n      originalQuery,\n      analyticsAction: makeBasicNewSearchAnalyticsAction(\n        SearchPageEvents.triggerQuery,\n        this.getState\n      ),\n    };\n  }\n\n  private processSuccessResponse(\n    fetched: FetchedResponse\n  ): ValidReturnTypeFromProcessingStep<RejectionType> {\n    this.dispatch(snapshot(extractHistory(this.getState())));\n    return {\n      ...fetched,\n      response: this.getSuccessResponse(fetched)!,\n      automaticallyCorrected: false,\n      originalQuery: this.getCurrentQuery(),\n      analyticsAction: this.analyticsAction!,\n    };\n  }\n\n  private getSuccessResponse(fetched: FetchedResponse) {\n    if (isSuccessResponse(fetched.response)) {\n      return fetched.response.success;\n    }\n    return null;\n  }\n\n  private async automaticallyRetryQueryWithCorrection(correction: string) {\n    this.onUpdateQueryForCorrection(correction);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState()),\n      {origin: 'mainSearch'}\n    );\n    this.dispatch(applyDidYouMeanCorrection(correction));\n    return fetched;\n  }\n\n  private async automaticallyRetryQueryWithTriggerModification(\n    modified: string\n  ) {\n    this.dispatch(\n      applyQueryTriggerModification({\n        newQuery: modified,\n        originalQuery: this.getCurrentQuery(),\n      })\n    );\n    this.onUpdateQueryForCorrection(modified);\n    const fetched = await this.fetchFromAPI(\n      await buildSearchRequest(this.getState()),\n      {origin: 'mainSearch'}\n    );\n\n    return fetched;\n  }\n\n  private getCurrentQuery() {\n    const state = this.getState();\n    return state.query?.q !== undefined ? state.query.q : '';\n  }\n\n  private get extra() {\n    return this.config.extra;\n  }\n\n  private getState() {\n    return this.config.getState();\n  }\n\n  private get dispatch() {\n    return this.config.dispatch;\n  }\n\n  private get analyticsAction() {\n    return this.config.analyticsAction;\n  }\n\n  private get rejectWithValue() {\n    return this.config.rejectWithValue;\n  }\n}\n", "import {BooleanValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {EventDescription} from 'coveo.analytics';\nimport {historyStore} from '../../api/analytics/coveo-analytics-utils';\nimport {AsyncThunkSearchOptions} from '../../api/search/search-api-client';\nimport {SearchResponseSuccess} from '../../api/search/search/search-response';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options';\nimport {InstantResultSection} from '../../state/state-sections';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload';\nimport {\n  SearchAction as LegacySearchAction,\n  makeBasicNewSearchAnalyticsAction,\n} from '../analytics/analytics-utils';\nimport {SearchPageEvents} from '../analytics/search-action-cause';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from '../breadcrumb/breadcrumb-actions';\nimport {updateFacetAutoSelection} from '../facets/generic/facet-actions';\nimport {\n  FetchInstantResultsActionCreatorPayload,\n  FetchInstantResultsThunkReturn,\n  updateInstantResultsQuery,\n} from '../instant-results/instant-results-actions';\nimport {updatePage} from '../pagination/pagination-actions';\nimport {\n  updateQuery,\n  UpdateQueryActionCreatorPayload,\n} from '../query/query-actions';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../search-and-folding/search-and-folding-request';\nimport {\n  legacyExecuteSearch,\n  legacyFetchInstantResults,\n  legacyFetchMoreResults,\n  legacyFetchPage,\n} from './legacy/search-actions';\nimport {\n  AnalyticsAction,\n  AsyncSearchThunkProcessor,\n  StateNeededByExecuteSearch,\n} from './search-actions-thunk-processor';\nimport {MappedSearchRequest, mapSearchRequest} from './search-mappings';\nimport {buildSearchRequest} from './search-request';\n\nexport interface SearchAction<\n  State extends StateNeededByExecuteSearch = StateNeededByExecuteSearch,\n  Payload extends Object = {},\n> {\n  actionCause: string;\n  getEventExtraPayload: (state: State) => Payload;\n}\n\ntype SingleOrArray<T> = T | T[];\n\nexport const buildSearchAction = <\n  State extends StateNeededByExecuteSearch = StateNeededByExecuteSearch,\n  Payload extends Object = {},\n>(\n  actionCause: string,\n  getEventExtraPayload: SingleOrArray<\n    ({\n      state,\n      payload,\n    }: {\n      state: StateNeededByExecuteSearch;\n      payload: Partial<Payload>;\n    }) => void\n  >\n) => {\n  const getEventExtraPayloadFunctionArray = Array.isArray(getEventExtraPayload)\n    ? getEventExtraPayload\n    : [getEventExtraPayload];\n  const combinedGetEventExtraPayload = (state: State) => {\n    const payload = {};\n    for (const payloadTransformer of getEventExtraPayloadFunctionArray) {\n      payloadTransformer({state, payload});\n    }\n    return payload;\n  };\n  return {\n    actionCause,\n    getEventExtraPayload: combinedGetEventExtraPayload,\n  };\n};\n\nexport type {StateNeededByExecuteSearch} from './search-actions-thunk-processor';\n\nexport interface ExecuteSearchThunkReturn {\n  /** The successful search response. */\n  response: SearchResponseSuccess;\n  /** The number of milliseconds it took to receive the response. */\n  duration: number;\n  /** The query that was executed. */\n  queryExecuted: string;\n  /** Whether the query was automatically corrected. */\n  automaticallyCorrected: boolean;\n  /** The original query that was performed when an automatic correction is executed.*/\n  originalQuery: string;\n  /** The analytics action to log after the query. */\n  analyticsAction: AnalyticsAction;\n}\n\ninterface PrepareForSearchWithQueryOptions {\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters: boolean;\n}\n\nexport const prepareForSearchWithQuery = createAsyncThunk<\n  void,\n  UpdateQueryActionCreatorPayload & PrepareForSearchWithQueryOptions,\n  AsyncThunkOptions<StateNeededByExecuteSearch>\n>('search/prepareForSearchWithQuery', (payload, thunk) => {\n  const {dispatch} = thunk;\n  validatePayload(payload, {\n    q: new StringValue(),\n    enableQuerySyntax: new BooleanValue(),\n    clearFilters: new BooleanValue(),\n  });\n\n  if (payload.clearFilters) {\n    dispatch(deselectAllBreadcrumbs());\n    dispatch(deselectAllNonBreadcrumbs());\n  }\n\n  dispatch(updateFacetAutoSelection({allow: true}));\n  dispatch(\n    updateQuery({q: payload.q, enableQuerySyntax: payload.enableQuerySyntax})\n  );\n  dispatch(updatePage(1));\n});\n\nexport interface TransitiveSearchAction {\n  legacy: LegacySearchAction;\n  next?: SearchAction;\n}\n\nexport const executeSearch = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  TransitiveSearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>(\n  'search/executeSearch',\n  async (searchAction: TransitiveSearchAction, config) => {\n    const state = config.getState();\n    if (\n      state.configuration.analytics.analyticsMode === 'legacy' ||\n      !searchAction.next\n    ) {\n      return legacyExecuteSearch(state, config, searchAction.legacy);\n    }\n    addEntryInActionsHistory(state);\n    const analyticsAction = buildSearchReduxAction(searchAction.next, state);\n\n    const request = await buildSearchRequest(state, analyticsAction);\n\n    const processor = new AsyncSearchThunkProcessor<\n      ReturnType<typeof config.rejectWithValue>\n    >({...config, analyticsAction});\n\n    const fetched = await processor.fetchFromAPI(request, {\n      origin: 'mainSearch',\n    });\n\n    return await processor.process(fetched);\n  }\n);\n\nexport const fetchPage = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  TransitiveSearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchPage', async (searchAction: TransitiveSearchAction, config) => {\n  const state = config.getState();\n  addEntryInActionsHistory(state);\n\n  if (\n    state.configuration.analytics.analyticsMode === 'legacy' ||\n    !searchAction.next\n  ) {\n    return legacyFetchPage(state, config, searchAction.legacy);\n  }\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction: searchAction.next,\n  });\n\n  const request = await buildSearchRequest(state, searchAction.next);\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n});\n\nexport const fetchMoreResults = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  void,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>('search/fetchMoreResults', async (_, config) => {\n  const state = config.getState();\n  if (state.configuration.analytics.analyticsMode === 'legacy') {\n    return legacyFetchMoreResults(config, state);\n  }\n\n  const analyticsAction = makeBasicNewSearchAnalyticsAction(\n    SearchPageEvents.pagerScrolling,\n    config.getState\n  );\n\n  const processor = new AsyncSearchThunkProcessor<\n    ReturnType<typeof config.rejectWithValue>\n  >({\n    ...config,\n    analyticsAction,\n  });\n\n  const request = await buildFetchMoreRequest(state, analyticsAction);\n  const fetched = await processor.fetchFromAPI(request, {origin: 'mainSearch'});\n\n  return await processor.process(fetched);\n});\n\nexport const fetchFacetValues = createAsyncThunk<\n  ExecuteSearchThunkReturn,\n  TransitiveSearchAction,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch>\n>(\n  'search/fetchFacetValues',\n  async (searchAction: TransitiveSearchAction, config) => {\n    const state = config.getState();\n    if (\n      state.configuration.analytics.analyticsMode === 'legacy' ||\n      !searchAction.next\n    ) {\n      return legacyExecuteSearch(state, config, searchAction.legacy);\n    }\n    const analyticsAction = buildSearchReduxAction(searchAction.next, state);\n\n    const processor = new AsyncSearchThunkProcessor<\n      ReturnType<typeof config.rejectWithValue>\n    >({...config, analyticsAction});\n\n    const request = await buildFetchFacetValuesRequest(state, analyticsAction);\n    const fetched = await processor.fetchFromAPI(request, {\n      origin: 'facetValues',\n    });\n\n    return await processor.process(fetched);\n  }\n);\n\nexport const fetchInstantResults = createAsyncThunk<\n  FetchInstantResultsThunkReturn,\n  FetchInstantResultsActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededByExecuteSearch & InstantResultSection>\n>(\n  'search/fetchInstantResults',\n  async (payload: FetchInstantResultsActionCreatorPayload, config) => {\n    const state = config.getState();\n    if (state.configuration.analytics.analyticsMode === 'legacy') {\n      return legacyFetchInstantResults(payload, config);\n    }\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      q: requiredNonEmptyString,\n      maxResultsPerQuery: new NumberValue({\n        required: true,\n        min: 1,\n      }),\n      cacheTimeout: new NumberValue(),\n    });\n    const {q, maxResultsPerQuery} = payload;\n    const analyticsAction = makeBasicNewSearchAnalyticsAction(\n      SearchPageEvents.searchboxAsYouType,\n      config.getState\n    );\n    const processor = new AsyncSearchThunkProcessor<\n      ReturnType<typeof config.rejectWithValue>\n    >({...config, analyticsAction}, (modification) => {\n      config.dispatch(\n        updateInstantResultsQuery({q: modification, id: payload.id})\n      );\n    });\n\n    const request = await buildInstantResultSearchRequest(\n      state,\n      q,\n      maxResultsPerQuery\n    );\n\n    const fetched = await processor.fetchFromAPI(request, {\n      origin: 'instantResults',\n      disableAbortWarning: true,\n    });\n    const processed = await processor.process(fetched);\n    if ('response' in processed) {\n      return {\n        results: processed.response.results,\n        searchUid: processed.response.searchUid,\n        analyticsAction: processed.analyticsAction,\n        totalCountFiltered: processed.response.totalCountFiltered,\n        duration: processed.duration,\n      };\n    }\n    return processed as ReturnType<typeof config.rejectWithValue>;\n  }\n);\n\nconst buildFetchMoreRequest = async (\n  state: StateNeededByExecuteSearch,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(state, eventDescription);\n  mappedRequest.request = {\n    ...mappedRequest.request,\n    firstResult:\n      (state.pagination?.firstResult ?? 0) +\n      (state.search?.results.length ?? 0),\n  };\n  return mappedRequest;\n};\n\nexport const buildInstantResultSearchRequest = async (\n  state: StateNeededByExecuteSearch,\n  q: string,\n  numberOfResults: number\n) => {\n  const sharedWithFoldingRequest =\n    await buildSearchAndFoldingLoadCollectionRequest(state);\n\n  return mapSearchRequest({\n    ...sharedWithFoldingRequest,\n    ...(state.didYouMean && {\n      enableDidYouMean: state.didYouMean.enableDidYouMean,\n    }),\n    numberOfResults,\n    q,\n  });\n};\n\nconst buildFetchFacetValuesRequest = async (\n  state: StateNeededByExecuteSearch,\n  eventDescription?: EventDescription\n): Promise<MappedSearchRequest> => {\n  const mappedRequest = await buildSearchRequest(state, eventDescription);\n  // Specifying a numberOfResults of 0 will not log the query as a full fledged query in the API\n  // it will also alleviate the load on the index\n  mappedRequest.request.numberOfResults = 0;\n  return mappedRequest;\n};\n\nconst addEntryInActionsHistory = (state: StateNeededByExecuteSearch) => {\n  if (state.configuration.analytics.enabled) {\n    historyStore.addElement({\n      name: 'Query',\n      ...(state.query?.q && {\n        value: state.query.q,\n      }),\n      time: JSON.stringify(new Date()),\n    });\n  }\n};\n\nconst buildSearchReduxAction = (\n  action: SearchAction,\n  state: StateNeededByExecuteSearch\n) => ({\n  customData: action.getEventExtraPayload(state),\n  actionCause: action.actionCause,\n  type: action.actionCause,\n});\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {Result} from '../../api/search/search/result';\nimport {isArray} from '../../utils/utils';\nimport {ResultTemplateCondition} from './result-templates';\n\n/**\n * Extracts a property from a result object.\n * @param result (Result) The target result.\n * @param property (string) The property to extract.\n * @returns (unknown) The value of the specified property in the specified result, or null if the property does not exist.\n */\nexport const getResultProperty = (result: Result, property: string) => {\n  const anyResult = result as unknown as Record<string, unknown>;\n  if (!isNullOrUndefined(anyResult[property])) {\n    return anyResult[property];\n  }\n\n  if (!isNullOrUndefined(result.raw[property])) {\n    return result.raw[property];\n  }\n\n  return null;\n};\n\n/**\n * Creates a condition that verifies if the specified fields are defined.\n * @param fieldNames (string[]) A list of fields that must be defined.\n * @returns (ResultTemplateCondition) A function that takes a result and checks if every field in the specified list is defined.\n */\nexport const fieldsMustBeDefined = (\n  fieldNames: string[]\n): ResultTemplateCondition => {\n  return (result: Result) => {\n    return fieldNames.every(\n      (fieldName) => !isNullOrUndefined(getResultProperty(result, fieldName))\n    );\n  };\n};\n\n/**\n * Creates a condition that verifies if the specified fields are not defined.\n * @param fieldNames (string[]) A list of fields that must not be defined.\n * @returns (ResultTemplateCondition) A function that takes a result and checks if every field in the specified list is not defined.\n */\nexport const fieldsMustNotBeDefined = (\n  fieldNames: string[]\n): ResultTemplateCondition => {\n  return (result: Result) => {\n    return fieldNames.every((fieldName) =>\n      isNullOrUndefined(getResultProperty(result, fieldName))\n    );\n  };\n};\n\n/**\n * Creates a condition that verifies if a field's value contains any of the specified values.\n * @param fieldName (string) The name of the field to check.\n * @param valuesToMatch (string[]) A list of possible values to match.\n * @returns (ResultTemplateCondition) A function that takes a result and checks if the value for the specified field matches any value in the specified list.\n */\nexport const fieldMustMatch = (\n  fieldName: string,\n  valuesToMatch: string[]\n): ResultTemplateCondition => {\n  return (result: Result) => {\n    const fieldValues = getFieldValuesFromResult(fieldName, result);\n    return valuesToMatch.some((valueToMatch) =>\n      fieldValues.some(\n        (fieldValue) =>\n          `${fieldValue}`.toLowerCase() === valueToMatch.toLowerCase()\n      )\n    );\n  };\n};\n\n/**\n * Creates a condition that verifies that a field's value does not contain any of the specified values.\n * @param fieldName (string) The name of the field to check.\n * @param blacklistedValues (string[]) A list of all disallowed values.\n * @returns (ResultTemplateCondition) A function that takes a result and checks that the value for the specified field does not match any value in the given list.\n */\nexport const fieldMustNotMatch = (\n  fieldName: string,\n  blacklistedValues: string[]\n): ResultTemplateCondition => {\n  return (result: Result) => {\n    const fieldValues = getFieldValuesFromResult(fieldName, result);\n    return blacklistedValues.every((blacklistedValue) =>\n      fieldValues.every(\n        (fieldValue) =>\n          `${fieldValue}`.toLowerCase() !== blacklistedValue.toLowerCase()\n      )\n    );\n  };\n};\n\nconst getFieldValuesFromResult = (fieldName: string, result: Result) => {\n  const rawValue = getResultProperty(result, fieldName);\n  return isArray(rawValue) ? rawValue : [rawValue];\n};\n", "import {SearchSection} from '../../state/state-sections';\nimport {getResultProperty} from '../result-templates/result-templates-helpers';\n\nexport function firstSearchExecutedSelector(state: SearchSection) {\n  return state.search.response.searchUid !== '';\n}\n\nexport function resultFromFieldSelector(\n  state: SearchSection,\n  contentIdKey: string,\n  contentIdValue: string\n) {\n  return state.search.results.find(\n    (result) => getResultProperty(result, contentIdKey) === contentIdValue\n  );\n}\n", "import {createReducer, PayloadAction} from '@reduxjs/toolkit';\nimport {\n  executeSearch,\n  fetchFacetValues,\n  fetchMoreResults,\n  fetchPage,\n} from './legacy/search-actions';\nimport {\n  emptyQuestionAnswer,\n  getSearchInitialState,\n  SearchState,\n} from './search-state';\n\ntype SearchAction = typeof executeSearch | typeof fetchMoreResults;\n\nfunction handleRejectedSearch(\n  state: SearchState,\n  action: ReturnType<SearchAction['rejected']>\n) {\n  const error = action.payload ?? null;\n  if (error) {\n    state.response = getSearchInitialState().response;\n    state.results = [];\n    state.questionAnswer = emptyQuestionAnswer();\n  }\n\n  state.error = error;\n  state.isLoading = false;\n}\n\nfunction handleFulfilledSearch(\n  state: SearchState,\n  action: ReturnType<SearchAction['fulfilled']>\n) {\n  state.error = null;\n  state.response = action.payload.response;\n  state.queryExecuted = action.payload.queryExecuted;\n  state.duration = action.payload.duration;\n  state.isLoading = false;\n}\n\nfunction handleFulfilledNewSearch(\n  state: SearchState,\n  action: ReturnType<SearchAction['fulfilled']>\n) {\n  handleFulfilledSearch(state, action);\n  state.results = action.payload.response.results;\n  state.searchResponseId = action.payload.response.searchUid;\n  state.questionAnswer = action.payload.response.questionAnswer;\n  state.extendedResults = action.payload.response.extendedResults;\n}\n\nfunction handlePendingSearch(\n  state: SearchState,\n  action: PayloadAction<\n    void,\n    string,\n    {\n      requestId: string;\n    }\n  >\n) {\n  state.isLoading = true;\n  state.requestId = action.meta.requestId;\n}\n\nexport const searchReducer = createReducer(\n  getSearchInitialState(),\n  (builder) => {\n    builder.addCase(executeSearch.rejected, (state, action) =>\n      handleRejectedSearch(state, action)\n    );\n    builder.addCase(fetchMoreResults.rejected, (state, action) =>\n      handleRejectedSearch(state, action)\n    );\n    builder.addCase(fetchPage.rejected, (state, action) =>\n      handleRejectedSearch(state, action)\n    );\n    builder.addCase(executeSearch.fulfilled, (state, action) => {\n      handleFulfilledNewSearch(state, action);\n    });\n    builder.addCase(fetchMoreResults.fulfilled, (state, action) => {\n      handleFulfilledSearch(state, action);\n      state.results = [...state.results, ...action.payload.response.results];\n    });\n    builder.addCase(fetchPage.fulfilled, (state, action) => {\n      handleFulfilledSearch(state, action);\n      state.results = action.payload.response.results;\n    });\n    builder.addCase(fetchFacetValues.fulfilled, (state, action) => {\n      state.response.facets = action.payload.response.facets;\n      state.response.searchUid = action.payload.response.searchUid;\n    });\n    builder.addCase(executeSearch.pending, handlePendingSearch);\n    builder.addCase(fetchMoreResults.pending, handlePendingSearch);\n    builder.addCase(fetchPage.pending, handlePendingSearch);\n  }\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {VERSION} from '../../utils/version';\n\nexport const versionReducer = createReducer(VERSION, (builder) => builder);\n", "import {Middleware} from '@reduxjs/toolkit';\n\nexport const analyticsMiddleware: Middleware = (api) => (next) => (action) => {\n  // Why all these shenanigans ?\n  // https://redux.js.org/style-guide/style-guide#do-not-put-non-serializable-values-in-state-or-actions\n  // analyticsAction is returned as a function in some action payload. A function is non serializable.\n  // This is not recommended, with one exception: It has to be handled before any reducer has the chance to do it's job, and should not stored in the state.\n  // To meet those conditions, we ensure the analyticsMiddleware is always the first executed (in store.ts/configureStore) and that it is removed from the payload.\n  // We only keep a reference to the function in order to dispatch it correctly after the reducer (next) has the chance of processing the action/state change\n  const analytics = action.payload?.analyticsAction;\n  if (analytics !== undefined) {\n    delete action.payload?.analyticsAction;\n  }\n\n  const ret = next(action);\n\n  if (\n    action.type === 'search/executeSearch/fullfilled' &&\n    analytics === undefined\n  ) {\n    console.error('No analytics action associated with search:', action);\n  }\n\n  if (\n    action.type === 'recommendation/get/fullfilled' &&\n    analytics === undefined\n  ) {\n    console.error(\n      'No analytics action associated with recommendation:',\n      action\n    );\n  }\n\n  if (\n    action.type === 'productRecommendations/get/fullfilled' &&\n    analytics === undefined\n  ) {\n    console.error(\n      'No analytics action associated with product recommendation:',\n      action\n    );\n  }\n\n  if (analytics !== undefined) {\n    api.dispatch(analytics);\n  }\n\n  return ret;\n};\n", "import {isNullOrUndefined} from '@coveo/bueno';\n//@ts-expect-error package is just an alias resolved in esbuild\nimport getMagicCookie from '@coveo/pendragon';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {clearAnalyticsClient} from '../../api/analytics/coveo-analytics-utils';\nimport {getOrganizationEndpoints} from '../../api/platform-client';\nimport {\n  matchCoveoOrganizationEndpointUrl,\n  isCoveoPlatformURL,\n} from '../../utils/url-utils';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {updateActiveTab} from '../tab-set/tab-set-actions';\nimport {\n  updateBasicConfiguration,\n  updateSearchConfiguration,\n  disableAnalytics,\n  enableAnalytics,\n  updateAnalyticsConfiguration,\n  setOriginLevel2,\n  setOriginLevel3,\n} from './configuration-actions';\nimport {\n  getConfigurationInitialState,\n  searchAPIEndpoint,\n  analyticsAPIEndpoint,\n} from './configuration-state';\n\nfunction legacyAnalyticsUrlFromPlatformUrl(\n  platformUrl: string,\n  organizationId: string\n) {\n  const matchCoveoPlatformURL = isCoveoPlatformURL(platformUrl);\n  if (matchCoveoPlatformURL) {\n    return (\n      platformUrl.replace(/^(https:\\/\\/)platform/, '$1analytics') +\n      analyticsAPIEndpoint\n    );\n  }\n\n  const matchCoveoOrganizationEndpoints = matchCoveoOrganizationEndpointUrl(\n    platformUrl,\n    organizationId\n  );\n\n  if (matchCoveoOrganizationEndpoints) {\n    return getOrganizationEndpoints(\n      organizationId,\n      matchCoveoOrganizationEndpoints.environment\n    ).analytics;\n  }\n\n  return platformUrl;\n}\n\nexport const configurationReducer = createReducer(\n  getConfigurationInitialState(),\n  (builder) =>\n    builder\n      .addCase(updateBasicConfiguration, (state, action) => {\n        if (action.payload.accessToken) {\n          state.accessToken = action.payload.accessToken;\n        }\n        if (action.payload.organizationId) {\n          state.organizationId = action.payload.organizationId;\n        }\n        if (action.payload.platformUrl) {\n          state.platformUrl = action.payload.platformUrl;\n          state.search.apiBaseUrl = `${action.payload.platformUrl}${searchAPIEndpoint}`;\n          state.analytics.apiBaseUrl = legacyAnalyticsUrlFromPlatformUrl(\n            action.payload.platformUrl,\n            state.organizationId\n          );\n        }\n      })\n      .addCase(updateSearchConfiguration, (state, action) => {\n        if (action.payload.apiBaseUrl) {\n          state.search.apiBaseUrl = action.payload.apiBaseUrl;\n        }\n        if (action.payload.locale) {\n          state.search.locale = action.payload.locale;\n        }\n        if (action.payload.timezone) {\n          state.search.timezone = action.payload.timezone;\n        }\n        if (action.payload.authenticationProviders) {\n          state.search.authenticationProviders =\n            action.payload.authenticationProviders;\n        }\n      })\n      .addCase(updateAnalyticsConfiguration, (state, action) => {\n        if (!isNullOrUndefined(action.payload.enabled)) {\n          if (!action.payload.enabled && state.analytics.enabled) {\n            clearAnalyticsClient(state.analytics);\n          }\n\n          state.analytics.enabled = action.payload.enabled;\n        }\n        if (!isNullOrUndefined(action.payload.originContext)) {\n          state.analytics.originContext = action.payload.originContext;\n        }\n        if (!isNullOrUndefined(action.payload.originLevel2)) {\n          state.analytics.originLevel2 = action.payload.originLevel2;\n        }\n        if (!isNullOrUndefined(action.payload.originLevel3)) {\n          state.analytics.originLevel3 = action.payload.originLevel3;\n        }\n        if (!isNullOrUndefined(action.payload.apiBaseUrl)) {\n          state.analytics.apiBaseUrl = action.payload.apiBaseUrl;\n        }\n        if (!isNullOrUndefined(action.payload.nextApiBaseUrl)) {\n          state.analytics.nextApiBaseUrl = action.payload.nextApiBaseUrl;\n        }\n        if (!isNullOrUndefined(action.payload.trackingId)) {\n          state.analytics.trackingId = action.payload.trackingId;\n        }\n        if (!isNullOrUndefined(action.payload.analyticsMode)) {\n          state.analytics.analyticsMode = action.payload.analyticsMode;\n        }\n        const magicCookie = getMagicCookie();\n        if (magicCookie) {\n          state.analytics.analyticsMode = 'next';\n          state.analytics.trackingId = magicCookie;\n        }\n        if (!isNullOrUndefined(action.payload.runtimeEnvironment)) {\n          state.analytics.runtimeEnvironment =\n            action.payload.runtimeEnvironment;\n        }\n        if (!isNullOrUndefined(action.payload.anonymous)) {\n          state.analytics.anonymous = action.payload.anonymous;\n        }\n        if (!isNullOrUndefined(action.payload.deviceId)) {\n          state.analytics.deviceId = action.payload.deviceId;\n        }\n        if (!isNullOrUndefined(action.payload.userDisplayName)) {\n          state.analytics.userDisplayName = action.payload.userDisplayName;\n        }\n        if (!isNullOrUndefined(action.payload.documentLocation)) {\n          state.analytics.documentLocation = action.payload.documentLocation;\n        }\n      })\n      .addCase(disableAnalytics, (state) => {\n        state.analytics.enabled = false;\n        clearAnalyticsClient(state.analytics);\n      })\n      .addCase(enableAnalytics, (state) => {\n        state.analytics.enabled = true;\n      })\n      .addCase(setOriginLevel2, (state, action) => {\n        state.analytics.originLevel2 = action.payload.originLevel2;\n      })\n      .addCase(setOriginLevel3, (state, action) => {\n        state.analytics.originLevel3 = action.payload.originLevel3;\n      })\n      .addCase(updateActiveTab, (state, action) => {\n        state.analytics.originLevel2 = action.payload;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        state.analytics.originLevel2 =\n          action.payload.tab || state.analytics.originLevel2;\n      })\n);\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload';\n\nexport interface RegisterTabActionCreatorPayload {\n  /**\n   * A unique identifier for the tab (e.g., `\"abc\"`).\n   */\n  id: string;\n\n  /**\n   * The tab filter expression.\n   */\n  expression: string;\n}\n\nexport const registerTab = createAction(\n  'tab/register',\n  (payload: RegisterTabActionCreatorPayload) => {\n    const schema = new RecordValue({\n      values: {\n        id: requiredNonEmptyString,\n        expression: requiredEmptyAllowedString,\n      },\n    });\n\n    return validatePayload<RegisterTabActionCreatorPayload>(payload, schema);\n  }\n);\n\nexport const updateActiveTab = createAction(\n  'tab/updateActiveTab',\n  (id: string) => {\n    return validatePayload(id, requiredNonEmptyString);\n  }\n);\n", "import {IRuntimeEnvironment} from 'coveo.analytics';\nimport dayjs from 'dayjs';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport {analyticsUrl, platformUrl} from '../../api/platform-client';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nexport interface ConfigurationState {\n  /**\n   * The unique identifier of the target Coveo Cloud organization (e.g., `mycoveocloudorganizationg8tp8wu3`)\n   */\n  organizationId: string;\n  /**\n   * The access token to use to authenticate requests against the Coveo Cloud endpoints. Typically, this will be an API key or search token that grants the privileges to execute queries and push usage analytics data in the target Coveo Cloud organization.\n   */\n  accessToken: string;\n  /**\n   * The Platform URL to use.\n   * By default, https://platform.cloud.coveo.com\n   */\n  platformUrl: string;\n  /**\n   * The global headless engine Search API configuration.\n   */\n  search: {\n    /**\n     * The Search API base URL to use.\n     * By default, will append /rest/search/v2 to the platformUrl value.\n     */\n    apiBaseUrl: string;\n    /**\n     * The locale of the current user. Must comply with IETF\u2019s BCP 47 definition: https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n     */\n    locale: string;\n    /**\n     * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n     * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n     */\n    timezone: string;\n    /**\n     * Specifies the name of the authentication providers to use to perform queries.\n     *\n     * See [SAML Authentication](https://docs.coveo.com/en/91/).\n     */\n    authenticationProviders: string[];\n  };\n  /**\n   * The global headless engine Usage Analytics API configuration.\n   */\n  analytics: AnalyticsState;\n}\n\nexport interface AnalyticsState {\n  /**\n   * Specifies if analytics tracking should be enabled. By default analytics events are tracked.\n   */\n  enabled: boolean;\n\n  /**\n   * The Analytics API base URL to use.\n   * By default, will append /rest/ua to the platformUrl value.\n   */\n  apiBaseUrl: string;\n\n  /**\n   * @internal\n   * The Analytics API base URL to use.\n   * By default, will append /rest/organizations/${organizationId}/events/v1 to the platformUrl value.\n   */\n  nextApiBaseUrl: string;\n\n  /**\n   * Sets the Origin Context dimension on the analytic events.\n   *\n   * You can use this dimension to specify the context of your application.\n   * Suggested values are \"Search\", \"InternalSearch\" and \"CommunitySearch\"\n   *\n   * By default, `Search`.\n   */\n  originContext: string;\n\n  /**\n   * Origin level 2 is a usage analytics event metadata whose value should typically be the name/identifier of the tab from which the usage analytics event originates.\n   *\n   * When logging a Search usage analytics event, originLevel2 should always be set to the same value as the corresponding tab (parameter) Search API query parameter so Coveo Machine Learning models function properly, and usage analytics reports and dashboards are coherent.\n   *\n   * This value is optional, and will automatically try to resolve itself from the tab search parameter.\n   */\n  originLevel2: string;\n\n  /**\n   * Origin level 3 is a usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface that\u2019s making the request.\n   *\n   * When logging a Search usage analytics event, originLevel3 should always be set to the same value as the corresponding referrer Search API query parameter so usage analytics reports and dashboards are coherent.\n   *\n   * This value is optional, and will automatically try to resolve itself from the referrer search parameter.\n   */\n  originLevel3: string;\n\n  /**\n   * Optional analytics runtime environment, this is needed for analytics to work correctly if you're running outside of a browser.\n   * See https://github.com/coveo/coveo.analytics.js for more info\n   */\n  runtimeEnvironment?: IRuntimeEnvironment;\n\n  /**\n   * Whether analytics events should be logged anonymously.\n   * If set to true, the Usage Analytics Write API will not extract the name and userDisplayName, if present, from the search token\n   */\n  anonymous: boolean;\n  /**\n   *  The name of the device that the end user is using. It should be explicitly configured in the context of a native mobile app.\n   */\n  deviceId: string;\n  /**\n   * Specifies the user display name for the usage analytics logs.\n   */\n  userDisplayName: string;\n  /**\n   * Specifies the URL of the current page or component.\n   */\n  documentLocation: string;\n  /**\n   * TBD trackingId\n   * @internal\n   */\n  trackingId: string;\n\n  analyticsMode: 'legacy' | 'next';\n}\n\nexport const searchAPIEndpoint = '/rest/search/v2';\nexport const analyticsAPIEndpoint = '/rest/ua';\n\nexport const getConfigurationInitialState: () => ConfigurationState = () => ({\n  organizationId: '',\n  accessToken: '',\n  platformUrl: platformUrl(),\n  search: {\n    apiBaseUrl: `${platformUrl()}${searchAPIEndpoint}`,\n    locale: 'en-US',\n    timezone: dayjs.tz.guess(),\n    authenticationProviders: [],\n  },\n  analytics: {\n    enabled: true,\n    apiBaseUrl: `${analyticsUrl()}${analyticsAPIEndpoint}`,\n    nextApiBaseUrl: '',\n    originContext: 'Search',\n    originLevel2: 'default',\n    originLevel3: 'default',\n    anonymous: false,\n    deviceId: '',\n    userDisplayName: '',\n    documentLocation: '',\n    trackingId: '',\n    analyticsMode: 'legacy',\n  },\n});\n", "import {configurationReducer} from '../features/configuration/configuration-slice';\n\nexport const configuration = configurationReducer;\n", "import {Middleware} from '@reduxjs/toolkit';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isInstantlyCallableThunkAction(action: any): boolean {\n  return action.instantlyCallable;\n}\n\n/**\n * Makes instantly callable thunk actions dispatchable directly.\n */\nexport const instantlyCallableThunkActionMiddleware: Middleware =\n  () => (next) => (action) =>\n    next(isInstantlyCallableThunkAction(action) ? action() : action);\n", "import {Middleware, SerializedError} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\n\nexport const logActionErrorMiddleware: (logger: Logger) => Middleware =\n  (logger) => () => (next) => (action) => {\n    if (!action.error) {\n      return next(action);\n    }\n\n    const error: SerializedError = action.error;\n\n    if (!action.payload?.ignored) {\n      logger.error(\n        error.stack || error.message || error.name || 'Error',\n        `Action dispatch error ${action.type}`,\n        action\n      );\n    }\n\n    // Validation errors should prevent further dispatching\n    if (action.error.name === 'SchemaValidationError') {\n      return;\n    }\n\n    return next(action);\n  };\n\nexport const logActionMiddleware: (logger: Logger) => Middleware =\n  (logger) => (api) => (next) => (action) => {\n    logger.debug(\n      {\n        action,\n        nextState: api.getState(),\n      },\n      `Action dispatched: ${action.type}`\n    );\n\n    return next(action);\n  };\n", "import {\n  combineReducers,\n  ReducersMapObject,\n  Reducer,\n  AnyAction,\n  StateFromReducersMapObject,\n} from '@reduxjs/toolkit';\nimport {fromEntries} from '../utils/utils';\n\nexport interface ReducerManager {\n  combinedReducer: Reducer;\n  add(newReducers: ReducersMapObject): void;\n  containsAll(newReducers: ReducersMapObject): boolean;\n  addCrossReducer(reducer: Reducer): void;\n}\n\nexport function createReducerManager(\n  initialReducers: ReducersMapObject,\n  preloadedState: object\n): ReducerManager {\n  const reducers = {...initialReducers};\n  let crossReducer: Reducer;\n\n  const rootReducer: (\n    combined: Reducer<StateFromReducersMapObject<ReducersMapObject>, AnyAction>\n  ) => Reducer = (combined) => {\n    return (state, action) => {\n      const intermediate = combined(state, action);\n      const final = crossReducer\n        ? crossReducer(intermediate, action)\n        : intermediate;\n      return final;\n    };\n  };\n\n  return {\n    get combinedReducer() {\n      const placeholderReducers = fromEntries(\n        Object.entries(preloadedState)\n          .filter(([key]) => !(key in reducers))\n          .map(([key, value]) => [key, <Reducer>(() => value)])\n      );\n      return rootReducer(\n        combineReducers({...placeholderReducers, ...reducers})\n      );\n    },\n\n    containsAll(newReducers: ReducersMapObject) {\n      const keys = Object.keys(newReducers);\n      return keys.every((key) => key in reducers);\n    },\n\n    add(newReducers: ReducersMapObject) {\n      Object.keys(newReducers)\n        .filter((key) => !(key in reducers))\n        .forEach((key) => (reducers[key] = newReducers[key]));\n    },\n\n    addCrossReducer(reducer: Reducer) {\n      crossReducer = reducer;\n    },\n  };\n}\n", "/**\n * A function that emits a side effect.\n */\nexport type Procedure = (...args: any[]) => any;\n\nexport type Options<TT> = {\n  isImmediate?: boolean;\n  maxWait?: number;\n  callback?: (data: TT) => void\n};\n\nexport interface DebouncedFunction<F extends Procedure> {\n  (this: ThisParameterType<F>, ...args: Parameters<F>): Promise<ReturnType<F>>;\n  cancel: (reason?: any) => void;\n}\n\nexport function debounce<F extends Procedure>(\n  func: F,\n  waitMilliseconds = 50,\n  options: Options<ReturnType<F>> = {}\n): DebouncedFunction<F> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  const isImmediate = options.isImmediate ?? false;\n  const callback = options.callback ?? false;\n  const maxWait = options.maxWait;\n  let lastInvokeTime = Date.now();\n\n  let promises: {\n    resolve: (x: ReturnType<F>) => void\n    reject: (reason?: any) => void\n  }[] = []\n\n  function nextInvokeTimeout() {\n    if (maxWait !== undefined) {\n      const timeSinceLastInvocation = Date.now() - lastInvokeTime;\n\n      if (timeSinceLastInvocation + waitMilliseconds >= maxWait) {\n        return maxWait - timeSinceLastInvocation;\n      }\n    }\n\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n    return new Promise<ReturnType<F>>((resolve, reject) => {\n      const invokeFunction = function () {\n        timeoutId = undefined;\n        lastInvokeTime = Date.now();\n        if (!isImmediate) {\n          const result = func.apply(context, args)\n          callback && callback(result);\n          promises.forEach(({ resolve }) => resolve(result))\n          promises = []\n        }\n      };\n\n      const shouldCallNow = isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n\n      if (shouldCallNow) {\n        const result = func.apply(context, args)\n        callback && callback(result);\n        return resolve(result)\n      }\n      promises.push({ resolve, reject })\n    })\n\n  };\n\n  debouncedFunction.cancel = function (reason?: any) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    promises.forEach(({ reject }) => reject(reason))\n    promises = []\n  };\n\n  return debouncedFunction;\n}\n", "import {Middleware} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\nimport {debounce} from 'ts-debounce';\nimport {updateBasicConfiguration} from '../features/configuration/configuration-actions';\nimport {ExpiredTokenError} from '../utils/errors';\n\nexport function createRenewAccessTokenMiddleware(\n  logger: Logger,\n  renewToken?: () => Promise<string>\n): Middleware {\n  let accessTokenRenewalsAttempts = 0;\n  const resetRenewalTriesAfterDelay = debounce(\n    () => (accessTokenRenewalsAttempts = 0),\n    500\n  );\n\n  return (store) => (next) => async (action) => {\n    const isThunk = typeof action === 'function';\n\n    if (!isThunk) {\n      return next(action);\n    }\n\n    const payload = await next(action);\n\n    if (!isExpiredTokenError(payload)) {\n      return payload;\n    }\n\n    if (typeof renewToken !== 'function') {\n      logger.warn(\n        'Unable to renew the expired token because a renew function was not provided. Please specify the #renewAccessToken option when initializing the engine.'\n      );\n      return payload;\n    }\n\n    if (accessTokenRenewalsAttempts >= 5) {\n      logger.warn(\n        'Attempted to renew the token but was not successful. Please check the #renewAccessToken function.'\n      );\n      return payload;\n    }\n\n    accessTokenRenewalsAttempts++;\n    resetRenewalTriesAfterDelay();\n\n    const accessToken = await attempt(renewToken);\n    store.dispatch(updateBasicConfiguration({accessToken}));\n    store.dispatch(action);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isExpiredTokenError(action: any) {\n  return action?.error?.name === new ExpiredTokenError().name;\n}\n\nasync function attempt(fn: () => Promise<string>) {\n  try {\n    return await fn();\n  } catch (e) {\n    return '';\n  }\n}\n", "import {\n  configureStore as configureStoreToolkit,\n  ReducersMapObject,\n  StateFromReducersMapObject,\n  Middleware,\n  Reducer,\n} from '@reduxjs/toolkit';\nimport {logActionMiddleware} from './logger-middlewares';\nimport {ThunkExtraArguments} from './thunk-extra-arguments';\n\ninterface ConfigureStoreOptions<Reducers extends ReducersMapObject> {\n  reducer: Reducer;\n  preloadedState?: StateFromReducersMapObject<Reducers>;\n  middlewares?: Middleware[];\n  thunkExtraArguments: ThunkExtraArguments;\n  name: string;\n}\n\nexport function configureStore<Reducers extends ReducersMapObject>({\n  reducer,\n  preloadedState,\n  middlewares = [],\n  thunkExtraArguments,\n  name,\n}: ConfigureStoreOptions<Reducers>) {\n  return configureStoreToolkit({\n    reducer,\n    preloadedState,\n    devTools: {\n      stateSanitizer: (state) =>\n        (state as {history?: unknown}).history\n          ? {...state, history: '<<OMIT>>'}\n          : state,\n      name,\n      shouldHotReload: false, // KIT-961 -> Redux dev tool + hot reloading interacts badly with replaceReducers mechanism.\n    },\n    middleware: (getDefaultMiddleware) => [\n      ...middlewares,\n      ...getDefaultMiddleware({thunk: {extraArgument: thunkExtraArguments}}),\n      logActionMiddleware(thunkExtraArguments.logger),\n    ],\n  });\n}\n\nexport type Store = ReturnType<typeof configureStore>;\n", "import {isNullOrUndefined, isUndefined} from '@coveo/bueno';\nimport {\n  AnyAction,\n  Dispatch,\n  ThunkDispatch,\n  Unsubscribe,\n  ReducersMapObject,\n  StateFromReducersMapObject,\n  Middleware,\n  Reducer,\n} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\nimport {\n  disableAnalytics,\n  enableAnalytics,\n  updateAnalyticsConfiguration,\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n  updateBasicConfiguration,\n} from '../features/configuration/configuration-actions';\nimport {versionReducer as version} from '../features/debug/version-slice';\nimport {SearchParametersState} from '../state/search-app-state';\nimport {matchCoveoOrganizationEndpointUrlAnyOrganization} from '../utils/url-utils';\nimport {doNotTrack} from '../utils/utils';\nimport {analyticsMiddleware} from './analytics-middleware';\nimport {configuration} from './common-reducers';\nimport {EngineConfiguration} from './engine-configuration';\nimport {instantlyCallableThunkActionMiddleware} from './instantly-callable-middleware';\nimport {LoggerOptions} from './logger';\nimport {logActionErrorMiddleware} from './logger-middlewares';\nimport {createReducerManager, ReducerManager} from './reducer-manager';\nimport {createRenewAccessTokenMiddleware} from './renew-access-token-middleware';\nimport {Store, configureStore} from './store';\nimport {ThunkExtraArguments} from './thunk-extra-arguments';\n\nconst coreReducers = {configuration, version};\ntype CoreState = StateFromReducersMapObject<typeof coreReducers> &\n  Partial<SearchParametersState>;\n\ntype EngineDispatch<\n  State,\n  ExtraArguments extends ThunkExtraArguments,\n> = ThunkDispatch<State, ExtraArguments, AnyAction> & Dispatch<AnyAction>;\n\nexport interface CoreEngine<\n  State extends object = {},\n  ExtraArguments extends ThunkExtraArguments = ThunkExtraArguments,\n> {\n  /**\n   * Dispatches an action directly. This is the only way to trigger a state change.\n   * Each headless controller dispatches its own actions.\n   *\n   * @param action An action supported by the headless engine.\n   *\n   * @returns For convenience, the action object that was just dispatched.\n   */\n  dispatch: EngineDispatch<State & CoreState, ExtraArguments>;\n  /**\n   * Adds a change listener. It will be called any time an action is\n   * dispatched, and some part of the state tree may potentially have changed.\n   * You may then access the new `state`.\n   *\n   * @param listener A callback to be invoked on every dispatch.\n   * @returns A function to remove this change listener.\n   */\n  subscribe(listener: () => void): Unsubscribe;\n  /**\n   * The complete headless state tree.\n   */\n  state: State & CoreState;\n  /**\n   * The redux store.\n   */\n  store: Store;\n  /**\n   * The logger instance used by headless.\n   * */\n  logger: Logger;\n  /**\n   * Adds the specified reducers to the store.\n   *\n   * @param reducers - An object containing the reducers to attach to the engine.\n   */\n  addReducers(reducers: ReducersMapObject): void;\n  /**\n   * Enable analytics tracking\n   */\n  enableAnalytics(): void;\n  /**\n   * Disable analytics tracking\n   */\n  disableAnalytics(): void;\n}\n\nexport interface EngineOptions<Reducers extends ReducersMapObject>\n  extends ExternalEngineOptions<StateFromReducersMapObject<Reducers>> {\n  /**\n   * Map object of reducers.\n   * A reducer is a pure function that takes the previous state and an action, and returns the next state.\n   * ```\n   * (previousState, action) => nextState\n   * ```\n   * [Redux documentation on reducers.](https://redux.js.org/glossary#reducer)\n   */\n  reducers: Reducers;\n  /**\n   * An optional cross reducer (aka: root reducer) that can be combined with the slice reducers.\n   *\n   * [Redux documentation on root reducers.](https://redux.js.org/usage/structuring-reducers/beyond-combinereducers)\n   */\n  crossReducer?: Reducer;\n}\n\nexport interface ExternalEngineOptions<State extends object> {\n  /**\n   * The global headless engine configuration options.\n   */\n  configuration: EngineConfiguration;\n\n  /**\n   * The initial headless state.\n   * You may optionally specify it to hydrate the state\n   * from the server in universal apps, or to restore a previously serialized\n   * user session.\n   */\n  preloadedState?: State;\n  /**\n   * List of additional middlewares.\n   * A middleware is a higher-order function that composes a dispatch function to return a new dispatch function.\n   * It is useful for logging actions, performing side effects like routing, or turning an asynchronous API call into a series of synchronous actions.\n   *\n   * @example\n   * ```\n   * type MiddlewareAPI = { dispatch: Dispatch, getState: () => State }\n   * type Middleware = (api: MiddlewareAPI) => (next: Dispatch) => Dispatch\n   * ```\n   * [Redux documentation on middlewares.](https://redux.js.org/glossary#middleware)\n   */\n  middlewares?: Middleware<{}, State>[];\n  /**\n   * The logger options.\n   */\n  loggerOptions?: LoggerOptions;\n}\n\nfunction getUpdateAnalyticsConfigurationPayload(\n  options: EngineOptions<ReducersMapObject>,\n  logger: Logger\n): UpdateAnalyticsConfigurationActionCreatorPayload | null {\n  const apiBaseUrl =\n    options.configuration.organizationEndpoints?.analytics || undefined;\n  const {analyticsClientMiddleware: _, ...payload} =\n    options.configuration.analytics ?? {};\n\n  const payloadWithURL = {\n    ...payload,\n    nextApiBaseUrl: `${apiBaseUrl}/rest/organizations/${options.configuration.organizationId}/events/v1`,\n    apiBaseUrl,\n  };\n\n  if (doNotTrack()) {\n    logger.info('Analytics disabled since doNotTrack is active.');\n    return {\n      ...payloadWithURL,\n      enabled: false,\n    };\n  }\n\n  return payloadWithURL;\n}\n\nexport function buildEngine<\n  Reducers extends ReducersMapObject,\n  ExtraArguments extends ThunkExtraArguments,\n>(\n  options: EngineOptions<Reducers>,\n  thunkExtraArguments: ExtraArguments\n): CoreEngine<StateFromReducersMapObject<Reducers>, ExtraArguments> {\n  const engine = buildCoreEngine(options, thunkExtraArguments);\n  const {accessToken, organizationId} = options.configuration;\n  const {organizationEndpoints} = options.configuration;\n  const platformUrl =\n    organizationEndpoints?.platform || options.configuration.platformUrl;\n\n  if (shouldWarnAboutPlatformURL(options)) {\n    engine.logger.warn(\n      `The \\`platformUrl\\` (${options.configuration.platformUrl}) option will be deprecated in the next major version. Consider using the \\`organizationEndpoints\\` option instead. See [Organization endpoints](https://docs.coveo.com/en/mcc80216).`\n    );\n  }\n\n  if (shouldWarnAboutOrganizationEndpoints(options)) {\n    // @v3 make organizationEndpoints the default.\n    engine.logger.warn(\n      'The `organizationEndpoints` options was not explicitly set in the Headless engine configuration. Coveo recommends setting this option, as it has resiliency benefits and simplifies the overall configuration for multi-region deployments. See [Organization endpoints](https://docs.coveo.com/en/mcc80216).'\n    );\n  } else if (\n    shouldWarnAboutMismatchBetweenOrganizationIDAndOrganizationEndpoints(\n      options\n    )\n  ) {\n    engine.logger.warn(\n      `There is a mismatch between the \\`organizationId\\` option (${options.configuration.organizationId}) and the organization configured in the \\`organizationEndpoints\\` option (${options.configuration.organizationEndpoints?.platform}). This could lead to issues that are complex to troubleshoot. Please make sure both values match.`\n    );\n  }\n\n  engine.dispatch(\n    updateBasicConfiguration({\n      accessToken,\n      organizationId,\n      platformUrl,\n    })\n  );\n\n  const analyticsPayload = getUpdateAnalyticsConfigurationPayload(\n    options,\n    engine.logger\n  );\n  if (analyticsPayload) {\n    engine.dispatch(updateAnalyticsConfiguration(analyticsPayload));\n  }\n\n  return engine;\n}\n\nfunction buildCoreEngine<\n  Reducers extends ReducersMapObject,\n  ExtraArguments extends ThunkExtraArguments,\n>(\n  options: EngineOptions<Reducers>,\n  thunkExtraArguments: ExtraArguments\n): CoreEngine<StateFromReducersMapObject<Reducers>, ExtraArguments> {\n  const {reducers} = options;\n  const reducerManager = createReducerManager(\n    {...coreReducers, ...reducers},\n    options.preloadedState ?? {}\n  );\n  if (options.crossReducer) {\n    reducerManager.addCrossReducer(options.crossReducer);\n  }\n  const logger = thunkExtraArguments.logger;\n  const store = createStore(options, thunkExtraArguments, reducerManager);\n\n  return {\n    addReducers(reducers: ReducersMapObject) {\n      if (reducerManager.containsAll(reducers)) {\n        return;\n      }\n\n      reducerManager.add(reducers);\n      store.replaceReducer(reducerManager.combinedReducer);\n    },\n\n    dispatch: store.dispatch,\n\n    subscribe: store.subscribe,\n\n    enableAnalytics() {\n      store.dispatch(enableAnalytics());\n    },\n\n    disableAnalytics() {\n      store.dispatch(disableAnalytics());\n    },\n\n    get state() {\n      return store.getState();\n    },\n\n    logger,\n\n    store,\n  };\n}\n\nfunction createStore<\n  Reducers extends ReducersMapObject,\n  ExtraArguments extends ThunkExtraArguments,\n>(\n  options: EngineOptions<Reducers>,\n  thunkExtraArguments: ExtraArguments,\n  reducerManager: ReducerManager\n) {\n  const {preloadedState, configuration} = options;\n  const name = configuration.name || 'coveo-headless';\n  const middlewares = createMiddleware(options, thunkExtraArguments.logger);\n\n  return configureStore({\n    preloadedState,\n    reducer: reducerManager.combinedReducer,\n    middlewares,\n    thunkExtraArguments,\n    name,\n  });\n}\n\nfunction createMiddleware<Reducers extends ReducersMapObject>(\n  options: EngineOptions<Reducers>,\n  logger: Logger\n) {\n  const {renewAccessToken} = options.configuration;\n  const renewTokenMiddleware = createRenewAccessTokenMiddleware(\n    logger,\n    renewAccessToken\n  );\n\n  return [\n    instantlyCallableThunkActionMiddleware,\n    renewTokenMiddleware,\n    logActionErrorMiddleware(logger),\n    analyticsMiddleware,\n  ].concat(options.middlewares || []);\n}\n\nfunction shouldWarnAboutOrganizationEndpoints(\n  options: EngineOptions<ReducersMapObject>\n) {\n  return isUndefined(options.configuration.organizationEndpoints);\n}\n\nfunction shouldWarnAboutPlatformURL(options: EngineOptions<ReducersMapObject>) {\n  return (\n    !isNullOrUndefined(options.configuration.platformUrl) ||\n    isNullOrUndefined(options.configuration.organizationEndpoints?.platform)\n  );\n}\n\nfunction shouldWarnAboutMismatchBetweenOrganizationIDAndOrganizationEndpoints(\n  options: EngineOptions<ReducersMapObject>\n) {\n  const {platform} = options.configuration.organizationEndpoints!;\n\n  if (isUndefined(platform)) {\n    return false;\n  }\n\n  const match = matchCoveoOrganizationEndpointUrlAnyOrganization(platform);\n  return match && match.organizationId !== options.configuration.organizationId;\n}\n", "import pino, {LevelWithSilent, LogEvent} from 'pino';\n\nexport type LogLevel = LevelWithSilent;\n\nexport interface LoggerOptions {\n  /**\n   * By default, is set to `warn`.\n   */\n  level?: LogLevel;\n  /**\n   * Changes the shape of the log object. This function will be called every time one of the log methods (such as `.info`) is called.\n   * All arguments passed to the log method, except the message, will be pass to this function. By default it does not change the shape of the log object.\n   */\n  logFormatter?: (object: {}) => {};\n  /**\n   * Function which will be called after writing the log message in the browser.\n   *\n   * @deprecated This option is deprecated and will be removed in a future version.\n   */\n  browserPostLogHook?: (level: LogLevel, logEvent: LogEvent) => void;\n}\n\nexport function buildLogger(options: LoggerOptions | undefined) {\n  return pino({\n    name: '@coveo/headless',\n    level: options?.level || 'warn',\n    formatters: {\n      log: options?.logFormatter,\n    },\n  });\n}\n", "import {AnalyticsClientSendEventHook} from 'coveo.analytics';\nimport {Logger} from 'pino';\nimport {GeneratedAnswerAPIClient} from '../api/generated-answer/generated-answer-client';\nimport {PreprocessRequest} from '../api/preprocess-request';\nimport {NoopPreprocessRequest} from '../api/preprocess-request';\nimport {validatePayloadAndThrow} from '../utils/validate-payload';\nimport {EngineConfiguration} from './engine-configuration';\n\nexport interface ClientThunkExtraArguments<T, K = GeneratedAnswerAPIClient>\n  extends ThunkExtraArguments {\n  apiClient: T;\n  streamingClient?: K;\n}\n\nexport interface ThunkExtraArguments {\n  preprocessRequest?: PreprocessRequest;\n  analyticsClientMiddleware: AnalyticsClientSendEventHook;\n  logger: Logger;\n  validatePayload: typeof validatePayloadAndThrow;\n}\n\nexport function buildThunkExtraArguments(\n  configuration: EngineConfiguration,\n  logger: Logger\n): ThunkExtraArguments {\n  const analyticsClientMiddleware = getAnalyticsClientMiddleware(configuration);\n  const validatePayload = validatePayloadAndThrow;\n  const preprocessRequest = getPreprocessRequest(configuration);\n\n  return {\n    analyticsClientMiddleware,\n    validatePayload,\n    preprocessRequest,\n    logger,\n  };\n}\n\nfunction getAnalyticsClientMiddleware(\n  configuration: EngineConfiguration\n): AnalyticsClientSendEventHook {\n  const {analytics} = configuration;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const NoopAnalyticsMiddleware = (_: string, p: any) => p;\n  return analytics?.analyticsClientMiddleware || NoopAnalyticsMiddleware;\n}\n\nfunction getPreprocessRequest(configuration: EngineConfiguration) {\n  return configuration.preprocessRequest || NoopPreprocessRequest;\n}\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createReducer, Reducer} from '@reduxjs/toolkit';\nimport {atob as atobShim} from 'abab';\nimport P, {Logger} from 'pino';\nimport {SearchAppState} from '../..';\nimport {\n  updateAnalyticsConfiguration,\n  updateBasicConfiguration,\n  updateSearchConfiguration,\n} from '../../features/configuration/configuration-actions';\nimport {getConfigurationInitialState} from '../../features/configuration/configuration-state';\nimport {setPipeline} from '../../features/pipeline/pipeline-actions';\nimport {getPipelineInitialState} from '../../features/pipeline/pipeline-state';\nimport {setSearchHub} from '../../features/search-hub/search-hub-actions';\nimport {getSearchHubInitialState} from '../../features/search-hub/search-hub-state';\n\nexport interface CoveoJSONWebToken {\n  searchHub?: string;\n  pipeline?: string;\n  userDisplayName?: string;\n}\n\nconst possiblyWarnOnMismatch = (\n  token: CoveoJSONWebToken,\n  tokenProp: keyof CoveoJSONWebToken,\n  stateProp: string,\n  defaultProp: string,\n  payload: string | undefined,\n  logger: Logger\n) => {\n  const tokenValue = token[tokenProp];\n  if (isNullOrUndefined(tokenValue)) {\n    return;\n  }\n\n  if (isNullOrUndefined(payload)) {\n    return;\n  }\n\n  if (payload === tokenValue) {\n    return;\n  }\n\n  if (payload === defaultProp) {\n    return;\n  }\n\n  logger.warn(\n    `Mismatch on access token (JWT Token) ${tokenProp} and engine configuration.`\n  );\n  logger.warn(\n    `To remove this warning, make sure that access token value [${tokenValue}] matches engine configuration value [${stateProp}]`\n  );\n};\n\nconst shouldReconcileValues = (\n  tokenValue: string | undefined,\n  stateValue: string\n): boolean => {\n  if (isNullOrUndefined(tokenValue)) {\n    return false;\n  }\n\n  if (stateValue === tokenValue) {\n    return false;\n  }\n\n  return true;\n};\n\nconst decodeJSONWebToken = (token: string): CoveoJSONWebToken | false => {\n  try {\n    const atobImplementation = typeof atob !== 'undefined' ? atob : atobShim;\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const base64decoded = atobImplementation(base64);\n    if (!base64decoded) {\n      return false;\n    }\n    const jsonPayload = decodeURIComponent(\n      base64decoded\n        .split('')\n        .map((character) => {\n          return '%' + ('00' + character.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n\n    return JSON.parse(jsonPayload) as CoveoJSONWebToken;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst updateSearchHub = (\n  jwt: CoveoJSONWebToken,\n  state: SearchAppState\n): SearchAppState => {\n  if (shouldReconcileValues(jwt.searchHub, state.searchHub)) {\n    state.searchHub = jwt.searchHub!;\n  }\n  return state;\n};\n\nconst handleMismatchOnSearchHub = (\n  jwt: CoveoJSONWebToken,\n  state: SearchAppState,\n  payload: string | undefined,\n  logger: P.Logger\n): SearchAppState => {\n  possiblyWarnOnMismatch(\n    jwt,\n    'searchHub',\n    state.searchHub,\n    getSearchHubInitialState(),\n    payload,\n    logger\n  );\n  return updateSearchHub(jwt, state);\n};\n\nconst updatePipeline = (\n  jwt: CoveoJSONWebToken,\n  state: SearchAppState\n): SearchAppState => {\n  if (shouldReconcileValues(jwt.pipeline, state.pipeline)) {\n    state.pipeline = jwt.pipeline!;\n  }\n  return state;\n};\n\nconst handleMismatchOnPipeline = (\n  jwt: CoveoJSONWebToken,\n  state: SearchAppState,\n  payload: string | undefined,\n  logger: P.Logger\n): SearchAppState => {\n  possiblyWarnOnMismatch(\n    jwt,\n    'pipeline',\n    state.pipeline,\n    getPipelineInitialState(),\n    payload,\n    logger\n  );\n  return updatePipeline(jwt, state);\n};\n\nconst updateUserDisplayName = (\n  jwt: CoveoJSONWebToken,\n  state: SearchAppState\n): SearchAppState => {\n  if (\n    shouldReconcileValues(\n      jwt.userDisplayName,\n      state.configuration.analytics.userDisplayName\n    )\n  ) {\n    state.configuration.analytics.userDisplayName = jwt.userDisplayName!;\n  }\n  return state;\n};\n\nconst handleMismatchOnUserDisplayName = (\n  jwt: CoveoJSONWebToken,\n  state: SearchAppState,\n  payload: string | undefined,\n  logger: P.Logger\n): SearchAppState => {\n  possiblyWarnOnMismatch(\n    jwt,\n    'userDisplayName',\n    state.configuration.analytics.userDisplayName,\n    getConfigurationInitialState().analytics.userDisplayName,\n    payload,\n    logger\n  );\n  return updateUserDisplayName(jwt, state);\n};\n\nexport const jwtReducer: (logger: P.Logger) => Reducer = (logger) => {\n  return createReducer({} as SearchAppState, (builder) => {\n    builder\n      .addCase(setSearchHub, (state, action) => {\n        const jwt = decodeJSONWebToken(state.configuration.accessToken);\n        if (!jwt) {\n          return state;\n        }\n        return handleMismatchOnSearchHub(jwt, state, action.payload, logger);\n      })\n      .addCase(setPipeline, (state, action) => {\n        const jwt = decodeJSONWebToken(state.configuration.accessToken);\n        if (!jwt) {\n          return state;\n        }\n        return handleMismatchOnPipeline(jwt, state, action.payload, logger);\n      })\n      .addCase(updateBasicConfiguration, (state, action) => {\n        if (state.configuration.accessToken !== action.payload.accessToken) {\n          return state;\n        }\n        const {accessToken} = action.payload;\n        if (!accessToken) {\n          return state;\n        }\n        const jwt = decodeJSONWebToken(accessToken);\n        if (!jwt) {\n          return state;\n        }\n        return [updatePipeline, updateSearchHub, updateUserDisplayName].reduce(\n          (resultingState, updateProp) => updateProp(jwt, resultingState),\n          state\n        );\n      })\n      .addCase(updateSearchConfiguration, (state, action) => {\n        const jwt = decodeJSONWebToken(state.configuration.accessToken);\n        if (!jwt) {\n          return state;\n        }\n\n        const searchHubReconciled = handleMismatchOnSearchHub(\n          jwt,\n          state,\n          action.payload.searchHub,\n          logger\n        );\n        const pipelineReconciled = handleMismatchOnPipeline(\n          jwt,\n          searchHubReconciled,\n          action.payload?.pipeline,\n          logger\n        );\n        return pipelineReconciled;\n      })\n      .addCase(updateAnalyticsConfiguration, (state, action) => {\n        const jwt = decodeJSONWebToken(state.configuration.accessToken);\n        if (!jwt) {\n          return state;\n        }\n        return handleMismatchOnUserDisplayName(\n          jwt,\n          state,\n          action.payload.userDisplayName,\n          logger\n        );\n      });\n  });\n};\n", "import {\n  BooleanValue,\n  RecordValue,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {\n  AnalyticsClientSendEventHook,\n  IRuntimeEnvironment,\n} from 'coveo.analytics';\nimport {getOrganizationEndpoints} from '../api/platform-client';\nimport {PreprocessRequest} from '../api/preprocess-request';\nimport {requiredNonEmptyString} from '../utils/validate-payload';\n\n/**\n * The endpoints to use.\n *\n * For example: `https://orgid.org.coveo.com`\n *\n * The [getOrganizationEndpoints](https://github.com/coveo/ui-kit/blob/master/packages/headless/src/api/platform-client.ts) helper function can be useful to create the appropriate object.\n */\nexport interface CoreEngineOrganizationEndpoints {\n  /**\n   * The base platform endpoint.\n   *\n   * For example: `https://{orgid}.org.coveo.com`\n   */\n  platform: string;\n  /**\n   * The base analytics service endpoint.\n   *\n   * For example: `https://{orgid}.analytics.org.coveo.com`\n   */\n  analytics: string;\n}\n\n/**\n * The global headless engine configuration options.\n */\nexport interface EngineConfiguration<\n  OrganizationEndpoints extends\n    CoreEngineOrganizationEndpoints = CoreEngineOrganizationEndpoints,\n> {\n  /**\n   * The unique identifier of the target Coveo Cloud organization (e.g., `mycoveocloudorganizationg8tp8wu3`)\n   */\n  organizationId: string;\n  /**\n   * The access token to use to authenticate requests against the Coveo Cloud endpoints. Typically, this will be an API key or search token that grants the privileges to execute queries and push usage analytics data in the target Coveo Cloud organization.\n   */\n  accessToken: string;\n  /**\n   * A function that fetches a new access token. The function must return a Promise that resolves to a string (the new access token).\n   */\n  renewAccessToken?: () => Promise<string>;\n  /**\n   * Allows for augmenting a Platform request before it is sent.\n   * @param request Request to be augmented\n   * @param clientOrigin The origin of the client, can be \"analyticsFetch\", \"analyticsBeacon\" or \"searchApiFetch\"\n   *\n   * @returns Augmented request\n   */\n  preprocessRequest?: PreprocessRequest;\n  /**\n   * The Platform URL to use. (e.g., https://platform.cloud.coveo.com)\n   * The platformUrl() helper method can be useful to know what url is available.\n   *\n   * @deprecated Coveo recommends using organizationEndpoints instead, since it has resiliency benefits and simplifies the overall configuration for multi-region deployments. See [Organization endpoints](https://docs.coveo.com/en/mcc80216).\n   */\n  platformUrl?: string;\n  /**\n   * The Engine name (e.g., myEngine). Specifying your Engine name will help in debugging when using an application with multiple Redux stores.\n   * @defaultValue 'coveo-headless'\n   */\n  name?: string;\n  /**\n   * Allows configuring options related to analytics.\n   */\n  analytics?: AnalyticsConfiguration;\n  /**\n   * The endpoints to use.\n   *\n   * For example: `https://orgid.org.coveo.com`\n   *\n   * The [getOrganizationEndpoints](https://github.com/coveo/ui-kit/blob/master/packages/headless/src/api/platform-client.ts) helper function can be useful to create the appropriate object.\n   *\n   * We recommend using this option, since it has resiliency benefits and simplifies the overall configuration for multi-region deployments.  See [Organization endpoints](https://docs.coveo.com/en/mcc80216).\n   */\n  organizationEndpoints?: OrganizationEndpoints;\n}\n\n/**\n * The analytics configuration options.\n */\nexport interface AnalyticsConfiguration {\n  /**\n   * Specifies if usage analytics tracking should be enabled.\n   *\n   * By default, all analytics events will be logged.\n   */\n  enabled?: boolean;\n  /**\n   * Sets the Origin Context dimension on the analytic events.\n   *\n   * You can use this dimension to specify the context of your application.\n   * The possible values are \"Search\", \"InternalSearch\", and \"CommunitySearch\".\n   *\n   * The default value is `Search`.\n   */\n  originContext?: string;\n  /**\n   * Origin level 2 is a usage analytics event metadata whose value should typically be the name/identifier of the tab from which the usage analytics event originates.\n   *\n   * When logging a Search usage analytics event, originLevel2 should always be set to the same value as the corresponding tab (parameter) Search API query parameter so Coveo Machine Learning models function properly, and usage analytics reports and dashboards are coherent.\n   *\n   * This value is optional, and will automatically try to resolve itself from the tab search parameter.\n   */\n  originLevel2?: string;\n  /**\n   * Origin level 3 is a usage analytics event metadata whose value should typically be the URL of the page that linked to the search interface that\u2019s making the request.\n   *\n   * When logging a Search usage analytics event, originLevel3 should always be set to the same value as the corresponding referrer Search API query parameter so usage analytics reports and dashboards are coherent.\n   *\n   * This value is optional, and will automatically try to resolve itself from the referrer search parameter.\n   */\n  originLevel3?: string;\n  /**\n   * analyticsClientMiddleware allows to hook into an analytics event payload before it is sent to the Coveo platform.\n   */\n  analyticsClientMiddleware?: AnalyticsClientSendEventHook;\n  /**\n   * Optional analytics runtime environment, this is needed for analytics to work correctly if you're running outside of a browser.\n   * See https://github.com/coveo/coveo.analytics.js for more info.\n   */\n  runtimeEnvironment?: AnalyticsRuntimeEnvironment;\n  /**\n   * Whether analytics events should be logged anonymously.\n   * If set to true, the Usage Analytics Write API will not extract the name and userDisplayName, if present, from the search token\n   */\n  anonymous?: boolean;\n  /**\n   *  The name of the device that the end user is using. It should be explicitly configured in the context of a native mobile app.\n   */\n  deviceId?: string;\n  /**\n   * Specifies the user display name for the usage analytics logs.\n   */\n  userDisplayName?: string;\n  /**\n   * Specifies the URL of the current page or component.\n   */\n  documentLocation?: string;\n  /**\n   * TBD\n   * @internal\n   */\n  trackingId?: string;\n  analyticsMode?: 'legacy' | 'next';\n}\n\nexport type AnalyticsRuntimeEnvironment = IRuntimeEnvironment;\n\nexport const engineConfigurationDefinitions: SchemaDefinition<EngineConfiguration> =\n  {\n    organizationId: requiredNonEmptyString,\n    accessToken: requiredNonEmptyString,\n    platformUrl: new StringValue({\n      required: false,\n      emptyAllowed: false,\n    }),\n    name: new StringValue({\n      required: false,\n      emptyAllowed: false,\n    }),\n    analytics: new RecordValue({\n      options: {\n        required: false,\n      },\n      values: {\n        enabled: new BooleanValue({\n          required: false,\n        }),\n        originContext: new StringValue({\n          required: false,\n        }),\n        originLevel2: new StringValue({\n          required: false,\n        }),\n        originLevel3: new StringValue({\n          required: false,\n        }),\n        analyticsMode: new StringValue<'legacy' | 'next'>({\n          constrainTo: ['legacy', 'next'],\n          required: false,\n        }),\n      },\n    }),\n  };\n\nexport function getSampleEngineConfiguration(): EngineConfiguration {\n  return {\n    organizationId: 'searchuisamples',\n    // deepcode ignore HardcodedNonCryptoSecret: Public key freely available for our documentation\n    accessToken: 'xx564559b1-0045-48e1-953c-3addd1ee4457',\n    organizationEndpoints: getOrganizationEndpoints('searchuisamples'),\n  };\n}\n", "import {ArrayValue, RecordValue, Schema, StringValue} from '@coveo/bueno';\nimport {\n  PostprocessFacetSearchResponseMiddleware,\n  PostprocessQuerySuggestResponseMiddleware,\n  PostprocessSearchResponseMiddleware,\n} from '../../api/search/search-api-client-middleware';\nimport {\n  nonEmptyString,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\nimport {\n  engineConfigurationDefinitions,\n  EngineConfiguration,\n  getSampleEngineConfiguration,\n  CoreEngineOrganizationEndpoints,\n} from '../engine-configuration';\n\nexport interface SearchEngineOrganizationEndpoints\n  extends CoreEngineOrganizationEndpoints {\n  search?: string;\n}\n\n/**\n * The search engine configuration.\n */\nexport interface SearchEngineConfiguration\n  extends EngineConfiguration<SearchEngineOrganizationEndpoints> {\n  /**\n   * The global headless engine configuration options specific to the SearchAPI.\n   */\n  search?: SearchConfigurationOptions;\n}\n\nexport interface SearchConfigurationOptions {\n  /**\n   * Specifies the name of the query pipeline to use for the query. If not specified, the default query pipeline will be used.\n   */\n  pipeline?: string;\n  /**\n   * The first level of origin of the request, typically the identifier of the graphical search interface from which the request originates.\n   * Coveo Machine Learning models use this information to provide contextually relevant output.\n   * Notes:\n   *    This parameter will be overridden if the search request is authenticated by a search token that enforces a specific searchHub.\n   *    When logging a Search usage analytics event for a query, the originLevel1 field of that event should be set to the value of the searchHub search request parameter.\n   */\n  searchHub?: string;\n  /**\n   * The locale of the current user. Must comply with IETF\u2019s BCP 47 definition: https://www.rfc-editor.org/rfc/bcp/bcp47.txt.\n   *\n   * Notes:\n   *  Coveo Machine Learning models use this information to provide contextually relevant output.\n   *  Moreover, this information can be referred to in query expressions and QPL statements by using the $locale object.\n   */\n  locale?: string;\n  /**\n   * The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) identifier of the time zone to use to correctly interpret dates in the query expression, facets, and result items.\n   * By default, the timezone will be [guessed](https://day.js.org/docs/en/timezone/guessing-user-timezone).\n   *\n   * @example\n   * America/Montreal\n   */\n  timezone?: string;\n  /**\n   * Specifies the name of the authentication providers to use to perform queries.\n   *\n   * See [SAML Authentication](https://docs.coveo.com/en/91/).\n   */\n  authenticationProviders?: string[];\n  /**\n   * Allows for augmenting a search response before the state is updated.\n   */\n  preprocessSearchResponseMiddleware?: PostprocessSearchResponseMiddleware;\n  /**\n   * Allows for augmenting a facet-search response before the state is updated.\n   */\n  preprocessFacetSearchResponseMiddleware?: PostprocessFacetSearchResponseMiddleware;\n  /**\n   * Allows for augmenting a query-suggest response before the state is updated.\n   */\n  preprocessQuerySuggestResponseMiddleware?: PostprocessQuerySuggestResponseMiddleware;\n}\n\nexport const searchEngineConfigurationSchema =\n  new Schema<SearchEngineConfiguration>({\n    ...engineConfigurationDefinitions,\n    search: new RecordValue({\n      options: {\n        required: false,\n      },\n      values: {\n        pipeline: new StringValue({required: false, emptyAllowed: true}),\n        searchHub: nonEmptyString,\n        locale: nonEmptyString,\n        timezone: nonEmptyString,\n        authenticationProviders: new ArrayValue({\n          required: false,\n          each: requiredNonEmptyString,\n        }),\n      },\n    }),\n  });\n\n/**\n * Creates a sample search engine configuration.\n *\n * @returns The sample search engine configuration.\n */\nexport function getSampleSearchEngineConfiguration(): SearchEngineConfiguration {\n  return {\n    ...getSampleEngineConfiguration(),\n    search: {\n      searchHub: 'default',\n    },\n  };\n}\n", "import {StateFromReducersMapObject} from '@reduxjs/toolkit';\nimport {Logger} from 'pino';\nimport {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {GeneratedAnswerAPIClient} from '../../api/generated-answer/generated-answer-client';\nimport {NoopPreprocessRequest} from '../../api/preprocess-request';\nimport {SearchAPIClient} from '../../api/search/search-api-client';\nimport {\n  NoopPostprocessFacetSearchResponseMiddleware,\n  NoopPostprocessQuerySuggestResponseMiddleware,\n  NoopPostprocessSearchResponseMiddleware,\n} from '../../api/search/search-api-client-middleware';\nimport {\n  logInterfaceLoad,\n  logOmniboxFromLink,\n  logSearchFromLink,\n} from '../../features/analytics/analytics-actions';\nimport {SearchAction} from '../../features/analytics/analytics-utils';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {\n  updateSearchConfiguration,\n  UpdateSearchConfigurationActionCreatorPayload,\n} from '../../features/configuration/configuration-actions';\nimport {debugReducer as debug} from '../../features/debug/debug-slice';\nimport {pipelineReducer as pipeline} from '../../features/pipeline/pipeline-slice';\nimport {searchHubReducer as searchHub} from '../../features/search-hub/search-hub-slice';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {firstSearchExecutedSelector} from '../../features/search/search-selectors';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {StandaloneSearchBoxAnalytics} from '../../features/standalone-search-box-set/standalone-search-box-set-state';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {\n  buildEngine,\n  CoreEngine,\n  EngineOptions,\n  ExternalEngineOptions,\n} from '../engine';\nimport {buildLogger} from '../logger';\nimport {SearchThunkExtraArguments} from '../search-thunk-extra-arguments';\nimport {buildThunkExtraArguments} from '../thunk-extra-arguments';\nimport {jwtReducer} from './jwt-reducer';\nimport {\n  SearchEngineConfiguration,\n  SearchConfigurationOptions,\n  searchEngineConfigurationSchema,\n  getSampleSearchEngineConfiguration,\n} from './search-engine-configuration';\n\nexport type {SearchEngineConfiguration, SearchConfigurationOptions};\nexport {getSampleSearchEngineConfiguration};\n\nconst searchEngineReducers = {debug, pipeline, searchHub, search};\ntype SearchEngineReducers = typeof searchEngineReducers;\ntype SearchEngineState = StateFromReducersMapObject<SearchEngineReducers> &\n  Partial<SearchAppState>;\n\nfunction getUpdateSearchConfigurationPayload(\n  options: SearchEngineOptions\n): UpdateSearchConfigurationActionCreatorPayload {\n  const search = options.configuration.search;\n  const apiBaseUrl =\n    options.configuration.organizationEndpoints?.search || undefined;\n\n  const payloadWithURL = {\n    ...search,\n    apiBaseUrl,\n  };\n\n  return payloadWithURL;\n}\n\n/**\n * The engine for powering search experiences.\n */\nexport interface SearchEngine<State extends object = {}>\n  extends CoreEngine<State & SearchEngineState, SearchThunkExtraArguments> {\n  /**\n   * Executes the first search.\n   *\n   * @param analyticsEvent - The analytics event to log in association with the first search. If unspecified, `logInterfaceLoad` will be used.\n   */\n  executeFirstSearch(analyticsEvent?: SearchAction): void;\n\n  /**\n   * Executes the first search, and logs the analytics event that triggered a redirection from a standalone search box.\n   *\n   * @param analytics - The standalone search box analytics data.\n   */\n  executeFirstSearchAfterStandaloneSearchBoxRedirect(\n    analytics: StandaloneSearchBoxAnalytics\n  ): void;\n}\n\n/**\n * The search engine options.\n */\nexport interface SearchEngineOptions\n  extends ExternalEngineOptions<SearchEngineState> {\n  /**\n   * The search engine configuration options.\n   */\n  configuration: SearchEngineConfiguration;\n}\n\n/**\n * Creates a search engine instance.\n *\n * @param options - The search engine options.\n * @returns A search engine instance.\n */\nexport function buildSearchEngine(options: SearchEngineOptions): SearchEngine {\n  const logger = buildLogger(options.loggerOptions);\n  validateConfiguration(options.configuration, logger);\n\n  const searchAPIClient = createSearchAPIClient(options.configuration, logger);\n  const generatedAnswerClient = createGeneratedAnswerAPIClient(logger);\n\n  const thunkArguments: SearchThunkExtraArguments = {\n    ...buildThunkExtraArguments(options.configuration, logger),\n    apiClient: searchAPIClient,\n    streamingClient: generatedAnswerClient,\n  };\n\n  const augmentedOptions: EngineOptions<SearchEngineReducers> = {\n    ...options,\n    reducers: searchEngineReducers,\n    crossReducer: jwtReducer(logger),\n  };\n\n  const engine = buildEngine(augmentedOptions, thunkArguments);\n\n  const search = getUpdateSearchConfigurationPayload(options);\n\n  if (search) {\n    engine.dispatch(updateSearchConfiguration(search));\n  }\n\n  return {\n    ...engine,\n\n    get state() {\n      return engine.state;\n    },\n\n    executeFirstSearch(analyticsEvent = logInterfaceLoad()) {\n      if (firstSearchExecutedSelector(engine.state)) {\n        return;\n      }\n\n      const action = executeSearch({\n        legacy: analyticsEvent,\n        next: {\n          actionCause: SearchPageEvents.interfaceLoad,\n          getEventExtraPayload: (state) =>\n            new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n        },\n      });\n      engine.dispatch(action);\n    },\n\n    executeFirstSearchAfterStandaloneSearchBoxRedirect(\n      analytics: StandaloneSearchBoxAnalytics\n    ) {\n      const {cause, metadata} = analytics;\n\n      if (firstSearchExecutedSelector(engine.state)) {\n        return;\n      }\n\n      const isOmniboxFromLink = metadata && cause === 'omniboxFromLink';\n\n      const action = executeSearch({\n        legacy: isOmniboxFromLink\n          ? logOmniboxFromLink(metadata)\n          : logSearchFromLink(),\n        next: {\n          actionCause: isOmniboxFromLink\n            ? SearchPageEvents.omniboxFromLink\n            : SearchPageEvents.searchFromLink,\n          getEventExtraPayload: isOmniboxFromLink\n            ? (state) =>\n                new SearchAnalyticsProvider(\n                  () => state\n                ).getOmniboxFromLinkMetadata(metadata)\n            : (state) =>\n                new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n        },\n      });\n      engine.dispatch(action);\n    },\n  };\n}\n\nfunction validateConfiguration(\n  configuration: SearchEngineConfiguration,\n  logger: Logger\n) {\n  try {\n    searchEngineConfigurationSchema.validate(configuration);\n  } catch (error) {\n    logger.error(error as Error, 'Search engine configuration error');\n    throw error;\n  }\n}\n\nfunction createSearchAPIClient(\n  configuration: SearchEngineConfiguration,\n  logger: Logger\n) {\n  const {search} = configuration;\n  return new SearchAPIClient({\n    logger,\n    preprocessRequest: configuration.preprocessRequest || NoopPreprocessRequest,\n    postprocessSearchResponseMiddleware:\n      search?.preprocessSearchResponseMiddleware ||\n      NoopPostprocessSearchResponseMiddleware,\n    postprocessFacetSearchResponseMiddleware:\n      search?.preprocessFacetSearchResponseMiddleware ||\n      NoopPostprocessFacetSearchResponseMiddleware,\n    postprocessQuerySuggestResponseMiddleware:\n      search?.preprocessQuerySuggestResponseMiddleware ||\n      NoopPostprocessQuerySuggestResponseMiddleware,\n  });\n}\n\nfunction createGeneratedAnswerAPIClient(logger: Logger) {\n  return new GeneratedAnswerAPIClient({\n    logger,\n  });\n}\n", "/**\n * Utility functions to be used for Server Side Rendering.\n */\nimport {AnyAction} from '@reduxjs/toolkit';\nimport {Controller} from '../../controllers';\nimport {SearchAction} from '../../features/analytics/analytics-utils';\nimport {createWaitForActionMiddleware} from '../../utils/utils';\nimport {\n  buildControllerDefinitions,\n  composeFunction,\n  createStaticState,\n} from '../ssr-engine/common';\nimport {\n  ControllerDefinitionsMap,\n  InferControllerPropsMapFromDefinitions,\n} from '../ssr-engine/types/common';\nimport {\n  EngineDefinition,\n  EngineDefinitionOptions,\n} from '../ssr-engine/types/core-engine';\nimport {\n  SearchEngine,\n  SearchEngineOptions,\n  buildSearchEngine,\n} from './search-engine';\n\n/**\n * @internal\n */\nexport interface SSRSearchEngine extends SearchEngine {\n  waitForSearchCompletedAction(): Promise<SearchCompletedAction>;\n}\n\n/**\n * @internal\n */\nexport type SearchEngineDefinition<\n  TControllers extends ControllerDefinitionsMap<SSRSearchEngine, Controller>,\n> = EngineDefinition<SSRSearchEngine, TControllers, SearchEngineOptions>;\n\n/**\n * @internal\n */\nexport type SearchEngineDefinitionOptions<\n  TControllers extends ControllerDefinitionsMap<SSRSearchEngine, Controller>,\n> = EngineDefinitionOptions<SearchEngineOptions, TControllers>;\n\nexport type SearchCompletedAction = ReturnType<\n  SearchAction['fulfilled' | 'rejected']\n>;\n\nfunction isSearchCompletedAction(\n  action: AnyAction\n): action is SearchCompletedAction {\n  return /^search\\/executeSearch\\/(fulfilled|rejected)$/.test(action.type);\n}\n\nfunction buildSSRSearchEngine(options: SearchEngineOptions): SSRSearchEngine {\n  const {middleware, promise} = createWaitForActionMiddleware(\n    isSearchCompletedAction\n  );\n  const searchEngine = buildSearchEngine({\n    ...options,\n    middlewares: [...(options.middlewares ?? []), middleware],\n  });\n  return {\n    ...searchEngine,\n    get state() {\n      return searchEngine.state;\n    },\n    waitForSearchCompletedAction() {\n      return promise;\n    },\n  };\n}\n\n/**\n * @internal\n *\n * Initializes a Search engine definition in SSR with given controllers definitions and search engine config.\n * @returns Three utility functions to fetch initial state of engine in SSR, hydrate the state in CSR\n *  and a build function that can be used for edge cases requiring more control.\n */\nexport function defineSearchEngine<\n  TControllerDefinitions extends ControllerDefinitionsMap<\n    SearchEngine,\n    Controller\n  >,\n>({\n  controllers: controllerDefinitions,\n  ...engineOptions\n}: SearchEngineDefinitionOptions<TControllerDefinitions>): SearchEngineDefinition<TControllerDefinitions> {\n  type Definition = SearchEngineDefinition<TControllerDefinitions>;\n  type BuildFunction = Definition['build'];\n  type FetchStaticStateFunction = Definition['fetchStaticState'];\n  type HydrateStaticStateFunction = Definition['hydrateStaticState'];\n  type FetchStaticStateFromBuildResultFunction =\n    FetchStaticStateFunction['fromBuildResult'];\n  type HydrateStaticStateFromBuildResultFunction =\n    HydrateStaticStateFunction['fromBuildResult'];\n  type BuildParameters = Parameters<BuildFunction>;\n  type FetchStaticStateParameters = Parameters<FetchStaticStateFunction>;\n  type HydrateStaticStateParameters = Parameters<HydrateStaticStateFunction>;\n  type FetchStaticStateFromBuildResultParameters =\n    Parameters<FetchStaticStateFromBuildResultFunction>;\n  type HydrateStaticStateFromBuildResultParameters =\n    Parameters<HydrateStaticStateFromBuildResultFunction>;\n\n  const build: BuildFunction = async (...[buildOptions]: BuildParameters) => {\n    const engine = buildSSRSearchEngine(\n      buildOptions?.extend\n        ? await buildOptions.extend(engineOptions)\n        : engineOptions\n    );\n    const controllers = buildControllerDefinitions({\n      definitionsMap: (controllerDefinitions ?? {}) as TControllerDefinitions,\n      engine,\n      propsMap: (buildOptions && 'controllers' in buildOptions\n        ? buildOptions.controllers\n        : {}) as InferControllerPropsMapFromDefinitions<TControllerDefinitions>,\n    });\n    return {\n      engine,\n      controllers,\n    };\n  };\n\n  const fetchStaticState: FetchStaticStateFunction = composeFunction(\n    async (...params: FetchStaticStateParameters) => {\n      const buildResult = await build(...params);\n      const staticState = await fetchStaticState.fromBuildResult({\n        buildResult,\n      });\n      return staticState;\n    },\n    {\n      fromBuildResult: async (\n        ...params: FetchStaticStateFromBuildResultParameters\n      ) => {\n        const [\n          {\n            buildResult: {engine, controllers},\n          },\n        ] = params;\n\n        engine.executeFirstSearch();\n        return createStaticState({\n          searchAction: await engine.waitForSearchCompletedAction(),\n          controllers,\n        });\n      },\n    }\n  );\n\n  const hydrateStaticState: HydrateStaticStateFunction = composeFunction(\n    async (...params: HydrateStaticStateParameters) => {\n      const buildResult = await build(...(params as BuildParameters));\n      const staticState = await hydrateStaticState.fromBuildResult({\n        buildResult,\n        searchAction: params[0]!.searchAction,\n      });\n      return staticState;\n    },\n    {\n      fromBuildResult: async (\n        ...params: HydrateStaticStateFromBuildResultParameters\n      ) => {\n        const [\n          {\n            buildResult: {engine, controllers},\n            searchAction,\n          },\n        ] = params;\n        engine.dispatch(searchAction);\n        await engine.waitForSearchCompletedAction();\n        return {engine, controllers};\n      },\n    }\n  );\n\n  return {\n    build,\n    fetchStaticState,\n    hydrateStaticState,\n  };\n}\n", "export interface RankingInformation {\n  /**\n   * The attributes of the document that contributed to its ranking.\n   * */\n  documentWeights: DocumentWeights | null;\n\n  /**\n   * The weight attributed to each term in the query.\n   */\n  termsWeight: TermWeightReport | null;\n\n  /**\n   * The sum of all weights.\n   */\n  totalWeight: number | null;\n\n  /**\n   * The weights applied by query ranking expressions.\n   */\n  qreWeights: QueryRankingExpressionWeights[];\n}\n\nexport interface DocumentWeights {\n  /**\n   * The effect of proximity of query terms in the document. More weight is given to documents having the terms closer together.\n   */\n  Adjacency: number;\n\n  /**\n   * The weight attributed to user ratings.\n   */\n  'Collaborative rating': number;\n\n  /**\n   * The weight assigned through an [indexing pipeline extension (IPE)](https://docs.coveo.com/en/206/) for the item.\n   */\n  Custom: number;\n\n  /**\n   * The weight attributed to the document date.\n   */\n  Date: number;\n\n  /**\n   * The weight applied by a [query ranking expression (QRE)](https://docs.coveo.com/en/2777/).\n   */\n  QRE: number;\n\n  /**\n   * The weight attributed to rank of the document in the documents remaining after filtering indexed items by query terms and user permissions.\n   * See [item weighting](https://docs.coveo.com/en/1624/#phase-2-item-weighting) for more information.\n   */\n  Quality: number;\n\n  /**\n   * The weight applied by a [ranking function](https://docs.coveo.com/en/1448/).\n   */\n  'Ranking functions': number;\n\n  /**\n   * The effect of the reputation of the document source on the ranking.\n   */\n  Source: number;\n\n  /**\n   * The weight attributed to presence of query terms in the document title.\n   */\n  Title: number;\n\n  /**\n   * Custom factors affecting the document weight.\n   */\n  [key: string]: number;\n}\n\nexport interface QueryRankingExpressionWeights {\n  /**\n   * The query ranking expression (QRE).\n   */\n  expression: string;\n\n  /**\n   * The score added by the query ranking expression (QRE).\n   */\n  score: number;\n}\n\nexport type TermWeightReport = Record<string, StemmedTermInformation>;\n\nexport interface StemmedTermInformation {\n  Weights: TermWeights | null;\n  terms: Record<string, TermWeightsPerDocument>;\n}\n\ninterface TermWeights {\n  /**\n   * The weight allocated when query terms have a special casing in the document.\n   */\n  Casing: number;\n\n  /**\n   * The weight allocated to the presence of query terms in the automatically populated '@concepts' field of the document.\n   */\n  Concept: number;\n\n  /**\n   * The weight allocated when query terms are formatted in the document (e.g., heading level, bold, large, etc.).\n   */\n  Formatted: number;\n\n  /**\n   * The weight allocated based on the number of times query terms appear in the document.\n   */\n  Frequency: number;\n\n  /**\n   * The weight allocated when the document contains words with the same root as the query terms.\n   *\n   * @example\n   * Searching for `programmer` will match documents with `programmer`, `programmers`, `program`, `programming`, etc.\n   */\n  Relation: number;\n\n  /**\n   * The weight allocated when the document summary contains query terms.\n   */\n  Summary: number;\n\n  /**\n   * The weight allocated when the document title contains query terms.\n   */\n  Title: number;\n\n  /**\n   * The weight allocated when the document URI contains query terms.\n   */\n  URI: number;\n\n  /**\n   * Custom factors affecting the term weight.\n   */\n  [key: string]: number;\n}\n\ninterface TermWeightsPerDocument {\n  /**\n   * Captures the likelihood that query term expansions are related to the original query term. Documents containing highly correlated expansions are ranked higher than ones containing poorly correlated expansions.\n   *\n   * @example\n   *\n   * When you search for `universe`, because of the way the stemming algorithm works, the index expands the query using terms from the `univer` stem classes that can include `university`. When the terms `universe` and `university` rarely co-occur in your indexed items, items containing `university` are ranked lower.\n   */\n  Correlation: number;\n\n  /**\n   * The number of times a queried keyword appears in a given item, offset by the number of items in the index containing that keyword (see [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)).\n   */\n  'TF-IDF': number;\n}\n\nexport const parseRankingInfo = (value: string) => {\n  const REGEX_EXTRACT_DOCUMENT_WEIGHTS = /Document weights:\\n((?:.)*?)\\n+/g;\n  const REGEX_EXTRACT_TERMS_WEIGHTS = /Terms weights:\\n((?:.|\\n)*)\\n+/g;\n  const REGEX_EXTRACT_TOTAL_WEIGHTS = /Total weight: ([0-9]+)/g;\n\n  if (!value) {\n    return null;\n  }\n\n  const docWeightsRegexResult = REGEX_EXTRACT_DOCUMENT_WEIGHTS.exec(value);\n  const termsWeightRegexResult = REGEX_EXTRACT_TERMS_WEIGHTS.exec(value);\n  const totalWeightRegexResult = REGEX_EXTRACT_TOTAL_WEIGHTS.exec(value);\n\n  const qreWeights = parseQREWeights(value);\n  const documentWeights = parseWeights<DocumentWeights>(\n    docWeightsRegexResult ? docWeightsRegexResult[1] : null\n  );\n  const termsWeight = parseTermsWeights(termsWeightRegexResult);\n  const totalWeight = totalWeightRegexResult\n    ? Number(totalWeightRegexResult[1])\n    : null;\n\n  return {\n    documentWeights,\n    termsWeight,\n    totalWeight,\n    qreWeights,\n  };\n};\n\nconst parseWeights = <T extends Record<string, number>>(\n  value: string | null\n): T | null => {\n  const REGEX_EXTRACT_LIST_OF_WEIGHTS = /(\\w+(?:\\s\\w+)*): ([-0-9]+)/g;\n  const REGEX_EXTRACT_WEIGHT_GROUP = /^(\\w+(?:\\s\\w+)*): ([-0-9]+)$/;\n\n  if (!value) {\n    return null;\n  }\n\n  const listOfWeight = value.match(REGEX_EXTRACT_LIST_OF_WEIGHTS);\n\n  if (!listOfWeight) {\n    return null;\n  }\n\n  const weights: Record<string, number> = {};\n\n  for (const weight of listOfWeight) {\n    const weightGroup = weight.match(REGEX_EXTRACT_WEIGHT_GROUP);\n\n    if (weightGroup) {\n      const weightAppliedOn = weightGroup[1];\n      const weightValue = weightGroup[2];\n      weights[weightAppliedOn] = Number(weightValue);\n    }\n  }\n  return weights as T;\n};\n\nconst matchExec = (value: string, regex: RegExp) => {\n  const results: string[][] = [];\n  let arr: RegExpExecArray | null;\n  while ((arr = regex.exec(value)) !== null) {\n    results.push(arr);\n  }\n  return results;\n};\n\nconst parseTermsWeights = (\n  termsWeight: RegExpExecArray | null\n): TermWeightReport | null => {\n  const REGEX_EXTRACT_GROUP_OF_TERMS =\n    /((?:[^:]+: [0-9]+, [0-9]+; )+)\\n((?:\\w+: [0-9]+; )+)/g;\n  const REGEX_EXTRACT_SINGLE_TERM = /([^:]+): ([0-9]+), ([0-9]+); /g;\n\n  if (!termsWeight || !termsWeight[1]) {\n    return null;\n  }\n\n  const listOfTerms = matchExec(termsWeight[1], REGEX_EXTRACT_GROUP_OF_TERMS);\n  if (!listOfTerms) {\n    return null;\n  }\n  const terms: TermWeightReport = {};\n  for (const term of listOfTerms) {\n    const listOfWords = matchExec(term[1], REGEX_EXTRACT_SINGLE_TERM);\n\n    const words: Record<string, TermWeightsPerDocument> = {};\n    for (const word of listOfWords) {\n      words[word[1]] = {\n        Correlation: Number(word[2]),\n        'TF-IDF': Number(word[3]),\n      };\n    }\n\n    const weights = parseWeights<TermWeights>(term[2]);\n    terms[Object.keys(words).join(', ')] = {\n      terms: words,\n      Weights: weights,\n    };\n  }\n\n  return terms;\n};\n\nconst parseQREWeights = (value: string): QueryRankingExpressionWeights[] => {\n  const REGEX_EXTRACT_QRE_WEIGHTS =\n    /(Expression:\\s\".*\")\\sScore:\\s(?!0)([-0-9]+)\\n+/g;\n\n  let qreWeightsRegexResult = REGEX_EXTRACT_QRE_WEIGHTS.exec(value);\n\n  const qreWeights: QueryRankingExpressionWeights[] = [];\n  while (qreWeightsRegexResult) {\n    qreWeights.push({\n      expression: qreWeightsRegexResult[1],\n      score: parseInt(qreWeightsRegexResult[2], 10),\n    });\n    qreWeightsRegexResult = REGEX_EXTRACT_QRE_WEIGHTS.exec(value);\n  }\n\n  return qreWeights;\n};\n", "import {SearchSection} from '../../state/state-sections';\nimport {parseRankingInfo} from './ranking-info-parser';\n\nexport function rankingInformationSelector(state: SearchSection) {\n  const results = state.search.response.results;\n  return results.map((result) => {\n    const ranking = parseRankingInfo(result.rankingInfo!);\n    return {\n      result,\n      ranking,\n    };\n  });\n}\n", "import {ArrayValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {FieldDescription} from '../../api/search/fields/fields-response';\nimport {\n  AsyncThunkSearchOptions,\n  isErrorResponse,\n} from '../../api/search/search-api-client';\nimport {ConfigurationSection} from '../../state/state-sections';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\n\nconst nonEmptyArray = new ArrayValue({\n  each: requiredNonEmptyString,\n  required: true,\n});\n\nexport const registerFieldsToInclude = createAction(\n  'fields/registerFieldsToInclude',\n  (payload: string[]) => validatePayload<string[]>(payload, nonEmptyArray)\n);\n\nexport const enableFetchAllFields = createAction('fields/fetchall/enable');\n\nexport const disableFetchAllFields = createAction('fields/fetchall/disable');\n\nexport const fetchFieldsDescription = createAsyncThunk<\n  FieldDescription[],\n  void,\n  AsyncThunkSearchOptions<ConfigurationSection>\n>('fields/fetchDescription', async (_, {extra, getState, rejectWithValue}) => {\n  const state = getState();\n  const {accessToken, organizationId} = state.configuration;\n  const {apiBaseUrl} = state.configuration.search;\n  const descriptions = await extra.apiClient.fieldDescriptions({\n    accessToken,\n    organizationId,\n    url: apiBaseUrl,\n  });\n  if (isErrorResponse(descriptions)) {\n    return rejectWithValue(descriptions.error);\n  }\n  return descriptions.success.fields;\n});\n", "import {NumberValue, SchemaDefinition, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  AsyncThunkSearchOptions,\n  isErrorResponse,\n} from '../../api/search/search-api-client';\nimport {Result} from '../../api/search/search/result';\nimport {\n  ConfigurationSection,\n  FoldingSection,\n  QuerySection,\n} from '../../state/state-sections';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {buildSearchAndFoldingLoadCollectionRequest} from '../search-and-folding/search-and-folding-request';\nimport {ResultWithFolding} from './folding-slice';\nimport {CollectionId} from './folding-state';\n\nexport interface RegisterFoldingActionCreatorPayload {\n  /**\n   * The name of the field on which to do the folding. The folded result list component will use the values of this field to resolve the collections of result items.\n   *\n   * @defaultValue `foldingcollection`\n   */\n  collectionField?: string;\n  /**\n   * The name of the field that determines whether a certain result is a top result containing other child results within a collection.\n   *\n   * @defaultValue `foldingparent`\n   */\n  parentField?: string;\n  /**\n   * The name of the field that uniquely identifies a result within a collection.\n   *\n   * @defaultValue `foldingchild`\n   */\n  childField?: string;\n  /**\n   * The number of child results to fold under the root collection element, before expansion.\n   *\n   * @defaultValue `2`\n   */\n  numberOfFoldedResults?: number;\n}\n\nexport interface LoadCollectionFulfilledReturn {\n  results: Result[];\n  collectionId: CollectionId;\n  rootResult: ResultWithFolding;\n}\n\nexport const foldingOptionsSchemaDefinition: SchemaDefinition<\n  Required<RegisterFoldingActionCreatorPayload>\n> = {\n  collectionField: new StringValue({emptyAllowed: false, required: false}),\n  parentField: new StringValue({emptyAllowed: false, required: false}),\n  childField: new StringValue({emptyAllowed: false, required: false}),\n  numberOfFoldedResults: new NumberValue({min: 0, required: false}),\n};\n\nexport const registerFolding = createAction(\n  'folding/register',\n  (payload: RegisterFoldingActionCreatorPayload) =>\n    validatePayload(payload, foldingOptionsSchemaDefinition)\n);\n\nexport type StateNeededByLoadCollection = ConfigurationSection &\n  FoldingSection &\n  QuerySection;\n\nexport const loadCollection = createAsyncThunk<\n  LoadCollectionFulfilledReturn,\n  CollectionId,\n  AsyncThunkSearchOptions<StateNeededByLoadCollection>\n>(\n  'folding/loadCollection',\n  async (\n    collectionId: CollectionId,\n    {getState, rejectWithValue, extra: {apiClient}}\n  ) => {\n    const state = getState();\n    const sharedWithSearchRequest =\n      await buildSearchAndFoldingLoadCollectionRequest(state);\n\n    const response = await apiClient.search(\n      {\n        ...sharedWithSearchRequest,\n        q: getQForHighlighting(state),\n        enableQuerySyntax: true,\n        cq: `@${state.folding.fields.collection}=\"${collectionId}\"`,\n        filterField: state.folding.fields.collection,\n        childField: state.folding.fields.parent,\n        parentField: state.folding.fields.child,\n        filterFieldRange: 100,\n      },\n      {origin: 'foldingCollection'}\n    );\n\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    return {\n      collectionId,\n      results: response.success.results,\n      rootResult: state.folding.collections[collectionId]!\n        .result as ResultWithFolding,\n    };\n  }\n);\n\nfunction getQForHighlighting(state: StateNeededByLoadCollection) {\n  // This piece of code serves the following purpose:\n  // Inject the \"original\" query \"q\" to get proper keywords highlighting when loading a full collection\n  // However, the intent behind this feature is to load \"every results available for this collection\", regardless of other end user filters (including the search box itself)\n  // For that reason, we force enable query syntax + inject an `OR @uri` expression in the query.\n\n  if (state.query.q === '') {\n    return '';\n  }\n\n  return state.query.enableQuerySyntax\n    ? `${state.query.q} OR @uri`\n    : `( <@- ${state.query.q} -@> ) OR @uri`;\n}\n", "import {Result} from '../../api/search/search/result';\n\nexport type CollectionId = string;\n\nexport interface FoldedResult {\n  /**\n   * The result at this position in the collection.\n   */\n  result: Result;\n  /**\n   * The children of this result sorted in the same order as the search results.\n   */\n  children: FoldedResult[];\n}\n\nexport interface FoldedCollection extends FoldedResult {\n  /**\n   * Whether more results might be available in the collection.\n   */\n  moreResultsAvailable: boolean;\n  /**\n   * Whether there is an ongoing query to add more results to the collection.\n   */\n  isLoadingMoreResults: boolean;\n}\n\nexport interface FoldingFields {\n  collection: string;\n  parent: string;\n  child: string;\n}\n\nexport interface FoldingState {\n  enabled: boolean;\n  fields: FoldingFields;\n  filterFieldRange: number;\n  collections: Record<CollectionId, FoldedCollection>;\n}\n\nexport const getFoldingInitialState: () => FoldingState = () => ({\n  enabled: false,\n  fields: {\n    collection: 'foldingcollection',\n    parent: 'foldingparent',\n    child: 'foldingchild',\n  },\n  filterFieldRange: 2,\n  collections: {},\n});\n", "import {FieldDescription} from '../../api/search/fields/fields-response';\n\nexport interface FieldsState {\n  /**\n   * The names of the fields to include with each item in the query results. If specified, no other fields will be included.\n   *\n   * Example: [\"clickableuri\",\"author\",\"date\",\"filetype\",\"language\",\"coversationid\",\"messageid\",\"childid\",\"adjustednumberoflikes\"]\n   */\n  fieldsToInclude: string[];\n  /**\n   * A flag that specifies if all fields should be retrieved from the index. Useful in development or debugging scenarios.\n   *\n   * This should not be set to `true` in any production environment, as this can have a negative impact on query execution time.\n   */\n  fetchAllFields: boolean;\n  /**\n   * The description of all available fields from the index.\n   */\n  fieldsDescription: FieldDescription[];\n}\n\n/**\n * A list of the minimum fields required in a query.\n */\nexport const MinimumFieldsToInclude = [\n  'author',\n  'language',\n  'urihash',\n  'objecttype',\n  'collection',\n  'source',\n  'permanentid',\n];\n\n/**\n * A list of the recommended fields to be used in a query.\n */\nexport const DefaultFieldsToInclude = [\n  ...MinimumFieldsToInclude,\n  'date',\n  'filetype',\n  'parents',\n];\n\n/**\n * A list of the recommended fields to be used in a query for an e-commerce page.\n */\nexport const EcommerceDefaultFieldsToInclude = [\n  ...DefaultFieldsToInclude,\n  'ec_price',\n  'ec_name',\n  'ec_description',\n  'ec_brand',\n  'ec_category',\n  'ec_item_group_id',\n  'ec_shortdesc',\n  'ec_thumbnails',\n  'ec_images',\n  'ec_promo_price',\n  'ec_in_stock',\n  'ec_rating',\n];\n\nexport const getFieldsInitialState: () => FieldsState = () => ({\n  fieldsToInclude: MinimumFieldsToInclude,\n  fetchAllFields: false,\n  fieldsDescription: [],\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {registerFolding} from '../folding/folding-actions';\nimport {getFoldingInitialState} from '../folding/folding-state';\nimport {\n  disableFetchAllFields,\n  enableFetchAllFields,\n  fetchFieldsDescription,\n  registerFieldsToInclude,\n} from './fields-actions';\nimport {getFieldsInitialState} from './fields-state';\n\nexport const fieldsReducer = createReducer(getFieldsInitialState(), (builder) =>\n  builder\n    .addCase(registerFieldsToInclude, (state, action) => {\n      state.fieldsToInclude = [\n        ...new Set(state.fieldsToInclude.concat(action.payload)),\n      ];\n    })\n    .addCase(enableFetchAllFields, (state) => {\n      state.fetchAllFields = true;\n    })\n    .addCase(disableFetchAllFields, (state) => {\n      state.fetchAllFields = false;\n    })\n    .addCase(fetchFieldsDescription.fulfilled, (state, {payload}) => {\n      state.fieldsDescription = payload;\n    })\n    .addCase(registerFolding, (state, {payload}) => {\n      const defaultFields = getFoldingInitialState().fields;\n      state.fieldsToInclude.push(\n        payload.collectionField ?? defaultFields.collection,\n        payload.parentField ?? defaultFields.parent,\n        payload.childField ?? defaultFields.child\n      );\n    })\n);\n", "import {Unsubscribe} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../app/engine';\n\nexport interface Subscribable {\n  /**\n   * Adds a callback that's invoked on state change.\n   *\n   * @param listener A callback that's invoked on state change.\n   * @returns A function to remove the listener.\n   */\n  subscribe(listener: () => void): Unsubscribe;\n}\n\nexport interface Controller extends Subscribable {\n  readonly state: {};\n}\n\nexport function buildController<T extends object>(\n  engine: CoreEngine<T>\n): Controller {\n  let prevState: string;\n  const listeners: Map<Symbol, () => void> = new Map();\n  const hasNoListeners = () => listeners.size === 0;\n\n  const hasStateChanged = (currentState: Record<string, unknown>): boolean => {\n    try {\n      const stringifiedState = JSON.stringify(currentState);\n      const hasChanged = prevState !== stringifiedState;\n      prevState = stringifiedState;\n      return hasChanged;\n    } catch (e) {\n      console.warn(\n        'Could not detect if state has changed, check the controller \"get state method\"',\n        e\n      );\n      return true;\n    }\n  };\n\n  return {\n    subscribe(listener: () => void) {\n      listener();\n      const symbol = Symbol();\n      let unsubscribe: () => void;\n\n      if (hasNoListeners()) {\n        prevState = JSON.stringify(this.state);\n        unsubscribe = engine.subscribe(() => {\n          if (hasStateChanged(this.state)) {\n            listeners.forEach((listener) => listener());\n          }\n        });\n      }\n      listeners.set(symbol, listener);\n\n      return () => {\n        listeners.delete(symbol);\n        if (hasNoListeners()) {\n          unsubscribe && unsubscribe();\n        }\n      };\n    },\n\n    get state() {\n      return {};\n    },\n  };\n}\n", "import {BooleanValue, Schema} from '@coveo/bueno';\nimport {FieldDescription} from '../../api/search/fields/fields-response';\nimport {\n  ExecutionReport,\n  ExecutionStep,\n} from '../../api/search/search/execution-report';\nimport {QueryRankingExpression} from '../../api/search/search/query-ranking-expression';\nimport {Result} from '../../api/search/search/result';\nimport {SearchResponseSuccessWithDebugInfo} from '../../api/search/search/search-response';\nimport {SecurityIdentity} from '../../api/search/search/security-identity';\nimport {configuration} from '../../app/common-reducers';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {enableDebug, disableDebug} from '../../features/debug/debug-actions';\nimport {rankingInformationSelector} from '../../features/debug/debug-selectors';\nimport {debugReducer as debug} from '../../features/debug/debug-slice';\nimport {\n  QueryRankingExpressionWeights,\n  DocumentWeights,\n  RankingInformation,\n  TermWeightReport,\n} from '../../features/debug/ranking-info-parser';\nimport {\n  disableFetchAllFields,\n  enableFetchAllFields,\n  fetchFieldsDescription,\n} from '../../features/fields/fields-actions';\nimport {fieldsReducer as fields} from '../../features/fields/fields-slice';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  DebugSection,\n  FieldsSection,\n  SearchSection,\n} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {validateInitialState} from '../../utils/validate-payload';\nimport {buildController, Controller} from '../controller/headless-controller';\n\nexport type {\n  RankingInformation,\n  DocumentWeights,\n  TermWeightReport,\n  QueryRankingExpressionWeights,\n  ExecutionReport,\n  ExecutionStep,\n  SecurityIdentity,\n  QueryRankingExpression,\n};\n\nexport interface RelevanceInspectorProps {\n  /**\n   * The initial state that should be applied to the `RelevanceInspector` controller.\n   */\n  initialState?: RelevanceInspectorInitialState;\n}\n\nconst initialStateSchema = new Schema({\n  enabled: new BooleanValue({default: false}),\n});\n\nexport interface RelevanceInspectorInitialState {\n  /**\n   * Whether debug mode should be enabled.\n   * */\n  enabled?: boolean;\n}\n\n/**\n * The `RelevanceInspector` controller is in charge of allowing displaying various debug information.\n */\nexport interface RelevanceInspector extends Controller {\n  /**\n   * Fetch the description of all fields available from the index.\n   */\n  fetchFieldsDescription(): void;\n  /**\n   * Fetch all fields available from the index on each individual results.\n   */\n  enableFetchAllFields(): void;\n  /**\n   * Disable fetching all available fields from the index.\n   */\n  disableFetchAllFields(): void;\n  /**\n   * Enables debug mode.\n   */\n  enable(): void;\n\n  /**\n   * Disables debug mode.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `RelevanceInspector` controller.\n   * */\n  state: RelevanceInspectorState;\n}\n\nexport interface RelevanceInspectorState {\n  /**\n   * Whether debug mode is enabled.\n   * */\n  isEnabled: boolean;\n\n  /**\n   * The ranking information for every result.\n   */\n  rankingInformation?: ResultRankingInformation[];\n\n  /**\n   * The query execution report.\n   */\n  executionReport?: ExecutionReport;\n\n  /**\n   * The query expressions sent in the request.\n   */\n  expressions?: QueryExpressions;\n\n  /**\n   * The security identities.\n   */\n  userIdentities?: SecurityIdentity[];\n\n  /**\n   * The ranking expressions.\n   */\n  rankingExpressions?: QueryRankingExpression[];\n\n  /**\n   * The description of all fields available in the index.\n   */\n  fieldsDescription?: FieldDescription[];\n\n  /**\n   * Whether fields debugging is enabled, returning all fields available on query results.\n   */\n  fetchAllFields?: boolean;\n}\n\nexport interface ResultRankingInformation {\n  /**\n   * The result.\n   */\n  result: Result;\n\n  /**\n   * The ranking information for the associated result.\n   */\n  ranking: RankingInformation | null;\n}\n\nexport interface QueryExpressions {\n  /**\n   * The search query.\n   */\n  basicExpression: string;\n\n  /**\n   * The dynamic filter expression, sent as the `aq` parameter in the request.\n   */\n  advancedExpression: string;\n\n  /**\n   * The static filter expression, typically set by a `Tab`.\n   */\n  constantExpression: string;\n}\n\n/**\n * Creates a `RelevanceInspector` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `RelevanceInspector` properties.\n * @returns A `RelevanceInspector` controller instance.\n */\nexport function buildRelevanceInspector(\n  engine: SearchEngine,\n  props: RelevanceInspectorProps = {}\n): RelevanceInspector {\n  if (!loadRelevanceInspectorReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const initialState = validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildRelevanceInspector'\n  );\n\n  if (initialState.enabled) {\n    dispatch(enableDebug());\n  }\n\n  const warnProductionEnvironment = (flag: string) => {\n    engine.logger.warn(\n      `Flag [ ${flag} ] is now activated. This should *not* be used in any production environment as it negatively impact performance.`\n    );\n  };\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n      const isEnabled = state.debug;\n\n      if (!state.debug) {\n        return {isEnabled};\n      }\n\n      const {\n        executionReport,\n        basicExpression,\n        advancedExpression,\n        constantExpression,\n        userIdentities,\n        rankingExpressions,\n      } = state.search.response as SearchResponseSuccessWithDebugInfo;\n\n      const {fieldsDescription, fetchAllFields} = state.fields;\n\n      return {\n        isEnabled,\n        rankingInformation: rankingInformationSelector(state),\n        executionReport,\n        expressions: {\n          basicExpression,\n          advancedExpression,\n          constantExpression,\n        },\n        userIdentities,\n        rankingExpressions,\n        fieldsDescription,\n        fetchAllFields,\n      };\n    },\n\n    enable() {\n      dispatch(enableDebug());\n      warnProductionEnvironment('debug');\n    },\n\n    disable() {\n      dispatch(disableDebug());\n      dispatch(disableFetchAllFields());\n    },\n\n    enableFetchAllFields() {\n      dispatch(enableFetchAllFields());\n      warnProductionEnvironment('fetchAllFields');\n    },\n\n    disableFetchAllFields() {\n      dispatch(disableFetchAllFields());\n    },\n\n    fetchFieldsDescription() {\n      !this.state.isEnabled && dispatch(enableDebug());\n      dispatch(fetchFieldsDescription());\n      warnProductionEnvironment('fieldsDescription');\n      engine.logger.warn(\n        `For production environment, please specify the necessary fields either when instantiating a ResultList controller, or by dispatching a registerFieldsToInclude action.\n        \n        https://docs.coveo.com/en/headless/latest/reference/search/controllers/result-list/#resultlistoptions\n        https://docs.coveo.com/en/headless/latest/reference/search/actions/field/#registerfieldstoinclude`\n      );\n    },\n  };\n}\n\nfunction loadRelevanceInspectorReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  DebugSection & SearchSection & ConfigurationSection & FieldsSection\n> {\n  engine.addReducers({\n    debug,\n    search,\n    configuration,\n    fields,\n  });\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  RelevanceInspector,\n  RelevanceInspectorProps,\n  buildRelevanceInspector,\n} from './headless-relevance-inspector';\n\nexport * from './headless-relevance-inspector';\n\n/**\n * @internal\n */\nexport const defineRelevanceInspector = (\n  props?: RelevanceInspectorProps\n): ControllerDefinitionWithoutProps<SearchEngine, RelevanceInspector> => ({\n  build: (engine) => buildRelevanceInspector(engine, props),\n});\n", "import {isString, ArrayValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\nimport {ContextPayload, ContextValue} from './context-state';\n\nconst nonEmptyArray = new ArrayValue({\n  each: requiredNonEmptyString,\n  required: true,\n});\n\nconst nonEmptyPayload = (contextKey: string, contextValue: ContextValue) => {\n  validatePayload(contextKey, requiredNonEmptyString);\n  if (isString(contextValue)) {\n    validatePayload(contextValue, requiredNonEmptyString);\n  } else {\n    validatePayload(contextValue, nonEmptyArray);\n  }\n  return {payload: {contextKey, contextValue}};\n};\n\nexport const setContext = createAction(\n  'context/set',\n  (payload: ContextPayload) => {\n    for (const [k, v] of Object.entries(payload)) {\n      nonEmptyPayload(k, v);\n    }\n    return {payload};\n  }\n);\n\nexport interface AddContextActionCreatorPayload {\n  /**\n   * The name of the key to store the context value in.\n   */\n  contextKey: string;\n\n  /**\n   * The context value.\n   */\n  contextValue: ContextValue;\n}\n\nexport const addContext = createAction(\n  'context/add',\n  (payload: AddContextActionCreatorPayload) =>\n    nonEmptyPayload(payload.contextKey, payload.contextValue)\n);\n\nexport const removeContext = createAction('context/remove', (payload: string) =>\n  validatePayload(payload, requiredNonEmptyString)\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {change} from '../history/history-actions';\nimport {setContext, addContext, removeContext} from './context-actions';\nimport {getContextInitialState} from './context-state';\n\nexport const contextReducer = createReducer(\n  getContextInitialState(),\n  (builder) => {\n    builder\n      .addCase(setContext, (state, action) => {\n        state.contextValues = action.payload;\n      })\n      .addCase(addContext, (state, action) => {\n        state.contextValues[action.payload.contextKey] =\n          action.payload.contextValue;\n      })\n      .addCase(removeContext, (state, action) => {\n        delete state.contextValues[action.payload];\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n        state.contextValues = action.payload.context.contextValues;\n      });\n  }\n);\n", "//const ReservedContextKeys = [] as const;\n/**\n * @todo Example reserved keys\n */\nconst ReservedContextKeys = ['caseId', 'caseNumber'] as const;\nexport type ReservedContextKey = (typeof ReservedContextKeys)[number];\nconst ReservedContextKeysToControllerMap: Record<ReservedContextKey, string> = {\n  caseId: 'caseContext',\n  caseNumber: 'caseContext',\n};\n\nexport class ReservedContextKeyError extends Error {\n  constructor(key: ReservedContextKey) {\n    super(\n      `The key \"${key}\" is reserved for internal use. Use ${ReservedContextKeysToControllerMap[key]} to set this value.}`\n    );\n  }\n}\n\nexport class UnreservedContextKeyError extends Error {\n  constructor(key: ReservedContextKey) {\n    super(\n      `The key \"${key}\" has not been reserved. Please report this error to Coveo on https://github.com/coveo/ui-kit/issues/new.`\n    );\n  }\n}\n\nexport function isReservedContextKey(\n  contextKey: string\n): contextKey is ReservedContextKey {\n  return (ReservedContextKeys as readonly string[]).includes(contextKey);\n}\n", "import {RecordValue, Schema} from '@coveo/bueno';\nimport type {AnyAction, Dispatch} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../../app/engine';\nimport {\n  setContext,\n  addContext,\n  removeContext,\n} from '../../../features/context/context-actions';\nimport {contextReducer as context} from '../../../features/context/context-slice';\nimport {\n  ContextPayload,\n  ContextValue,\n} from '../../../features/context/context-state';\nimport {ContextSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {validateInitialState} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\nimport {\n  ReservedContextKeyError,\n  isReservedContextKey,\n} from './headless-context-reserved-keys';\n\nexport type {ContextPayload, ContextValue};\n\nexport interface ContextProps {\n  /**\n   * Represents the initial state of the context.\n   * If provided, it should adhere to the structure defined by the `ContextInitialState` interface.\n   */\n  initialState?: ContextInitialState;\n}\n\nexport interface ContextInitialState {\n  /**\n   * Represents the initial key/value pair of the context.\n   */\n  values: ContextPayload;\n}\n\nconst initialStateSchema = new Schema<ContextInitialState>({\n  values: new RecordValue({\n    options: {required: false},\n  }),\n});\n\n/**\n * The `Context` controller injects [custom contextual information](https://docs.coveo.com/en/3389/)\n * into the search requests and usage analytics search events sent from a search interface.\n */\nexport interface Context extends Controller {\n  /**\n   * Sets the context for the query. This replaces any existing context with the new one.\n   *\n   *  @param context - The context to set for the query.\n   */\n  set(context: ContextPayload): void;\n\n  /**\n   * Adds (or, if one is already present, replaces) a new context key-value pair.\n   *\n   * @param contextKey - The context key to add.\n   * @param contextValue - The context value to add.\n   */\n  add(contextKey: string, contextValue: ContextValue): void;\n\n  /**\n   * Removes a context key from the query.\n   * @param key - The context key to remove.\n   */\n  remove(key: string): void;\n\n  /**\n   * The state of the `Context` controller.\n   */\n  state: ContextState;\n}\n\nexport interface ContextState {\n  /**\n   * An object holding the context keys and their values.\n   */\n  values: Record<string, ContextValue>;\n}\n\n/**\n * Creates a `Context` controller instance\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Context` controller properties.\n *\n * @returns a `Context` controller instance.\n */\nexport function buildCoreContext(\n  engine: CoreEngine,\n  props: ContextProps = {}\n): Context {\n  if (!loadContextReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const initialState = validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildContext'\n  );\n\n  if (initialState.values) {\n    dispatch(setContext(initialState.values));\n  }\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        values: getState().context.contextValues,\n      };\n    },\n    set(context: ContextPayload) {\n      dispatch(setContext(context));\n    },\n    ...(getState().configuration.analytics.analyticsMode === 'legacy'\n      ? legacyCoreContext(dispatch)\n      : nextCoreContext(dispatch)),\n  };\n}\n\nconst legacyCoreContext = (dispatch: Dispatch<AnyAction>) => ({\n  add(contextKey: string, contextValue: ContextValue) {\n    dispatch(addContext({contextKey, contextValue}));\n  },\n\n  remove(key: string) {\n    dispatch(removeContext(key));\n  },\n});\n\nconst nextCoreContext = (dispatch: Dispatch<AnyAction>) => ({\n  add(contextKey: string, contextValue: ContextValue) {\n    if (isReservedContextKey(contextKey)) {\n      throw new ReservedContextKeyError(contextKey);\n    }\n    dispatch(addContext({contextKey, contextValue}));\n  },\n\n  remove(contextKey: string) {\n    if (isReservedContextKey(contextKey)) {\n      throw new ReservedContextKeyError(contextKey);\n    }\n    dispatch(removeContext(contextKey));\n  },\n});\n\nfunction loadContextReducers(\n  engine: CoreEngine\n): engine is CoreEngine<ContextSection> {\n  engine.addReducers({context});\n  return true;\n}\n", "import {\n  ContextPayload,\n  ContextValue,\n} from '../../features/context/context-state';\nimport {CoreEngine} from '../../product-listing.index';\nimport {\n  buildCoreContext,\n  Context,\n  ContextProps,\n  ContextState,\n} from '../core/context/headless-core-context';\nimport {ContextInitialState} from './../core/context/headless-core-context';\n\nexport type {\n  Context,\n  ContextState,\n  ContextPayload,\n  ContextValue,\n  ContextInitialState,\n  ContextProps,\n};\n\n/**\n * Creates a `Context` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Context` controller properties.\n *\n * @returns A `Context` controller instance.\n */\nexport function buildContext(\n  engine: CoreEngine,\n  props?: ContextProps\n): Context {\n  return buildCoreContext(engine, props);\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithProps} from '../../app/ssr-engine/types/common';\nimport {ContextProps} from '../core/context/headless-core-context';\nimport {Context, buildContext} from './headless-context';\n\nexport * from './headless-context';\n\n/**\n * @internal\n */\nexport const defineContext = (): ControllerDefinitionWithProps<\n  SearchEngine,\n  Context,\n  ContextProps\n> => ({\n  buildWithProps: (engine, props) =>\n    buildContext(engine, {initialState: props.initialState}),\n});\n", "import {ArrayValue, RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  requiredEmptyAllowedString,\n  validatePayload,\n} from '../../utils/validate-payload';\nimport {DictionaryFieldContextPayload} from './dictionary-field-context-state';\n\nexport const setContext = createAction(\n  'dictionaryFieldContext/set',\n  (payload: DictionaryFieldContextPayload) => {\n    const objSchema = new RecordValue({options: {required: true}});\n    const objError = validatePayload(payload, objSchema).error;\n\n    if (objError) {\n      return {payload, error: objError};\n    }\n\n    const values = Object.values(payload);\n    const valueSchema = new ArrayValue({each: requiredEmptyAllowedString});\n    const valuesError = validatePayload(values, valueSchema).error;\n\n    if (valuesError) {\n      return {payload, error: valuesError};\n    }\n\n    return {payload};\n  }\n);\n\nexport interface AddDictionaryFieldContextActionCreatorPayload {\n  /**\n   * The name of the dictionary field.\n   */\n  field: string;\n\n  /**\n   * The dictionary field key to return the value of.\n   */\n  key: string;\n}\n\nexport const addContext = createAction(\n  'dictionaryFieldContext/add',\n  (payload: AddDictionaryFieldContextActionCreatorPayload) => {\n    const schema = new RecordValue({\n      options: {required: true},\n      values: {\n        field: requiredEmptyAllowedString,\n        key: requiredEmptyAllowedString,\n      },\n    });\n\n    return validatePayload<AddDictionaryFieldContextActionCreatorPayload>(\n      payload,\n      schema\n    );\n  }\n);\n\nexport const removeContext = createAction(\n  'dictionaryFieldContext/remove',\n  (payload: string) => {\n    return validatePayload(payload, requiredEmptyAllowedString);\n  }\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {change} from '../history/history-actions';\nimport {\n  addContext,\n  removeContext,\n  setContext,\n} from './dictionary-field-context-actions';\nimport {getDictionaryFieldContextInitialState} from './dictionary-field-context-state';\n\nexport const dictionaryFieldContextReducer = createReducer(\n  getDictionaryFieldContextInitialState(),\n  (builder) => {\n    builder\n      .addCase(setContext, (state, action) => {\n        state.contextValues = action.payload;\n      })\n      .addCase(addContext, (state, action) => {\n        const {field, key} = action.payload;\n        state.contextValues[field] = key;\n      })\n      .addCase(removeContext, (state, action) => {\n        delete state.contextValues[action.payload];\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n\n        state.contextValues =\n          action.payload.dictionaryFieldContext.contextValues;\n      });\n  }\n);\n", "import {CoreEngine} from '../../app/engine';\nimport {\n  addContext,\n  removeContext,\n  setContext,\n} from '../../features/dictionary-field-context/dictionary-field-context-actions';\nimport {dictionaryFieldContextReducer as dictionaryFieldContext} from '../../features/dictionary-field-context/dictionary-field-context-slice';\nimport {DictionaryFieldContextPayload} from '../../features/dictionary-field-context/dictionary-field-context-state';\nimport {DictionaryFieldContextSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {Controller, buildController} from '../controller/headless-controller';\n\nexport type {DictionaryFieldContextPayload};\n\n/**\n * The `DictionaryFieldContext` controller allows specifying which [dictionary field](https://docs.coveo.com/en/2036/index-content/about-fields#dictionary-fields) keys to retrieve.\n */\nexport interface DictionaryFieldContext extends Controller {\n  /**\n   * Sets the dictionary field context for the query. This replaces any existing context with the new one.\n   *\n   *  @param context - The dictionary field context to set for the query.\n   */\n  set(context: DictionaryFieldContextPayload): void;\n\n  /**\n   * Adds (or, if one is already present, replaces) a new dictionary field context key-value pair.\n   *\n   * @param field - The dictionary field name.\n   * @param key - The dictionary field key for which to retrieve a value.\n   */\n  add(field: string, key: string): void;\n\n  /**\n   * Removes a dictionary field from the query.\n   * @param field - The field to remove.\n   */\n  remove(field: string): void;\n\n  /**\n   * The state of the `DictionaryFieldContext` controller.\n   */\n  state: DictionaryFieldContextState;\n}\n\nexport interface DictionaryFieldContextState {\n  /**\n   * An object holding the dictionary field context fields and keys to retrieve values for.\n   */\n  values: Record<string, string>;\n}\n\n/**\n * Creates a `DictionaryFieldContext` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `DictionaryFieldContext` controller instance.\n */\nexport function buildDictionaryFieldContext(\n  engine: CoreEngine\n): DictionaryFieldContext {\n  if (!loadReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        values: getState().dictionaryFieldContext.contextValues,\n      };\n    },\n\n    set(context: DictionaryFieldContextPayload) {\n      dispatch(setContext(context));\n    },\n\n    add(field: string, key: string) {\n      dispatch(addContext({field, key}));\n    },\n\n    remove(field: string) {\n      dispatch(removeContext(field));\n    },\n  };\n}\n\nfunction loadReducers(\n  engine: CoreEngine\n): engine is CoreEngine<DictionaryFieldContextSection> {\n  engine.addReducers({dictionaryFieldContext});\n  return true;\n}\n", "import {CoreEngine} from '../../app/engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  DictionaryFieldContext,\n  buildDictionaryFieldContext,\n} from './headless-dictionary-field-context';\n\nexport * from './headless-dictionary-field-context';\n\n/**\n * @internal\n */\nexport const defineDictionaryFieldContext =\n  (): ControllerDefinitionWithoutProps<CoreEngine, DictionaryFieldContext> => ({\n    build: (engine) => buildDictionaryFieldContext(engine),\n  });\n", "import {QueryCorrection} from '../../api/search/search/query-corrections';\n\nexport interface DidYouMeanState {\n  /**\n   * Specifies if the \"did you mean\" feature of the Coveo platform should be enabled or not.\n   */\n  enableDidYouMean: boolean;\n  /**\n   * The correction that was applied to the query. If no correction was applied, will default to an empty string.\n   */\n  wasCorrectedTo: string;\n  /**\n   * Specifies if the query was automatically corrected by Headless.\n   *\n   * This happens when there is no result returned by the API for a particular misspelling.\n   */\n  wasAutomaticallyCorrected: boolean;\n  /**\n   * The query correction that is currently applied by the \"did you mean\" module.\n   */\n  queryCorrection: QueryCorrection;\n  /**\n   * The original query that was originally performed when an automatic correction is executed.\n   */\n  originalQuery: string;\n  /**\n   * Whether to automatically correct queries that will return no results.\n   */\n  automaticallyCorrectQuery: boolean;\n}\n\nexport const emptyCorrection = () => ({\n  correctedQuery: '',\n  wordCorrections: [],\n  originalQuery: '',\n});\n\nexport function getDidYouMeanInitialState(): DidYouMeanState {\n  return {\n    enableDidYouMean: false,\n    wasCorrectedTo: '',\n    wasAutomaticallyCorrected: false,\n    queryCorrection: emptyCorrection(),\n    originalQuery: '',\n    automaticallyCorrectQuery: true,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {executeSearch} from '../search/search-actions';\nimport {\n  enableDidYouMean,\n  disableDidYouMean,\n  applyDidYouMeanCorrection,\n  enableAutomaticQueryCorrection,\n  disableAutomaticQueryCorrection,\n} from './did-you-mean-actions';\nimport {emptyCorrection, getDidYouMeanInitialState} from './did-you-mean-state';\n\nexport const didYouMeanReducer = createReducer(\n  getDidYouMeanInitialState(),\n  (builder) => {\n    builder\n      .addCase(enableDidYouMean, (state) => {\n        state.enableDidYouMean = true;\n      })\n      .addCase(disableDidYouMean, (state) => {\n        state.enableDidYouMean = false;\n      })\n      .addCase(enableAutomaticQueryCorrection, (state) => {\n        state.automaticallyCorrectQuery = true;\n      })\n      .addCase(disableAutomaticQueryCorrection, (state) => {\n        state.automaticallyCorrectQuery = false;\n      })\n      .addCase(executeSearch.pending, (state) => {\n        state.queryCorrection = emptyCorrection();\n        state.wasAutomaticallyCorrected = false;\n        state.wasCorrectedTo = '';\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        state.queryCorrection =\n          action.payload.response.queryCorrections[0] || emptyCorrection();\n        state.originalQuery = action.payload.originalQuery;\n        state.wasAutomaticallyCorrected = action.payload.automaticallyCorrected;\n      })\n      .addCase(applyDidYouMeanCorrection, (state, action) => {\n        state.wasCorrectedTo = action.payload;\n      });\n  }\n);\n", "import {\n  QueryCorrection,\n  WordCorrection,\n} from '../../../api/search/search/query-corrections';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {\n  applyDidYouMeanCorrection,\n  disableAutomaticQueryCorrection,\n  enableDidYouMean,\n} from '../../../features/did-you-mean/did-you-mean-actions';\nimport {didYouMeanReducer as didYouMean} from '../../../features/did-you-mean/did-you-mean-slice';\nimport {\n  ConfigurationSection,\n  DidYouMeanSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport type {QueryCorrection, WordCorrection};\n\nexport interface DidYouMeanProps {\n  /**\n   * Whether to automatically apply corrections for queries that would otherwise return no results.\n   * When `automaticallyCorrectQuery` is `true`, the controller automatically triggers a new query using the suggested term.\n   * When `automaticallyCorrectQuery` is `false`, the controller returns the suggested term without triggering a new query.\n   *\n   * The default value is `true`.\n   */\n  automaticallyCorrectQuery?: boolean;\n}\nexport interface DidYouMean extends Controller {\n  /**\n   * Apply query correction using the query correction, if any, currently present in the state.\n   */\n  applyCorrection(): void;\n\n  /**\n   * The state of the `DidYouMean` controller.\n   */\n  state: DidYouMeanState;\n}\n\nexport interface DidYouMeanState {\n  /**\n   * The correction that was applied to the query. If no correction was applied, will default to an empty string.\n   */\n  wasCorrectedTo: string;\n  /**\n   * The original query that was performed, without any automatic correction applied.\n   */\n  originalQuery: string;\n  /**\n   * Specifies if the query was automatically corrected by Headless.\n   *\n   * This happens when there is no result returned by the API for a particular misspelling.\n   */\n  wasAutomaticallyCorrected: boolean;\n\n  /**\n   * The query correction that is currently applied by the \"did you mean\" module.\n   */\n  queryCorrection: QueryCorrection;\n\n  /**\n   * Specifies if there is a query correction to apply.\n   */\n  hasQueryCorrection: boolean;\n}\n\n/**\n * The DidYouMean controller is responsible for handling query corrections.\n * When a query returns no result but finds a possible query correction, the controller either suggests the correction or\n * automatically triggers a new query with the suggested term.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `DidYouMean` controller properties.\n * @returns A `DidYouMean` controller instance.\n */\nexport function buildCoreDidYouMean(\n  engine: CoreEngine,\n  props: DidYouMeanProps = {}\n): DidYouMean {\n  if (!loadDidYouMeanReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  dispatch(enableDidYouMean());\n\n  if (props.automaticallyCorrectQuery === false) {\n    dispatch(disableAutomaticQueryCorrection());\n  }\n\n  const getState = () => engine.state;\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        originalQuery: state.didYouMean.originalQuery,\n        wasCorrectedTo: state.didYouMean.wasCorrectedTo,\n        wasAutomaticallyCorrected: state.didYouMean.wasAutomaticallyCorrected,\n        queryCorrection: state.didYouMean.queryCorrection,\n        hasQueryCorrection:\n          state.didYouMean.queryCorrection.correctedQuery !== '' ||\n          state.didYouMean.wasCorrectedTo !== '',\n      };\n    },\n\n    applyCorrection() {\n      dispatch(\n        applyDidYouMeanCorrection(this.state.queryCorrection.correctedQuery)\n      );\n    },\n  };\n}\n\nfunction loadDidYouMeanReducers(\n  engine: CoreEngine\n): engine is CoreEngine<ConfigurationSection & DidYouMeanSection> {\n  engine.addReducers({configuration, didYouMean});\n  return true;\n}\n", "import {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {\n  QueryCorrection,\n  WordCorrection,\n} from '../../api/search/search/query-corrections';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {logDidYouMeanClick} from '../../features/did-you-mean/did-you-mean-analytics-actions';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {\n  buildCoreDidYouMean,\n  DidYouMean,\n  DidYouMeanState,\n} from '../core/did-you-mean/headless-core-did-you-mean';\n\nexport type {QueryCorrection, WordCorrection, DidYouMean, DidYouMeanState};\n\n/**\n * The DidYouMean controller is responsible for handling query corrections.\n * When a query returns no result but finds a possible query correction, the controller either suggests the correction or\n * automatically triggers a new query with the suggested term.\n *\n * @param engine - The headless engine.\n */\nexport function buildDidYouMean(engine: SearchEngine): DidYouMean {\n  const controller = buildCoreDidYouMean(engine);\n  const {dispatch} = engine;\n\n  return {\n    ...controller,\n\n    get state() {\n      return controller.state;\n    },\n\n    applyCorrection() {\n      controller.applyCorrection();\n      dispatch(\n        executeSearch({\n          legacy: logDidYouMeanClick(),\n          next: {\n            actionCause: SearchPageEvents.didyoumeanClick,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n          },\n        })\n      );\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {DidYouMean, buildDidYouMean} from './headless-did-you-mean';\n\nexport * from './headless-did-you-mean';\n\n/**\n * @internal\n */\nexport const defineDidYouMean = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  DidYouMean\n> => ({\n  build: (engine) => buildDidYouMean(engine),\n});\n", "import {requiredNonEmptyString} from '../../../utils/validate-payload';\n\nexport const facetIdDefinition = requiredNonEmptyString;\n", "import {BooleanValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {facetIdDefinition} from '../facets/generic/facet-actions-validation';\n\nexport interface UpdateFacetOptionsActionCreatorPayload {\n  /**\n   * Whether facets should be returned in the same order they were requested.\n   */\n  freezeFacetOrder?: boolean;\n}\n\nexport type EnableFacetActionCreatorPayload = string;\n\nexport type DisableFacetActionCreatorPayload = string;\n\nexport const updateFacetOptions = createAction(\n  'facetOptions/update',\n  (\n    payload: UpdateFacetOptionsActionCreatorPayload = {freezeFacetOrder: true}\n  ) =>\n    validatePayload(payload, {\n      freezeFacetOrder: new BooleanValue({required: false}),\n    })\n);\n\nexport const enableFacet = createAction(\n  'facetOptions/facet/enable',\n  (payload: EnableFacetActionCreatorPayload) =>\n    validatePayload(payload, facetIdDefinition)\n);\n\nexport const disableFacet = createAction(\n  'facetOptions/facet/disable',\n  (payload: EnableFacetActionCreatorPayload) =>\n    validatePayload(payload, facetIdDefinition)\n);\n", "import {RecordValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\n\nexport const facetSearchOptionsDefinition = {\n  facetId: facetIdDefinition,\n  captions: new RecordValue({options: {required: false}}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  query: new StringValue({required: false, emptyAllowed: true}),\n};\n", "import {NumberValue, RecordValue, ArrayValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchResult} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  requiredEmptyAllowedString,\n} from '../../../../utils/validate-payload';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {FacetSearchOptions} from '../facet-search-request-options';\nimport {facetSearchOptionsDefinition} from '../generic/generic-facet-search-validate-payload';\n\nconst categoryFacetSearchResultDefinition = {\n  path: new ArrayValue({\n    required: true,\n    each: requiredNonEmptyString,\n  }),\n  displayValue: requiredEmptyAllowedString,\n  rawValue: requiredEmptyAllowedString,\n  count: new NumberValue({required: true, min: 0}),\n};\n\nexport const selectCategoryFacetSearchResult = createAction(\n  'categoryFacet/selectSearchResult',\n  (payload: {facetId: string; value: CategoryFacetSearchResult}) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      value: new RecordValue({values: categoryFacetSearchResultDefinition}),\n    })\n);\n\nexport const registerCategoryFacetSearch = createAction(\n  'categoryFacetSearch/register',\n  (payload: FacetSearchOptions) =>\n    validatePayload(payload, facetSearchOptionsDefinition)\n);\n", "import {FacetRequest} from '../facet-set/interfaces/request';\nimport {AnyFacetRequest} from './interfaces/generic-facet-request';\nimport {AnyFacetSlice} from './interfaces/generic-facet-section';\n\nexport type SpecificFacetState<\n  SliceType extends AnyFacetSlice = AnyFacetSlice,\n> = Record<string, SliceType>;\n\nexport function handleFacetSortCriterionUpdate<T extends AnyFacetSlice>(\n  state: SpecificFacetState<T>,\n  payload: {facetId: string; criterion: T['request']['sortCriteria']}\n) {\n  const {facetId, criterion} = payload;\n  const facetRequest = state[facetId]?.request;\n\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.sortCriteria = criterion;\n}\n\nexport function handleFacetDeselectAll(facetRequest: FacetRequest) {\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.currentValues = facetRequest.currentValues.map((value) => ({\n    ...value,\n    state: 'idle',\n  }));\n  facetRequest.preventAutoSelect = true;\n}\n\nexport function handleFacetUpdateNumberOfValues<T extends AnyFacetRequest>(\n  facetRequest: T | undefined,\n  numberOfValues: number\n) {\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.numberOfValues = numberOfValues;\n}\n", "import {CategoryFacetSetState} from './category-facet-set-state';\nimport {\n  CategoryFacetRequest,\n  CategoryFacetValueRequest,\n} from './interfaces/request';\n\nexport function handleCategoryFacetDeselectAll(\n  state: CategoryFacetSetState,\n  facetId: string\n) {\n  const slice = state[facetId];\n\n  if (!slice) {\n    return;\n  }\n\n  slice.request.numberOfValues = slice.initialNumberOfValues;\n  slice.request.currentValues = [];\n  slice.request.preventAutoSelect = true;\n}\n\nexport function selectPath(\n  request: CategoryFacetRequest,\n  path: string[],\n  initialNumberOfValues: number\n) {\n  request.currentValues = buildCurrentValuesFromPath(\n    path,\n    initialNumberOfValues\n  );\n  request.numberOfValues = path.length ? 1 : initialNumberOfValues;\n  request.preventAutoSelect = true;\n}\n\nfunction buildCurrentValuesFromPath(path: string[], retrieveCount: number) {\n  if (!path.length) {\n    return [];\n  }\n\n  const root = buildCategoryFacetValueRequest(path[0], retrieveCount);\n  let curr = root;\n\n  for (const segment of path.splice(1)) {\n    const next = buildCategoryFacetValueRequest(segment, retrieveCount);\n    curr.children.push(next);\n    curr = next;\n  }\n\n  curr.state = 'selected';\n  curr.retrieveChildren = true;\n\n  return [root];\n}\n\nfunction buildCategoryFacetValueRequest(\n  value: string,\n  retrieveCount: number\n): CategoryFacetValueRequest {\n  return {\n    value,\n    retrieveCount,\n    children: [],\n    state: 'idle',\n    retrieveChildren: false,\n  };\n}\n", "import {\n  Value,\n  NumberValue,\n  StringValue,\n  ArrayValue,\n  BooleanValue,\n} from '@coveo/bueno';\nimport {\n  validatePayloadAndThrow,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload';\nimport {FacetValueState} from '../facet-api/value';\nimport {CategoryFacetValue} from './interfaces/response';\n\nexport const categoryFacetValueDefinition = {\n  state: new Value<FacetValueState>({required: true}),\n  numberOfResults: new NumberValue({required: true, min: 0}),\n  value: new StringValue({required: true, emptyAllowed: true}),\n  path: new ArrayValue({required: true, each: requiredNonEmptyString}),\n  moreValuesAvailable: new BooleanValue({required: false}),\n};\n\nexport function validateCategoryFacetValue(payload: CategoryFacetValue) {\n  payload.children.forEach((child) => {\n    validateCategoryFacetValue(child);\n  });\n  validatePayloadAndThrow(\n    {\n      state: payload.state,\n      numberOfResults: payload.numberOfResults,\n      value: payload.value,\n      path: payload.path,\n      moreValuesAvailable: payload.moreValuesAvailable,\n    },\n    categoryFacetValueDefinition\n  );\n}\n", "import {\n  Value,\n  BooleanValue,\n  ArrayValue,\n  StringValue,\n  NumberValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  serializeSchemaValidationError,\n  validatePayload,\n  validatePayloadAndThrow,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload';\nimport {facetIdDefinition} from '../generic/facet-actions-validation';\nimport {validateCategoryFacetValue} from './category-facet-validate-payload';\nimport {CategoryFacetSortCriterion} from './interfaces/request';\nimport {CategoryFacetValue} from './interfaces/response';\n\nexport interface RegisterCategoryFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the facet.\n   * */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * The base path shared by all values for the facet.\n   *\n   * @defaultValue `[]`\n   */\n  basePath?: string[];\n\n  /**\n   * The character that specifies the hierarchical dependency.\n   *\n   * @defaultValue `;`\n   */\n  delimitingCharacter?: string;\n\n  /**\n   * Whether to use basePath as a filter for the results.\n   *\n   * @defaultValue `true`\n   */\n  filterByBasePath?: boolean;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `5`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   *\n   * @defaultValue `occurrences`\n   */\n  sortCriteria?: CategoryFacetSortCriterion;\n}\n\nconst categoryFacetPayloadDefinition = {\n  facetId: facetIdDefinition,\n  field: requiredNonEmptyString,\n  delimitingCharacter: new StringValue({required: false, emptyAllowed: true}),\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<CategoryFacetSortCriterion>({required: false}),\n  basePath: new ArrayValue({required: false, each: requiredNonEmptyString}),\n  filterByBasePath: new BooleanValue({required: false}),\n};\n\nexport const registerCategoryFacet = createAction(\n  'categoryFacet/register',\n  (payload: RegisterCategoryFacetActionCreatorPayload) =>\n    validatePayload(payload, categoryFacetPayloadDefinition)\n);\n\nexport interface ToggleSelectCategoryFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target category facet value.\n   */\n  selection: CategoryFacetValue;\n\n  /**\n   * The number of child values to display.\n   */\n  retrieveCount: number;\n}\n\nexport const toggleSelectCategoryFacetValue = createAction(\n  'categoryFacet/toggleSelectValue',\n  (payload: ToggleSelectCategoryFacetValueActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload.facetId, requiredNonEmptyString);\n      validateCategoryFacetValue(payload.selection);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport const deselectAllCategoryFacetValues = createAction(\n  'categoryFacet/deselectAll',\n  (payload: string) =>\n    validatePayload(payload, categoryFacetPayloadDefinition.facetId)\n);\n\nexport interface UpdateCategoryFacetNumberOfValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The new number of facet values (e.g., `10`).\n   */\n  numberOfValues: number;\n}\n\nexport const updateCategoryFacetNumberOfValues = createAction(\n  'categoryFacet/updateNumberOfValues',\n  (payload: UpdateCategoryFacetNumberOfValuesActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: categoryFacetPayloadDefinition.facetId,\n      numberOfValues: categoryFacetPayloadDefinition.numberOfValues,\n    })\n);\n\nexport interface UpdateCategoryFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The criterion by which to sort the facet.\n   */\n  criterion: CategoryFacetSortCriterion;\n}\n\nexport const updateCategoryFacetSortCriterion = createAction(\n  'categoryFacet/updateSortCriterion',\n  (payload: UpdateCategoryFacetSortCriterionActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: categoryFacetPayloadDefinition.facetId,\n      criterion: new Value<CategoryFacetSortCriterion>(),\n    })\n);\n\nexport interface UpdateCategoryFacetBasePathActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The base path shared by all values for the facet.\n   */\n  basePath: string[];\n}\n\nexport const updateCategoryFacetBasePath = createAction(\n  'categoryFacet/updateBasePath',\n  (payload: UpdateCategoryFacetBasePathActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: categoryFacetPayloadDefinition.facetId,\n      basePath: new ArrayValue({each: requiredNonEmptyString}),\n    })\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../../breadcrumb/breadcrumb-actions';\nimport {disableFacet} from '../../facet-options/facet-options-actions';\nimport {change} from '../../history/history-actions';\nimport {restoreSearchParameters} from '../../search-parameters/search-parameter-actions';\nimport {executeSearch, fetchFacetValues} from '../../search/search-actions';\nimport {selectCategoryFacetSearchResult} from '../facet-search-set/category/category-facet-search-actions';\nimport {updateFacetAutoSelection} from '../generic/facet-actions';\nimport {handleFacetUpdateNumberOfValues} from '../generic/facet-reducer-helpers';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response';\nimport {\n  handleCategoryFacetDeselectAll,\n  selectPath,\n} from './category-facet-reducer-helpers';\nimport {\n  registerCategoryFacet,\n  toggleSelectCategoryFacetValue,\n  deselectAllCategoryFacetValues,\n  updateCategoryFacetNumberOfValues,\n  updateCategoryFacetSortCriterion,\n  RegisterCategoryFacetActionCreatorPayload,\n  updateCategoryFacetBasePath,\n} from './category-facet-set-actions';\nimport {\n  CategoryFacetSetState,\n  getCategoryFacetSetInitialState,\n} from './category-facet-set-state';\nimport {findActiveValueAncestry} from './category-facet-utils';\nimport {CategoryFacetOptionalParameters} from './interfaces/options';\nimport {\n  CategoryFacetRequest,\n  CategoryFacetValueRequest,\n} from './interfaces/request';\nimport {CategoryFacetResponse} from './interfaces/response';\n\nexport const categoryFacetSetReducer = createReducer(\n  getCategoryFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerCategoryFacet, (state, action) => {\n        const options = action.payload;\n        const {facetId} = options;\n\n        if (facetId in state) {\n          return;\n        }\n\n        const request = buildCategoryFacetRequest(options);\n        const initialNumberOfValues = request.numberOfValues;\n        state[facetId] = {request, initialNumberOfValues};\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.categoryFacetSet ?? state\n      )\n      .addCase(restoreSearchParameters, (state, action) => {\n        const cf = action.payload.cf || {};\n\n        Object.keys(state).forEach((id) => {\n          const request = state[id]!.request;\n          const path = cf[id] || [];\n          if (path.length || request.currentValues.length) {\n            selectPath(request, path, state[id]!.initialNumberOfValues);\n          }\n        });\n      })\n      .addCase(updateCategoryFacetSortCriterion, (state, action) => {\n        const {facetId, criterion} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request) {\n          return;\n        }\n\n        request.sortCriteria = criterion;\n      })\n      .addCase(updateCategoryFacetBasePath, (state, action) => {\n        const {facetId, basePath} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request) {\n          return;\n        }\n\n        request.basePath = [...basePath];\n      })\n      .addCase(toggleSelectCategoryFacetValue, (state, action) => {\n        const {facetId, selection, retrieveCount} = action.payload;\n        const request = state[facetId]?.request;\n\n        if (!request) {\n          return;\n        }\n\n        const {path} = selection;\n        const pathToSelection = path.slice(0, path.length - 1);\n        const children = ensurePathAndReturnChildren(\n          request,\n          pathToSelection,\n          retrieveCount\n        );\n\n        if (children.length) {\n          const lastSelectedParent = children[0];\n\n          lastSelectedParent.retrieveChildren = true;\n          lastSelectedParent.state = 'selected';\n          lastSelectedParent.children = [];\n          return;\n        }\n\n        const newParent = buildCategoryFacetValueRequest(\n          selection.value,\n          retrieveCount\n        );\n        newParent.state = 'selected';\n        children.push(newParent);\n        request.numberOfValues = 1;\n      })\n      .addCase(deselectAllCategoryFacetValues, (state, action) => {\n        const facetId = action.payload;\n        handleCategoryFacetDeselectAll(state, facetId);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.keys(state).forEach((facetId) =>\n          handleCategoryFacetDeselectAll(state, facetId)\n        );\n      })\n      .addCase(updateFacetAutoSelection, (state, action) =>\n        Object.keys(state).forEach((facetId) => {\n          state[facetId]!.request.preventAutoSelect = !action.payload.allow;\n        })\n      )\n      .addCase(updateCategoryFacetNumberOfValues, (state, action) => {\n        const {facetId, numberOfValues} = action.payload;\n        const request = state[facetId]?.request;\n        if (!request) {\n          return;\n        }\n        if (!request.currentValues.length) {\n          return handleFacetUpdateNumberOfValues<CategoryFacetRequest>(\n            request,\n            numberOfValues\n          );\n        }\n        handleCategoryFacetNestedNumberOfValuesUpdate(state, action.payload);\n      })\n      .addCase(selectCategoryFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facet = state[facetId];\n\n        if (!facet) {\n          return;\n        }\n\n        const path = [...value.path, value.rawValue];\n        selectPath(facet.request, path, facet.initialNumberOfValues);\n      })\n      .addCase(fetchFacetValues.fulfilled, (state, action) => {\n        handleCategoryFacetResponseUpdate(\n          state,\n          action.payload.response.facets\n        );\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        handleCategoryFacetResponseUpdate(\n          state,\n          action.payload.response.facets\n        );\n      })\n      .addCase(disableFacet, (state, action) => {\n        handleCategoryFacetDeselectAll(state, action.payload);\n      });\n  }\n);\n\nexport const defaultCategoryFacetOptions: CategoryFacetOptionalParameters = {\n  delimitingCharacter: ';',\n  filterFacetCount: true,\n  injectionDepth: 1000,\n  numberOfValues: 5,\n  sortCriteria: 'occurrences',\n  basePath: [],\n  filterByBasePath: true,\n  resultsMustMatch: 'atLeastOneValue',\n};\n\nfunction ensurePathAndReturnChildren(\n  request: CategoryFacetRequest,\n  path: string[],\n  retrieveCount: number\n) {\n  let children = request.currentValues;\n\n  for (const segment of path) {\n    let parent = children[0];\n    const missingParent = !parent;\n\n    if (missingParent || segment !== parent.value) {\n      parent = buildCategoryFacetValueRequest(segment, retrieveCount);\n      children.length = 0;\n      children.push(parent);\n    }\n\n    parent.retrieveChildren = false;\n    parent.state = 'idle';\n    children = parent.children;\n  }\n\n  return children;\n}\n\nfunction buildCategoryFacetRequest(\n  config: RegisterCategoryFacetActionCreatorPayload\n): CategoryFacetRequest {\n  return {\n    ...defaultCategoryFacetOptions,\n    currentValues: [],\n    preventAutoSelect: false,\n    type: 'hierarchical',\n    ...config,\n  };\n}\n\nfunction buildCategoryFacetValueRequest(\n  value: string,\n  retrieveCount: number\n): CategoryFacetValueRequest {\n  return {\n    value,\n    state: 'idle',\n    children: [],\n    retrieveChildren: true,\n    retrieveCount,\n  };\n}\n\nfunction handleCategoryFacetResponseUpdate(\n  state: CategoryFacetSetState,\n  facets: AnyFacetResponse[]\n) {\n  facets.forEach((response) => {\n    if (!isCategoryFacetResponse(state, response)) {\n      return;\n    }\n\n    const id = response.facetId;\n    const request = state[id]?.request;\n\n    if (!request) {\n      return;\n    }\n\n    const requestWasInvalid = isRequestInvalid(request, response);\n\n    request.currentValues = requestWasInvalid ? [] : request.currentValues;\n    request.preventAutoSelect = false;\n  });\n}\n\nfunction handleCategoryFacetNestedNumberOfValuesUpdate(\n  state: CategoryFacetSetState,\n  payload: {facetId: string; numberOfValues: number}\n) {\n  const {facetId, numberOfValues} = payload;\n  let selectedValue = state[facetId]?.request.currentValues[0];\n  if (!selectedValue) {\n    return;\n  }\n\n  while (selectedValue.children.length && selectedValue?.state !== 'selected') {\n    selectedValue = selectedValue.children[0];\n  }\n  selectedValue.retrieveCount = numberOfValues;\n}\n\nfunction isCategoryFacetResponse(\n  state: CategoryFacetSetState,\n  response: AnyFacetResponse\n): response is CategoryFacetResponse {\n  const id = response.facetId;\n  return id in state;\n}\n\nfunction isRequestInvalid(\n  request: CategoryFacetRequest,\n  response: CategoryFacetResponse\n) {\n  const requestParents = findActiveValueAncestry(request.currentValues);\n  const responseParents = findActiveValueAncestry(response.values);\n  return requestParents.length !== responseParents.length;\n}\n", "import {FacetSearchRequestOptions} from '../../../api/search/facet-search/base/base-facet-search-request';\nimport {FacetSearchResponse} from '../../../api/search/facet-search/facet-search-response';\nimport {FacetSearchOptions} from './facet-search-request-options';\n\nexport type FacetSearchState<T extends FacetSearchResponse> = {\n  /**\n   * The options used to perform a facet search request.\n   */\n  options: FacetSearchRequestOptions;\n  /**\n   * `true` if the facet search request is currently being executed against the Coveo platform, `false` otherwise.\n   */\n  isLoading: boolean;\n  /**\n   * The facet search response.\n   */\n  response: T;\n  /** The initial maximum number of values to fetch.\n   */\n  initialNumberOfValues: number;\n  /**\n   * The unique identifier of the current request.\n   */\n  requestId: string;\n};\n\nexport type FacetSearchSetState<T extends FacetSearchResponse> = Record<\n  string,\n  FacetSearchState<T>\n>;\n\nexport function handleFacetSearchRegistration<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: FacetSearchOptions,\n  buildEmptyResponse: () => T\n) {\n  const {facetId} = payload;\n\n  if (state[facetId]) {\n    return;\n  }\n\n  const isLoading = false;\n  const options = {...defaultFacetSearchOptions, ...payload};\n  const response = buildEmptyResponse();\n\n  state[facetId] = {\n    options,\n    isLoading,\n    response,\n    initialNumberOfValues: options.numberOfValues,\n    requestId: '',\n  };\n}\n\nexport function handleFacetSearchUpdate<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: FacetSearchOptions\n) {\n  const {facetId, ...rest} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.options = {...search.options, ...rest};\n}\n\nexport function handleFacetSearchPending<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  facetId: string,\n  requestId: string\n) {\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.requestId = requestId;\n  search.isLoading = true;\n}\n\nexport function handleFacetSearchRejected<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  facetId: string\n) {\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.isLoading = false;\n}\n\nexport function handleFacetSearchFulfilled<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: {facetId: string; response: T},\n  requestId: string\n) {\n  const {facetId, response} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  if (search.requestId !== requestId) {\n    return;\n  }\n\n  search.isLoading = false;\n  search.response = response;\n}\n\nexport function handleFacetSearchClear<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  payload: FacetSearchOptions,\n  buildEmptyResponse: () => T\n) {\n  const {facetId} = payload;\n  const search = state[facetId];\n\n  if (!search) {\n    return;\n  }\n\n  search.requestId = '';\n  search.isLoading = false;\n  search.response = buildEmptyResponse();\n  search.options.numberOfValues = search.initialNumberOfValues;\n  search.options.query = defaultFacetSearchOptions.query;\n}\n\nexport function handleFacetSearchSetClear<T extends FacetSearchResponse>(\n  state: FacetSearchSetState<T>,\n  buildEmptyResponse: () => T\n) {\n  Object.keys(state).forEach((facetId) =>\n    handleFacetSearchClear(state, {facetId}, buildEmptyResponse)\n  );\n}\n\nexport const defaultFacetSearchOptions: FacetSearchRequestOptions = {\n  captions: {},\n  numberOfValues: 10,\n  query: '',\n};\n", "import {CategoryFacetSearchRequest} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-request';\nimport {buildSearchRequest} from '../../../search/search-request';\nimport {CategoryFacetRequest} from '../../category-facet-set/interfaces/request';\nimport {StateNeededForCategoryFacetSearch} from '../generic/generic-facet-search-state';\n\nexport const buildCategoryFacetSearchRequest = async (\n  id: string,\n  state: StateNeededForCategoryFacetSearch,\n  isFieldSuggestionsRequest: boolean\n): Promise<CategoryFacetSearchRequest> => {\n  const options = state.categoryFacetSearchSet[id].options;\n  const categoryFacet = state.categoryFacetSet[id]!.request;\n\n  const {captions, query, numberOfValues} = options;\n  const {field, delimitingCharacter, basePath, filterFacetCount} =\n    categoryFacet;\n  const path = getPathToSelectedCategoryFacetItem(categoryFacet);\n  const ignorePaths = path.length ? [path] : [];\n  const newQuery = `*${query}*`;\n\n  return {\n    url: state.configuration.search.apiBaseUrl,\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n    basePath,\n    captions,\n    numberOfValues,\n    query: newQuery,\n    field,\n    delimitingCharacter,\n    ignorePaths,\n    filterFacetCount,\n    type: 'hierarchical',\n    ...(isFieldSuggestionsRequest\n      ? {}\n      : {searchContext: (await buildSearchRequest(state)).request}),\n  };\n};\n\nconst getPathToSelectedCategoryFacetItem = (\n  categoryFacet: CategoryFacetRequest\n): string[] => {\n  const path = [];\n  let selectedValue = categoryFacet.currentValues[0];\n  while (selectedValue) {\n    path.push(selectedValue.value);\n    selectedValue = selectedValue.children[0];\n  }\n  return path;\n};\n", "import {SpecificFacetSearchRequest} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-request';\nimport {buildSearchRequest} from '../../../search/search-request';\nimport {StateNeededForSpecificFacetSearch} from '../generic/generic-facet-search-state';\n\nexport const buildSpecificFacetSearchRequest = async (\n  id: string,\n  state: StateNeededForSpecificFacetSearch,\n  isFieldSuggestionsRequest: boolean\n): Promise<SpecificFacetSearchRequest> => {\n  const {captions, query, numberOfValues} = state.facetSearchSet[id].options;\n  const {field, currentValues, filterFacetCount} = state.facetSet[id]!.request;\n  const ignoreValues = currentValues\n    .filter((v) => v.state !== 'idle')\n    .map((facetValue) => facetValue.value);\n  const newQuery = `*${query}*`;\n\n  return {\n    url: state.configuration.search.apiBaseUrl,\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    ...(state.configuration.search.authenticationProviders && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n    captions,\n    numberOfValues,\n    query: newQuery,\n    field,\n    ignoreValues,\n    filterFacetCount,\n    type: 'specific',\n    ...(isFieldSuggestionsRequest\n      ? {}\n      : {searchContext: (await buildSearchRequest(state)).request}),\n  };\n};\n", "import {\n  AsyncThunkPayloadCreator,\n  createAction,\n  createAsyncThunk,\n} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchRequest} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-request';\nimport {FacetSearchResponse} from '../../../../api/search/facet-search/facet-search-response';\nimport {SpecificFacetSearchRequest} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-request';\nimport {FacetSearchAPIClient} from '../../../../api/search/search-api-client';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options';\nimport {ClientThunkExtraArguments} from '../../../../app/thunk-extra-arguments';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../../utils/validate-payload';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {buildCategoryFacetSearchRequest} from '../category/category-facet-search-request-builder';\nimport {buildSpecificFacetSearchRequest} from '../specific/specific-facet-search-request-builder';\nimport {\n  StateNeededForCategoryFacetSearch,\n  StateNeededForFacetSearch,\n  StateNeededForSpecificFacetSearch,\n} from './generic-facet-search-state';\n\ntype ExecuteFacetSearchThunkReturn = {\n  facetId: string;\n  response: FacetSearchResponse;\n};\ntype ExecuteFacetSearchThunkArg = string;\ntype ExecuteFacetSearchThunkApiConfig = AsyncThunkOptions<\n  StateNeededForFacetSearch,\n  ClientThunkExtraArguments<FacetSearchAPIClient>\n>;\n\nconst getExecuteFacetSearchThunkPayloadCreator =\n  (\n    isFieldSuggestionsRequest: boolean\n  ): AsyncThunkPayloadCreator<\n    ExecuteFacetSearchThunkReturn,\n    ExecuteFacetSearchThunkArg,\n    ExecuteFacetSearchThunkApiConfig\n  > =>\n  async (facetId: string, {getState, extra: {apiClient, validatePayload}}) => {\n    const state = getState();\n    let req: SpecificFacetSearchRequest | CategoryFacetSearchRequest;\n    validatePayload(facetId, requiredNonEmptyString);\n    if (isSpecificFacetSearchState(state, facetId)) {\n      req = await buildSpecificFacetSearchRequest(\n        facetId,\n        state,\n        isFieldSuggestionsRequest\n      );\n    } else {\n      req = await buildCategoryFacetSearchRequest(\n        facetId,\n        state as StateNeededForCategoryFacetSearch,\n        isFieldSuggestionsRequest\n      );\n    }\n\n    const response = await apiClient.facetSearch(req);\n\n    return {facetId, response};\n  };\n\nexport const executeFacetSearch = createAsyncThunk<\n  ExecuteFacetSearchThunkReturn,\n  string,\n  AsyncThunkOptions<\n    StateNeededForFacetSearch,\n    ClientThunkExtraArguments<FacetSearchAPIClient>\n  >\n>('facetSearch/executeSearch', getExecuteFacetSearchThunkPayloadCreator(false));\n\nexport const executeFieldSuggest = createAsyncThunk<\n  {facetId: string; response: FacetSearchResponse},\n  string,\n  AsyncThunkOptions<\n    StateNeededForFacetSearch,\n    ClientThunkExtraArguments<FacetSearchAPIClient>\n  >\n>('facetSearch/executeSearch', getExecuteFacetSearchThunkPayloadCreator(true)); // We use the same action type because this action is meant to be handled by reducers the same way.\n\nexport const clearFacetSearch = createAction(\n  'facetSearch/clearResults',\n  (payload: {facetId: string}) =>\n    validatePayload(payload, {facetId: facetIdDefinition})\n);\n\nconst isSpecificFacetSearchState = (\n  s: StateNeededForFacetSearch,\n  facetId: string\n): s is StateNeededForSpecificFacetSearch => {\n  return (\n    s.facetSearchSet !== undefined &&\n    s.facetSet !== undefined &&\n    s.facetSet[facetId] !== undefined\n  );\n};\n", "import {RecordValue, NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {SpecificFacetSearchResult} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response';\nimport {\n  validatePayload,\n  requiredEmptyAllowedString,\n} from '../../../../utils/validate-payload';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {FacetSearchOptions} from '../facet-search-request-options';\nimport {facetSearchOptionsDefinition} from '../generic/generic-facet-search-validate-payload';\n\nconst selectFacetSearchResultPayloadDefinition = {\n  facetId: facetIdDefinition,\n  value: new RecordValue({\n    values: {\n      displayValue: requiredEmptyAllowedString,\n      rawValue: requiredEmptyAllowedString,\n      count: new NumberValue({required: true, min: 0}),\n    },\n  }),\n};\n\ntype selectFacetSearchResultPayload = {\n  facetId: string;\n  value: SpecificFacetSearchResult;\n};\n\nexport const registerFacetSearch = createAction(\n  'facetSearch/register',\n  (payload: FacetSearchOptions) =>\n    validatePayload(payload, facetSearchOptionsDefinition)\n);\n\nexport const updateFacetSearch = createAction(\n  'facetSearch/update',\n  (payload: FacetSearchOptions) =>\n    validatePayload(payload, facetSearchOptionsDefinition)\n);\n\nexport const selectFacetSearchResult = createAction(\n  'facetSearch/toggleSelectValue',\n  (payload: selectFacetSearchResultPayload) =>\n    validatePayload(payload, selectFacetSearchResultPayloadDefinition)\n);\n\nexport const excludeFacetSearchResult = createAction(\n  'facetSearch/toggleExcludeValue',\n  (payload: selectFacetSearchResultPayload) =>\n    validatePayload(payload, selectFacetSearchResultPayloadDefinition)\n);\n", "import {CategoryFacetSearchResponse} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response';\nimport {\n  FacetSearchSetState,\n  FacetSearchState,\n} from '../facet-search-reducer-helpers';\n\nexport type CategoryFacetSearchState =\n  FacetSearchState<CategoryFacetSearchResponse>;\n\nexport type CategoryFacetSearchSetState =\n  FacetSearchSetState<CategoryFacetSearchResponse>;\n\nexport function getCategoryFacetSearchSetInitialState(): CategoryFacetSearchSetState {\n  return {};\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {CategoryFacetSearchResponse} from '../../../../api/search/facet-search/category-facet-search/category-facet-search-response';\nimport {executeSearch} from '../../../search/search-actions';\nimport {\n  handleFacetSearchRegistration,\n  handleFacetSearchUpdate,\n  handleFacetSearchPending,\n  handleFacetSearchRejected,\n  handleFacetSearchFulfilled,\n  handleFacetSearchClear,\n  handleFacetSearchSetClear,\n} from '../facet-search-reducer-helpers';\nimport {\n  clearFacetSearch,\n  executeFacetSearch,\n} from '../generic/generic-facet-search-actions';\nimport {updateFacetSearch} from '../specific/specific-facet-search-actions';\nimport {registerCategoryFacetSearch} from './category-facet-search-actions';\nimport {getCategoryFacetSearchSetInitialState} from './category-facet-search-set-state';\n\nexport const categoryFacetSearchSetReducer = createReducer(\n  getCategoryFacetSearchSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerCategoryFacetSearch, (state, action) => {\n        const payload = action.payload;\n        handleFacetSearchRegistration(state, payload, buildEmptyResponse);\n      })\n      .addCase(updateFacetSearch, (state, action) => {\n        handleFacetSearchUpdate(state, action.payload);\n      })\n      .addCase(executeFacetSearch.pending, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeFacetSearch.rejected, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchRejected(state, facetId);\n      })\n      .addCase(executeFacetSearch.fulfilled, (state, action) => {\n        handleFacetSearchFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId\n        );\n      })\n      .addCase(clearFacetSearch, (state, {payload: {facetId}}) => {\n        handleFacetSearchClear(state, {facetId}, buildEmptyResponse);\n      })\n      .addCase(executeSearch.fulfilled, (state) => {\n        handleFacetSearchSetClear(state, buildEmptyResponse);\n      });\n  }\n);\n\nfunction buildEmptyResponse(): CategoryFacetSearchResponse {\n  return {\n    moreValuesAvailable: false,\n    values: [],\n  };\n}\n", "import {Value} from '@coveo/bueno';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n} from '../../../utils/validate-payload';\nimport {\n  makeAnalyticsAction,\n  SearchAction,\n} from '../../analytics/analytics-utils';\nimport {facetIdDefinition} from '../generic/facet-actions-validation';\nimport {RangeFacetSortCriterion} from '../range-facets/generic/interfaces/request';\nimport {\n  buildFacetBaseMetadata,\n  getStateNeededForFacetMetadata,\n  buildFacetSelectionChangeMetadata,\n} from './facet-set-analytics-actions-utils';\nimport {FacetSortCriterion} from './interfaces/request';\n\nexport const logFacetShowMore = (facetId: string): SearchAction =>\n  makeAnalyticsAction('analytics/facet/showMore', (client, state) => {\n    validatePayload(facetId, facetIdDefinition);\n    const metadata = buildFacetBaseMetadata(\n      facetId,\n      getStateNeededForFacetMetadata(state)\n    );\n    return client.makeFacetShowMore(metadata);\n  });\n\nexport const logFacetShowLess = (facetId: string): SearchAction =>\n  makeAnalyticsAction('analytics/facet/showLess', (client, state) => {\n    validatePayload(facetId, facetIdDefinition);\n    const metadata = buildFacetBaseMetadata(\n      facetId,\n      getStateNeededForFacetMetadata(state)\n    );\n\n    return client.makeFacetShowLess(metadata);\n  });\n\nexport interface LogFacetUpdateSortActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The updated sort criterion.\n   */\n  criterion: FacetSortCriterion | RangeFacetSortCriterion;\n}\n\n//TODO: KIT-2859\nexport const logFacetUpdateSort = (\n  payload: LogFacetUpdateSortActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/facet/sortChange', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      criterion: new Value<FacetSortCriterion | RangeFacetSortCriterion>({\n        required: true,\n      }),\n    });\n\n    const {facetId, criterion} = payload;\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n\n    const base = buildFacetBaseMetadata(facetId, stateForAnalytics);\n    const metadata = {...base, criteria: criterion};\n\n    return client.makeFacetUpdateSort(metadata);\n  });\n\n//TODO: KIT-2859\nexport const logFacetClearAll = (facetId: string): SearchAction =>\n  makeAnalyticsAction('analytics/facet/reset', (client, state) => {\n    validatePayload(facetId, facetIdDefinition);\n\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetBaseMetadata(facetId, stateForAnalytics);\n\n    return client.makeFacetClearAll(metadata);\n  });\n\nexport interface LogFacetSelectActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The facet value that was selected.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetSelect = (\n  payload: LogFacetSelectActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/facet/select', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetSelect(metadata);\n  });\n\n//TODO: KIT-2859\nexport const logFacetExclude = (\n  payload: LogFacetSelectActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/facet/exclude', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetExclude(metadata);\n  });\n\nexport interface LogFacetDeselectActionCreatorPayload {\n  /**\n   * The facet id.\n   */\n  facetId: string;\n\n  /**\n   * The facet value that was deselected.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetDeselect = (\n  payload: LogFacetDeselectActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/facet/deselect', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n    const stateForAnalytics = getStateNeededForFacetMetadata(state);\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      stateForAnalytics\n    );\n\n    return client.makeFacetDeselect(metadata);\n  });\n\nexport interface LogFacetBreadcrumbActionCreatorPayload {\n  /**\n   * The facet id associated with the breadcrumb.\n   */\n  facetId: string;\n\n  /**\n   * The facet value displayed in the breadcrumb.\n   */\n  facetValue: string;\n}\n\n//TODO: KIT-2859\nexport const logFacetBreadcrumb = (\n  payload: LogFacetBreadcrumbActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/facet/breadcrumb', (client, state) => {\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      facetValue: requiredNonEmptyString,\n    });\n    const metadata = buildFacetSelectionChangeMetadata(\n      payload,\n      getStateNeededForFacetMetadata(state)\n    );\n\n    return client.makeBreadcrumbFacet(metadata);\n  });\n", "import {FacetOptionsSection} from '../../state/state-sections';\n\nexport const isFacetEnabledSelector = (\n  state: FacetOptionsSection,\n  id: string\n) => {\n  return state.facetOptions.facets[id]?.enabled ?? true;\n};\n", "import {\n  ArrayValue,\n  BooleanValue,\n  NumberValue,\n  RecordValue,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {FacetSearchRequestOptions} from '../../../../api/search/facet-search/base/base-facet-search-request';\n\nexport const facetId = new StringValue({\n  regex: /^[a-zA-Z0-9-_]+$/,\n});\nexport const field = new StringValue({required: true});\nexport const basePath = new ArrayValue({\n  each: new StringValue(),\n});\n\nexport const delimitingCharacter = new StringValue();\nexport const filterByBasePath = new BooleanValue();\nexport const filterFacetCount = new BooleanValue();\nexport const injectionDepth = new NumberValue({min: 0});\nexport const numberOfValues = new NumberValue({min: 1});\nexport const generateAutomaticRanges = new BooleanValue({\n  required: true,\n}) as never;\n\nexport const captions = new RecordValue();\nexport const query = new StringValue();\n\nconst facetSearchOptionDefinitions: SchemaDefinition<FacetSearchRequestOptions> =\n  {\n    captions,\n    numberOfValues,\n    query,\n  };\n\nexport const facetSearch = new RecordValue({\n  values: facetSearchOptionDefinitions,\n});\n\nexport const allowedValues = new RecordValue({\n  options: {required: false},\n  values: {\n    type: new StringValue({\n      constrainTo: ['simple'],\n      emptyAllowed: false,\n      required: true,\n    }),\n    values: new ArrayValue({\n      required: true,\n      max: 25,\n      each: new StringValue({emptyAllowed: false, required: true}),\n    }),\n  },\n});\n\nexport const hasBreadcrumbs = new BooleanValue();\n\nexport const customSort = new ArrayValue({\n  min: 1,\n  max: 25,\n  required: false,\n  each: new StringValue({emptyAllowed: false, required: true}),\n});\n", "import {NumberValue} from '@coveo/bueno';\nimport {requiredNonEmptyString} from '../../../utils/validate-payload';\n\nexport const facetValueDefinition = {\n  value: requiredNonEmptyString,\n  numberOfResults: new NumberValue({min: 0}),\n  state: requiredNonEmptyString,\n};\n", "import {\n  StringValue,\n  NumberValue,\n  BooleanValue,\n  RecordValue,\n  Value,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  allowedValues,\n  customSort,\n} from '../../../controllers/core/facets/_common/facet-option-definitions';\nimport {validatePayload} from '../../../utils/validate-payload';\nimport {FacetResultsMustMatch} from '../facet-api/request';\nimport {facetIdDefinition} from '../generic/facet-actions-validation';\nimport {facetValueDefinition} from './facet-set-validate-payload';\nimport {FacetSortCriterion} from './interfaces/request';\nimport {FacetValue} from './interfaces/response';\n\nexport interface RegisterFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the facet.\n   * */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   * Learn more about `sortCriteria` values and the default behavior of specific facets in the [Search API documentation](https://docs.coveo.com/en/1461/build-a-search-ui/query-parameters#RestFacetRequest-sortCriteria).\n   *\n   * @defaultValue `automatic`\n   */\n  sortCriteria?: FacetSortCriterion;\n\n  /**\n   * Specifies an explicit list of `allowedValues` in the Search API request.\n   *\n   * If you specify a list of values for this option, the facet uses only these values (if they are available in\n   * the current result set).\n   *\n   * The maximum amount of allowed values is 25.\n   *\n   * Default value is `undefined`, and the facet uses all available values for its `field` in the current result set.\n   */\n  allowedValues?: {\n    type: 'simple';\n    values: string[];\n  };\n  /**\n   * Identifies the facet values that must appear at the top, in this order.\n   * This parameter can be used in conjunction with the `sortCriteria` parameter.\n   *\n   * Facet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n   *\n   * The maximum amount of custom sort values is 25.\n   *\n   * The default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`.\n   */\n  customSort?: string[];\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch?: FacetResultsMustMatch;\n}\n\nconst facetRegistrationOptionsDefinition = {\n  facetId: facetIdDefinition,\n  field: new StringValue({required: true, emptyAllowed: true}),\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<FacetSortCriterion>({required: false}),\n  resultsMustMatch: new Value<FacetResultsMustMatch>({required: false}),\n  allowedValues: allowedValues,\n  customSort: customSort,\n};\n\nexport const registerFacet = createAction(\n  'facet/register',\n  (payload: RegisterFacetActionCreatorPayload) =>\n    validatePayload(payload, facetRegistrationOptionsDefinition)\n);\n\nexport interface ToggleSelectFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target facet value.\n   */\n  selection: FacetValue;\n}\n\nexport const toggleSelectFacetValue = createAction(\n  'facet/toggleSelectValue',\n  (payload: ToggleSelectFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n\nexport const toggleExcludeFacetValue = createAction(\n  'facet/toggleExcludeValue',\n  (payload: ToggleSelectFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n\nexport const deselectAllFacetValues = createAction(\n  'facet/deselectAll',\n  (payload: string) => validatePayload(payload, facetIdDefinition)\n);\n\nexport interface UpdateFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The criterion by which to sort the facet.\n   */\n  criterion: FacetSortCriterion;\n}\n\nexport const updateFacetSortCriterion = createAction(\n  'facet/updateSortCriterion',\n  (payload: UpdateFacetSortCriterionActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      criterion: new Value<FacetSortCriterion>({required: true}),\n    })\n);\n\nexport interface UpdateFacetNumberOfValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The new number of facet values (e.g., `10`).\n   */\n  numberOfValues: number;\n}\n\nexport const updateFacetNumberOfValues = createAction(\n  'facet/updateNumberOfValues',\n  (payload: UpdateFacetNumberOfValuesActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      numberOfValues: new NumberValue({required: true, min: 1}),\n    })\n);\n\nexport interface UpdateFacetIsFieldExpandedActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * Whether to expand or shrink down the facet.\n   */\n  isFieldExpanded: boolean;\n}\n\nexport const updateFacetIsFieldExpanded = createAction(\n  'facet/updateIsFieldExpanded',\n  (payload: UpdateFacetIsFieldExpandedActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      isFieldExpanded: new BooleanValue({required: true}),\n    })\n);\n\nexport interface UpdateFreezeCurrentValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * Whether the values should be frozen in the next request.\n   */\n  freezeCurrentValues: boolean;\n}\n\nexport const updateFreezeCurrentValues = createAction(\n  'facet/updateFreezeCurrentValues',\n  (payload: UpdateFreezeCurrentValuesActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      freezeCurrentValues: new BooleanValue({required: true}),\n    })\n);\n", "import {\n  formatDateForSearchApi,\n  AbsoluteDate,\n  validateAbsoluteDate,\n  parseDate,\n} from '../../../../../api/search/date/date-format';\nimport {\n  serializeRelativeDate,\n  isRelativeDate,\n  isRelativeDateFormat,\n  RelativeDate,\n  validateRelativeDate,\n} from '../../../../../api/search/date/relative-date';\nimport {FacetValueState} from '../../../../../features/facets/facet-api/value';\nimport {DateRangeRequest} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/request';\n\nexport type DateRangeInput = AbsoluteDate | RelativeDate;\n\nexport interface DateRangeOptions {\n  /**\n   * The starting value for the date range. A date range can be either absolute or [relative](https://docs.coveo.com/en/headless/latest/reference/search/search-date-facet-controller/relative-date-format/).\n   */\n  start: DateRangeInput;\n\n  /**\n   * The ending value for the date range. A date range can be either absolute or [relative](https://docs.coveo.com/en/headless/latest/reference/search/search-date-facet-controller/relative-date-format/).\n   */\n  end: DateRangeInput;\n\n  /**\n   * Whether to include the end value in the range.\n   *\n   * @defaultValue `false`\n   */\n  endInclusive?: boolean;\n\n  /**\n   * The current facet value state.\n   *\n   * @defaultValue `idle`\n   */\n  state?: FacetValueState;\n\n  /**\n   * Allows specifying a custom string date format. See [Day.js](https://day.js.org/docs/en/parse/string-format#list-of-all-available-parsing-tokens) for possible parsing tokens. Assumes [ISO 8601](https://day.js.org/docs/en/parse/string) format by default.\n   */\n  dateFormat?: string;\n}\n\n/**\n * Creates a `DateRangeRequest`.\n *\n * @param config - The options with which to create a `DateRangeRequest`.\n * @returns A new `DateRangeRequest`.\n */\nexport function buildDateRange(config: DateRangeOptions): DateRangeRequest {\n  const start = buildDate(config.start, config);\n  const end = buildDate(config.end, config);\n  const endInclusive = config.endInclusive ?? false;\n  const state = config.state ?? 'idle';\n\n  return {\n    start,\n    end,\n    endInclusive,\n    state,\n  };\n}\n\nfunction buildDate(rawDate: DateRangeInput, options: DateRangeOptions) {\n  const {dateFormat} = options;\n  if (isRelativeDate(rawDate)) {\n    validateRelativeDate(rawDate);\n    return serializeRelativeDate(rawDate);\n  }\n\n  if (typeof rawDate === 'string' && isRelativeDateFormat(rawDate)) {\n    validateRelativeDate(rawDate);\n    return rawDate;\n  }\n\n  validateAbsoluteDate(rawDate, dateFormat);\n  return formatDateForSearchApi(parseDate(rawDate, dateFormat));\n}\n", "import {Value} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../../utils/validate-payload';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {RangeFacetSortCriterion} from './interfaces/request';\n\nexport const updateRangeFacetSortCriterion = createAction(\n  'rangeFacet/updateSortCriterion',\n  (payload: {facetId: string; criterion: RangeFacetSortCriterion}) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      criterion: new Value<RangeFacetSortCriterion>({required: true}),\n    })\n);\n", "import {NumberValue, BooleanValue, RecordValue} from '@coveo/bueno';\nimport {requiredNonEmptyString} from '../../../../utils/validate-payload';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {RangeFacetValue} from './interfaces/range-facet';\n\nexport const numericFacetValueDefinition = {\n  state: requiredNonEmptyString,\n  start: new NumberValue({required: true}),\n  end: new NumberValue({required: true}),\n  endInclusive: new BooleanValue({required: true}),\n  numberOfResults: new NumberValue({required: true, min: 0}),\n};\n\nexport const dateFacetValueDefinition = {\n  start: requiredNonEmptyString,\n  end: requiredNonEmptyString,\n  endInclusive: new BooleanValue({required: true}),\n  state: requiredNonEmptyString,\n  numberOfResults: new NumberValue({required: true, min: 0}),\n};\n\nexport const rangeFacetSelectionPayloadDefinition = (\n  selection: RangeFacetValue\n) => ({\n  facetId: facetIdDefinition,\n  selection:\n    typeof selection.start === 'string'\n      ? new RecordValue({values: dateFacetValueDefinition})\n      : new RecordValue({values: numericFacetValueDefinition}),\n});\n\nexport interface RangeFacetSelectionPayload {\n  facetId: string;\n  selection: RangeFacetValue;\n}\n", "import {\n  NumberValue,\n  BooleanValue,\n  RecordValue,\n  Value,\n  ArrayValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {parseDate} from '../../../../api/search/date/date-format';\nimport {\n  formatRelativeDateForSearchApi,\n  isRelativeDateFormat,\n} from '../../../../api/search/date/relative-date';\nimport {buildDateRange} from '../../../../controllers/core/facets/range-facet/date-facet/date-range';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  validatePayloadAndThrow,\n  serializeSchemaValidationError,\n} from '../../../../utils/validate-payload';\nimport {deselectAllFacetValues} from '../../facet-set/facet-set-actions';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {\n  RangeFacetSortCriterion,\n  RangeFacetRangeAlgorithm,\n} from '../generic/interfaces/request';\nimport {updateRangeFacetSortCriterion} from '../generic/range-facet-actions';\nimport {dateFacetValueDefinition} from '../generic/range-facet-validate-payload';\nimport {DateRangeRequest} from './interfaces/request';\nimport {DateFacetValue} from './interfaces/response';\n\nexport interface RegisterDateFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the facet.\n   */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: DateRangeRequest[];\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The range algorithm to apply to automatically generated ranges for the range facet.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst dateRangeRequestDefinition = {\n  start: requiredNonEmptyString,\n  end: requiredNonEmptyString,\n  endInclusive: new BooleanValue({required: true}),\n  state: requiredNonEmptyString,\n};\n\nconst dateFacetRegistrationOptionsDefinition = {\n  facetId: facetIdDefinition,\n  field: requiredNonEmptyString,\n  currentValues: new ArrayValue({\n    required: false,\n    each: new RecordValue({values: dateRangeRequestDefinition}),\n  }),\n  generateAutomaticRanges: new BooleanValue({required: true}) as never,\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<RangeFacetSortCriterion>({required: false}),\n  rangeAlgorithm: new Value<RangeFacetRangeAlgorithm>({required: false}),\n};\n\nfunction getAbsoluteDate(date: string) {\n  return isRelativeDateFormat(date)\n    ? formatRelativeDateForSearchApi(date)\n    : date;\n}\n\nexport function validateManualDateRanges(\n  options: Pick<RegisterDateFacetActionCreatorPayload, 'currentValues'>\n) {\n  if (!options.currentValues) {\n    return;\n  }\n\n  options.currentValues.forEach((value) => {\n    const {start, end} = buildDateRange(value);\n    if (\n      parseDate(getAbsoluteDate(start)).isAfter(parseDate(getAbsoluteDate(end)))\n    ) {\n      throw new Error(\n        `The start value is greater than the end value for the date range ${value.start} to ${value.end}`\n      );\n    }\n  });\n}\n\nexport const registerDateFacet = createAction(\n  'dateFacet/register',\n  (payload: RegisterDateFacetActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, dateFacetRegistrationOptionsDefinition);\n      validateManualDateRanges(payload);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface ToggleSelectDateFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target date facet value.\n   */\n  selection: DateFacetValue;\n}\n\nexport const toggleSelectDateFacetValue = createAction(\n  'dateFacet/toggleSelectValue',\n  (payload: ToggleSelectDateFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: dateFacetValueDefinition}),\n    })\n);\n\nexport const toggleExcludeDateFacetValue = createAction(\n  'dateFacet/toggleExcludeValue',\n  (payload: ToggleSelectDateFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: dateFacetValueDefinition}),\n    })\n);\n\nexport interface UpdateDateFacetValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The date facet values.\n   */\n  values: DateFacetValue[];\n}\n\nexport const updateDateFacetValues = createAction(\n  'dateFacet/updateFacetValues',\n  (payload: UpdateDateFacetValuesActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, {\n        facetId: facetIdDefinition,\n        values: new ArrayValue({\n          each: new RecordValue({values: dateFacetValueDefinition}),\n        }),\n      });\n      validateManualDateRanges({currentValues: payload.values});\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface UpdateDateFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target criterion.\n   */\n  criterion: RangeFacetSortCriterion;\n}\n\nexport const updateDateFacetSortCriterion = updateRangeFacetSortCriterion;\n\nexport const deselectAllDateFacetValues = deselectAllFacetValues;\n", "import {\n  RecordValue,\n  NumberValue,\n  BooleanValue,\n  Value,\n  ArrayValue,\n} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  serializeSchemaValidationError,\n  validatePayloadAndThrow,\n} from '../../../../utils/validate-payload';\nimport {deselectAllFacetValues} from '../../facet-set/facet-set-actions';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {\n  RangeFacetRangeAlgorithm,\n  RangeFacetSortCriterion,\n} from '../generic/interfaces/request';\nimport {updateRangeFacetSortCriterion} from '../generic/range-facet-actions';\nimport {numericFacetValueDefinition} from '../generic/range-facet-validate-payload';\nimport {NumericRangeRequest} from './interfaces/request';\nimport {NumericFacetValue} from './interfaces/response';\n\nexport interface RegisterNumericFacetActionCreatorPayload {\n  /**\n   * A unique identifier for the numeric facet.\n   */\n  facetId: string;\n\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: NumericRangeRequest[];\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The range algorithm to apply to automatically generated ranges for the range facet.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst numericFacetRequestDefinition = {\n  state: requiredNonEmptyString,\n  start: new NumberValue({required: true}),\n  end: new NumberValue({required: true}),\n  endInclusive: new BooleanValue({required: true}),\n};\n\nconst numericFacetRegistrationOptionsDefinition = {\n  facetId: facetIdDefinition,\n  field: requiredNonEmptyString,\n  currentValues: new ArrayValue({\n    required: false,\n    each: new RecordValue({values: numericFacetRequestDefinition}),\n  }),\n  generateAutomaticRanges: new BooleanValue({required: true}) as never,\n  filterFacetCount: new BooleanValue({required: false}),\n  injectionDepth: new NumberValue({required: false, min: 0}),\n  numberOfValues: new NumberValue({required: false, min: 1}),\n  sortCriteria: new Value<RangeFacetSortCriterion>({required: false}),\n  rangeAlgorithm: new Value<RangeFacetRangeAlgorithm>({required: false}),\n};\n\nexport function validateManualNumericRanges(\n  options: Pick<RegisterNumericFacetActionCreatorPayload, 'currentValues'>\n) {\n  if (!options.currentValues) {\n    return;\n  }\n\n  options.currentValues.forEach(({start, end}) => {\n    if (start > end) {\n      throw new Error(\n        `The start value is greater than the end value for the numeric range ${start} to ${end}`\n      );\n    }\n  });\n}\n\nexport const registerNumericFacet = createAction(\n  'numericFacet/register',\n  (payload: RegisterNumericFacetActionCreatorPayload) => {\n    try {\n      validatePayload(payload, numericFacetRegistrationOptionsDefinition);\n      validateManualNumericRanges(payload);\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface ToggleSelectNumericFacetValueActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target numeric facet value.\n   */\n  selection: NumericFacetValue;\n}\n\nexport const toggleSelectNumericFacetValue = createAction(\n  'numericFacet/toggleSelectValue',\n  (payload: ToggleSelectNumericFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: numericFacetValueDefinition}),\n    })\n);\n\nexport const toggleExcludeNumericFacetValue = createAction(\n  'numericFacet/toggleExcludeValue',\n  (payload: ToggleSelectNumericFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      facetId: facetIdDefinition,\n      selection: new RecordValue({values: numericFacetValueDefinition}),\n    })\n);\n\nexport interface UpdateNumericFacetValuesActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The numeric facet values.\n   */\n  values: NumericFacetValue[];\n}\n\nexport const updateNumericFacetValues = createAction(\n  'numericFacet/updateFacetValues',\n  (payload: UpdateNumericFacetValuesActionCreatorPayload) => {\n    try {\n      validatePayloadAndThrow(payload, {\n        facetId: facetIdDefinition,\n        values: new ArrayValue({\n          each: new RecordValue({values: numericFacetValueDefinition}),\n        }),\n      });\n      validateManualNumericRanges({currentValues: payload.values});\n      return {payload, error: null};\n    } catch (error) {\n      return {payload, error: serializeSchemaValidationError(error as Error)};\n    }\n  }\n);\n\nexport interface UpdateNumericFacetSortCriterionActionCreatorPayload {\n  /**\n   * The unique identifier of the facet (e.g., `\"1\"`).\n   */\n  facetId: string;\n\n  /**\n   * The target criterion.\n   */\n  criterion: RangeFacetSortCriterion;\n}\n\nexport const updateNumericFacetSortCriterion = updateRangeFacetSortCriterion;\n\nexport const deselectAllNumericFacetValues = deselectAllFacetValues;\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {registerCategoryFacet} from '../facets/category-facet-set/category-facet-set-actions';\nimport {registerFacet} from '../facets/facet-set/facet-set-actions';\nimport {registerDateFacet} from '../facets/range-facets/date-facet-set/date-facet-actions';\nimport {registerNumericFacet} from '../facets/range-facets/numeric-facet-set/numeric-facet-actions';\nimport {change} from '../history/history-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {executeSearch} from '../search/search-actions';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from './facet-options-actions';\nimport {\n  getFacetOptionsSliceInitialState,\n  getFacetOptionsInitialState,\n} from './facet-options-state';\n\nexport const facetOptionsReducer = createReducer(\n  getFacetOptionsInitialState(),\n  (builder) => {\n    builder\n      .addCase(updateFacetOptions, (state, action) => {\n        return {...state, ...action.payload};\n      })\n      .addCase(executeSearch.fulfilled, (state) => {\n        state.freezeFacetOrder = false;\n      })\n      .addCase(executeSearch.rejected, (state) => {\n        state.freezeFacetOrder = false;\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.facetOptions ?? state\n      )\n      .addCase(registerCategoryFacet, (state, action) => {\n        state.facets[action.payload.facetId] =\n          getFacetOptionsSliceInitialState();\n      })\n      .addCase(registerFacet, (state, action) => {\n        state.facets[action.payload.facetId] =\n          getFacetOptionsSliceInitialState();\n      })\n      .addCase(registerDateFacet, (state, action) => {\n        state.facets[action.payload.facetId] =\n          getFacetOptionsSliceInitialState();\n      })\n      .addCase(registerNumericFacet, (state, action) => {\n        state.facets[action.payload.facetId] =\n          getFacetOptionsSliceInitialState();\n      })\n      .addCase(enableFacet, (state, action) => {\n        state.facets[action.payload].enabled = true;\n      })\n      .addCase(disableFacet, (state, action) => {\n        state.facets[action.payload].enabled = false;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        [\n          ...Object.keys(action.payload.f ?? {}),\n          ...Object.keys(action.payload.fExcluded ?? {}),\n          ...Object.keys(action.payload.cf ?? {}),\n          ...Object.keys(action.payload.nf ?? {}),\n          ...Object.keys(action.payload.df ?? {}),\n        ].forEach((facetId) => {\n          if (!(facetId in state)) {\n            state.facets[facetId] = getFacetOptionsSliceInitialState();\n          }\n          state.facets[facetId].enabled = true;\n        });\n      });\n  }\n);\n", "import {Logger} from 'pino';\nimport {AllFacetSections} from '../../../../features/facets/generic/interfaces/generic-facet-section';\n\nexport interface FacetIdConfig {\n  field: string;\n  state: Partial<AllFacetSections>;\n}\n\nexport function generateFacetId(config: FacetIdConfig, logger: Logger) {\n  const {field, state} = config;\n\n  if (!isFieldUsedAsFacetId(config)) {\n    return field;\n  }\n\n  const prefix = `${field}_`;\n  const id = calculateId(prefix, state);\n\n  logWarningMessage(field, logger);\n\n  return `${prefix}${id}`;\n}\n\nfunction isFieldUsedAsFacetId(config: FacetIdConfig) {\n  const {field, state} = config;\n  const sets = extractFacetSets(state);\n\n  return sets.some((set) => set && field in set);\n}\n\nfunction calculateId(prefix: string, state: Partial<AllFacetSections>) {\n  const sets = extractFacetSets(state);\n  const keys = sets\n    .map((set) => Object.keys(set || {}))\n    .reduce((all, current) => all.concat(current), []);\n\n  return findMaxId(keys, prefix) + 1;\n}\n\nfunction extractFacetSets(state: Partial<AllFacetSections>) {\n  const {facetSet, numericFacetSet, dateFacetSet, categoryFacetSet} = state;\n  return [facetSet, numericFacetSet, dateFacetSet, categoryFacetSet];\n}\n\nfunction findMaxId(keys: string[], prefix: string) {\n  const defaultId = 0;\n  const ids = keys.map((key) => {\n    const stringId = key.split(prefix)[1];\n    const id = parseInt(stringId, 10);\n    return Number.isNaN(id) ? defaultId : id;\n  });\n\n  const lastNumber = ids.sort().pop();\n  return lastNumber ?? defaultId;\n}\n\nfunction logWarningMessage(field: string, logger: Logger) {\n  const message = `A facet with field \"${field}\" already exists.\n  To avoid unexpected behaviour, configure the #id option on the facet controller.`;\n\n  logger.warn(message);\n}\n", "import {CoreEngine} from '../../../../app/engine';\nimport {AllFacetSections} from '../../../../features/facets/generic/interfaces/generic-facet-section';\nimport {generateFacetId} from './facet-id-generator';\n\ninterface FacetIdConfig {\n  facetId?: string;\n  field: string;\n}\n\nexport function determineFacetId(\n  engine: CoreEngine<Partial<AllFacetSections>>,\n  config: FacetIdConfig\n) {\n  const {state, logger} = engine;\n  const {field, facetId} = config;\n  return facetId || generateFacetId({field, state}, logger);\n}\n", "import {\n  BaseFacetRequest,\n  CurrentValues,\n  Delimitable,\n  Type,\n  SortCriteria,\n  BaseFacetValueRequest,\n} from '../../facet-api/request';\nimport {CategoryFacetValueCommon} from './commons';\n\nexport const categoryFacetSortCriteria: CategoryFacetSortCriterion[] = [\n  'alphanumeric',\n  'occurrences',\n];\nexport type CategoryFacetSortCriterion = 'alphanumeric' | 'occurrences';\n\nexport interface CategoryFacetValueRequest\n  extends BaseFacetValueRequest,\n    CategoryFacetValueCommon {\n  children: CategoryFacetValueRequest[];\n  retrieveChildren: boolean;\n  retrieveCount: number;\n}\n\nexport interface CategoryFacetRequest\n  extends BaseFacetRequest,\n    CurrentValues<CategoryFacetValueRequest>,\n    Delimitable,\n    Type<'hierarchical'>,\n    SortCriteria<CategoryFacetSortCriterion> {\n  /** @defaultValue `5` */\n  numberOfValues: number;\n  /** @defaultValue `;` */\n  delimitingCharacter: string;\n  /** @defaultValue `occurrences` */\n  sortCriteria: CategoryFacetSortCriterion;\n  /** The base path shared by all values for the facet.\n   * @defaultValue `[]`\n   */\n  basePath: string[];\n  /** Whether to use basePath as a filter for the results.\n   * @defaultValue `true`\n   */\n  filterByBasePath: boolean;\n}\n", "import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  categoryFacetSortCriteria,\n  CategoryFacetSortCriterion,\n} from '../../../../features/facets/category-facet-set/interfaces/request';\nimport {\n  facetId,\n  field,\n  basePath,\n  delimitingCharacter,\n  filterByBasePath,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  facetSearch,\n} from '../_common/facet-option-definitions';\n\nexport interface CategoryFacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * The base path shared by all values for the facet.\n   *\n   * @defaultValue `[]`\n   */\n  basePath?: string[];\n\n  /**\n   * The character that specifies the hierarchical dependency.\n   *\n   * @defaultValue `;`\n   */\n  delimitingCharacter?: string;\n\n  /**\n   * A unique identifier for the controller. By default, a random unique ID is generated.\n   * */\n  facetId?: string;\n\n  /**\n   * Facet search options.\n   */\n  facetSearch?: CategoryFacetSearchOptions;\n\n  /**\n   * Whether to filter the results using `basePath`.\n   *\n   * @defaultValue `true`\n   */\n  filterByBasePath?: boolean;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all of the potential facet values.\n   *\n   * **Note:** A high `injectionDepth` may reduce facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. This option also determines the number of additional values to request each time this facet is expanded, as well as the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `5`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   *\n   * @defaultValue `occurrences`\n   */\n  sortCriteria?: CategoryFacetSortCriterion;\n}\n\nexport interface CategoryFacetSearchOptions {\n  /**\n   * A dictionary that maps index field values to facet value display names.\n   */\n  captions?: Record<string, string>;\n\n  /**\n   * The maximum number of values to fetch.\n   *\n   * @defaultValue `10`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The string to match.\n   */\n  query?: string;\n}\n\nexport const categoryFacetOptionsSchema = new Schema<\n  Required<CategoryFacetOptions>\n>({\n  field,\n  basePath,\n  delimitingCharacter,\n  facetId,\n  facetSearch,\n  filterByBasePath,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  sortCriteria: new StringValue<CategoryFacetSortCriterion>({\n    constrainTo: categoryFacetSortCriteria,\n  }),\n});\n", "import {configuration} from '../../../../app/common-reducers';\nimport {CoreEngine} from '../../../../app/engine';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from '../../../../features/facet-options/facet-options-actions';\nimport {isFacetEnabledSelector} from '../../../../features/facet-options/facet-options-selectors';\nimport {facetOptionsReducer as facetOptions} from '../../../../features/facet-options/facet-options-slice';\nimport {\n  deselectAllCategoryFacetValues,\n  registerCategoryFacet,\n  toggleSelectCategoryFacetValue,\n  updateCategoryFacetNumberOfValues,\n  updateCategoryFacetSortCriterion,\n} from '../../../../features/facets/category-facet-set/category-facet-set-actions';\nimport {categoryFacetResponseSelector} from '../../../../features/facets/category-facet-set/category-facet-set-selectors';\nimport {categoryFacetRequestSelector} from '../../../../features/facets/category-facet-set/category-facet-set-selectors';\nimport {defaultCategoryFacetOptions} from '../../../../features/facets/category-facet-set/category-facet-set-slice';\nimport {categoryFacetSetReducer as categoryFacetSet} from '../../../../features/facets/category-facet-set/category-facet-set-slice';\nimport {\n  findActiveValueAncestry,\n  partitionIntoParentsAndValues,\n} from '../../../../features/facets/category-facet-set/category-facet-utils';\nimport {CategoryFacetSortCriterion} from '../../../../features/facets/category-facet-set/interfaces/request';\nimport {\n  CategoryFacetValue,\n  CategoryFacetValueCommon,\n} from '../../../../features/facets/category-facet-set/interfaces/response';\nimport {categoryFacetSearchSetReducer as categoryFacetSearchSet} from '../../../../features/facets/facet-search-set/category/category-facet-search-set-slice';\nimport {defaultFacetSearchOptions} from '../../../../features/facets/facet-search-set/facet-search-reducer-helpers';\nimport {isFacetLoadingResponseSelector} from '../../../../features/facets/facet-set/facet-set-selectors';\nimport {searchReducer as search} from '../../../../features/search/search-slice';\nimport {\n  CategoryFacetSearchSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  FacetOptionsSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {loadReducerError} from '../../../../utils/errors';\nimport {omit} from '../../../../utils/utils';\nimport {validateOptions} from '../../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../../controller/headless-controller';\nimport {determineFacetId} from '../_common/facet-id-determinor';\nimport {\n  CategoryFacetOptions,\n  categoryFacetOptionsSchema,\n  CategoryFacetSearchOptions,\n} from './headless-core-category-facet-options';\n\nexport type {\n  CategoryFacetValueCommon,\n  CategoryFacetValue,\n  CategoryFacetOptions,\n  CategoryFacetSearchOptions,\n};\n\nexport interface CategoryFacetProps {\n  /** The options for the `CategoryFacet` controller. */\n  options: CategoryFacetOptions;\n}\n\n/**\n * The `CategoryFacet` headless controller offers a high-level interface for designing a facet UI controller that renders values hierarchically.\n */\nexport interface CategoryFacet extends CoreCategoryFacet {\n  /**\n   * Provides methods to search the facet's values.\n   */\n  facetSearch: CategoryFacetSearch;\n\n  /**\n   * The state of the `Facet` controller.\n   * */\n  state: CategoryFacetState;\n}\n\n/**\n * The `CategoryFacet` headless controller offers a high-level interface for designing a facet UI controller that renders values hierarchically.\n */\nexport interface CoreCategoryFacet extends Controller {\n  /**\n   * Toggles the specified facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: CategoryFacetValue): void;\n\n  /**\n   * Deselects all facet values.\n   * */\n  deselectAll(): void;\n\n  /**\n   * Sorts the facet values according to the specified criterion.\n   *\n   * @param criterion - The criterion by which to sort values.\n   */\n  sortBy(criterion: CategoryFacetSortCriterion): void;\n\n  /**\n   * Checks whether the facet values are sorted according to the specified criterion.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns Whether the facet values are sorted according to the specified criterion.\n   */\n  isSortedBy(criterion: CategoryFacetSortCriterion): boolean;\n\n  /**\n   * Increases the number of values displayed in the facet to the next multiple of the originally configured value.\n   */\n  showMoreValues(): void;\n\n  /**\n   * Sets the number of values displayed in the facet to the originally configured value.\n   * */\n  showLessValues(): void;\n\n  /**\n   * Enables the facet. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the facet. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `Facet` controller.\n   * */\n  state: CoreCategoryFacetState;\n}\n\nexport interface CategoryFacetState extends CoreCategoryFacetState {\n  /** The state of the facet's searchbox. */\n  facetSearch: CategoryFacetSearchState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `CategoryFacet` controller.\n */\nexport interface CoreCategoryFacetState {\n  /** The facet ID. */\n  facetId: string;\n\n  /**\n   * The root facet values.\n   * Child values might be available in `valuesAsTrees[i].children[j]`\n   * @example `{value: 'foo' }\n   */\n  valuesAsTrees: CategoryFacetValue[];\n\n  /**\n   * The facet's selected value if any, undefined otherwise.\n   */\n  activeValue: CategoryFacetValue | undefined;\n\n  /**\n   * Whether `valuesAsTree` contains hierarchical values (i.e. facet values with children), or only 'flat' values (i.e. facet values without children).\n   */\n  isHierarchical: boolean;\n\n  /**\n   * The facet's parent values.\n   * @deprecated uses `valuesAsTrees` instead.\n   *\n   */\n  parents: CategoryFacetValue[];\n\n  /**\n   * The facet's values.\n   * @deprecated use `selectedValueAncestry` instead.\n   */\n  values: CategoryFacetValue[];\n\n  /**\n   * The selected facet values ancestry.\n   * The first element is the \"root\" of the selected value ancestry tree.\n   * The last element is the selected value itself.\n   */\n  selectedValueAncestry: CategoryFacetValue[];\n\n  /** The facet's active `sortCriterion`. */\n  sortCriteria: CategoryFacetSortCriterion;\n\n  /** Returns `true` if a search is in progress, and `false` if not. */\n  isLoading: boolean;\n\n  /** Returns `true` if there's at least one non-idle value, and `false` if not. */\n  hasActiveValues: boolean;\n\n  /** Returns `true` if there are more values to display and, `false` if not. */\n  canShowMoreValues: boolean;\n\n  /** Returns `true` if fewer values can be displayed, and `false` if not. */\n  canShowLessValues: boolean;\n\n  /** Whether the facet is enabled and its values are used to filter search results. */\n  enabled: boolean;\n}\n\nexport interface CategoryFacetSearch {\n  /**\n   * Updates the facet search query.\n   *\n   * @param text - The facet search query.\n   * */\n  updateText(text: string): void;\n\n  /**\n   * Shows more facet search results.\n   * */\n  showMoreResults(): void;\n\n  /**\n   * Performs a facet search.\n   * */\n  search(): void;\n\n  /**\n   * Selects a facet search result.\n   *\n   * @param value - The search result to select.\n   * */\n  select(value: CategoryFacetSearchResult): void;\n\n  /**\n   * Resets the query and empties the values.\n   * */\n  clear(): void;\n\n  /**\n   * Updates the facet value captions.\n   * @param captions - A dictionary that maps index field values to facet value display names.\n   */\n  updateCaptions(captions: Record<string, string>): void;\n}\n\nexport interface CategoryFacetSearchState {\n  /**\n   * The facet search results.\n   * */\n  values: CategoryFacetSearchResult[];\n\n  /**\n   * Returns `true` if the facet search is in progress, and `false` if not.\n   * */\n  isLoading: boolean;\n\n  /**\n   * Whether more values are available.\n   * */\n  moreValuesAvailable: boolean;\n\n  /**\n   * The current query in the facet search box.\n   */\n  query: string;\n}\n\nexport interface CategoryFacetSearchResult {\n  /**\n   * The custom facet value display name, as specified in the `captions` argument of the facet request.\n   */\n  displayValue: string;\n\n  /**\n   * The original facet value, as retrieved from the field in the index.\n   */\n  rawValue: string;\n\n  /**\n   * An estimate of the number of result items that match both the current query and\n   * the filter expression which would be generated if the facet value were selected.\n   */\n  count: number;\n\n  /**\n   * The hierarchical path to the selected facet value.\n   */\n  path: string[];\n}\n\n/**\n * Creates a `CategoryFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `CategoryFacet` properties.\n * @returns A `CategoryFacet` controller instance.\n * */\nexport function buildCoreCategoryFacet(\n  engine: CoreEngine,\n  props: CategoryFacetProps\n): CoreCategoryFacet {\n  if (!loadCategoryFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const facetId = determineFacetId(engine, props.options);\n  const registrationOptions = {\n    ...defaultCategoryFacetOptions,\n    ...omit('facetSearch', props.options),\n    field: props.options.field,\n    facetId,\n  };\n  const options: Required<CategoryFacetOptions> = {\n    facetSearch: {...defaultFacetSearchOptions, ...props.options.facetSearch},\n    ...registrationOptions,\n  };\n\n  validateOptions(\n    engine,\n    categoryFacetOptionsSchema,\n    options,\n    'buildCategoryFacet'\n  );\n\n  const getRequest = () => {\n    return categoryFacetRequestSelector(engine.state, facetId);\n  };\n\n  const getResponse = () => {\n    return categoryFacetResponseSelector(engine.state, facetId);\n  };\n\n  const getIsLoading = () => isFacetLoadingResponseSelector(engine.state);\n  const getIsEnabled = () => isFacetEnabledSelector(engine.state, facetId);\n\n  dispatch(registerCategoryFacet(registrationOptions));\n\n  return {\n    ...controller,\n\n    toggleSelect(selection: CategoryFacetValue) {\n      const retrieveCount = options.numberOfValues;\n      dispatch(\n        toggleSelectCategoryFacetValue({facetId, selection, retrieveCount})\n      );\n      dispatch(updateFacetOptions());\n    },\n\n    deselectAll() {\n      dispatch(deselectAllCategoryFacetValues(facetId));\n      dispatch(updateFacetOptions());\n    },\n\n    sortBy(criterion: CategoryFacetSortCriterion) {\n      dispatch(updateCategoryFacetSortCriterion({facetId, criterion}));\n      dispatch(updateFacetOptions());\n    },\n\n    isSortedBy(criterion: CategoryFacetSortCriterion) {\n      const request = getRequest();\n      return request!.sortCriteria === criterion;\n    },\n\n    showMoreValues() {\n      const {numberOfValues: increment} = options;\n      const {activeValue, valuesAsTrees} = this.state;\n      const numberOfValues =\n        (activeValue?.children.length ?? valuesAsTrees.length) + increment;\n\n      dispatch(updateCategoryFacetNumberOfValues({facetId, numberOfValues}));\n      dispatch(updateFacetOptions());\n    },\n\n    showLessValues() {\n      const {numberOfValues} = options;\n\n      dispatch(updateCategoryFacetNumberOfValues({facetId, numberOfValues}));\n      dispatch(updateFacetOptions());\n    },\n\n    enable() {\n      dispatch(enableFacet(facetId));\n    },\n\n    disable() {\n      dispatch(disableFacet(facetId));\n    },\n\n    get state() {\n      const request = getRequest();\n      const response = getResponse();\n      const isLoading = getIsLoading();\n      const enabled = getIsEnabled();\n      const valuesAsTrees = response?.values ?? [];\n      const isHierarchical =\n        valuesAsTrees.some((value) => value.children.length > 0) ?? false;\n      const {parents, values} = partitionIntoParentsAndValues(response?.values);\n      const selectedValueAncestry = findActiveValueAncestry(valuesAsTrees);\n      const activeValue = selectedValueAncestry.length\n        ? selectedValueAncestry[selectedValueAncestry.length - 1]\n        : undefined;\n      const hasActiveValues = !!activeValue;\n      const canShowMoreValues =\n        activeValue?.moreValuesAvailable ??\n        response?.moreValuesAvailable ??\n        false;\n      const canShowLessValues = activeValue\n        ? activeValue.children.length > options.numberOfValues\n        : valuesAsTrees.length > options.numberOfValues;\n\n      return {\n        facetId,\n        parents,\n        selectedValueAncestry,\n        values,\n        isHierarchical,\n        valuesAsTrees,\n        activeValue,\n        isLoading,\n        hasActiveValues,\n        canShowMoreValues,\n        canShowLessValues,\n        sortCriteria: request!.sortCriteria,\n        enabled,\n      };\n    },\n  };\n}\n\nfunction loadCategoryFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  CategoryFacetSection &\n    FacetOptionsSection &\n    CategoryFacetSearchSection &\n    ConfigurationSection &\n    SearchSection\n> {\n  engine.addReducers({\n    categoryFacetSet,\n    categoryFacetSearchSet,\n    facetOptions,\n    configuration,\n    search,\n  });\n  return true;\n}\n", "import {FacetSearchAPIClient} from '../../../../api/search/search-api-client';\nimport {CoreEngine} from '../../../../app/engine';\nimport {ClientThunkExtraArguments} from '../../../../app/thunk-extra-arguments';\nimport {CategoryFacetSearchState} from '../../../../features/facets/facet-search-set/category/category-facet-search-set-state';\nimport {FacetSearchOptions} from '../../../../features/facets/facet-search-set/facet-search-request-options';\nimport {\n  clearFacetSearch,\n  executeFacetSearch,\n  executeFieldSuggest,\n} from '../../../../features/facets/facet-search-set/generic/generic-facet-search-actions';\nimport {updateFacetSearch} from '../../../../features/facets/facet-search-set/specific/specific-facet-search-actions';\nimport {SpecificFacetSearchState} from '../../../../features/facets/facet-search-set/specific/specific-facet-search-set-state';\nimport {\n  CategoryFacetSearchSection,\n  ConfigurationSection,\n  FacetSearchSection,\n} from '../../../../state/state-sections';\n\ntype FacetSearchState = SpecificFacetSearchState | CategoryFacetSearchState;\n\nexport interface GenericFacetSearchProps<T extends FacetSearchState> {\n  options: FacetSearchOptions;\n  getFacetSearch: () => T;\n  isForFieldSuggestions: boolean;\n}\n\nexport type GenericFacetSearch = ReturnType<typeof buildGenericFacetSearch>;\n\nexport function buildGenericFacetSearch<T extends FacetSearchState>(\n  engine: CoreEngine<\n    ConfigurationSection & (FacetSearchSection | CategoryFacetSearchSection),\n    ClientThunkExtraArguments<FacetSearchAPIClient>\n  >,\n  props: GenericFacetSearchProps<T>\n) {\n  const dispatch = engine.dispatch;\n  const {options, getFacetSearch} = props;\n  const {facetId} = options;\n\n  return {\n    /** Updates the facet search query.\n     * @param text The new query.\n     */\n    updateText(text: string) {\n      dispatch(\n        updateFacetSearch({\n          facetId,\n          query: text,\n          numberOfValues: getFacetSearch().initialNumberOfValues,\n        })\n      );\n    },\n\n    /** Increases number of results returned by numberOfResults */\n    showMoreResults() {\n      const {initialNumberOfValues, options} = getFacetSearch();\n      dispatch(\n        updateFacetSearch({\n          facetId,\n          numberOfValues: options.numberOfValues + initialNumberOfValues,\n        })\n      );\n      dispatch(\n        props.isForFieldSuggestions\n          ? executeFieldSuggest(facetId)\n          : executeFacetSearch(facetId)\n      );\n    },\n\n    /** Executes a facet search to update the values.*/\n    search() {\n      dispatch(\n        props.isForFieldSuggestions\n          ? executeFieldSuggest(facetId)\n          : executeFacetSearch(facetId)\n      );\n    },\n\n    /** Resets the query and empties the values. */\n    clear() {\n      dispatch(clearFacetSearch({facetId}));\n    },\n\n    /**\n     * Updates the facet value captions.\n     * @param captions - A dictionary that maps index field values to facet value display names.\n     */\n    updateCaptions(captions: Record<string, string>) {\n      dispatch(\n        updateFacetSearch({\n          facetId,\n          captions,\n        })\n      );\n    },\n\n    get state() {\n      const {response, isLoading, options} = getFacetSearch();\n      const {query} = options;\n      const values: T['response']['values'] = response.values;\n\n      return {\n        ...response,\n        values,\n        isLoading,\n        query,\n      };\n    },\n  };\n}\n", "import {CategoryFacetSearchResult} from '../../../../../api/search/facet-search/category-facet-search/category-facet-search-response';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {\n  registerCategoryFacetSearch,\n  selectCategoryFacetSearchResult,\n} from '../../../../../features/facets/facet-search-set/category/category-facet-search-actions';\nimport {defaultFacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-reducer-helpers';\nimport {FacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-request-options';\nimport {\n  CategoryFacetSearchSection,\n  ConfigurationSection,\n} from '../../../../../state/state-sections';\nimport {buildGenericFacetSearch} from '../facet-search';\n\nexport interface CategoryFacetSearchProps {\n  options: FacetSearchOptions;\n  isForFieldSuggestions: boolean;\n}\n\nexport type CategoryFacetSearch = ReturnType<\n  typeof buildCoreCategoryFacetSearch\n>;\n\nexport function buildCoreCategoryFacetSearch(\n  engine: CoreEngine<CategoryFacetSearchSection & ConfigurationSection>,\n  props: CategoryFacetSearchProps\n) {\n  const {dispatch} = engine;\n  const options = {...defaultFacetSearchOptions, ...props.options};\n  const {facetId} = options;\n  const getFacetSearch = () => engine.state.categoryFacetSearchSet[facetId];\n\n  dispatch(registerCategoryFacetSearch(options));\n\n  const genericFacetSearch = buildGenericFacetSearch(engine, {\n    options,\n    getFacetSearch,\n    isForFieldSuggestions: props.isForFieldSuggestions,\n  });\n\n  return {\n    ...genericFacetSearch,\n\n    select(value: CategoryFacetSearchResult) {\n      dispatch(\n        selectCategoryFacetSearchResult({\n          facetId,\n          value,\n        })\n      );\n    },\n\n    get state() {\n      return genericFacetSearch.state;\n    },\n  };\n}\n", "import {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {CoreEngine} from '../../../app/engine';\nimport {SearchThunkExtraArguments} from '../../../app/search-thunk-extra-arguments';\nimport {SearchPageEvents} from '../../../features/analytics/search-action-cause';\nimport {updateFacetOptions} from '../../../features/facet-options/facet-options-actions';\nimport {registerCategoryFacetSearch} from '../../../features/facets/facet-search-set/category/category-facet-search-actions';\nimport {defaultFacetSearchOptions} from '../../../features/facets/facet-search-set/facet-search-reducer-helpers';\nimport {logFacetSelect} from '../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {executeSearch} from '../../../features/search/search-actions';\nimport {\n  CategoryFacetSearchSection,\n  ConfigurationSection,\n} from '../../../state/state-sections';\nimport {CategoryFacetSearchResult} from '../../core/facets/category-facet/headless-core-category-facet';\nimport {\n  buildCoreCategoryFacetSearch,\n  CategoryFacetSearchProps,\n} from '../../core/facets/facet-search/category/headless-category-facet-search';\nimport {buildGenericFacetSearch} from '../../core/facets/facet-search/facet-search';\n\nexport function buildCategoryFacetSearch(\n  engine: CoreEngine<\n    CategoryFacetSearchSection & ConfigurationSection,\n    SearchThunkExtraArguments\n  >,\n  props: CategoryFacetSearchProps\n) {\n  const {dispatch} = engine;\n  const options = {...defaultFacetSearchOptions, ...props.options};\n  const {facetId} = options;\n  const getFacetSearch = () => engine.state.categoryFacetSearchSet[facetId];\n\n  const coreFacetSearch = buildCoreCategoryFacetSearch(engine, {\n    options: {\n      ...options,\n    },\n    isForFieldSuggestions: props.isForFieldSuggestions,\n  });\n\n  dispatch(registerCategoryFacetSearch(options));\n\n  const genericFacetSearch = buildGenericFacetSearch(engine, {\n    options,\n    getFacetSearch,\n    isForFieldSuggestions: props.isForFieldSuggestions,\n  });\n\n  return {\n    ...genericFacetSearch,\n    ...coreFacetSearch,\n\n    select: (value: CategoryFacetSearchResult) => {\n      coreFacetSearch.select(value);\n      dispatch(updateFacetOptions());\n      dispatch(\n        executeSearch({\n          legacy: logFacetSelect({facetId, facetValue: value.rawValue}),\n          next: {\n            actionCause: SearchPageEvents.facetSelect,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                facetId,\n                value.rawValue\n              ),\n          },\n        })\n      );\n    },\n\n    get state() {\n      return {\n        ...genericFacetSearch.state,\n        ...coreFacetSearch.state,\n      };\n    },\n  };\n}\n", "import {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {configuration} from '../../../app/common-reducers';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../../features/analytics/search-action-cause';\nimport {categoryFacetSetReducer as categoryFacetSet} from '../../../features/facets/category-facet-set/category-facet-set-slice';\nimport {CategoryFacetSortCriterion} from '../../../features/facets/category-facet-set/interfaces/request';\nimport {CategoryFacetValue} from '../../../features/facets/category-facet-set/interfaces/response';\nimport {categoryFacetSearchSetReducer as categoryFacetSearchSet} from '../../../features/facets/facet-search-set/category/category-facet-search-set-slice';\nimport {\n  logFacetUpdateSort,\n  logFacetShowMore,\n  logFacetShowLess,\n  logFacetClearAll,\n  logFacetDeselect,\n  logFacetSelect,\n} from '../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {\n  SearchAction,\n  executeSearch,\n  fetchFacetValues,\n} from '../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  CategoryFacetSearchSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildCoreCategoryFacet,\n  CategoryFacet,\n  CategoryFacetProps,\n  CategoryFacetState,\n  CategoryFacetSearch,\n  CategoryFacetSearchState,\n  CategoryFacetSearchResult,\n  CoreCategoryFacet,\n  CoreCategoryFacetState,\n} from '../../core/facets/category-facet/headless-core-category-facet';\nimport {\n  CategoryFacetOptions,\n  CategoryFacetSearchOptions,\n} from '../../core/facets/category-facet/headless-core-category-facet-options';\nimport {buildCategoryFacetSearch} from './headless-category-facet-search';\n\nexport type {\n  CategoryFacetValue,\n  CategoryFacetOptions,\n  CategoryFacetSearchOptions,\n  CategoryFacetProps,\n  CategoryFacet,\n  CategoryFacetState,\n  CategoryFacetSearch,\n  CategoryFacetSearchState,\n  CategoryFacetSearchResult,\n  CoreCategoryFacet,\n  CoreCategoryFacetState,\n};\n\n/**\n * Creates a `CategoryFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `CategoryFacet` properties.\n * @returns A `CategoryFacet` controller instance.\n * */\nexport function buildCategoryFacet(\n  engine: SearchEngine,\n  props: CategoryFacetProps\n): CategoryFacet {\n  if (!loadCategoryFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const coreController = buildCoreCategoryFacet(engine, props);\n  const {dispatch} = engine;\n  const getFacetId = () => coreController.state.facetId;\n  const facetSearch = buildCategoryFacetSearch(engine, {\n    options: {\n      facetId: getFacetId(),\n      ...props.options.facetSearch,\n    },\n    isForFieldSuggestions: false,\n  });\n\n  const {state, ...restOfFacetSearch} = facetSearch;\n\n  return {\n    ...coreController,\n\n    facetSearch: restOfFacetSearch,\n\n    toggleSelect(selection: CategoryFacetValue) {\n      coreController.toggleSelect(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyToggleSelectAnalyticsAction(getFacetId(), selection),\n          next: getToggleSelectAnalyticsAction(getFacetId(), selection),\n        })\n      );\n    },\n\n    deselectAll() {\n      coreController.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                getFacetId()\n              ),\n          },\n        })\n      );\n    },\n\n    sortBy(criterion: CategoryFacetSortCriterion) {\n      coreController.sortBy(criterion);\n      dispatch(\n        executeSearch({\n          legacy: logFacetUpdateSort({facetId: getFacetId(), criterion}),\n          next: {\n            actionCause: SearchPageEvents.facetUpdateSort,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetSortMetadata(\n                getFacetId(),\n                criterion\n              ),\n          },\n        })\n      );\n    },\n\n    showMoreValues() {\n      coreController.showMoreValues();\n      dispatch(fetchFacetValues({legacy: logFacetShowMore(getFacetId())}));\n    },\n\n    showLessValues() {\n      coreController.showLessValues();\n      dispatch(fetchFacetValues({legacy: logFacetShowLess(getFacetId())}));\n    },\n\n    get state() {\n      return {\n        ...coreController.state,\n        facetSearch: facetSearch.state,\n      };\n    },\n  };\n}\n\nfunction loadCategoryFacetReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  CategoryFacetSection &\n    CategoryFacetSearchSection &\n    ConfigurationSection &\n    SearchSection\n> {\n  engine.addReducers({\n    categoryFacetSet,\n    categoryFacetSearchSet,\n    configuration,\n    search,\n  });\n  return true;\n}\n\nfunction getLegacyToggleSelectAnalyticsAction(\n  facetId: string,\n  selection: CategoryFacetValue\n) {\n  const payload = {\n    facetId,\n    facetValue: selection.value,\n  };\n\n  const isSelected = selection.state === 'selected';\n  return isSelected ? logFacetDeselect(payload) : logFacetSelect(payload);\n}\n\nfunction getToggleSelectAnalyticsAction(\n  facetId: string,\n  selection: CategoryFacetValue\n): SearchAction {\n  const isSelected = selection.state === 'selected';\n  return {\n    actionCause: isSelected\n      ? SearchPageEvents.facetDeselect\n      : SearchPageEvents.facetSelect,\n    getEventExtraPayload: (state) =>\n      new SearchAnalyticsProvider(() => state).getFacetMetadata(\n        facetId,\n        selection.value\n      ),\n  };\n}\n", "import {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../app/ssr-engine/types/common';\nimport {\n  CategoryFacet,\n  CategoryFacetProps,\n  buildCategoryFacet,\n} from './headless-category-facet';\n\nexport * from './headless-category-facet';\n\n/**\n * @internal\n */\nexport const defineCategoryFacet = (\n  props: CategoryFacetProps\n): ControllerDefinitionWithoutProps<SearchEngine, CategoryFacet> => ({\n  build: (engine) => buildCategoryFacet(engine, props),\n});\n", "import {SpecificFacetSearchResponse} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response';\nimport {\n  FacetSearchSetState,\n  FacetSearchState,\n} from '../facet-search-reducer-helpers';\n\nexport type SpecificFacetSearchState =\n  FacetSearchState<SpecificFacetSearchResponse>;\nexport type SpecificFacetSearchSetState =\n  FacetSearchSetState<SpecificFacetSearchResponse>;\n\nexport function getFacetSearchSetInitialState(): SpecificFacetSearchSetState {\n  return {};\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {SpecificFacetSearchResponse} from '../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response';\nimport {executeSearch} from '../../../search/search-actions';\nimport {\n  handleFacetSearchRegistration,\n  handleFacetSearchUpdate,\n  handleFacetSearchPending,\n  handleFacetSearchRejected,\n  handleFacetSearchFulfilled,\n  handleFacetSearchClear,\n  handleFacetSearchSetClear,\n} from '../facet-search-reducer-helpers';\nimport {\n  clearFacetSearch,\n  executeFacetSearch,\n} from '../generic/generic-facet-search-actions';\nimport {registerFacetSearch} from './specific-facet-search-actions';\nimport {updateFacetSearch} from './specific-facet-search-actions';\nimport {getFacetSearchSetInitialState} from './specific-facet-search-set-state';\n\nexport const specificFacetSearchSetReducer = createReducer(\n  getFacetSearchSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerFacetSearch, (state, action) => {\n        const payload = action.payload;\n        handleFacetSearchRegistration(state, payload, buildEmptyResponse);\n      })\n      .addCase(updateFacetSearch, (state, action) => {\n        handleFacetSearchUpdate(state, action.payload);\n      })\n      .addCase(executeFacetSearch.pending, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchPending(state, facetId, action.meta.requestId);\n      })\n      .addCase(executeFacetSearch.rejected, (state, action) => {\n        const facetId = action.meta.arg;\n        handleFacetSearchRejected(state, facetId);\n      })\n      .addCase(executeFacetSearch.fulfilled, (state, action) => {\n        handleFacetSearchFulfilled(\n          state,\n          action.payload,\n          action.meta.requestId\n        );\n      })\n      .addCase(clearFacetSearch, (state, {payload}) => {\n        handleFacetSearchClear(state, payload, buildEmptyResponse);\n      })\n      .addCase(executeSearch.fulfilled, (state) => {\n        handleFacetSearchSetClear(state, buildEmptyResponse);\n      });\n  }\n);\n\nfunction buildEmptyResponse(): SpecificFacetSearchResponse {\n  return {\n    moreValuesAvailable: false,\n    values: [],\n  };\n}\n", "import {ArrayValue, EnumValue, RecordValue, StringValue} from '@coveo/bueno';\n\nexport enum SortBy {\n  Relevance = 'relevance',\n  Fields = 'fields',\n}\n\nexport enum SortDirection {\n  Ascending = 'asc',\n  Descending = 'desc',\n}\n\nexport type SortByRelevance = {\n  by: SortBy.Relevance;\n};\n\nexport type SortByFieldsFields = {\n  name: string;\n  direction?: SortDirection;\n};\n\nexport type SortByFields = {\n  by: SortBy.Fields;\n  fields: SortByFieldsFields[];\n};\n\nexport type SortCriterion = SortByRelevance | SortByFields;\n\nexport const buildRelevanceSortCriterion = (): SortByRelevance => ({\n  by: SortBy.Relevance,\n});\n\nexport const buildFieldsSortCriterion = (\n  fields: SortByFieldsFields[]\n): SortByFields => ({\n  by: SortBy.Fields,\n  fields,\n});\n\nexport const sortCriterionDefinition = new RecordValue({\n  options: {\n    required: false,\n  },\n  values: {\n    by: new EnumValue({enum: SortBy, required: true}),\n    fields: new ArrayValue({\n      each: new RecordValue({\n        values: {\n          name: new StringValue(),\n          direction: new EnumValue({enum: SortDirection}),\n        },\n      }),\n    }),\n  },\n});\n", "import {Schema} from '@coveo/bueno';\nimport {DocumentIdentifier, PartialDocumentInformation} from 'coveo.analytics';\nimport {ProductListingAnalyticsProvider} from '../../api/analytics/product-listing-analytics';\nimport {ProductRecommendation, Result} from '../../product-listing.index';\nimport {ProductListingAppState} from '../../state/product-listing-app-state';\nimport {\n  makeAnalyticsAction,\n  makeProductListingAnalyticsAction,\n  resultPartialDefinition,\n  ProductListingAction,\n} from '../analytics/analytics-utils';\n\nexport const logProductListing = (): ProductListingAction =>\n  makeProductListingAnalyticsAction(\n    'analytics/productListing/load',\n    (client) => client.makeInterfaceLoad(),\n    (getState) => new ProductListingAnalyticsProvider(getState)\n  );\n\nexport const logProductRecommendationOpen = (\n  productRec: ProductRecommendation\n): ProductListingAction =>\n  makeAnalyticsAction(\n    'analytics/productListing/open',\n    (client, state) => {\n      validateResultPayload(productRec);\n      return client.makeDocumentOpen(\n        partialRecommendationInformation(productRec, state),\n        documentIdentifier(productRec)\n      );\n    },\n    (getState) => new ProductListingAnalyticsProvider(getState)\n  );\n\nconst documentIdentifier = (\n  productRecommendation: ProductRecommendation\n): DocumentIdentifier => {\n  if (!productRecommendation.permanentid) {\n    console.warn(\n      'Missing field permanentid on productRecommendation. This might cause many issues with your Coveo deployment. See https://docs.coveo.com/en/1913 and https://docs.coveo.com/en/1640 for more information.',\n      productRecommendation\n    );\n  }\n  return {\n    contentIDKey: 'permanentid',\n    contentIDValue: productRecommendation.permanentid,\n  };\n};\n\nfunction mapProductRecommendationToResult(\n  productRecommendation: ProductRecommendation\n): Partial<Result> {\n  return {\n    uniqueId: productRecommendation.permanentid,\n    title: productRecommendation.ec_name || '',\n    uri: productRecommendation.documentUri,\n    clickUri: productRecommendation.clickUri,\n  };\n}\n\nfunction partialResultPayload(\n  productRecommendation: ProductRecommendation\n): Partial<ProductRecommendation> {\n  const result = mapProductRecommendationToResult(productRecommendation);\n  return Object.assign(\n    {},\n    ...Object.keys(resultPartialDefinition).map((key) => ({\n      [key]: result[key as keyof typeof resultPartialDefinition],\n    }))\n  );\n}\n\nconst validateResultPayload = (productRecommendation: ProductRecommendation) =>\n  new Schema(resultPartialDefinition).validate(\n    partialResultPayload(productRecommendation)\n  );\n\nconst partialRecommendationInformation = (\n  result: ProductRecommendation,\n  state: Partial<ProductListingAppState>\n): PartialDocumentInformation => {\n  const resultIndex =\n    state.productListing?.products.findIndex(\n      ({permanentid}) => result.permanentid === permanentid\n    ) || 0;\n\n  return buildPartialDocumentInformation(result, resultIndex);\n};\n\nfunction buildPartialDocumentInformation(\n  productRecommendation: ProductRecommendation,\n  resultIndex: number\n): PartialDocumentInformation {\n  return {\n    collectionName: '',\n    documentAuthor: '',\n    documentPosition: resultIndex + 1,\n    documentTitle: productRecommendation.ec_name || '',\n    documentUri: productRecommendation.documentUri,\n    documentUriHash: productRecommendation.documentUriHash,\n    documentUrl: productRecommendation.clickUri,\n    rankingModifier: '',\n    sourceName: 'unknown',\n    queryPipeline: '',\n  };\n}\n", "import {ArrayValue, StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getVisitorID} from '../../api/analytics/coveo-analytics-utils';\nimport {AsyncThunkProductListingOptions} from '../../api/commerce/product-listings/product-listing-api-client';\nimport {\n  ProductListingRequest,\n  ProductListingSuccessResponse,\n} from '../../api/commerce/product-listings/product-listing-request';\nimport {isErrorResponse} from '../../api/search/search-api-client';\nimport {\n  CategoryFacetSection,\n  ConfigurationSection,\n  ContextSection,\n  DateFacetSection,\n  FacetOptionsSection,\n  FacetOrderSection,\n  FacetSection,\n  NumericFacetSection,\n  PaginationSection,\n  ProductListingSection,\n  StructuredSortSection,\n} from '../../state/state-sections';\nimport {sortFacets} from '../../utils/facet-utils';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {PreparableAnalyticsAction} from '../analytics/analytics-utils';\nimport {getFacetRequests} from '../facets/generic/interfaces/generic-facet-request';\nimport {logQueryError} from '../search/search-analytics-actions';\nimport {SortBy} from '../sort/sort';\nimport {logProductListing} from './product-listing-analytics';\nimport {ProductListingState} from './product-listing-state';\n\nexport interface SetProductListingUrlPayload {\n  /**\n   * The url used to determine which product listing to fetch.\n   */\n  url: string;\n}\n\nexport const setProductListingUrl = createAction(\n  'productlisting/setUrl',\n  (payload: SetProductListingUrlPayload) =>\n    validatePayload(payload, {\n      url: new StringValue({\n        required: true,\n        url: true,\n      }),\n    })\n);\n\nexport interface SetAdditionalFieldsPayload {\n  /**\n   * The additional fields to fetch with the product listing.\n   */\n  additionalFields: string[];\n}\n\nexport const setAdditionalFields = createAction(\n  'productlisting/setAdditionalFields',\n  (payload: SetAdditionalFieldsPayload) =>\n    validatePayload(payload, {\n      additionalFields: new ArrayValue({\n        required: true,\n        each: new StringValue({\n          required: true,\n          emptyAllowed: false,\n        }),\n      }),\n    })\n);\n\nexport type StateNeededByFetchProductListing = ConfigurationSection &\n  ProductListingSection &\n  Partial<\n    PaginationSection &\n      StructuredSortSection &\n      FacetSection &\n      NumericFacetSection &\n      CategoryFacetSection &\n      DateFacetSection &\n      FacetOptionsSection &\n      FacetOrderSection &\n      ContextSection\n  >;\n\nexport interface FetchProductListingThunkReturn {\n  /** The successful search response. */\n  response: ProductListingSuccessResponse;\n  analyticsAction: PreparableAnalyticsAction<StateNeededByFetchProductListing>;\n}\n\nexport const fetchProductListing = createAsyncThunk<\n  FetchProductListingThunkReturn,\n  void,\n  AsyncThunkProductListingOptions<StateNeededByFetchProductListing>\n>(\n  'productlisting/fetch',\n  async (_action, {getState, dispatch, rejectWithValue, extra}) => {\n    const state = getState();\n    const {apiClient} = extra;\n    const fetched = await apiClient.getProducts(\n      await buildProductListingRequest(state)\n    );\n\n    if (isErrorResponse(fetched)) {\n      dispatch(logQueryError(fetched.error));\n      return rejectWithValue(fetched.error);\n    }\n\n    return {\n      response: fetched.success,\n      analyticsAction: logProductListing(),\n    };\n  }\n);\n\nexport const buildProductListingRequest = async (\n  state: StateNeededByFetchProductListing\n): Promise<ProductListingRequest> => {\n  const facets = getFacets(state);\n  const visitorId = await getVisitorID(state.configuration.analytics);\n\n  return {\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    platformUrl: state.configuration.platformUrl,\n    url: state.productListing?.url,\n    ...(state.configuration.analytics.enabled && visitorId\n      ? {clientId: visitorId}\n      : {}),\n    ...(state.productListing.additionalFields?.length\n      ? {\n          additionalFields: state.productListing.additionalFields,\n        }\n      : {}),\n    ...(state.productListing.advancedParameters &&\n    hasOneAdvancedParameterActive(state.productListing.advancedParameters)\n      ? {\n          advancedParameters: state.productListing.advancedParameters || {},\n        }\n      : {}),\n    ...(facets.length && {\n      facets: {\n        requests: facets,\n      },\n    }),\n    ...(state.pagination && {\n      pagination: {\n        numberOfValues: state.pagination.numberOfResults,\n        page:\n          Math.ceil(\n            state.pagination.firstResult /\n              (state.pagination.numberOfResults || 1)\n          ) + 1,\n      },\n    }),\n    ...((state.sort?.by || SortBy.Relevance) !== SortBy.Relevance && {\n      sort: state.sort,\n    }),\n    ...(state.context && {\n      userContext: state.context.contextValues,\n    }),\n  };\n};\n\nfunction hasOneAdvancedParameterActive(\n  advanced: ProductListingState['advancedParameters']\n): boolean {\n  return advanced.debug;\n}\n\nfunction getFacets(state: StateNeededByFetchProductListing) {\n  return sortFacets(getAllFacets(state), state.facetOrder ?? []);\n}\n\nfunction getAllFacets(state: StateNeededByFetchProductListing) {\n  return [\n    ...getFacetRequests(state.facetSet ?? {}),\n    ...getFacetRequests(state.numericFacetSet ?? {}),\n    ...getFacetRequests(state.dateFacetSet ?? {}),\n    ...getFacetRequests(state.categoryFacetSet ?? {}),\n  ];\n}\n", "import {createReducer, type Draft as WritableDraft} from '@reduxjs/toolkit';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from '../../breadcrumb/breadcrumb-actions';\nimport {disableFacet} from '../../facet-options/facet-options-actions';\nimport {change} from '../../history/history-actions';\nimport {fetchProductListing} from '../../product-listing/product-listing-actions';\nimport {restoreSearchParameters} from '../../search-parameters/search-parameter-actions';\nimport {executeSearch, fetchFacetValues} from '../../search/search-actions';\nimport {\n  excludeFacetSearchResult,\n  selectFacetSearchResult,\n} from '../facet-search-set/specific/specific-facet-search-actions';\nimport {updateFacetAutoSelection} from '../generic/facet-actions';\nimport {\n  handleFacetSortCriterionUpdate,\n  handleFacetDeselectAll,\n  handleFacetUpdateNumberOfValues,\n} from '../generic/facet-reducer-helpers';\nimport {AnyFacetResponse} from '../generic/interfaces/generic-facet-response';\nimport {\n  registerFacet,\n  toggleSelectFacetValue,\n  toggleExcludeFacetValue,\n  deselectAllFacetValues,\n  updateFacetSortCriterion,\n  updateFacetNumberOfValues,\n  updateFacetIsFieldExpanded,\n  updateFreezeCurrentValues,\n  RegisterFacetActionCreatorPayload,\n} from './facet-set-actions';\nimport {\n  getFacetSetInitialState,\n  getFacetSetSliceInitialState,\n} from './facet-set-state';\nimport {FacetOptionalParameters} from './interfaces/options';\nimport {FacetRequest, FacetValueRequest} from './interfaces/request';\nimport {FacetValue, FacetResponse} from './interfaces/response';\n\nexport const facetSetReducer = createReducer(\n  getFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerFacet, (state, action) => {\n        const {facetId} = action.payload;\n\n        if (facetId in state) {\n          return;\n        }\n\n        state[facetId] = getFacetSetSliceInitialState(\n          buildFacetRequest(action.payload)\n        );\n      })\n      .addCase(change.fulfilled, (_, action) => {\n        if (!action.payload) {\n          return;\n        }\n\n        if (Object.keys(action.payload.facetSet).length === 0) {\n          return;\n        }\n\n        return action.payload.facetSet;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        const f = action.payload.f || {};\n        const fExcluded = action.payload.fExcluded || {};\n        const facetIds = Object.keys(state);\n\n        facetIds.forEach((id) => {\n          const {request} = state[id]!;\n          const selectedValues = f[id] || [];\n          const excludedValues = fExcluded[id] || [];\n          const idleValues = request.currentValues.filter(\n            (facetValue) =>\n              !selectedValues.includes(facetValue.value) &&\n              !excludedValues.includes(facetValue.value)\n          );\n\n          request.currentValues = [\n            ...selectedValues.map(buildSelectedFacetValueRequest),\n            ...excludedValues.map(buildExcludedFacetValueRequest),\n            ...idleValues.map(restoreFacetValueToIdleState),\n          ];\n          request.preventAutoSelect = selectedValues.length > 0;\n          request.numberOfValues = Math.max(\n            selectedValues.length + excludedValues.length,\n            request.numberOfValues\n          );\n        });\n      })\n      .addCase(toggleSelectFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.currentValues.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        const isSelected = existingValue.state === 'selected';\n        existingValue.state = isSelected ? 'idle' : 'selected';\n        facetRequest.freezeCurrentValues = true;\n      })\n      .addCase(toggleExcludeFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.preventAutoSelect = true;\n\n        const existingValue = facetRequest.currentValues.find(\n          (req) => req.value === selection.value\n        );\n        if (!existingValue) {\n          insertNewValue(facetRequest, selection);\n          return;\n        }\n\n        const isExcluded = existingValue.state === 'excluded';\n        existingValue.state = isExcluded ? 'idle' : 'excluded';\n        facetRequest.freezeCurrentValues = true;\n      })\n      .addCase(updateFreezeCurrentValues, (state, action) => {\n        const {facetId, freezeCurrentValues} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.freezeCurrentValues = freezeCurrentValues;\n      })\n      .addCase(deselectAllFacetValues, (state, action) => {\n        handleFacetDeselectAll(state[action.payload]?.request);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.values(state)\n          .filter((slice) => slice.hasBreadcrumbs)\n          .forEach(({request}) => handleFacetDeselectAll(request));\n      })\n      .addCase(deselectAllNonBreadcrumbs, (state) => {\n        Object.values(state)\n          .filter((slice) => !slice.hasBreadcrumbs)\n          .forEach(({request}) => handleFacetDeselectAll(request));\n      })\n      .addCase(updateFacetAutoSelection, (state, action) =>\n        Object.values(state).forEach((slice) => {\n          slice.request.preventAutoSelect = !action.payload.allow;\n        })\n      )\n      .addCase(updateFacetSortCriterion, (state, action) => {\n        handleFacetSortCriterionUpdate(state, action.payload);\n      })\n      .addCase(updateFacetNumberOfValues, (state, action) => {\n        const {facetId, numberOfValues} = action.payload;\n        handleFacetUpdateNumberOfValues<FacetRequest>(\n          state[facetId]?.request,\n          numberOfValues\n        );\n      })\n      .addCase(updateFacetIsFieldExpanded, (state, action) => {\n        const {facetId, isFieldExpanded} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        facetRequest.isFieldExpanded = isFieldExpanded;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets;\n        facets.forEach((facetResponse) =>\n          mutateStateFromFacetResponse(\n            state[facetResponse.facetId]?.request,\n            facetResponse\n          )\n        );\n      })\n      .addCase(fetchProductListing.fulfilled, (state, action) => {\n        const facets = action.payload.response?.facets?.results || [];\n        facets.forEach((facetResponse) =>\n          mutateStateFromFacetResponse(\n            state[facetResponse.facetId]?.request,\n            facetResponse\n          )\n        );\n      })\n      .addCase(fetchFacetValues.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets;\n        facets.forEach((facetResponse) =>\n          mutateStateFromFacetResponse(\n            state[facetResponse.facetId]?.request,\n            facetResponse\n          )\n        );\n      })\n      .addCase(selectFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        const {rawValue} = value;\n        const {currentValues} = facetRequest;\n        const matchingValue = currentValues.find((v) => v.value === rawValue);\n\n        if (matchingValue) {\n          matchingValue.state = 'selected';\n          return;\n        }\n\n        const searchResultValue = buildSelectedFacetValueRequest(rawValue);\n        insertNewValue(facetRequest, searchResultValue);\n        facetRequest.freezeCurrentValues = true;\n        facetRequest.preventAutoSelect = true;\n      })\n\n      .addCase(excludeFacetSearchResult, (state, action) => {\n        const {facetId, value} = action.payload;\n        const facetRequest = state[facetId]?.request;\n\n        if (!facetRequest) {\n          return;\n        }\n\n        const {rawValue} = value;\n        const {currentValues} = facetRequest;\n        const matchingValue = currentValues.find((v) => v.value === rawValue);\n\n        if (matchingValue) {\n          matchingValue.state = 'excluded';\n          return;\n        }\n\n        const searchResultValue = buildExcludedFacetValueRequest(rawValue);\n        insertNewValue(facetRequest, searchResultValue);\n        facetRequest.freezeCurrentValues = true;\n        facetRequest.preventAutoSelect = true;\n      })\n      .addCase(disableFacet, (state, action) => {\n        if (!(action.payload in state)) {\n          return;\n        }\n        const {request} = state[action.payload]!;\n        handleFacetDeselectAll(request);\n      });\n  }\n);\n\nfunction insertNewValue(\n  facetRequest: FacetRequest,\n  facetValue: FacetValueRequest\n) {\n  const {currentValues} = facetRequest;\n  const firstIdleIndex = currentValues.findIndex((v) => v.state === 'idle');\n  const indexToInsertAt =\n    firstIdleIndex === -1 ? currentValues.length : firstIdleIndex;\n\n  const valuesBefore = currentValues.slice(0, indexToInsertAt);\n  const valuesAfter = currentValues.slice(indexToInsertAt + 1);\n\n  facetRequest.currentValues = [...valuesBefore, facetValue, ...valuesAfter];\n  facetRequest.numberOfValues = facetRequest.currentValues.length;\n}\n\nfunction mutateStateFromFacetResponse(\n  facetRequest: WritableDraft<FacetRequest> | undefined,\n  facetResponse: AnyFacetResponse\n) {\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.currentValues = (facetResponse as FacetResponse).values.map(\n    convertFacetValueToRequest\n  );\n  facetRequest.freezeCurrentValues = false;\n  facetRequest.preventAutoSelect = false;\n}\n\nexport const defaultFacetOptions: FacetOptionalParameters = {\n  filterFacetCount: true,\n  injectionDepth: 1000,\n  numberOfValues: 8,\n  sortCriteria: 'automatic',\n  resultsMustMatch: 'atLeastOneValue',\n};\n\nfunction buildFacetRequest(\n  config: RegisterFacetActionCreatorPayload\n): FacetRequest {\n  return {\n    ...defaultFacetOptions,\n    type: 'specific',\n    currentValues: [],\n    freezeCurrentValues: false,\n    isFieldExpanded: false,\n    preventAutoSelect: false,\n    ...config,\n  };\n}\n\nexport function convertFacetValueToRequest(\n  facetValue: FacetValue\n): FacetValueRequest {\n  const {value, state} = facetValue;\n\n  return {value, state};\n}\n\nfunction buildSelectedFacetValueRequest(value: string): FacetValueRequest {\n  return {value, state: 'selected'};\n}\n\nfunction buildExcludedFacetValueRequest(value: string): FacetValueRequest {\n  return {value, state: 'excluded'};\n}\n\nfunction restoreFacetValueToIdleState(\n  facetValue: FacetValueRequest\n): FacetValueRequest {\n  return {...facetValue, state: 'idle'};\n}\n", "import {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {SearchPageEvents} from '../../analytics/search-action-cause';\nimport {SearchAction} from '../../search/search-actions';\nimport {\n  logFacetDeselect,\n  logFacetExclude,\n  logFacetSelect,\n} from './facet-set-analytics-actions';\nimport {FacetSelectionChangeMetadata} from './facet-set-analytics-actions-utils';\nimport {FacetValue} from './interfaces/response';\n\nexport const isFacetValueSelected = (value: FacetValue) => {\n  return value.state === 'selected';\n};\n\nexport const isFacetValueExcluded = (value: FacetValue) => {\n  return value.state === 'excluded';\n};\n\nexport const getLegacyAnalyticsActionForToggleFacetSelect = (\n  facetId: string,\n  selection: FacetValue\n) => {\n  const payload: FacetSelectionChangeMetadata = {\n    facetId: facetId,\n    facetValue: selection.value,\n  };\n\n  return isFacetValueSelected(selection)\n    ? logFacetDeselect(payload)\n    : logFacetSelect(payload);\n};\n\nexport const getAnalyticsActionForToggleFacetSelect = (\n  facetId: string,\n  selection: FacetValue\n): SearchAction => {\n  return {\n    actionCause: isFacetValueSelected(selection)\n      ? SearchPageEvents.facetDeselect\n      : SearchPageEvents.facetSelect,\n    getEventExtraPayload: (state) =>\n      new SearchAnalyticsProvider(() => state).getFacetMetadata(\n        facetId,\n        selection.value\n      ),\n  };\n};\n\nexport const getLegacyAnalyticsActionForToggleFacetExclude = (\n  facetId: string,\n  selection: FacetValue\n) => {\n  const payload: FacetSelectionChangeMetadata = {\n    facetId: facetId,\n    facetValue: selection.value,\n  };\n\n  return isFacetValueExcluded(selection)\n    ? logFacetDeselect(payload)\n    : logFacetExclude(payload);\n};\n\nexport const getAnalyticsActionForToggleFacetExclude = (\n  facetId: string,\n  selection: FacetValue\n): SearchAction => {\n  return {\n    actionCause: isFacetValueExcluded(selection)\n      ? SearchPageEvents.facetUnexclude\n      : SearchPageEvents.facetExclude,\n    getEventExtraPayload: (state) =>\n      new SearchAnalyticsProvider(() => state).getFacetMetadata(\n        facetId,\n        selection.value\n      ),\n  };\n};\n", "import {SpecificFacetSearchResult} from '../../../../../api/search/facet-search/specific-facet-search/specific-facet-search-response';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {FacetSearchOptions} from '../../../../../features/facets/facet-search-set/facet-search-request-options';\nimport {\n  excludeFacetSearchResult,\n  registerFacetSearch,\n  selectFacetSearchResult,\n} from '../../../../../features/facets/facet-search-set/specific/specific-facet-search-actions';\nimport {deselectAllFacetValues} from '../../../../../features/facets/facet-set/facet-set-actions';\nimport {\n  ConfigurationSection,\n  FacetSearchSection,\n} from '../../../../../state/state-sections';\nimport {buildGenericFacetSearch} from '../facet-search';\n\nexport interface FacetSearchProps {\n  options: FacetSearchOptions;\n  select: (value: SpecificFacetSearchResult) => void;\n  exclude: (value: SpecificFacetSearchResult) => void;\n  isForFieldSuggestions: boolean;\n}\n\nexport type FacetSearch = ReturnType<typeof buildFacetSearch>;\n\nexport function buildFacetSearch(\n  engine: CoreEngine<FacetSearchSection & ConfigurationSection>,\n  props: FacetSearchProps\n) {\n  const {dispatch} = engine;\n  const {\n    options,\n    select: propsSelect,\n    exclude: propsExclude,\n    isForFieldSuggestions,\n  } = props;\n  const {facetId} = options;\n  const getFacetSearch = () => engine.state.facetSearchSet[facetId];\n\n  dispatch(registerFacetSearch(options));\n\n  const genericFacetSearch = buildGenericFacetSearch(engine, {\n    options,\n    getFacetSearch,\n    isForFieldSuggestions,\n  });\n\n  return {\n    ...genericFacetSearch,\n\n    /**\n     * Selects the provided value.\n     * @param result A single specificFacetSearchResult object\n     */\n    select(value: SpecificFacetSearchResult) {\n      dispatch(selectFacetSearchResult({facetId, value}));\n      propsSelect(value);\n    },\n\n    /**\n     * Excludes the provided value.\n     * @param result A single specificFacetSearchResult object\n     */\n    exclude(value: SpecificFacetSearchResult) {\n      dispatch(excludeFacetSearchResult({facetId, value}));\n      propsExclude(value);\n    },\n\n    /**\n     * Selects the provided value, and deselects other values.\n     * @param result A single specificFacetSearchResult object\n     */\n    singleSelect(value: SpecificFacetSearchResult) {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(selectFacetSearchResult({facetId, value}));\n      propsSelect(value);\n    },\n\n    /**\n     * Excludes the provided value, and deselects other values.\n     * @param result A single specificFacetSearchResult object\n     */\n    singleExclude(value: SpecificFacetSearchResult) {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(excludeFacetSearchResult({facetId, value}));\n      propsExclude(value);\n    },\n\n    get state() {\n      const {values} = genericFacetSearch.state;\n      return {\n        ...genericFacetSearch.state,\n        values: values.map(({count, displayValue, rawValue}) => ({\n          count,\n          displayValue,\n          rawValue,\n        })),\n      };\n    },\n  };\n}\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkOptions} from '../../../app/async-thunk-options';\nimport {\n  ConfigurationSection,\n  FacetSection,\n} from '../../../state/state-sections';\nimport {updateFacetOptions} from '../../facet-options/facet-options-actions';\nimport {facetIdDefinition} from '../generic/facet-actions-validation';\nimport {\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n} from './facet-set-actions';\nimport {facetValueDefinition} from './facet-set-validate-payload';\nimport {FacetValue} from './interfaces/response';\n\nconst definition = {\n  facetId: facetIdDefinition,\n  selection: new RecordValue({values: facetValueDefinition}),\n};\n\nexport const executeToggleFacetSelect = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: FacetValue;\n  },\n  AsyncThunkOptions<FacetSection & ConfigurationSection>\n>('facet/executeToggleSelect', ({facetId, selection}, thunk) => {\n  const {\n    dispatch,\n    extra: {validatePayload},\n  } = thunk;\n  validatePayload({facetId, selection}, definition);\n  dispatch(toggleSelectFacetValue({facetId, selection}));\n  dispatch(updateFacetOptions());\n});\n\nexport const executeToggleFacetExclude = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: FacetValue;\n  },\n  AsyncThunkOptions<FacetSection & ConfigurationSection>\n>('facet/executeToggleExclude', ({facetId, selection}, thunk) => {\n  const {\n    dispatch,\n    extra: {validatePayload},\n  } = thunk;\n  validatePayload({facetId, selection}, definition);\n  dispatch(toggleExcludeFacetValue({facetId, selection}));\n  dispatch(updateFacetOptions());\n});\n", "import {FacetSortOrder} from '../facet-set/interfaces/request';\nimport {FacetValueState} from './value';\n\nexport interface BaseFacetRequest {\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId: string;\n  /** The field whose values you want to display in the facet.*/\n  field: string;\n  /** Whether to exclude folded result parents when estimating the result count for each facet value.\n   * @defaultValue `true`\n   */\n  filterFacetCount: boolean;\n  /** The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth: number;\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   * Minimum: `1`\n   * @defaultValue `8`\n   */\n  numberOfValues: number;\n  /** Whether to prevent Coveo ML from automatically selecting values.\n   * @defaultValue `false`\n   */\n  preventAutoSelect: boolean;\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch: FacetResultsMustMatch;\n}\n\nexport interface BaseFacetValueRequest {\n  /** The current facet value state.\n   * @defaultValue `idle`\n   */\n  state: FacetValueState;\n}\n\nexport interface CurrentValues<T> {\n  /** The values displayed by the facet in the search interface at the moment of the request.\n   * @defaultValue `[]`\n   */\n  currentValues: T[];\n}\n\nexport interface Freezable {\n  /** Setting this to true is ensures that the facet does not move around while the end-user is interacting with it in the search interface.\n   * @defaultValue `false`\n   */\n  freezeCurrentValues: boolean;\n}\n\nexport interface Delimitable {\n  /** The character that specifies the hierarchical dependency.\n   * @defaultValue `>`\n   */\n  delimitingCharacter: string;\n}\n\nexport interface Expandable {\n  /** Whether the facet is expanded in the search interface at the moment of the request.\n   * @defaultValue `false`\n   */\n  isFieldExpanded: boolean;\n}\n\nexport interface Type<T extends FacetType> {\n  type: T;\n}\n\nexport type FacetType =\n  | 'specific'\n  | 'dateRange'\n  | 'numericalRange'\n  | 'hierarchical';\n\nexport interface SortCriteria<\n  T extends\n    | 'score'\n    | 'alphanumeric'\n    | 'alphanumericDescending'\n    | 'ascending'\n    | 'descending'\n    | 'occurrences'\n    | 'automatic'\n    | SpecificSortCriteriaExplicitAlphanumeric,\n> {\n  /** The sort criterion to apply to the returned facet values. */\n  sortCriteria: T;\n}\n\nexport interface SpecificSortCriteriaExplicitAlphanumeric {\n  type: 'alphanumeric';\n  order: FacetSortOrder;\n}\n\nexport interface RangeAlgorithm<T extends 'even' | 'equiprobable'> {\n  /** The range algorithm to apply to automatically generated ranges for range facet. */\n  rangeAlgorithm: T;\n}\n\nexport type FacetResultsMustMatch = 'allValues' | 'atLeastOneValue';\n\nexport const facetResultsMustMatch: FacetResultsMustMatch[] = [\n  'allValues',\n  'atLeastOneValue',\n];\n\nexport interface AllowedValues {\n  /**\n   *  Specifies an explicit list of `allowedValues` in the Search API request.\n   *\n   * If you specify a list of values for this option, the facet uses only these values (if they are available in\n   * the current result set).\n   */\n  allowedValues?: {\n    type: 'simple';\n    values: string[];\n  };\n}\n\nexport interface CustomSort {\n  /**\n   * Identifies the facet values that must appear at the top, in this order.\n   * This parameter can be used in conjunction with the `sortCriteria` parameter.\n   *\n   * Facet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n   *\n   * The maximum amount of custom sort values is 25.\n   *\n   * The default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`.\n   */\n  customSort?: string[];\n}\n", "import {\n  BaseFacetRequest,\n  CurrentValues,\n  Freezable,\n  Type,\n  SortCriteria,\n  BaseFacetValueRequest,\n  Expandable,\n  AllowedValues,\n  CustomSort,\n  SpecificSortCriteriaExplicitAlphanumeric,\n} from '../../facet-api/request';\n\nexport const facetSortCriteria: FacetSortCriterion[] = [\n  'score',\n  'alphanumeric',\n  'alphanumericDescending',\n  'occurrences',\n  'automatic',\n];\n\nexport type FacetSortCriterion =\n  | 'score'\n  | 'alphanumeric'\n  | 'alphanumericDescending'\n  | 'occurrences'\n  | 'automatic';\n\nexport type FacetSortOrder = 'ascending' | 'descending';\n\nexport interface FacetValueRequest extends BaseFacetValueRequest {\n  value: string;\n}\n\nexport interface FacetRequest\n  extends BaseFacetRequest,\n    CurrentValues<FacetValueRequest>,\n    Expandable,\n    Freezable,\n    Type<'specific'>,\n    AllowedValues,\n    CustomSort,\n    SortCriteria<\n      FacetSortCriterion | SpecificSortCriteriaExplicitAlphanumeric\n    > {\n  /** @defaultValue `automatic` */\n  sortCriteria: FacetSortCriterion | SpecificSortCriteriaExplicitAlphanumeric;\n}\n", "import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  FacetResultsMustMatch,\n  facetResultsMustMatch,\n} from '../../../../features/facets/facet-api/request';\nimport {\n  facetSortCriteria,\n  FacetSortCriterion,\n} from '../../../../features/facets/facet-set/interfaces/request';\nimport {\n  facetId,\n  field,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  facetSearch,\n} from '../_common/facet-option-definitions';\n\nexport interface FacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * A unique identifier for the controller. By default, a random unique identifier is generated.\n   * */\n  facetId?: string;\n\n  /**\n   * Facet search options.\n   */\n  facetSearch?: FacetSearchOptions;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   * Learn more about `sortCriteria` values and the default behavior of specific facets in the [Search API documentation](https://docs.coveo.com/en/1461/build-a-search-ui/query-parameters#RestFacetRequest-sortCriteria).\n   *\n   * @defaultValue `automatic`\n   */\n  sortCriteria?: FacetSortCriterion;\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch?: FacetResultsMustMatch;\n}\n\nexport interface FacetSearchOptions {\n  /**\n   * A dictionary that maps index field values to facet value display names.\n   */\n  captions?: Record<string, string>;\n\n  /**\n   * The maximum number of values to fetch.\n   *\n   * @defaultValue `10`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The query to search the facet values with.\n   */\n  query?: string;\n}\n\nexport const facetOptionsSchema = new Schema<Required<FacetOptions>>({\n  facetId,\n  field,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  sortCriteria: new StringValue({constrainTo: facetSortCriteria}),\n  resultsMustMatch: new StringValue({constrainTo: facetResultsMustMatch}),\n  facetSearch,\n});\n", "import {configuration} from '../../../../app/common-reducers';\nimport {CoreEngine} from '../../../../app/engine';\nimport {SearchThunkExtraArguments} from '../../../../app/search-thunk-extra-arguments';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from '../../../../features/facet-options/facet-options-actions';\nimport {isFacetEnabledSelector} from '../../../../features/facet-options/facet-options-selectors';\nimport {facetOptionsReducer as facetOptions} from '../../../../features/facet-options/facet-options-slice';\nimport {FacetValueState} from '../../../../features/facets/facet-api/value';\nimport {defaultFacetSearchOptions} from '../../../../features/facets/facet-search-set/facet-search-reducer-helpers';\nimport {specificFacetSearchSetReducer as facetSearchSet} from '../../../../features/facets/facet-search-set/specific/specific-facet-search-set-slice';\nimport {\n  registerFacet,\n  deselectAllFacetValues,\n  updateFacetSortCriterion,\n  updateFacetNumberOfValues,\n  updateFacetIsFieldExpanded,\n} from '../../../../features/facets/facet-set/facet-set-actions';\nimport {\n  executeToggleFacetExclude,\n  executeToggleFacetSelect,\n} from '../../../../features/facets/facet-set/facet-set-controller-actions';\nimport {\n  facetRequestSelector,\n  facetResponseSelector,\n  isFacetLoadingResponseSelector,\n} from '../../../../features/facets/facet-set/facet-set-selectors';\nimport {facetSetReducer as facetSet} from '../../../../features/facets/facet-set/facet-set-slice';\nimport {defaultFacetOptions} from '../../../../features/facets/facet-set/facet-set-slice';\nimport {\n  isFacetValueExcluded,\n  isFacetValueSelected,\n} from '../../../../features/facets/facet-set/facet-set-utils';\nimport {FacetSortCriterion} from '../../../../features/facets/facet-set/interfaces/request';\nimport {\n  ConfigurationSection,\n  FacetOptionsSection,\n  FacetSearchSection,\n  FacetSection,\n  ProductListingSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {loadReducerError} from '../../../../utils/errors';\nimport {omit} from '../../../../utils/utils';\nimport {validateOptions} from '../../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../../controller/headless-controller';\nimport {determineFacetId} from '../_common/facet-id-determinor';\nimport {\n  FacetOptions,\n  facetOptionsSchema,\n  FacetSearchOptions,\n} from './headless-core-facet-options';\n\nexport type {FacetOptions, FacetSearchOptions, FacetValueState};\n\nexport interface CoreFacetProps {\n  /**\n   * The options for the core `Facet` controller.\n   * */\n  options: FacetOptions;\n}\n\n/**\n * The `Facet` controller allows you to create a search interface component that the end user\n * can use to refine a query by selecting filters based on item metadata (i.e., field values).\n * If you have enabled a [Dynamic Navigation Experience (DNE)](https://docs.coveo.com/en/m2na0333/)\n * model, the `Facet` controller automatically reorders facet values according to the user query.\n */\nexport interface Facet extends CoreFacet {\n  /**\n   * Provides methods to search the facet's values.\n   */\n  facetSearch: FacetSearch;\n\n  /**\n   * The state of the `Facet` controller.\n   */\n  state: FacetState;\n}\n\n/**\n * The `Facet` headless controller offers a high-level interface for designing a common facet UI controller.\n */\nexport interface CoreFacet extends Controller {\n  /**\n   * Toggles the specified facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: FacetValue): void;\n\n  /**\n   * Toggles exclusion of the specified facet value.\n   *\n   * @param selection - The facet value to toggle exclusion.\n   */\n  toggleExclude(selection: FacetValue): void;\n\n  /**\n   * Toggles the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleSelect(selection: FacetValue): void;\n\n  /**\n   * Excludes the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle exclusion.\n   */\n  toggleSingleExclude(selection: FacetValue): void;\n\n  /**\n   * Checks whether the specified facet value is selected.\n   *\n   * @param value - The facet value to check.\n   * @returns Whether the specified facet value is selected.\n   */\n  isValueSelected(value: FacetValue): boolean;\n\n  /**\n   * Checks whether the specified facet value is excluded.\n   *\n   * @param value - The facet value to check.\n   * @returns Whether the specified facet value is excluded.\n   */\n  isValueExcluded(value: FacetValue): boolean;\n\n  /**\n   * Deselects all facet values.\n   * */\n  deselectAll(): void;\n\n  /**\n   * Sorts the facet values according to the specified criterion.\n   *\n   * @param criterion - The criterion to use for sorting values.\n   */\n  sortBy(criterion: FacetSortCriterion): void;\n\n  /**\n   * Checks whether the facet values are sorted according to the specified criterion.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns Whether the facet values are sorted according to the specified criterion.\n   */\n  isSortedBy(criterion: FacetSortCriterion): boolean;\n\n  /**\n   * Increases the number of values displayed in the facet to the next multiple of the originally configured value.\n   */\n  showMoreValues(): void;\n\n  /**\n   * Sets the number of values displayed in the facet to the originally configured value.\n   * */\n  showLessValues(): void;\n\n  /**\n   * Enables the facet. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the facet. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `Facet` controller.\n   * */\n  state: CoreFacetState;\n}\n\nexport interface FacetState extends CoreFacetState {\n  /** The state of the facet's searchbox. */\n  facetSearch: FacetSearchState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `Facet` controller.\n */\nexport interface CoreFacetState {\n  /** The facet ID. */\n  facetId: string;\n\n  /** The values of the facet. */\n  values: FacetValue[];\n\n  /** The active sortCriterion of the facet. */\n  sortCriterion: FacetSortCriterion;\n\n  /** `true` if a search is in progress and `false` otherwise. */\n  isLoading: boolean;\n\n  /** `true` if there is at least one non-idle value and `false` otherwise. */\n  hasActiveValues: boolean;\n\n  /** `true` if there are more values to display and `false` otherwise. */\n  canShowMoreValues: boolean;\n\n  /** `true` if fewer values can be displayed and `false` otherwise. */\n  canShowLessValues: boolean;\n\n  /** Whether the facet is enabled and its values are used to filter search results. */\n  enabled: boolean;\n}\n\nexport interface FacetSearch {\n  /**\n   * Updates the facet search query.\n   *\n   * @param text - The query to search.\n   * */\n  updateText(text: string): void;\n\n  /**\n   * Shows more facet search results.\n   * */\n  showMoreResults(): void;\n\n  /**\n   * Performs a facet search.\n   * */\n  search(): void;\n\n  /**\n   * Selects a facet search result.\n   *\n   * @param value - The search result to select.\n   * */\n  select(value: SpecificFacetSearchResult): void;\n\n  /**\n   * Excludes a facet search result.\n   *\n   * @param value - The search result to exclude.\n   * */\n  exclude(value: SpecificFacetSearchResult): void;\n\n  /**\n   * Selects a search result while deselecting facet values.\n   *\n   * @param value - The search result to select.\n   * */\n  singleSelect(value: SpecificFacetSearchResult): void;\n\n  /**\n   * Excludes a search result while including facet values.\n   *\n   * @param value - The search result to exclude.\n   * */\n  singleExclude(value: SpecificFacetSearchResult): void;\n\n  /**\n   * Resets the query and empties the values.\n   * */\n  clear(): void;\n\n  /**\n   * Updates the facet value captions.\n   * @param captions - A dictionary that maps index field values to facet value display names.\n   */\n  updateCaptions(captions: Record<string, string>): void;\n}\n\nexport interface FacetSearchState {\n  /**\n   * The facet search results.\n   * */\n  values: SpecificFacetSearchResult[];\n\n  /**\n   * `true` if the facet search is in progress and `false` otherwise.\n   * */\n  isLoading: boolean;\n\n  /**\n   * Whether more values are available.\n   * */\n  moreValuesAvailable: boolean;\n\n  /** The current query in the facet search box. */\n  query: string;\n}\n\nexport interface SpecificFacetSearchResult {\n  /**\n   * The custom facet value display name, as specified in the `captions` argument of the facet request.\n   */\n  displayValue: string;\n\n  /**\n   * The original facet value, as retrieved from the field in the index.\n   */\n  rawValue: string;\n\n  /**\n   * An estimate of the number of result items matching both the current query and\n   * the filter expression that would get generated if the facet value were selected.\n   */\n  count: number;\n}\n\nexport interface FacetValue {\n  /**\n   * Whether a facet value is filtering results (`selected`) or not (`idle`).\n   * */\n  state: FacetValueState;\n\n  /**\n   * The number of results that have the facet value.\n   * */\n  numberOfResults: number;\n\n  /**\n   * The facet value.\n   * */\n  value: string;\n}\n\n/**\n * Creates a `Facet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Facet` properties.\n * @param optionsSchema - The facet options schema to use when validating options upon facet initialization.\n * @returns A `Facet` controller instance.\n * */\nexport function buildCoreFacet(\n  engine: CoreEngine,\n  props: CoreFacetProps,\n  optionsSchema = facetOptionsSchema\n): CoreFacet {\n  if (!loadFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  const facetId = determineFacetId(engine, props.options);\n  const registrationOptions = {\n    ...defaultFacetOptions,\n    ...omit('facetSearch', props.options),\n    field: props.options.field,\n    facetId,\n  };\n  const options: Required<FacetOptions> = {\n    facetSearch: {...defaultFacetSearchOptions, ...props.options.facetSearch},\n    ...registrationOptions,\n  };\n\n  validateOptions(engine, optionsSchema, options, 'buildFacet');\n\n  const getRequest = () => facetRequestSelector(engine.state, facetId);\n  const getResponse = () => facetResponseSelector(engine.state, facetId);\n  const getIsLoading = () => isFacetLoadingResponseSelector(engine.state);\n  const getIsEnabled = () => isFacetEnabledSelector(engine.state, facetId);\n\n  const getNumberOfActiveValues = () => {\n    const {currentValues} = getRequest();\n    return currentValues.filter((v) => v.state !== 'idle').length;\n  };\n\n  const computeCanShowLessValues = () => {\n    const {currentValues} = getRequest();\n    const initialNumberOfValues = options.numberOfValues;\n    const hasIdleValues = !!currentValues.find((v) => v.state === 'idle');\n\n    return initialNumberOfValues < currentValues.length && hasIdleValues;\n  };\n\n  dispatch(registerFacet(registrationOptions));\n\n  return {\n    ...controller,\n\n    toggleSelect: (selection: FacetValue) =>\n      dispatch(executeToggleFacetSelect({facetId: options.facetId, selection})),\n\n    toggleExclude: (selection: FacetValue) =>\n      dispatch(\n        executeToggleFacetExclude({facetId: options.facetId, selection})\n      ),\n\n    // Must use a function here to properly support inheritance with `this`.\n    toggleSingleSelect: function (selection: FacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleSelect(selection);\n    },\n\n    // Must use a function here to properly support inheritance with `this`.\n    toggleSingleExclude: function (selection: FacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleExclude(selection);\n    },\n\n    isValueSelected: isFacetValueSelected,\n\n    isValueExcluded: isFacetValueExcluded,\n\n    deselectAll() {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(updateFacetOptions());\n    },\n\n    sortBy(criterion: FacetSortCriterion) {\n      dispatch(updateFacetSortCriterion({facetId, criterion}));\n      dispatch(updateFacetOptions());\n    },\n\n    isSortedBy(criterion: FacetSortCriterion) {\n      return this.state.sortCriterion === criterion;\n    },\n\n    showMoreValues() {\n      const numberInState = getRequest().numberOfValues;\n      const initialNumberOfValues = options.numberOfValues;\n      const numberToNextMultipleOfConfigured =\n        initialNumberOfValues - (numberInState % initialNumberOfValues);\n      const numberOfValues = numberInState + numberToNextMultipleOfConfigured;\n\n      dispatch(updateFacetNumberOfValues({facetId, numberOfValues}));\n      dispatch(updateFacetIsFieldExpanded({facetId, isFieldExpanded: true}));\n      dispatch(updateFacetOptions());\n    },\n\n    showLessValues() {\n      const initialNumberOfValues = options.numberOfValues;\n      const newNumberOfValues = Math.max(\n        initialNumberOfValues,\n        getNumberOfActiveValues()\n      );\n\n      dispatch(\n        updateFacetNumberOfValues({facetId, numberOfValues: newNumberOfValues})\n      );\n      dispatch(updateFacetIsFieldExpanded({facetId, isFieldExpanded: false}));\n      dispatch(updateFacetOptions());\n    },\n\n    enable() {\n      dispatch(enableFacet(facetId));\n    },\n\n    disable() {\n      dispatch(disableFacet(facetId));\n    },\n\n    get state() {\n      const request = getRequest();\n      const response = getResponse();\n      const isLoading = getIsLoading();\n      const enabled = getIsEnabled();\n      let sortCriterion!: FacetSortCriterion;\n\n      if (typeof request.sortCriteria === 'object') {\n        sortCriterion =\n          request.sortCriteria.order === 'descending'\n            ? 'alphanumericDescending'\n            : 'alphanumeric';\n      } else {\n        sortCriterion = request.sortCriteria;\n      }\n\n      const values = response ? response.values : [];\n      const hasActiveValues = values.some(\n        (facetValue) => facetValue.state !== 'idle'\n      );\n      const canShowMoreValues = response ? response.moreValuesAvailable : false;\n\n      const resultsMustMatch = request.resultsMustMatch;\n\n      return {\n        facetId,\n        values,\n        sortCriterion,\n        resultsMustMatch,\n        isLoading,\n        hasActiveValues,\n        canShowMoreValues,\n        canShowLessValues: computeCanShowLessValues(),\n        enabled,\n      };\n    },\n  };\n}\n\nfunction loadFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  FacetSection &\n    FacetOptionsSection &\n    ConfigurationSection &\n    FacetSearchSection &\n    (SearchSection | ProductListingSection),\n  SearchThunkExtraArguments\n> {\n  engine.addReducers({facetSet, facetOptions, configuration, facetSearchSet});\n  return true;\n}\n", "import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  FacetResultsMustMatch,\n  facetResultsMustMatch,\n} from '../../../features/facets/facet-api/request';\nimport {\n  facetSortCriteria,\n  FacetSortCriterion,\n} from '../../../features/facets/facet-set/interfaces/request';\nimport {\n  facetId,\n  field,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  facetSearch,\n  allowedValues,\n  hasBreadcrumbs,\n  customSort,\n} from '../../core/facets/_common/facet-option-definitions';\n\nexport interface FacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   * */\n  field: string;\n\n  /**\n   * A unique identifier for the controller. By default, a random unique identifier is generated.\n   * */\n  facetId?: string;\n\n  /**\n   * Facet search options.\n   */\n  facetSearch?: FacetSearchOptions;\n\n  /**\n   * Whether to exclude the parents of folded results when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   * */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet. Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The criterion to use for sorting returned facet values.\n   * Learn more about `sortCriteria` values and the default behavior of specific facets in the [Search API documentation](https://docs.coveo.com/en/1461/build-a-search-ui/query-parameters#RestFacetRequest-sortCriteria).\n   *\n   * @defaultValue `automatic`\n   */\n  sortCriteria?: FacetSortCriterion;\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch?: FacetResultsMustMatch;\n\n  /**\n   * Specifies an explicit list of `allowedValues` in the Search API request.\n   *\n   * If you specify a list of values for this option, the facet uses only these values (if they are available in\n   * the current result set).\n   *\n   * The maximum amount of allowed values is 25.\n   *\n   * Default value is `undefined`, and the facet uses all available values for its `field` in the current result set.\n   */\n  allowedValues?: string[];\n\n  /**\n   * Specifies whether breadcrumbs appear for the facet\n   * @defaultValue `true`\n   */\n  hasBreadcrumbs?: boolean;\n\n  /**\n   * Identifies the facet values that must appear at the top, in this order.\n   * This parameter can be used in conjunction with the `sortCriteria` parameter.\n   *\n   * Facet values not part of the `customSort` list will be sorted according to the `sortCriteria`.\n   *\n   * The maximum amount of custom sort values is 25.\n   *\n   * The default value is `undefined`, and the facet values will be sorted using only the `sortCriteria`.\n   */\n  customSort?: string[];\n}\n\nexport interface FacetSearchOptions {\n  /**\n   * A dictionary that maps index field values to facet value display names.\n   */\n  captions?: Record<string, string>;\n\n  /**\n   * The maximum number of values to fetch.\n   *\n   * @defaultValue `10`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The query to search the facet values with.\n   */\n  query?: string;\n}\n\nexport const facetOptionsSchema = new Schema<Required<FacetOptions>>({\n  facetId,\n  field,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  sortCriteria: new StringValue({constrainTo: facetSortCriteria}),\n  resultsMustMatch: new StringValue({constrainTo: facetResultsMustMatch}),\n  facetSearch,\n  allowedValues,\n  hasBreadcrumbs,\n  customSort,\n});\n", "import {CoreEngine} from '../../..';\nimport {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {configuration} from '../../../app/common-reducers';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {SearchThunkExtraArguments} from '../../../app/search-thunk-extra-arguments';\nimport {SearchPageEvents} from '../../../features/analytics/search-action-cause';\nimport {updateFacetOptions} from '../../../features/facet-options/facet-options-actions';\nimport {FacetValueState} from '../../../features/facets/facet-api/value';\nimport {specificFacetSearchSetReducer as facetSearchSet} from '../../../features/facets/facet-search-set/specific/specific-facet-search-set-slice';\nimport {\n  logFacetClearAll,\n  logFacetUpdateSort,\n  logFacetShowMore,\n  logFacetShowLess,\n  logFacetSelect,\n  logFacetExclude,\n} from '../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {facetSetReducer as facetSet} from '../../../features/facets/facet-set/facet-set-slice';\nimport {\n  getLegacyAnalyticsActionForToggleFacetExclude,\n  getLegacyAnalyticsActionForToggleFacetSelect,\n  getAnalyticsActionForToggleFacetExclude,\n  getAnalyticsActionForToggleFacetSelect,\n} from '../../../features/facets/facet-set/facet-set-utils';\nimport {FacetSortCriterion} from '../../../features/facets/facet-set/interfaces/request';\nimport {\n  executeSearch,\n  fetchFacetValues,\n} from '../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  FacetSection,\n  ConfigurationSection,\n  FacetSearchSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {buildFacetSearch} from '../../core/facets/facet-search/specific/headless-facet-search';\nimport {\n  buildCoreFacet,\n  Facet,\n  FacetSearch,\n  FacetSearchState,\n  FacetState,\n  FacetValue,\n  SpecificFacetSearchResult,\n  CoreFacet,\n  CoreFacetState,\n} from '../../core/facets/facet/headless-core-facet';\nimport {\n  FacetOptions,\n  FacetSearchOptions,\n  facetOptionsSchema,\n} from './headless-facet-options';\n\nexport type {\n  FacetOptions,\n  FacetSearchOptions,\n  FacetValueState,\n  Facet,\n  FacetState,\n  FacetSearch,\n  FacetSearchState,\n  SpecificFacetSearchResult,\n  FacetValue,\n  CoreFacet,\n  CoreFacetState,\n};\n\nexport interface FacetProps {\n  /**\n   * The options for the `Facet` controller.\n   * */\n  options: FacetOptions;\n}\n\n/**\n * Creates a `Facet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Facet` properties.\n * @returns A `Facet` controller instance.\n * */\nexport function buildFacet(engine: SearchEngine, props: FacetProps): Facet {\n  if (!loadFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const coreController = buildCoreFacet(\n    engine,\n    {\n      ...props,\n      options: {\n        ...props.options,\n        ...(props.options.allowedValues && {\n          allowedValues: {\n            type: 'simple',\n            values: props.options.allowedValues,\n          },\n        }),\n      },\n    },\n    facetOptionsSchema\n  );\n  const getFacetId = () => coreController.state.facetId;\n\n  const createFacetSearch = () => {\n    const {facetSearch} = props.options;\n\n    return buildFacetSearch(engine, {\n      options: {facetId: getFacetId(), ...facetSearch},\n      select: (value) => {\n        dispatch(updateFacetOptions());\n        dispatch(\n          executeSearch({\n            legacy: logFacetSelect({\n              facetId: getFacetId(),\n              facetValue: value.rawValue,\n            }),\n            next: {\n              actionCause: SearchPageEvents.facetSelect,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  getFacetId(),\n                  value.rawValue\n                ),\n            },\n          })\n        );\n      },\n      exclude: (value) => {\n        dispatch(updateFacetOptions());\n        dispatch(\n          executeSearch({\n            legacy: logFacetExclude({\n              facetId: getFacetId(),\n              facetValue: value.rawValue,\n            }),\n            next: {\n              actionCause: SearchPageEvents.facetExclude,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  getFacetId(),\n                  value.rawValue\n                ),\n            },\n          })\n        );\n      },\n      isForFieldSuggestions: false,\n    });\n  };\n\n  const facetSearch = createFacetSearch();\n  const {state, ...restOfFacetSearch} = facetSearch;\n\n  return {\n    ...coreController,\n\n    facetSearch: restOfFacetSearch,\n\n    toggleSelect(selection) {\n      coreController.toggleSelect(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleFacetSelect(\n            getFacetId(),\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetSelect(getFacetId(), selection),\n        })\n      );\n    },\n\n    toggleExclude(selection) {\n      coreController.toggleExclude(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleFacetExclude(\n            getFacetId(),\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetExclude(\n            getFacetId(),\n            selection\n          ),\n        })\n      );\n    },\n\n    deselectAll() {\n      coreController.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                getFacetId()\n              ),\n          },\n        })\n      );\n    },\n\n    sortBy(criterion: FacetSortCriterion) {\n      coreController.sortBy(criterion);\n      dispatch(\n        executeSearch({\n          legacy: logFacetUpdateSort({facetId: getFacetId(), criterion}),\n          next: {\n            actionCause: SearchPageEvents.facetUpdateSort,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetSortMetadata(\n                getFacetId(),\n                criterion\n              ),\n          },\n        })\n      );\n    },\n\n    isSortedBy(criterion: FacetSortCriterion) {\n      return this.state.sortCriterion === criterion;\n    },\n\n    showMoreValues() {\n      coreController.showMoreValues();\n      dispatch(fetchFacetValues({legacy: logFacetShowMore(getFacetId())}));\n    },\n\n    showLessValues() {\n      coreController.showLessValues();\n      dispatch(fetchFacetValues({legacy: logFacetShowLess(getFacetId())}));\n    },\n\n    get state() {\n      return {\n        ...coreController.state,\n        facetSearch: facetSearch.state,\n      };\n    },\n  };\n}\n\nfunction loadFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  FacetSection & ConfigurationSection & FacetSearchSection & SearchSection,\n  SearchThunkExtraArguments\n> {\n  engine.addReducers({facetSet, configuration, facetSearchSet, search});\n  return true;\n}\n", "import {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../app/ssr-engine/types/common';\nimport {Facet, FacetProps, buildFacet} from './headless-facet';\n\nexport * from './headless-facet';\n\n/**\n * @internal\n */\nexport const defineFacet = (\n  props: FacetProps\n): ControllerDefinitionWithoutProps<SearchEngine, Facet> => ({\n  build: (engine) => buildFacet(engine, props),\n});\n", "import {SearchAnalyticsProvider} from '../../../../api/analytics/search-analytics';\nimport {SearchPageEvents} from '../../../analytics/search-action-cause';\nimport {SearchAction} from '../../../search/search-actions';\nimport {\n  logFacetDeselect,\n  logFacetExclude,\n  logFacetSelect,\n} from '../../facet-set/facet-set-analytics-actions';\nimport {FacetSelectionChangeMetadata} from '../../facet-set/facet-set-analytics-actions-utils';\nimport {RangeFacetValue} from './interfaces/range-facet';\n\nexport const isRangeFacetValueSelected = (selection: RangeFacetValue) => {\n  return selection.state === 'selected';\n};\n\nexport const isRangeFacetValueExcluded = (selection: RangeFacetValue) => {\n  return selection.state === 'excluded';\n};\n\nexport const getLegacyAnalyticsActionForToggleRangeFacetSelect = (\n  facetId: string,\n  selection: RangeFacetValue\n) => {\n  const facetValue = `${selection.start}..${selection.end}`;\n  const payload: FacetSelectionChangeMetadata = {facetId, facetValue};\n\n  return isRangeFacetValueSelected(selection)\n    ? logFacetDeselect(payload)\n    : logFacetSelect(payload);\n};\n\nexport const getAnalyticsActionForToggleFacetSelect = (\n  facetId: string,\n  selection: RangeFacetValue\n): SearchAction => {\n  return {\n    actionCause: isRangeFacetValueSelected(selection)\n      ? SearchPageEvents.facetSelect\n      : SearchPageEvents.facetDeselect,\n    getEventExtraPayload: (state) =>\n      new SearchAnalyticsProvider(() => state).getFacetMetadata(\n        facetId,\n        `${selection.start}..${selection.end}`\n      ),\n  };\n};\n\nexport const getLegacyAnalyticsActionForToggleRangeFacetExclude = (\n  facetId: string,\n  selection: RangeFacetValue\n) => {\n  const facetValue = `${selection.start}..${selection.end}`;\n  const payload: FacetSelectionChangeMetadata = {facetId, facetValue};\n\n  return isRangeFacetValueExcluded(selection)\n    ? logFacetDeselect(payload)\n    : logFacetExclude(payload);\n};\n\nexport const getAnalyticsActionForToggleRangeFacetExclude = (\n  facetId: string,\n  selection: RangeFacetValue\n): SearchAction => {\n  return {\n    actionCause: isRangeFacetValueExcluded(selection)\n      ? SearchPageEvents.facetUnexclude\n      : SearchPageEvents.facetExclude,\n    getEventExtraPayload: (state) =>\n      new SearchAnalyticsProvider(() => state).getFacetMetadata(\n        facetId,\n        `${selection.start}..${selection.end}`\n      ),\n  };\n};\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../../../utils/validate-payload';\nimport {\n  RangeFacetSelectionPayload,\n  rangeFacetSelectionPayloadDefinition,\n} from './range-facet-validate-payload';\n\nexport const executeToggleRangeFacetSelect = createAction(\n  'rangeFacet/executeToggleSelect',\n  (payload: RangeFacetSelectionPayload) =>\n    validatePayload(\n      payload,\n      rangeFacetSelectionPayloadDefinition(payload.selection)\n    )\n);\n\nexport const executeToggleRangeFacetExclude = createAction(\n  'rangeFacet/executeToggleExclude',\n  (payload: RangeFacetSelectionPayload) =>\n    validatePayload(\n      payload,\n      rangeFacetSelectionPayloadDefinition(payload.selection)\n    )\n);\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n} from '../../../../state/state-sections';\nimport {updateFacetOptions} from '../../../facet-options/facet-options-actions';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {\n  executeToggleRangeFacetExclude,\n  executeToggleRangeFacetSelect,\n} from '../generic/range-facet-controller-actions';\nimport {dateFacetValueDefinition} from '../generic/range-facet-validate-payload';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n} from './date-facet-actions';\nimport {DateFacetValue} from './interfaces/response';\n\nconst definition = {\n  facetId: facetIdDefinition,\n  selection: new RecordValue({values: dateFacetValueDefinition}),\n};\n\nexport const executeToggleDateFacetSelect = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: DateFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & DateFacetSection>\n>(\n  'dateFacet/executeToggleSelect',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleSelectDateFacetValue(payload));\n    dispatch(executeToggleRangeFacetSelect(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n\nexport const executeToggleDateFacetExclude = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: DateFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & DateFacetSection>\n>(\n  'dateFacet/executeToggleExclude',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleExcludeDateFacetValue(payload));\n    dispatch(executeToggleRangeFacetExclude(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n", "import {RangeFacetOptionalParameters} from './interfaces/options';\nimport {\n  RangeFacetRequest,\n  RangeFacetResponse,\n  RangeFacetValue,\n  RangeValueRequest,\n} from './interfaces/range-facet';\n\ntype RangeFacetSlice<\n  RequestType extends RangeFacetRequest = RangeFacetRequest,\n> = {\n  request: RequestType;\n};\n\ntype RangeFacetState<SliceType extends RangeFacetSlice<RangeFacetRequest>> =\n  Record<string, SliceType>;\n\nexport const defaultRangeFacetOptions: RangeFacetOptionalParameters = {\n  filterFacetCount: true,\n  injectionDepth: 1000,\n  numberOfValues: 8,\n  sortCriteria: 'ascending',\n  rangeAlgorithm: 'even',\n  resultsMustMatch: 'atLeastOneValue',\n};\n\nexport function registerRangeFacet<T extends RangeFacetSlice>(\n  state: RangeFacetState<T>,\n  slice: T\n) {\n  const {request} = slice;\n  const {facetId} = request;\n\n  if (facetId in state) {\n    return;\n  }\n\n  const numberOfValues = calculateNumberOfValues(request);\n  request.numberOfValues = numberOfValues;\n  state[facetId] = slice;\n}\n\nexport function updateRangeValues<T extends RangeFacetSlice>(\n  state: RangeFacetState<T>,\n  facetId: string,\n  values: T['request']['currentValues']\n) {\n  const request = state[facetId]?.request;\n\n  if (!request) {\n    return;\n  }\n\n  request.currentValues = values;\n  request.numberOfValues = calculateNumberOfValues(request);\n}\n\nexport function toggleSelectRangeValue<\n  T extends RangeFacetSlice,\n  U extends RangeFacetValue,\n>(state: RangeFacetState<T>, facetId: string, selection: U) {\n  const request = state[facetId]?.request;\n\n  if (!request) {\n    return;\n  }\n\n  const value = findRange(request.currentValues, selection);\n\n  if (!value) {\n    return;\n  }\n\n  const isSelected = value.state === 'selected';\n  value.state = isSelected ? 'idle' : 'selected';\n\n  request.preventAutoSelect = true;\n}\n\nexport function toggleExcludeRangeValue<\n  T extends RangeFacetSlice,\n  U extends RangeFacetValue,\n>(state: RangeFacetState<T>, facetId: string, selection: U) {\n  const request = state[facetId]?.request;\n\n  if (!request) {\n    return;\n  }\n\n  const value = findRange(request.currentValues, selection);\n\n  if (!value) {\n    return;\n  }\n\n  const isExcluded = value.state === 'excluded';\n  value.state = isExcluded ? 'idle' : 'excluded';\n\n  request.preventAutoSelect = true;\n}\n\nexport function handleRangeFacetDeselectAll<T extends RangeFacetSlice>(\n  state: RangeFacetState<T>,\n  facetId: string\n) {\n  const facetRequest = state[facetId]?.request;\n\n  if (!facetRequest) {\n    return;\n  }\n\n  facetRequest.currentValues.forEach((request) => (request.state = 'idle'));\n}\n\nexport function handleRangeFacetSearchParameterRestoration<\n  T extends RangeFacetSlice,\n>(\n  state: RangeFacetState<T>,\n  rangeFacets: Record<string, T['request']['currentValues']>\n) {\n  Object.entries(state).forEach(([facetId, {request}]) => {\n    type Range = T['request']['currentValues'][0];\n    const rangesToSelect: Range[] = rangeFacets[facetId] || [];\n\n    request.currentValues.forEach((range: Range) => {\n      const found = !!findRange(rangesToSelect, range);\n      range.state = found ? 'selected' : 'idle';\n      return range;\n    });\n\n    const missingRanges = rangesToSelect.filter(\n      (range) => !findRange(request.currentValues, range)\n    );\n    const currentValues: Range[] = request.currentValues;\n    currentValues.push(...missingRanges);\n\n    request.numberOfValues = Math.max(\n      request.numberOfValues,\n      currentValues.length\n    );\n  });\n}\n\nexport function onRangeFacetRequestFulfilled<\n  T extends RangeFacetSlice,\n  U extends RangeFacetResponse,\n>(\n  state: RangeFacetState<T>,\n  facets: U[],\n  convert: (values: U['values']) => T['request']['currentValues']\n) {\n  facets.forEach((facetResponse) => {\n    const id = facetResponse.facetId;\n    const facetRequest = state[id]?.request;\n\n    if (!facetRequest) {\n      return;\n    }\n\n    const values = convert(facetResponse.values);\n    facetRequest.currentValues = values;\n    facetRequest.preventAutoSelect = false;\n  });\n}\n\nfunction findRange(values: RangeValueRequest[], value: RangeValueRequest) {\n  const {start, end} = value;\n  return values.find((range) => range.start === start && range.end === end);\n}\n\nfunction calculateNumberOfValues(request: RangeFacetRequest) {\n  const {generateAutomaticRanges, currentValues, numberOfValues} = request;\n  return generateAutomaticRanges\n    ? Math.max(numberOfValues, currentValues.length)\n    : currentValues.length;\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../../../breadcrumb/breadcrumb-actions';\nimport {disableFacet} from '../../../facet-options/facet-options-actions';\nimport {change} from '../../../history/history-actions';\nimport {fetchProductListing} from '../../../product-listing/product-listing-actions';\nimport {restoreSearchParameters} from '../../../search-parameters/search-parameter-actions';\nimport {executeSearch} from '../../../search/search-actions';\nimport {handleFacetSortCriterionUpdate} from '../../generic/facet-reducer-helpers';\nimport {\n  registerRangeFacet,\n  toggleSelectRangeValue,\n  onRangeFacetRequestFulfilled,\n  handleRangeFacetDeselectAll,\n  defaultRangeFacetOptions,\n  handleRangeFacetSearchParameterRestoration,\n  updateRangeValues,\n  toggleExcludeRangeValue,\n} from '../generic/range-facet-reducers';\nimport {\n  registerDateFacet,\n  toggleSelectDateFacetValue,\n  deselectAllDateFacetValues,\n  updateDateFacetSortCriterion,\n  RegisterDateFacetActionCreatorPayload,\n  updateDateFacetValues,\n  toggleExcludeDateFacetValue,\n} from './date-facet-actions';\nimport {\n  getDateFacetSetInitialState,\n  getDateFacetSetSliceInitialState,\n} from './date-facet-set-state';\nimport {DateFacetRequest, DateRangeRequest} from './interfaces/request';\nimport {DateFacetResponse, DateFacetValue} from './interfaces/response';\n\nexport const dateFacetSetReducer = createReducer(\n  getDateFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerDateFacet, (state, action) => {\n        const {payload} = action;\n        const request = buildDateFacetRequest(payload);\n        registerRangeFacet(state, getDateFacetSetSliceInitialState(request));\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.dateFacetSet ?? state\n      )\n      .addCase(restoreSearchParameters, (state, action) => {\n        const df = action.payload.df || {};\n        handleRangeFacetSearchParameterRestoration(state, df);\n      })\n      .addCase(toggleSelectDateFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleSelectRangeValue(state, facetId, selection);\n      })\n      .addCase(toggleExcludeDateFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleExcludeRangeValue(state, facetId, selection);\n      })\n      .addCase(updateDateFacetValues, (state, action) => {\n        const {facetId, values} = action.payload;\n        updateRangeValues(state, facetId, values);\n      })\n      .addCase(deselectAllDateFacetValues, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.keys(state).forEach((facetId) => {\n          handleRangeFacetDeselectAll(state, facetId);\n        });\n      })\n      .addCase(updateDateFacetSortCriterion, (state, action) => {\n        handleFacetSortCriterionUpdate(state, action.payload);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets as DateFacetResponse[];\n        onRangeFacetRequestFulfilled(state, facets, convertToRangeRequests);\n      })\n      .addCase(fetchProductListing.fulfilled, (state, action) => {\n        const facets = (action.payload.response?.facets?.results ||\n          []) as DateFacetResponse[];\n        onRangeFacetRequestFulfilled(state, facets, convertToRangeRequests);\n      })\n      .addCase(disableFacet, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      });\n  }\n);\n\nfunction buildDateFacetRequest(\n  config: RegisterDateFacetActionCreatorPayload\n): DateFacetRequest {\n  return {\n    ...defaultRangeFacetOptions,\n    currentValues: [],\n    preventAutoSelect: false,\n    type: 'dateRange',\n    ...config,\n  };\n}\n\nfunction convertToRangeRequests(values: DateFacetValue[]): DateRangeRequest[] {\n  return values.map((value) => {\n    const {numberOfResults, ...rest} = value;\n    return rest;\n  });\n}\n", "import {CoreEngine} from '../../../../app/engine';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from '../../../../features/facet-options/facet-options-actions';\nimport {isFacetEnabledSelector} from '../../../../features/facet-options/facet-options-selectors';\nimport {deselectAllFacetValues} from '../../../../features/facets/facet-set/facet-set-actions';\nimport {\n  baseFacetResponseSelector,\n  isFacetLoadingResponseSelector,\n} from '../../../../features/facets/facet-set/facet-set-selectors';\nimport {\n  RangeFacetResponse,\n  RangeFacetRequest,\n} from '../../../../features/facets/range-facets/generic/interfaces/range-facet';\nimport {RangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/interfaces/request';\nimport {updateRangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/range-facet-actions';\nimport {\n  isRangeFacetValueExcluded,\n  isRangeFacetValueSelected,\n} from '../../../../features/facets/range-facets/generic/range-facet-utils';\nimport {\n  ConfigurationSection,\n  FacetOptionsSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {buildController} from '../../../controller/headless-controller';\n\nexport type RangeFacet = ReturnType<typeof buildCoreRangeFacet>;\n\nexport type RangeFacetProps<T extends RangeFacetRequest> = {\n  facetId: string;\n  getRequest: () => T;\n};\n\nexport function buildCoreRangeFacet<\n  T extends RangeFacetRequest,\n  R extends RangeFacetResponse,\n>(\n  engine: CoreEngine<\n    ConfigurationSection & SearchSection & FacetOptionsSection\n  >,\n  props: RangeFacetProps<T>\n) {\n  type RangeFacetValue = R['values'][0];\n\n  const {facetId, getRequest} = props;\n  const controller = buildController(engine);\n  const dispatch = engine.dispatch;\n\n  const getIsEnabled = () => isFacetEnabledSelector(engine.state, facetId);\n\n  return {\n    ...controller,\n\n    isValueSelected: isRangeFacetValueSelected,\n\n    isValueExcluded: isRangeFacetValueExcluded,\n\n    deselectAll() {\n      dispatch(deselectAllFacetValues(facetId));\n      dispatch(updateFacetOptions());\n    },\n\n    sortBy(criterion: RangeFacetSortCriterion) {\n      dispatch(updateRangeFacetSortCriterion({facetId, criterion}));\n      dispatch(updateFacetOptions());\n    },\n\n    isSortedBy(criterion: RangeFacetSortCriterion) {\n      return this.state.sortCriterion === criterion;\n    },\n\n    enable() {\n      dispatch(enableFacet(facetId));\n    },\n\n    disable() {\n      dispatch(disableFacet(facetId));\n    },\n\n    get state() {\n      const request = getRequest();\n      const response = baseFacetResponseSelector(engine.state, facetId) as\n        | R\n        | undefined;\n\n      const sortCriterion = request.sortCriteria;\n      const resultsMustMatch = request.resultsMustMatch;\n      const values: R['values'] = response ? response.values : [];\n      const isLoading = isFacetLoadingResponseSelector(engine.state);\n      const enabled = getIsEnabled();\n      const hasActiveValues = values.some(\n        (facetValue: RangeFacetValue) => facetValue.state !== 'idle'\n      );\n\n      return {\n        facetId,\n        values,\n        sortCriterion,\n        resultsMustMatch,\n        hasActiveValues,\n        isLoading,\n        enabled,\n      };\n    },\n  };\n}\n\ninterface AssertRangeFacetOptions {\n  generateAutomaticRanges: boolean;\n  currentValues?: unknown[];\n}\n\nexport function assertRangeFacetOptions(\n  options: AssertRangeFacetOptions,\n  controllerName: 'buildNumericFacet' | 'buildDateFacet'\n) {\n  if (!options.generateAutomaticRanges && options.currentValues === undefined) {\n    const message = `currentValues should be specified for ${controllerName} when generateAutomaticRanges is false.`;\n    throw new Error(message);\n  }\n}\n", "export const facetValueStates: FacetValueState[] = [\n  'idle',\n  'selected',\n  'excluded',\n];\nexport type FacetValueState = 'idle' | 'selected' | 'excluded';\n", "import {\n  BaseFacetRequest,\n  SortCriteria,\n  BaseFacetValueRequest,\n  RangeAlgorithm,\n} from '../../../facet-api/request';\n\nexport const rangeFacetSortCriteria: RangeFacetSortCriterion[] = [\n  'ascending',\n  'descending',\n];\n/**\n * Whether the range algorithm proposes ranges based on an even split of the interval or equiprobable intervals that each contain the same amount of results.\n */\nexport const rangeFacetRangeAlgorithm: RangeFacetRangeAlgorithm[] = [\n  'even',\n  'equiprobable',\n];\n\nexport type RangeFacetSortCriterion = 'ascending' | 'descending';\nexport type RangeFacetRangeAlgorithm = 'even' | 'equiprobable';\n\nexport interface AutomaticRanges<T extends boolean> {\n  /** Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the Use cache for numeric queries option is enabled for the Facet field in your index in order to speed up automatic range evaluation (see [Add or Edit Fields](https://docs.coveo.com/en/1982/index-content/add-or-edit-a-field)).\n   */\n  generateAutomaticRanges: T;\n}\n\nexport interface RangeRequest<T extends string | number>\n  extends BaseFacetValueRequest {\n  /** The start value of the range.*/\n  start: T;\n  /** The end value of the range.*/\n  end: T;\n  /** Whether to include the `end` value in the range.\n   * @defaultValue `false`\n   */\n  endInclusive: boolean;\n}\n\nexport interface BaseRangeFacetRequest\n  extends BaseFacetRequest,\n    AutomaticRanges<boolean>,\n    SortCriteria<RangeFacetSortCriterion>,\n    RangeAlgorithm<RangeFacetRangeAlgorithm> {\n  /** @defaultValue `ascending` */\n  sortCriteria: RangeFacetSortCriterion;\n  /** @defaultValue `even` */\n  rangeAlgorithm: RangeFacetRangeAlgorithm;\n}\n", "import {\n  ArrayValue,\n  BooleanValue,\n  RecordValue,\n  Schema,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {facetValueStates} from '../../../../../features/facets/facet-api/value';\nimport {validateManualDateRanges} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-actions';\nimport {DateRangeRequest} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/request';\nimport {\n  rangeFacetRangeAlgorithm,\n  RangeFacetRangeAlgorithm,\n  rangeFacetSortCriteria,\n  RangeFacetSortCriterion,\n} from '../../../../../features/facets/range-facets/generic/interfaces/request';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections';\nimport {validateOptions} from '../../../../../utils/validate-payload';\nimport {\n  field,\n  facetId,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n} from '../../../../core/facets/_common/facet-option-definitions';\n\nexport interface DateFacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: DateRangeRequest[];\n\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId?: string;\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The algorithm that's used for generating the ranges of this facet when they aren't manually defined. The default value of `\"even\"` generates equally sized facet ranges across all of the results. The value `\"equiprobable\"` generates facet ranges which vary in size but have a more balanced number of results within each range.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst dateRangeRequestDefinition: SchemaDefinition<DateRangeRequest> = {\n  start: new StringValue(),\n  end: new StringValue(),\n  endInclusive: new BooleanValue(),\n  state: new StringValue({constrainTo: facetValueStates}),\n};\n\nexport const dateFacetOptionsSchema = new Schema<Required<DateFacetOptions>>({\n  facetId,\n  field,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  currentValues: new ArrayValue({\n    each: new RecordValue({values: dateRangeRequestDefinition}),\n  }),\n  sortCriteria: new StringValue({constrainTo: rangeFacetSortCriteria}),\n  rangeAlgorithm: new StringValue({constrainTo: rangeFacetRangeAlgorithm}),\n});\n\nexport function validateDateFacetOptions(\n  engine: CoreEngine<ConfigurationSection & SearchSection & DateFacetSection>,\n  options: DateFacetOptions\n) {\n  validateOptions(engine, dateFacetOptionsSchema, options, 'buildDateFacet');\n  validateManualDateRanges(options);\n}\n", "import {configuration} from '../../../../../app/common-reducers';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {facetOptionsReducer as facetOptions} from '../../../../../features/facet-options/facet-options-slice';\nimport {deselectAllFacetValues} from '../../../../../features/facets/facet-set/facet-set-actions';\nimport {\n  RegisterDateFacetActionCreatorPayload,\n  registerDateFacet,\n} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-actions';\nimport {\n  executeToggleDateFacetExclude,\n  executeToggleDateFacetSelect,\n} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-controller-actions';\nimport {dateFacetSetReducer as dateFacetSet} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-set-slice';\nimport {\n  DateFacetRequest,\n  DateRangeRequest,\n} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/request';\nimport {\n  DateFacetResponse,\n  DateFacetValue,\n} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/response';\nimport {RangeFacetSortCriterion} from '../../../../../features/facets/range-facets/generic/interfaces/request';\nimport {searchReducer as search} from '../../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n  FacetOptionsSection,\n  SearchSection,\n} from '../../../../../state/state-sections';\nimport {loadReducerError} from '../../../../../utils/errors';\nimport {Controller} from '../../../../controller/headless-controller';\nimport {determineFacetId} from '../../_common/facet-id-determinor';\nimport {\n  assertRangeFacetOptions,\n  buildCoreRangeFacet,\n} from '../headless-core-range-facet';\nimport {DateRangeOptions, DateRangeInput, buildDateRange} from './date-range';\nimport {\n  DateFacetOptions,\n  validateDateFacetOptions,\n} from './headless-date-facet-options';\n\nexport type {\n  DateFacetOptions,\n  DateRangeInput,\n  DateRangeOptions,\n  DateRangeRequest,\n};\nexport {buildDateRange};\n\nexport interface DateFacetProps {\n  /**\n   * The options for the `DateFacet` controller.\n   * */\n  options: DateFacetOptions;\n}\n\n/**\n * The `DateFacet` controller makes it possible to create a facet with date ranges.\n * */\nexport interface DateFacet extends Controller {\n  /**\n   * Deselects all facet values.\n   */\n  deselectAll(): void;\n\n  /**\n   * Checks whether the facet values are sorted according to the specified criterion.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns Whether the facet values are sorted according to the specified criterion.\n   */\n  isSortedBy(criterion: RangeFacetSortCriterion): boolean;\n\n  /**\n   * Checks whether the specified facet value is selected.\n   *\n   * @param selection - The facet value to check.\n   * @returns Whether the specified facet value is selected.\n   */\n  isValueSelected(selection: DateFacetValue): boolean;\n\n  /** Sorts the facet values according to the specified criterion.\n   *\n   * @param criterion - The criterion by which to sort values.\n   */\n  sortBy(criterion: RangeFacetSortCriterion): void;\n\n  /**\n   * Toggles the specified facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: DateFacetValue): void;\n\n  /**\n   * Toggles exclusion of the specified facet value\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleExclude(selection: DateFacetValue): void;\n\n  /**\n   * Toggles the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleSelect(selection: DateFacetValue): void;\n\n  /**\n   * Toggles exclusion of the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleExclude(selection: DateFacetValue): void;\n\n  /**\n   * Enables the facet. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the facet. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `DateFacet` controller.\n   */\n  state: DateFacetState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `DateFacet` controller.\n */\nexport interface DateFacetState {\n  /**\n   * The facet ID.\n   * */\n  facetId: string;\n\n  /**\n   * The values of the facet.\n   */\n  values: DateFacetValue[];\n\n  /**\n   * The active sortCriterion of the facet.\n   */\n  sortCriterion: RangeFacetSortCriterion;\n\n  /**\n   * `true` if a search is in progress and `false` otherwise.\n   */\n  isLoading: boolean;\n\n  /**\n   * `true` if there is at least one non-idle value and `false` otherwise.\n   */\n  hasActiveValues: boolean;\n\n  /**\n   * Whether the facet is enabled and its values are used to filter search results.\n   */\n  enabled: boolean;\n}\n\n/**\n * Creates a `DateFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `DateFacet` controller properties.\n * @returns A `DateFacet` controller instance.\n */\nexport function buildCoreDateFacet(\n  engine: CoreEngine,\n  props: DateFacetProps\n): DateFacet {\n  if (!loadDateFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  assertRangeFacetOptions(props.options, 'buildDateFacet');\n\n  const dispatch = engine.dispatch;\n\n  const facetId = determineFacetId(engine, props.options);\n  const options: RegisterDateFacetActionCreatorPayload = {\n    currentValues: [],\n    ...props.options,\n    facetId,\n  };\n\n  validateDateFacetOptions(engine, options);\n\n  dispatch(registerDateFacet(options));\n\n  const rangeFacet = buildCoreRangeFacet<DateFacetRequest, DateFacetResponse>(\n    engine,\n    {\n      facetId,\n      getRequest: () => engine.state.dateFacetSet[facetId]!.request,\n    }\n  );\n\n  return {\n    ...rangeFacet,\n\n    toggleSelect: (selection: DateFacetValue) =>\n      dispatch(executeToggleDateFacetSelect({facetId, selection})),\n\n    toggleSingleSelect: function (selection: DateFacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleSelect(selection);\n    },\n\n    toggleExclude: (selection: DateFacetValue) =>\n      dispatch(executeToggleDateFacetExclude({facetId, selection})),\n\n    toggleSingleExclude: function (selection: DateFacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleExclude(selection);\n    },\n\n    get state() {\n      return rangeFacet.state;\n    },\n  };\n}\n\nfunction loadDateFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  ConfigurationSection & SearchSection & DateFacetSection & FacetOptionsSection\n> {\n  engine.addReducers({configuration, search, dateFacetSet, facetOptions});\n  return true;\n}\n", "import {SearchAnalyticsProvider} from '../../../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../../../features/analytics/search-action-cause';\nimport {\n  logFacetClearAll,\n  logFacetUpdateSort,\n} from '../../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {DateRangeRequest} from '../../../../features/facets/range-facets/date-facet-set/interfaces/request';\nimport {DateFacetValue} from '../../../../features/facets/range-facets/date-facet-set/interfaces/response';\nimport {RangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/interfaces/request';\nimport {\n  getLegacyAnalyticsActionForToggleRangeFacetExclude,\n  getLegacyAnalyticsActionForToggleRangeFacetSelect,\n  getAnalyticsActionForToggleFacetSelect,\n} from '../../../../features/facets/range-facets/generic/range-facet-utils';\nimport {executeSearch} from '../../../../features/search/search-actions';\nimport {\n  buildCoreDateFacet,\n  buildDateRange,\n  DateFacet,\n  DateFacetProps,\n  DateFacetState,\n  DateRangeInput,\n  DateRangeOptions,\n} from '../../../core/facets/range-facet/date-facet/headless-core-date-facet';\nimport {DateFacetOptions} from '../../../core/facets/range-facet/date-facet/headless-date-facet-options';\n\nexport type {\n  DateFacetOptions,\n  DateRangeInput,\n  DateRangeOptions,\n  DateRangeRequest,\n  DateFacetProps,\n  DateFacet,\n  DateFacetState,\n};\nexport {buildDateRange};\n\n/**\n * Creates a `DateFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `DateFacet` controller properties.\n * @returns A `DateFacet` controller instance.\n */\nexport function buildDateFacet(\n  engine: SearchEngine,\n  props: DateFacetProps\n): DateFacet {\n  const coreController = buildCoreDateFacet(engine, props);\n  const dispatch = engine.dispatch;\n  const getFacetId = () => coreController.state.facetId;\n\n  return {\n    ...coreController,\n\n    deselectAll() {\n      coreController.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                getFacetId()\n              ),\n          },\n        })\n      );\n    },\n\n    sortBy(criterion: RangeFacetSortCriterion) {\n      coreController.sortBy(criterion);\n      dispatch(\n        executeSearch({\n          legacy: logFacetUpdateSort({facetId: getFacetId(), criterion}),\n          next: {\n            actionCause: SearchPageEvents.facetUpdateSort,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetSortMetadata(\n                getFacetId(),\n                criterion\n              ),\n          },\n        })\n      );\n    },\n\n    toggleSelect: (selection: DateFacetValue) => {\n      coreController.toggleSelect(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleRangeFacetSelect(\n            getFacetId(),\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetSelect(getFacetId(), selection),\n        })\n      );\n    },\n\n    toggleExclude: (selection: DateFacetValue) => {\n      coreController.toggleExclude(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleRangeFacetExclude(\n            getFacetId(),\n            selection\n          ),\n        })\n      );\n    },\n\n    get state() {\n      return coreController.state;\n    },\n  };\n}\n", "import {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../../app/ssr-engine/types/common';\nimport {DateFacet, DateFacetProps, buildDateFacet} from './headless-date-facet';\n\nexport * from './headless-date-facet';\n\nexport {buildDateRange} from './headless-date-facet';\n\n/**\n * @internal\n */\nexport const defineDateFacet = (\n  props: DateFacetProps\n): ControllerDefinitionWithoutProps<SearchEngine, DateFacet> => ({\n  build: (engine) => buildDateFacet(engine, props),\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../../../breadcrumb/breadcrumb-actions';\nimport {disableFacet} from '../../../facet-options/facet-options-actions';\nimport {change} from '../../../history/history-actions';\nimport {fetchProductListing} from '../../../product-listing/product-listing-actions';\nimport {restoreSearchParameters} from '../../../search-parameters/search-parameter-actions';\nimport {executeSearch} from '../../../search/search-actions';\nimport {handleFacetSortCriterionUpdate} from '../../generic/facet-reducer-helpers';\nimport {\n  registerRangeFacet,\n  toggleSelectRangeValue,\n  onRangeFacetRequestFulfilled,\n  handleRangeFacetDeselectAll,\n  defaultRangeFacetOptions,\n  handleRangeFacetSearchParameterRestoration,\n  updateRangeValues,\n  toggleExcludeRangeValue,\n} from '../generic/range-facet-reducers';\nimport {NumericFacetRequest, NumericRangeRequest} from './interfaces/request';\nimport {NumericFacetResponse, NumericFacetValue} from './interfaces/response';\nimport {\n  registerNumericFacet,\n  toggleSelectNumericFacetValue,\n  deselectAllNumericFacetValues,\n  updateNumericFacetSortCriterion,\n  RegisterNumericFacetActionCreatorPayload,\n  updateNumericFacetValues,\n  toggleExcludeNumericFacetValue,\n} from './numeric-facet-actions';\nimport {\n  getNumericFacetSetInitialState,\n  getNumericFacetSetSliceInitialState,\n} from './numeric-facet-set-state';\n\nexport const numericFacetSetReducer = createReducer(\n  getNumericFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerNumericFacet, (state, action) => {\n        const {payload} = action;\n        const request = buildNumericFacetRequest(payload);\n        registerRangeFacet(state, getNumericFacetSetSliceInitialState(request));\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.numericFacetSet ?? state\n      )\n      .addCase(restoreSearchParameters, (state, action) => {\n        const nf = action.payload.nf || {};\n        handleRangeFacetSearchParameterRestoration(state, nf);\n      })\n      .addCase(toggleSelectNumericFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleSelectRangeValue(state, facetId, selection);\n      })\n      .addCase(toggleExcludeNumericFacetValue, (state, action) => {\n        const {facetId, selection} = action.payload;\n        toggleExcludeRangeValue(state, facetId, selection);\n      })\n      .addCase(updateNumericFacetValues, (state, action) => {\n        const {facetId, values} = action.payload;\n        updateRangeValues(state, facetId, values);\n      })\n      .addCase(deselectAllNumericFacetValues, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.keys(state).forEach((facetId) => {\n          handleRangeFacetDeselectAll(state, facetId);\n        });\n      })\n      .addCase(updateNumericFacetSortCriterion, (state, action) => {\n        handleFacetSortCriterionUpdate(state, action.payload);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const facets = action.payload.response.facets as NumericFacetResponse[];\n        onRangeFacetRequestFulfilled(state, facets, convertToRangeRequests);\n      })\n      .addCase(fetchProductListing.fulfilled, (state, action) => {\n        const facets = (action.payload.response?.facets?.results ||\n          []) as NumericFacetResponse[];\n        onRangeFacetRequestFulfilled(state, facets, convertToRangeRequests);\n      })\n      .addCase(disableFacet, (state, action) => {\n        handleRangeFacetDeselectAll(state, action.payload);\n      });\n  }\n);\n\nfunction buildNumericFacetRequest(\n  config: RegisterNumericFacetActionCreatorPayload\n): NumericFacetRequest {\n  return {\n    ...defaultRangeFacetOptions,\n    currentValues: [],\n    preventAutoSelect: false,\n    type: 'numericalRange',\n    ...config,\n  };\n}\n\nfunction convertToRangeRequests(\n  values: NumericFacetValue[]\n): NumericRangeRequest[] {\n  return values.map((value) => {\n    const {numberOfResults, ...rest} = value;\n    return rest;\n  });\n}\n", "import {RecordValue} from '@coveo/bueno';\nimport {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkOptions} from '../../../../app/async-thunk-options';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n} from '../../../../state/state-sections';\nimport {updateFacetOptions} from '../../../facet-options/facet-options-actions';\nimport {facetIdDefinition} from '../../generic/facet-actions-validation';\nimport {\n  executeToggleRangeFacetExclude,\n  executeToggleRangeFacetSelect,\n} from '../generic/range-facet-controller-actions';\nimport {numericFacetValueDefinition} from '../generic/range-facet-validate-payload';\nimport {NumericFacetValue} from './interfaces/response';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n} from './numeric-facet-actions';\n\nconst definition = {\n  facetId: facetIdDefinition,\n  selection: new RecordValue({values: numericFacetValueDefinition}),\n};\n\nexport const executeToggleNumericFacetSelect = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: NumericFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & NumericFacetSection>\n>(\n  'numericFacet/executeToggleSelect',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleSelectNumericFacetValue(payload));\n    dispatch(executeToggleRangeFacetSelect(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n\nexport const executeToggleNumericFacetExclude = createAsyncThunk<\n  void,\n  {\n    facetId: string;\n    selection: NumericFacetValue;\n  },\n  AsyncThunkOptions<ConfigurationSection & NumericFacetSection>\n>(\n  'numericFacet/executeToggleExclude',\n  (payload, {dispatch, extra: {validatePayload}}) => {\n    validatePayload(payload, definition);\n    dispatch(toggleExcludeNumericFacetValue(payload));\n    dispatch(executeToggleRangeFacetExclude(payload));\n    dispatch(updateFacetOptions());\n  }\n);\n", "import {\n  ArrayValue,\n  BooleanValue,\n  NumberValue,\n  RecordValue,\n  Schema,\n  SchemaDefinition,\n  StringValue,\n} from '@coveo/bueno';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {\n  FacetResultsMustMatch,\n  facetResultsMustMatch,\n} from '../../../../../features/facets/facet-api/request';\nimport {facetValueStates} from '../../../../../features/facets/facet-api/value';\nimport {\n  rangeFacetRangeAlgorithm,\n  RangeFacetRangeAlgorithm,\n  rangeFacetSortCriteria,\n  RangeFacetSortCriterion,\n} from '../../../../../features/facets/range-facets/generic/interfaces/request';\nimport {NumericRangeRequest} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/request';\nimport {validateManualNumericRanges} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-actions';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections';\nimport {validateOptions} from '../../../../../utils/validate-payload';\nimport {\n  facetId,\n  field,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n} from '../../../../core/facets/_common/facet-option-definitions';\n\n/**\n * The options defining a `NumericFacet`.\n */\nexport interface NumericFacetOptions {\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n\n  /**\n   * Whether the index should automatically create range values.\n   *\n   * Tip: If you set this parameter to true, you should ensure that the ['Use cache for numeric queries' option](https://docs.coveo.com/en/1982/#use-cache-for-numeric-queries) is enabled for this facet's field in your index in order to speed up automatic range evaluation.\n   */\n  generateAutomaticRanges: boolean;\n\n  /**\n   * The values displayed by the facet in the search interface at the moment of the request.\n   *\n   * If `generateAutomaticRanges` is false, values must be specified.\n   * If `generateAutomaticRanges` is true, automatic ranges are going to be appended after the specified values.\n   *\n   * @defaultValue `[]`\n   */\n  currentValues?: NumericRangeRequest[];\n\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId?: string;\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n\n  /**\n   * The number of values to request for this facet.\n   * Also determines the number of additional values to request each time this facet is expanded, and the number of values to display when this facet is collapsed.\n   *\n   * Minimum: `1`\n   *\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n\n  /**\n   * The sort criterion to apply to the returned facet values.\n   *\n   * @defaultValue `ascending`\n   */\n  sortCriteria?: RangeFacetSortCriterion;\n\n  /**\n   * The criterion to use for specifying how results must match the selected facet values.\n   *\n   * @defaultValue `atLeastOneValue`\n   */\n  resultsMustMatch?: FacetResultsMustMatch;\n\n  /**\n   * The algorithm that's used for generating the ranges of this facet when they aren't manually defined. The default value of `\"even\"` generates equally sized facet ranges across all of the results. The value `\"equiprobable\"` generates facet ranges which vary in size but have a more balanced number of results within each range.\n   *\n   * @defaultValue `even`\n   */\n  rangeAlgorithm?: RangeFacetRangeAlgorithm;\n}\n\nconst numericRangeRequestDefinition: SchemaDefinition<NumericRangeRequest> = {\n  start: new NumberValue(),\n  end: new NumberValue(),\n  endInclusive: new BooleanValue(),\n  state: new StringValue({constrainTo: facetValueStates}),\n};\n\nexport const numericFacetOptionsSchema = new Schema<\n  Required<NumericFacetOptions>\n>({\n  facetId,\n  field,\n  generateAutomaticRanges,\n  filterFacetCount,\n  injectionDepth,\n  numberOfValues,\n  currentValues: new ArrayValue({\n    each: new RecordValue({values: numericRangeRequestDefinition}),\n  }),\n  sortCriteria: new StringValue({constrainTo: rangeFacetSortCriteria}),\n  resultsMustMatch: new StringValue({constrainTo: facetResultsMustMatch}),\n  rangeAlgorithm: new StringValue({constrainTo: rangeFacetRangeAlgorithm}),\n});\n\nexport function validateNumericFacetOptions(\n  engine: CoreEngine<\n    NumericFacetSection & ConfigurationSection & SearchSection\n  >,\n  options: NumericFacetOptions\n) {\n  validateOptions(\n    engine,\n    numericFacetOptionsSchema,\n    options,\n    'buildNumericFacet'\n  );\n  validateManualNumericRanges(options);\n}\n", "import {NumericRangeRequest} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/request';\nimport {FacetValueState} from '../../facet/headless-core-facet';\n\nexport interface NumericRangeOptions {\n  /**\n   * The starting value of the numeric range.\n   */\n  start: number;\n\n  /**\n   * The ending value of the numeric range.\n   */\n  end: number;\n\n  /**\n   * Whether to include the `end` value in the range.\n   *\n   * @defaultValue `false`\n   */\n  endInclusive?: boolean;\n\n  /**\n   * The current facet value state.\n   *\n   * @defaultValue `idle`\n   */\n  state?: FacetValueState;\n}\n\n/**\n * Creates a `NumericRangeRequest`.\n *\n * @param config - The options with which to create a `NumericRangeRequest`.\n * @returns A new `NumericRangeRequest`.\n */\nexport function buildNumericRange(\n  config: NumericRangeOptions\n): NumericRangeRequest {\n  return {\n    endInclusive: false,\n    state: 'idle',\n    ...config,\n  };\n}\n", "import {configuration} from '../../../../../app/common-reducers';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {facetOptionsReducer as facetOptions} from '../../../../../features/facet-options/facet-options-slice';\nimport {deselectAllFacetValues} from '../../../../../features/facets/facet-set/facet-set-actions';\nimport {RangeFacetSortCriterion} from '../../../../../features/facets/range-facets/generic/interfaces/request';\nimport {\n  NumericFacetRequest,\n  NumericRangeRequest,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/request';\nimport {\n  NumericFacetResponse,\n  NumericFacetValue,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/response';\nimport {\n  RegisterNumericFacetActionCreatorPayload,\n  registerNumericFacet,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-actions';\nimport {executeToggleNumericFacetSelect} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-controller-actions';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {searchReducer as search} from '../../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  FacetOptionsSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections';\nimport {loadReducerError} from '../../../../../utils/errors';\nimport {Controller} from '../../../../controller/headless-controller';\nimport {determineFacetId} from '../../_common/facet-id-determinor';\nimport {\n  assertRangeFacetOptions,\n  buildCoreRangeFacet,\n} from '../headless-core-range-facet';\nimport {\n  NumericFacetOptions,\n  validateNumericFacetOptions,\n} from './headless-numeric-facet-options';\nimport {buildNumericRange, NumericRangeOptions} from './numeric-range';\n\nexport type {\n  NumericRangeOptions,\n  NumericRangeRequest,\n  NumericFacetValue,\n  NumericFacetOptions,\n};\nexport {buildNumericRange};\n\nexport interface NumericFacetProps {\n  /**\n   * The options for the `NumericFacet` controller.\n   */\n  options: NumericFacetOptions;\n}\n\n/**\n * The `NumericFacet` controller makes it possible to create a facet with numeric ranges.\n */\nexport interface NumericFacet extends Controller {\n  /**\n   * Deselects all facet values.\n   */\n  deselectAll(): void;\n\n  /**\n   * Checks whether the facet values are sorted according to the specified criterion.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns Whether the facet values are sorted according to the specified criterion.\n   */\n  isSortedBy(criterion: RangeFacetSortCriterion): boolean;\n\n  /**\n   * Checks whether the specified facet value is selected.\n   *\n   * @param selection - The facet value to check.\n   * @returns Whether the specified facet value is selected.\n   */\n  isValueSelected(selection: NumericFacetValue): boolean;\n\n  /** Sorts the facet values according to the specified criterion.\n   *\n   * @param criterion - The criterion to sort values by.\n   */\n  sortBy(criterion: RangeFacetSortCriterion): void;\n\n  /**\n   * Toggles the specified facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: NumericFacetValue): void;\n\n  /**\n   * Toggles the specified facet value, deselecting others.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSingleSelect(selection: NumericFacetValue): void;\n\n  /**\n   * Enables the facet. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the facet. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `NumericFacet` controller.\n   */\n  state: NumericFacetState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `NumericFacet` controller.\n */\nexport interface NumericFacetState {\n  /**\n   * The facet ID.\n   * */\n  facetId: string;\n\n  /**\n   * The values of the facet.\n   */\n  values: NumericFacetValue[];\n\n  /**\n   * The active sortCriterion of the facet.\n   */\n  sortCriterion: RangeFacetSortCriterion;\n\n  /**\n   * `true` if a search is in progress and `false` otherwise.\n   */\n  isLoading: boolean;\n\n  /**\n   * `true` if there is at least one non-idle value and `false` otherwise.\n   */\n  hasActiveValues: boolean;\n\n  /**\n   * Whether the facet is enabled and its values are used to filter search results.\n   */\n  enabled: boolean;\n}\n\n/**\n * Creates a `NumericFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `NumericFacet` properties.\n * @returns A `NumericFacet` controller instance.\n */\nexport function buildCoreNumericFacet(\n  engine: CoreEngine,\n  props: NumericFacetProps\n): NumericFacet {\n  if (!loadNumericFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  assertRangeFacetOptions(props.options, 'buildNumericFacet');\n\n  const dispatch = engine.dispatch;\n\n  const facetId = determineFacetId(engine, props.options);\n  const options: RegisterNumericFacetActionCreatorPayload = {\n    currentValues: [],\n    ...props.options,\n    facetId,\n  };\n\n  validateNumericFacetOptions(engine, options);\n\n  dispatch(registerNumericFacet(options));\n\n  const rangeFacet = buildCoreRangeFacet<\n    NumericFacetRequest,\n    NumericFacetResponse\n  >(engine, {\n    facetId,\n    getRequest: () => engine.state.numericFacetSet[facetId]!.request,\n  });\n\n  return {\n    ...rangeFacet,\n    toggleSelect: (selection: NumericFacetValue) =>\n      dispatch(executeToggleNumericFacetSelect({facetId, selection})),\n\n    toggleSingleSelect(selection: NumericFacetValue) {\n      if (selection.state === 'idle') {\n        dispatch(deselectAllFacetValues(facetId));\n      }\n\n      this.toggleSelect(selection);\n    },\n\n    get state() {\n      return rangeFacet.state;\n    },\n  };\n}\n\nfunction loadNumericFacetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  NumericFacetSection &\n    FacetOptionsSection &\n    ConfigurationSection &\n    SearchSection\n> {\n  engine.addReducers({numericFacetSet, facetOptions, configuration, search});\n  return true;\n}\n", "import {SearchAnalyticsProvider} from '../../../../api/analytics/search-analytics';\nimport {configuration} from '../../../../app/common-reducers';\nimport {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../../../features/analytics/search-action-cause';\nimport {\n  logFacetClearAll,\n  logFacetUpdateSort,\n} from '../../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {RangeFacetSortCriterion} from '../../../../features/facets/range-facets/generic/interfaces/request';\nimport {\n  getLegacyAnalyticsActionForToggleRangeFacetSelect,\n  getAnalyticsActionForToggleFacetSelect,\n} from '../../../../features/facets/range-facets/generic/range-facet-utils';\nimport {NumericRangeRequest} from '../../../../features/facets/range-facets/numeric-facet-set/interfaces/request';\nimport {NumericFacetValue} from '../../../../features/facets/range-facets/numeric-facet-set/interfaces/response';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {executeSearch} from '../../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {loadReducerError} from '../../../../utils/errors';\nimport {\n  buildCoreNumericFacet,\n  buildNumericRange,\n  NumericFacet,\n  NumericFacetOptions,\n  NumericFacetProps,\n  NumericFacetState,\n  NumericRangeOptions,\n} from '../../../core/facets/range-facet/numeric-facet/headless-core-numeric-facet';\n\nexport type {\n  NumericRangeOptions,\n  NumericRangeRequest,\n  NumericFacetValue,\n  NumericFacetOptions,\n  NumericFacetProps,\n  NumericFacet,\n  NumericFacetState,\n};\nexport {buildNumericRange};\n\n/**\n * Creates a `NumericFacet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `NumericFacet` properties.\n * @returns A `NumericFacet` controller instance.\n */\nexport function buildNumericFacet(\n  engine: SearchEngine,\n  props: NumericFacetProps\n): NumericFacet {\n  if (!loadNumericFacetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const coreController = buildCoreNumericFacet(engine, props);\n  const dispatch = engine.dispatch;\n  const getFacetId = () => coreController.state.facetId;\n\n  return {\n    ...coreController,\n\n    deselectAll() {\n      coreController.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                getFacetId()\n              ),\n          },\n        })\n      );\n    },\n\n    sortBy(criterion: RangeFacetSortCriterion) {\n      coreController.sortBy(criterion);\n      dispatch(\n        executeSearch({\n          legacy: logFacetUpdateSort({facetId: getFacetId(), criterion}),\n          next: {\n            actionCause: SearchPageEvents.facetUpdateSort,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetSortMetadata(\n                getFacetId(),\n                criterion\n              ),\n          },\n        })\n      );\n    },\n\n    toggleSelect: (selection: NumericFacetValue) => {\n      coreController.toggleSelect(selection);\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleRangeFacetSelect(\n            getFacetId(),\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetSelect(getFacetId(), selection),\n        })\n      );\n    },\n\n    get state() {\n      return {\n        ...coreController.state,\n      };\n    },\n  };\n}\n\nfunction loadNumericFacetReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  NumericFacetSection & ConfigurationSection & SearchSection\n> {\n  engine.addReducers({numericFacetSet, configuration, search});\n  return true;\n}\n", "import {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../../app/ssr-engine/types/common';\nimport {\n  NumericFacet,\n  NumericFacetProps,\n  buildNumericFacet,\n} from './headless-numeric-facet';\n\nexport * from './headless-numeric-facet';\n\nexport {buildNumericRange} from './headless-numeric-facet';\n\n/**\n * @internal\n */\nexport const defineNumericFacet = (\n  props: NumericFacetProps\n): ControllerDefinitionWithoutProps<SearchEngine, NumericFacet> => ({\n  build: (engine) => buildNumericFacet(engine, props),\n});\n", "import {\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {baseFacetResponseSelector} from '../../facet-set/facet-set-selectors';\nimport {AnyFacetResponse} from '../../generic/interfaces/generic-facet-response';\nimport {NumericFacetResponse, NumericFacetValue} from './interfaces/response';\n\nfunction isNumericFacetResponse(\n  state: SearchSection & NumericFacetSection,\n  response: AnyFacetResponse | undefined\n): response is NumericFacetResponse {\n  return !!response && response.facetId in state.numericFacetSet;\n}\n\nexport const numericFacetResponseSelector = (\n  state: SearchSection & NumericFacetSection,\n  facetId: string\n) => {\n  const response = baseFacetResponseSelector(state, facetId);\n  if (isNumericFacetResponse(state, response)) {\n    return response;\n  }\n\n  return undefined;\n};\n\nexport const numericFacetActiveValuesSelector = (\n  state: SearchSection & NumericFacetSection,\n  facetId: string\n): NumericFacetValue[] => {\n  const facetResponse = numericFacetResponseSelector(state, facetId) || {\n    values: [],\n  };\n  return facetResponse.values.filter((value) => value.state !== 'idle');\n};\n\nexport const numericFacetSelectedValuesSelector = (\n  state: SearchSection & NumericFacetSection,\n  facetId: string\n): NumericFacetValue[] => {\n  const facetResponse = numericFacetResponseSelector(state, facetId) || {\n    values: [],\n  };\n  return facetResponse.values.filter((value) => value.state === 'selected');\n};\n\nexport const numericFacetExcludedValuesSelector = (\n  state: SearchSection & NumericFacetSection,\n  facetId: string\n): NumericFacetValue[] => {\n  const facetResponse = numericFacetResponseSelector(state, facetId) || {\n    values: [],\n  };\n  return facetResponse.values.filter((value) => value.state === 'excluded');\n};\n", "import {configuration} from '../../../../../app/common-reducers';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from '../../../../../features/facet-options/facet-options-actions';\nimport {isFacetEnabledSelector} from '../../../../../features/facet-options/facet-options-selectors';\nimport {facetOptionsReducer as facetOptions} from '../../../../../features/facet-options/facet-options-slice';\nimport {isFacetLoadingResponseSelector} from '../../../../../features/facets/facet-set/facet-set-selectors';\nimport {NumericFacetValue} from '../../../../../features/facets/range-facets/numeric-facet-set/interfaces/response';\nimport {\n  registerNumericFacet,\n  RegisterNumericFacetActionCreatorPayload,\n  updateNumericFacetValues,\n} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-actions';\nimport {numericFacetSelectedValuesSelector} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-selectors';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {searchReducer as search} from '../../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  FacetOptionsSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../../state/state-sections';\nimport {loadReducerError} from '../../../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../../../controller/headless-controller';\nimport {determineFacetId} from '../../_common/facet-id-determinor';\nimport {validateNumericFacetOptions} from './headless-numeric-facet-options';\n\n/**\n * The options defining a `NumericFilter`.\n */\nexport interface NumericFilterOptions {\n  /**\n   * The field whose values you want to display in the filter.\n   */\n  field: string;\n\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random ID is generated.\n   */\n  facetId?: string;\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n}\n\nexport interface NumericFilterInitialState {\n  /**\n   * The initial selected range.\n   */\n  range: NumericFilterRange;\n}\n\nexport interface NumericFilterRange {\n  /**\n   * The starting value for the numeric range.\n   */\n  start: number;\n\n  /**\n   * The ending value for the numeric range.\n   */\n  end: number;\n}\n\nexport interface NumericFilterProps {\n  /**\n   * The options for the `NumericFilter` controller.\n   */\n  options: NumericFilterOptions;\n  /**\n   * The initial state.\n   */\n  initialState?: NumericFilterInitialState;\n}\n\nexport interface NumericFilterState {\n  /**\n   * The facet ID.\n   * */\n  facetId: string;\n\n  /**\n   * The current selected range.\n   */\n  range?: NumericFacetValue;\n\n  /**\n   * Returns `true` if a search is in progress, and `false` if not.\n   */\n  isLoading: boolean;\n\n  /**\n   * Whether the filter is enabled and its value is used to filter search results.\n   */\n  enabled: boolean;\n}\n\n/**\n * The `NumericFilter` controller makes it possible to create a numeric filter.\n */\nexport interface NumericFilter extends Controller {\n  /**\n   * Clears the current filter.\n   */\n  clear(): void;\n\n  /**\n   * Updates the selected range.\n   *\n   * @param range - The numeric range.\n   * @returns Whether the range is valid.\n   */\n  setRange(range: NumericFilterRange): boolean;\n\n  /**\n   * Enables the filter. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the filter. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `NumericFilter` controller.\n   */\n  state: NumericFilterState;\n}\n\nexport function buildCoreNumericFilter(\n  engine: CoreEngine,\n  props: NumericFilterProps\n): NumericFilter {\n  if (!loadNumericFilterReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n  const facetId = determineFacetId(engine, props.options);\n  const options: RegisterNumericFacetActionCreatorPayload = {\n    ...props.options,\n    currentValues: props.initialState?.range\n      ? [{...props.initialState.range, endInclusive: true, state: 'selected'}]\n      : [],\n    generateAutomaticRanges: false,\n    facetId,\n  };\n\n  validateNumericFacetOptions(engine, options);\n  dispatch(registerNumericFacet(options));\n\n  const getIsEnabled = () => isFacetEnabledSelector(engine.state, facetId);\n\n  return {\n    ...controller,\n    clear: () => {\n      dispatch(\n        updateNumericFacetValues({\n          facetId,\n          values: [],\n        })\n      );\n      dispatch(updateFacetOptions());\n    },\n    setRange: (range) => {\n      const facetValue: NumericFacetValue = {\n        ...range,\n        state: 'selected',\n        numberOfResults: 0,\n        endInclusive: true,\n      };\n\n      const updateFacetValuesAction = updateNumericFacetValues({\n        facetId,\n        values: [facetValue],\n      });\n\n      if (updateFacetValuesAction.error) {\n        return false;\n      }\n\n      dispatch(updateFacetValuesAction);\n      dispatch(updateFacetOptions());\n      return true;\n    },\n    enable() {\n      dispatch(enableFacet(facetId));\n    },\n    disable() {\n      dispatch(disableFacet(facetId));\n    },\n\n    get state() {\n      const isLoading = isFacetLoadingResponseSelector(getState());\n      const enabled = getIsEnabled();\n      const selectedRanges = numericFacetSelectedValuesSelector(\n        getState(),\n        facetId\n      );\n      const range = selectedRanges.length ? selectedRanges[0] : undefined;\n\n      return {\n        facetId,\n        isLoading,\n        range,\n        enabled,\n      };\n    },\n  };\n}\n\nfunction loadNumericFilterReducer(\n  engine: CoreEngine\n): engine is CoreEngine<\n  NumericFacetSection &\n    FacetOptionsSection &\n    ConfigurationSection &\n    SearchSection\n> {\n  engine.addReducers({numericFacetSet, facetOptions, configuration, search});\n  return true;\n}\n", "import {SearchAnalyticsProvider} from '../../../../api/analytics/search-analytics';\nimport {configuration} from '../../../../app/common-reducers';\nimport {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../../../features/analytics/search-action-cause';\nimport {\n  logFacetClearAll,\n  logFacetSelect,\n} from '../../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {executeSearch} from '../../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {loadReducerError} from '../../../../utils/errors';\nimport {\n  NumericFilterOptions,\n  NumericFilterInitialState,\n  NumericFilterRange,\n  NumericFilterProps,\n  NumericFilterState,\n  NumericFilter,\n  buildCoreNumericFilter,\n} from '../../../core/facets/range-facet/numeric-facet/headless-core-numeric-filter';\n\nexport type {\n  NumericFilterOptions,\n  NumericFilterInitialState,\n  NumericFilterRange,\n  NumericFilterProps,\n  NumericFilterState,\n  NumericFilter,\n};\n\n/**\n * Creates a `NumericFilter` controller instance.\n * @param engine - The headless engine.\n * @param props - The configurable `NumericFilter` controller properties.\n * @returns A `NumericFilter` controller instance.\n */\nexport function buildNumericFilter(\n  engine: SearchEngine,\n  props: NumericFilterProps\n): NumericFilter {\n  if (!loadNumericFilterReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const coreController = buildCoreNumericFilter(engine, props);\n  const {dispatch} = engine;\n  const getFacetId = () => coreController.state.facetId;\n\n  return {\n    ...coreController,\n    clear: () => {\n      coreController.clear();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                getFacetId()\n              ),\n          },\n        })\n      );\n    },\n    setRange: (range) => {\n      const success = coreController.setRange(range);\n      if (success) {\n        dispatch(\n          executeSearch({\n            legacy: logFacetSelect({\n              facetId: getFacetId(),\n              facetValue: `${range.start}..${range.end}`,\n            }),\n            next: {\n              actionCause: SearchPageEvents.facetSelect,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  getFacetId(),\n                  `${range.start}..${range.end}`\n                ),\n            },\n          })\n        );\n      }\n      return success;\n    },\n\n    get state() {\n      return {\n        ...coreController.state,\n      };\n    },\n  };\n}\n\nfunction loadNumericFilterReducer(\n  engine: SearchEngine\n): engine is SearchEngine<\n  NumericFacetSection & ConfigurationSection & SearchSection\n> {\n  engine.addReducers({numericFacetSet, configuration, search});\n  return true;\n}\n", "import {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../../app/ssr-engine/types/common';\nimport {\n  NumericFilter,\n  NumericFilterProps,\n  buildNumericFilter,\n} from './headless-numeric-filter';\n\nexport * from './headless-numeric-filter';\n\n/**\n * @internal\n */\nexport const defineNumericFilter = (\n  props: NumericFilterProps\n): ControllerDefinitionWithoutProps<SearchEngine, NumericFilter> => ({\n  build: (engine) => buildNumericFilter(engine, props),\n});\n", "import {\n  DateFacetSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {baseFacetResponseSelector} from '../../facet-set/facet-set-selectors';\nimport {AnyFacetResponse} from '../../generic/interfaces/generic-facet-response';\nimport {DateFacetResponse, DateFacetValue} from './interfaces/response';\n\nfunction isDateFacetResponse(\n  state: SearchSection & DateFacetSection,\n  response: AnyFacetResponse | undefined\n): response is DateFacetResponse {\n  return !!response && response.facetId in state.dateFacetSet;\n}\n\nexport const dateFacetResponseSelector = (\n  state: SearchSection & DateFacetSection,\n  facetId: string\n) => {\n  const response = baseFacetResponseSelector(state, facetId);\n  if (isDateFacetResponse(state, response)) {\n    return response;\n  }\n\n  return undefined;\n};\n\nexport const dateFacetSelectedValuesSelector = (\n  state: SearchSection & DateFacetSection,\n  facetId: string\n): DateFacetValue[] => {\n  const facetResponse = dateFacetResponseSelector(state, facetId) || {\n    values: [],\n  };\n  return facetResponse.values.filter((value) => value.state === 'selected');\n};\n\nexport const dateFacetActiveValuesSelector = (\n  state: SearchSection & DateFacetSection,\n  facetId: string\n): DateFacetValue[] => {\n  const facetResponse = dateFacetResponseSelector(state, facetId) || {\n    values: [],\n  };\n  return facetResponse.values.filter((value) => value.state !== 'idle');\n};\n\nexport const dateFacetExcludedValuesSelector = (\n  state: SearchSection & DateFacetSection,\n  facetId: string\n): DateFacetValue[] => {\n  const facetResponse = dateFacetResponseSelector(state, facetId) || {\n    values: [],\n  };\n  return facetResponse.values.filter((value) => value.state === 'excluded');\n};\n", "import {configuration} from '../../../../../app/common-reducers';\nimport {CoreEngine} from '../../../../../app/engine';\nimport {\n  disableFacet,\n  enableFacet,\n  updateFacetOptions,\n} from '../../../../../features/facet-options/facet-options-actions';\nimport {isFacetEnabledSelector} from '../../../../../features/facet-options/facet-options-selectors';\nimport {facetOptionsReducer as facetOptions} from '../../../../../features/facet-options/facet-options-slice';\nimport {isFacetLoadingResponseSelector} from '../../../../../features/facets/facet-set/facet-set-selectors';\nimport {\n  registerDateFacet,\n  RegisterDateFacetActionCreatorPayload,\n  updateDateFacetValues,\n} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-actions';\nimport {dateFacetSelectedValuesSelector} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-selectors';\nimport {dateFacetSetReducer as dateFacetSet} from '../../../../../features/facets/range-facets/date-facet-set/date-facet-set-slice';\nimport {DateFacetValue} from '../../../../../features/facets/range-facets/date-facet-set/interfaces/response';\nimport {searchReducer as search} from '../../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n  FacetOptionsSection,\n  SearchSection,\n} from '../../../../../state/state-sections';\nimport {loadReducerError} from '../../../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../../../controller/headless-controller';\nimport {determineFacetId} from '../../_common/facet-id-determinor';\nimport {validateDateFacetOptions} from './headless-date-facet-options';\n\n/**\n * The options defining a `DateFilter`.\n */\nexport interface DateFilterOptions {\n  /**\n   * The field whose values you want to display in the filter.\n   */\n  field: string;\n\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  facetId?: string;\n\n  /**\n   * Whether to exclude folded result parents when estimating the result count for each facet value.\n   *\n   * @defaultValue `true`\n   */\n  filterFacetCount?: boolean;\n\n  /**\n   * The maximum number of results to scan in the index to ensure that the facet lists all potential facet values.\n   *\n   * Note: A high injectionDepth may negatively impact the facet request performance.\n   *\n   * Minimum: `0`\n   *\n   * @defaultValue `1000`\n   */\n  injectionDepth?: number;\n}\n\nexport interface DateFilterInitialState {\n  /**\n   * The initial selected range.\n   */\n  range: DateFilterRange;\n}\n\nexport interface DateFilterRange {\n  /**\n   * The starting value for the date range, formatted as `YYYY/MM/DD@HH:mm:ss` or the Relative date format \"period-amount-unit\"\n   */\n  start: string;\n\n  /**\n   * The ending value for the date range, formatted as `YYYY/MM/DD@HH:mm:ss` or the Relative date format \"period-amount-unit\"\n   */\n  end: string;\n}\n\nexport interface DateFilterProps {\n  /**\n   * The options for the `DateFilter` controller.\n   */\n  options: DateFilterOptions;\n  /**\n   * The initial state.\n   */\n  initialState?: DateFilterInitialState;\n}\n\nexport interface DateFilterState {\n  /**\n   * The facet ID.\n   * */\n  facetId: string;\n\n  /**\n   * The current selected range.\n   */\n  range?: DateFacetValue;\n\n  /**\n   * Returns `true` if a search is in progress, and `false` if not.\n   */\n  isLoading: boolean;\n\n  /**\n   * Whether the filter is enabled and its value is used to filter search results.\n   */\n  enabled: boolean;\n}\n\n/**\n * The `DateFilter` controller makes it possible to create a date filter.\n */\nexport interface DateFilter extends Controller {\n  /**\n   * Clears the current filter.\n   */\n  clear(): void;\n\n  /**\n   * Updates the selected range.\n   *\n   * You can use the `buildDateRange` utility method in order to format the range values correctly.\n   *\n   * @param range - The date range.\n   * @returns Whether the range is valid.\n   */\n  setRange(range: DateFilterRange): boolean;\n\n  /**\n   * Enables the filter. I.e., undoes the effects of `disable`.\n   */\n  enable(): void;\n\n  /**\n   * Disables the filter. I.e., prevents it from filtering results.\n   */\n  disable(): void;\n\n  /**\n   * The state of the `DateFilter` controller.\n   */\n  state: DateFilterState;\n}\n\nexport function buildCoreDateFilter(\n  engine: CoreEngine,\n  props: DateFilterProps\n): DateFilter {\n  if (!loadDateFilterReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n  const facetId = determineFacetId(engine, props.options);\n  const options: RegisterDateFacetActionCreatorPayload = {\n    ...props.options,\n    currentValues: props.initialState?.range\n      ? [{...props.initialState.range, endInclusive: true, state: 'selected'}]\n      : [],\n    generateAutomaticRanges: false,\n    facetId,\n  };\n\n  validateDateFacetOptions(engine, options);\n  dispatch(registerDateFacet(options));\n\n  const getIsEnabled = () => isFacetEnabledSelector(engine.state, facetId);\n\n  return {\n    ...controller,\n    clear: () => {\n      dispatch(\n        updateDateFacetValues({\n          facetId,\n          values: [],\n        })\n      );\n      dispatch(updateFacetOptions());\n    },\n    setRange: (range) => {\n      const facetValue: DateFacetValue = {\n        ...range,\n        state: 'selected',\n        numberOfResults: 0,\n        endInclusive: true,\n      };\n\n      const updateFacetValuesAction = updateDateFacetValues({\n        facetId,\n        values: [facetValue],\n      });\n\n      if (updateFacetValuesAction.error) {\n        return false;\n      }\n\n      dispatch(updateFacetValuesAction);\n      dispatch(updateFacetOptions());\n      return true;\n    },\n    enable() {\n      dispatch(enableFacet(facetId));\n    },\n    disable() {\n      dispatch(disableFacet(facetId));\n    },\n\n    get state() {\n      const isLoading = isFacetLoadingResponseSelector(getState());\n      const enabled = getIsEnabled();\n      const selectedRanges = dateFacetSelectedValuesSelector(\n        getState(),\n        facetId\n      );\n      const range = selectedRanges.length ? selectedRanges[0] : undefined;\n\n      return {\n        facetId,\n        isLoading,\n        range,\n        enabled,\n      };\n    },\n  };\n}\n\nfunction loadDateFilterReducer(\n  engine: CoreEngine\n): engine is CoreEngine<\n  DateFacetSection & FacetOptionsSection & ConfigurationSection & SearchSection\n> {\n  engine.addReducers({dateFacetSet, facetOptions, configuration, search});\n  return true;\n}\n", "import {SearchAnalyticsProvider} from '../../../../api/analytics/search-analytics';\nimport {configuration} from '../../../../app/common-reducers';\nimport {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../../../features/analytics/search-action-cause';\nimport {\n  logFacetClearAll,\n  logFacetSelect,\n} from '../../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {dateFacetSetReducer as dateFacetSet} from '../../../../features/facets/range-facets/date-facet-set/date-facet-set-slice';\nimport {executeSearch} from '../../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  DateFacetSection,\n  SearchSection,\n} from '../../../../state/state-sections';\nimport {loadReducerError} from '../../../../utils/errors';\nimport {\n  buildCoreDateFilter,\n  DateFilter,\n  DateFilterInitialState,\n  DateFilterOptions,\n  DateFilterProps,\n  DateFilterRange,\n  DateFilterState,\n} from '../../../core/facets/range-facet/date-facet/headless-core-date-filter';\n\nexport type {\n  DateFilterOptions,\n  DateFilterInitialState,\n  DateFilterRange,\n  DateFilterProps,\n  DateFilterState,\n  DateFilter,\n};\n\n/**\n * Creates a `DateFilter` controller instance.\n * @param engine - The headless engine.\n * @param props - The configurable `DateFilter` controller properties.\n * @returns A `DateFilter` controller instance.\n */\nexport function buildDateFilter(\n  engine: SearchEngine,\n  props: DateFilterProps\n): DateFilter {\n  if (!loadDateFilterReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const coreController = buildCoreDateFilter(engine, props);\n  const {dispatch} = engine;\n  const getFacetId = () => coreController.state.facetId;\n\n  return {\n    ...coreController,\n    clear: () => {\n      coreController.clear();\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(getFacetId()),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                getFacetId()\n              ),\n          },\n        })\n      );\n    },\n    setRange: (range) => {\n      const success = coreController.setRange(range);\n      if (success) {\n        dispatch(\n          executeSearch({\n            legacy: logFacetSelect({\n              facetId: getFacetId(),\n              facetValue: `${range.start}..${range.end}`,\n            }),\n            next: {\n              actionCause: SearchPageEvents.facetSelect,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  getFacetId(),\n                  `${range.start}..${range.end}`\n                ),\n            },\n          })\n        );\n      }\n      return success;\n    },\n\n    get state() {\n      return {\n        ...coreController.state,\n      };\n    },\n  };\n}\n\nfunction loadDateFilterReducer(\n  engine: SearchEngine\n): engine is SearchEngine<\n  DateFacetSection & ConfigurationSection & SearchSection\n> {\n  engine.addReducers({dateFacetSet, configuration, search});\n  return true;\n}\n", "import {SearchEngine} from '../../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../../app/ssr-engine/types/common';\nimport {\n  DateFilter,\n  DateFilterProps,\n  buildDateFilter,\n} from './headless-date-filter';\n\nexport * from './headless-date-filter';\n\n/**\n * @internal\n */\nexport const defineDateFilter = (\n  props: DateFilterProps\n): ControllerDefinitionWithoutProps<SearchEngine, DateFilter> => ({\n  build: (engine) => buildDateFilter(engine, props),\n});\n", "import {ArrayValue, EnumValue, StringValue, RecordValue} from '@coveo/bueno';\nimport {\n  SortBy,\n  SortByRelevance,\n  SortDirection,\n  SortByFields as CoreSortByFields,\n  SortByFieldsFields as CoreSortByFieldsFields,\n  buildRelevanceSortCriterion,\n} from '../../sort/sort';\n\nexport type {SortByRelevance};\nexport {SortBy, SortDirection, buildRelevanceSortCriterion};\n\nexport type SortByFields = Pick<CoreSortByFields, 'by'> & {\n  fields: SortByFieldsFields[];\n};\n\nexport type SortByFieldsFields = CoreSortByFieldsFields & {\n  displayName?: string;\n};\n\nexport type SortCriterion = SortByRelevance | SortByFields;\n\nexport const buildFieldsSortCriterion = (\n  fields: SortByFieldsFields[]\n): SortByFields => ({\n  by: SortBy.Fields,\n  fields,\n});\n\nexport const sortCriterionDefinition = new RecordValue({\n  options: {\n    required: false,\n  },\n  values: {\n    by: new EnumValue({enum: SortBy, required: true}),\n    fields: new ArrayValue({\n      each: new RecordValue({\n        values: {\n          field: new StringValue({required: true}),\n          direction: new EnumValue({enum: SortDirection}),\n          displayName: new StringValue(),\n        },\n      }),\n    }),\n  },\n});\n", "import {SortParam} from '../../../api/commerce/commerce-api-params';\nimport {CommerceAPIRequest} from '../../../api/commerce/common/request';\nimport {CommerceSuccessResponse} from '../../../api/commerce/common/response';\nimport {\n  CartSection,\n  CategoryFacetSection,\n  CommerceContextSection,\n  CommercePaginationSection,\n  CommerceSortSection,\n  ConfigurationSection,\n  DateFacetSection,\n  FacetOrderSection,\n  FacetSection,\n  NumericFacetSection,\n  ProductListingV2Section,\n  VersionSection,\n} from '../../../state/state-sections';\nimport {PreparableAnalyticsAction} from '../../analytics/analytics-utils';\nimport {StateNeededByFetchProductListingV2} from '../product-listing/product-listing-actions';\nimport {SortBy, SortCriterion} from '../sort/sort';\n\nexport type StateNeededByQueryCommerceAPI = ConfigurationSection &\n  ProductListingV2Section &\n  CommerceContextSection &\n  CartSection &\n  Partial<\n    CommercePaginationSection &\n      CommerceSortSection &\n      FacetSection &\n      NumericFacetSection &\n      CategoryFacetSection &\n      DateFacetSection &\n      FacetOrderSection &\n      VersionSection\n  >;\n\nexport interface QueryCommerceAPIThunkReturn {\n  /** The successful search response. */\n  response: CommerceSuccessResponse;\n  analyticsAction: PreparableAnalyticsAction<StateNeededByQueryCommerceAPI>;\n}\n\nexport const buildCommerceAPIRequest = (\n  state: StateNeededByQueryCommerceAPI\n): CommerceAPIRequest => {\n  const facets = getFacets(state);\n\n  const {view, user, ...restOfContext} = state.commerceContext;\n  return {\n    accessToken: state.configuration.accessToken,\n    url: state.configuration.platformUrl,\n    organizationId: state.configuration.organizationId,\n    ...restOfContext,\n    context: {\n      user,\n      view,\n      cart: state.cart.cartItems.map((id) => state.cart.cart[id]),\n    },\n    facets,\n    ...(state.commercePagination && {page: state.commercePagination.page}),\n    ...(state.commerceSort && {\n      sort: getSort(state.commerceSort.appliedSort),\n    }),\n  };\n};\n\nfunction getFacets(state: StateNeededByFetchProductListingV2) {\n  if (!state.facetOrder || !state.commerceFacetSet) {\n    return [];\n  }\n\n  return state.facetOrder\n    .map((facetId) => state.commerceFacetSet![facetId].request)\n    .filter((facet) => facet.values.length > 0);\n}\n\nfunction getSort(appliedSort: SortCriterion): SortParam['sort'] | undefined {\n  if (!appliedSort) {\n    return;\n  }\n\n  if (appliedSort.by === SortBy.Relevance) {\n    return {\n      sortCriteria: SortBy.Relevance,\n    };\n  } else {\n    return {\n      sortCriteria: SortBy.Fields,\n      fields: appliedSort.fields.map(({name, direction}) => ({\n        field: name,\n        direction,\n      })),\n    };\n  }\n}\n", "import {Schema} from '@coveo/bueno';\nimport {DocumentIdentifier, PartialDocumentInformation} from 'coveo.analytics';\nimport {CommerceAnalyticsProvider} from '../../../api/analytics/commerce-analytics';\nimport {ProductRecommendation, Result} from '../../../product-listing.index';\nimport {CommerceAppState} from '../../../state/commerce-app-state';\nimport {\n  makeAnalyticsAction,\n  resultPartialDefinition,\n  ProductListingV2Action,\n  makeCommerceAnalyticsAction,\n} from '../../analytics/analytics-utils';\n\nexport const logProductListingV2Load = (): ProductListingV2Action =>\n  makeCommerceAnalyticsAction(\n    'analytics/commerce/productListing/load',\n    (client) => client.makeInterfaceLoad(),\n    (getState) => new CommerceAnalyticsProvider(getState)\n  );\n\nexport const logProductListingV2Open = (\n  productRec: ProductRecommendation\n): ProductListingV2Action =>\n  makeAnalyticsAction(\n    'analytics/commerce/productListing/open',\n    (client, state) => {\n      validateResultPayload(productRec);\n      return client.makeDocumentOpen(\n        partialRecommendationInformation(productRec, state),\n        documentIdentifier(productRec)\n      );\n    },\n    (getState) => new CommerceAnalyticsProvider(getState)\n  );\n\nconst documentIdentifier = (\n  productRecommendation: ProductRecommendation\n): DocumentIdentifier => {\n  if (!productRecommendation.permanentid) {\n    console.warn(\n      'Missing field permanentid on productRecommendation. This might cause many issues with your Coveo deployment. See https://docs.coveo.com/en/1913 and https://docs.coveo.com/en/1640 for more information.',\n      productRecommendation\n    );\n  }\n  return {\n    contentIDKey: 'permanentid',\n    contentIDValue: productRecommendation.permanentid,\n  };\n};\n\nfunction mapProductRecommendationToResult(\n  productRecommendation: ProductRecommendation\n): Partial<Result> {\n  return {\n    uniqueId: productRecommendation.permanentid,\n    title: productRecommendation.ec_name || '',\n    uri: productRecommendation.documentUri,\n    clickUri: productRecommendation.clickUri,\n  };\n}\n\nfunction partialResultPayload(\n  productRecommendation: ProductRecommendation\n): Partial<ProductRecommendation> {\n  const result = mapProductRecommendationToResult(productRecommendation);\n  return Object.assign(\n    {},\n    ...Object.keys(resultPartialDefinition).map((key) => ({\n      [key]: result[key as keyof typeof resultPartialDefinition],\n    }))\n  );\n}\n\nconst validateResultPayload = (productRecommendation: ProductRecommendation) =>\n  new Schema(resultPartialDefinition).validate(\n    partialResultPayload(productRecommendation)\n  );\n\nconst partialRecommendationInformation = (\n  result: ProductRecommendation,\n  state: Partial<CommerceAppState>\n): PartialDocumentInformation => {\n  const resultIndex =\n    state.productListing?.products.findIndex(\n      ({permanentid}) => result.permanentid === permanentid\n    ) || 0;\n\n  return buildPartialDocumentInformation(result, resultIndex);\n};\n\nfunction buildPartialDocumentInformation(\n  productRecommendation: ProductRecommendation,\n  resultIndex: number\n): PartialDocumentInformation {\n  return {\n    collectionName: '',\n    documentAuthor: '',\n    documentPosition: resultIndex + 1,\n    documentTitle: productRecommendation.ec_name || '',\n    documentUri: productRecommendation.documentUri,\n    documentUriHash: productRecommendation.documentUriHash,\n    documentUrl: productRecommendation.clickUri,\n    rankingModifier: '',\n    sourceName: 'unknown',\n    queryPipeline: '',\n  };\n}\n", "import {createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkCommerceOptions} from '../../../api/commerce/commerce-api-client';\nimport {isErrorResponse} from '../../../api/search/search-api-client';\nimport {\n  CartSection,\n  CommerceContextSection,\n  CommerceFacetSetSection,\n  CommercePaginationSection,\n  CommerceSortSection,\n  ConfigurationSection,\n  FacetOrderSection,\n  ProductListingV2Section,\n  VersionSection,\n} from '../../../state/state-sections';\nimport {logQueryError} from '../../search/search-analytics-actions';\nimport {\n  buildCommerceAPIRequest,\n  QueryCommerceAPIThunkReturn,\n  StateNeededByQueryCommerceAPI,\n} from '../common/actions';\nimport {logProductListingV2Load} from './product-listing-analytics';\n\nexport type StateNeededByFetchProductListingV2 = ConfigurationSection &\n  ProductListingV2Section &\n  CommerceContextSection &\n  CartSection &\n  Partial<\n    CommercePaginationSection &\n      CommerceFacetSetSection &\n      CommerceSortSection &\n      FacetOrderSection &\n      VersionSection\n  >;\n\nexport const fetchProductListing = createAsyncThunk<\n  QueryCommerceAPIThunkReturn,\n  void,\n  AsyncThunkCommerceOptions<StateNeededByQueryCommerceAPI>\n>(\n  'commerce/productListing/fetch',\n  async (_action, {getState, dispatch, rejectWithValue, extra}) => {\n    const state = getState();\n    const {apiClient} = extra;\n    const fetched = await apiClient.getProductListing(\n      buildCommerceAPIRequest(state)\n    );\n\n    if (isErrorResponse(fetched)) {\n      dispatch(logQueryError(fetched.error));\n      return rejectWithValue(fetched.error);\n    }\n\n    return {\n      response: fetched.success,\n      analyticsAction: logProductListingV2Load(),\n    };\n  }\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {fetchProductListing} from '../../commerce/product-listing/product-listing-actions';\nimport {change} from '../../history/history-actions';\nimport {executeSearch} from '../../search/search-actions';\nimport {getFacetOrderInitialState} from './facet-order-state';\n\nexport const facetOrderReducer = createReducer(\n  getFacetOrderInitialState(),\n  (builder) => {\n    builder\n      .addCase(executeSearch.fulfilled, (_, action) => {\n        return action.payload.response.facets.map((facet) => facet.facetId);\n      })\n      .addCase(fetchProductListing.fulfilled, (_, action) => {\n        const generateFacetId = (facet: {facetId?: string; field: string}) =>\n          facet.facetId ?? facet.field;\n        return action.payload.response.facets.map(generateFacetId);\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        return action.payload?.facetOrder ?? state;\n      });\n  }\n);\n", "import {SearchPageEvents} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\n\n//TODO: KIT-2859\nexport const logNavigateForward = (): SearchAction =>\n  makeAnalyticsAction(\n    'history/analytics/forward',\n    (client) => client.makeSearchEvent('historyForward' as SearchPageEvents) // TODO: Need to create this event natively in coveo.analytics to remove cast\n  );\n\n//TODO: KIT-2859\nexport const logNavigateBackward = (): SearchAction =>\n  makeAnalyticsAction(\n    'history/analytics/backward',\n    (client) => client.makeSearchEvent('historyBackward' as SearchPageEvents) // TODO: Need to create this event natively in coveo.analytics to remove cast\n  );\n\n//TODO: KIT-2859\nexport const logNoResultsBack = (): SearchAction =>\n  makeAnalyticsAction('history/analytics/noresultsback', (client) =>\n    client.makeNoResultsBack()\n  );\n", "import {Reducer, AnyAction} from '@reduxjs/toolkit';\n\nexport const makeHistory = <State>(state?: State): StateWithHistory<State> => ({\n  past: [],\n  present: state,\n  future: [],\n});\n\nexport interface StateWithHistory<State> {\n  past: State[];\n  present?: State;\n  future: State[];\n}\n\nconst undo = <State>(\n  state: StateWithHistory<State>\n): StateWithHistory<State> => {\n  const {past, present, future} = state;\n  if (!present) {\n    return state;\n  }\n\n  if (past.length === 0) {\n    return state;\n  }\n\n  const previous = past[past.length - 1];\n  const newPast = past.slice(0, past.length - 1);\n  return {\n    past: newPast,\n    present: previous,\n    future: [present, ...future],\n  };\n};\n\nconst redo = <State>(\n  state: StateWithHistory<State>\n): StateWithHistory<State> => {\n  const {past, present, future} = state;\n  if (!present) {\n    return state;\n  }\n\n  if (future.length === 0) {\n    return state;\n  }\n\n  const next = future[0];\n  const newFuture = future.slice(1);\n  return {\n    past: [...past, present],\n    present: next,\n    future: newFuture,\n  };\n};\n\nconst updateHistory = <State>(options: {\n  state: StateWithHistory<State>;\n  reducer: Reducer<State>;\n  action: AnyAction;\n}) => {\n  const {action, state, reducer} = options;\n  const {past, present} = state;\n  const newPresent = reducer(present, action);\n  if (!present) {\n    return makeHistory(newPresent);\n  }\n\n  if (present === newPresent) {\n    return state;\n  }\n\n  return {\n    past: [...past, present],\n    present: newPresent,\n    future: [],\n  };\n};\n\nexport const undoable = <State>(options: {\n  reducer: Reducer<State>;\n  actionTypes: {\n    undo: string;\n    redo: string;\n    snapshot: string;\n  };\n}) => {\n  const {actionTypes, reducer} = options;\n  const emptyHistoryState = makeHistory<State>();\n  return (\n    state = emptyHistoryState,\n    action: AnyAction\n  ): StateWithHistory<State> => {\n    switch (action.type) {\n      case actionTypes.undo:\n        return undo(state);\n\n      case actionTypes.redo:\n        return redo(state);\n\n      case actionTypes.snapshot:\n        return updateHistory({\n          state,\n          reducer,\n          action,\n        });\n\n      default:\n        return state;\n    }\n  };\n};\n", "import {\n  AnyEqualityComparator,\n  Cache,\n  CircularState,\n  Dictionary,\n  State,\n  TypeEqualityComparator,\n} from './internalTypes';\n\nconst { getOwnPropertyNames, getOwnPropertySymbols } = Object;\nconst { hasOwnProperty } = Object.prototype;\n\n/**\n * Combine two comparators into a single comparators.\n */\nexport function combineComparators<Meta>(\n  comparatorA: AnyEqualityComparator<Meta>,\n  comparatorB: AnyEqualityComparator<Meta>,\n) {\n  return function isEqual<A, B>(a: A, b: B, state: State<Meta>) {\n    return comparatorA(a, b, state) && comparatorB(a, b, state);\n  };\n}\n\n/**\n * Wrap the provided `areItemsEqual` method to manage the circular state, allowing\n * for circular references to be safely included in the comparison without creating\n * stack overflows.\n */\nexport function createIsCircular<\n  AreItemsEqual extends TypeEqualityComparator<any, any>,\n>(areItemsEqual: AreItemsEqual): AreItemsEqual {\n  return function isCircular(\n    a: any,\n    b: any,\n    state: CircularState<Cache<any, any>>,\n  ) {\n    if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\n      return areItemsEqual(a, b, state);\n    }\n\n    const { cache } = state;\n\n    const cachedA = cache.get(a);\n    const cachedB = cache.get(b);\n\n    if (cachedA && cachedB) {\n      return cachedA === b && cachedB === a;\n    }\n\n    cache.set(a, b);\n    cache.set(b, a);\n\n    const result = areItemsEqual(a, b, state);\n\n    cache.delete(a);\n    cache.delete(b);\n\n    return result;\n  } as AreItemsEqual;\n}\n\n/**\n * Get the properties to strictly examine, which include both own properties that are\n * not enumerable and symbol properties.\n */\nexport function getStrictProperties(\n  object: Dictionary,\n): Array<string | symbol> {\n  return (getOwnPropertyNames(object) as Array<string | symbol>).concat(\n    getOwnPropertySymbols(object),\n  );\n}\n\n/**\n * Whether the object contains the property passed as an own property.\n */\nexport const hasOwn =\n  Object.hasOwn ||\n  ((object: Dictionary, property: number | string | symbol) =>\n    hasOwnProperty.call(object, property));\n\n/**\n * Whether the values passed are strictly equal or both NaN.\n */\nexport function sameValueZeroEqual(a: any, b: any): boolean {\n  return a || b ? a === b : a === b || (a !== a && b !== b);\n}\n", "import { getStrictProperties, hasOwn, sameValueZeroEqual } from './utils';\nimport type {\n  Dictionary,\n  PrimitiveWrapper,\n  State,\n  TypedArray,\n} from './internalTypes';\n\nconst OWNER = '_owner';\n\nconst { getOwnPropertyDescriptor, keys } = Object;\n\n/**\n * Whether the arrays are equal in value.\n */\nexport function areArraysEqual(a: any[], b: any[], state: State<any>) {\n  let index = a.length;\n\n  if (b.length !== index) {\n    return false;\n  }\n\n  while (index-- > 0) {\n    if (!state.equals(a[index], b[index], index, index, a, b, state)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the dates passed are equal in value.\n */\nexport function areDatesEqual(a: Date, b: Date): boolean {\n  return sameValueZeroEqual(a.getTime(), b.getTime());\n}\n\n/**\n * Whether the `Map`s are equal in value.\n */\nexport function areMapsEqual(\n  a: Map<any, any>,\n  b: Map<any, any>,\n  state: State<any>,\n): boolean {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  const matchedIndices: Record<number, true> = {};\n  const aIterable = a.entries();\n\n  let index = 0;\n  let aResult: IteratorResult<[any, any]>;\n  let bResult: IteratorResult<[any, any]>;\n\n  while ((aResult = aIterable.next())) {\n    if (aResult.done) {\n      break;\n    }\n\n    const bIterable = b.entries();\n\n    let hasMatch = false;\n    let matchIndex = 0;\n\n    while ((bResult = bIterable.next())) {\n      if (bResult.done) {\n        break;\n      }\n\n      const [aKey, aValue] = aResult.value;\n      const [bKey, bValue] = bResult.value;\n\n      if (\n        !hasMatch &&\n        !matchedIndices[matchIndex] &&\n        (hasMatch =\n          state.equals(aKey, bKey, index, matchIndex, a, b, state) &&\n          state.equals(aValue, bValue, aKey, bKey, a, b, state))\n      ) {\n        matchedIndices[matchIndex] = true;\n      }\n\n      matchIndex++;\n    }\n\n    if (!hasMatch) {\n      return false;\n    }\n\n    index++;\n  }\n\n  return true;\n}\n\n/**\n * Whether the objects are equal in value.\n */\nexport function areObjectsEqual(\n  a: Dictionary,\n  b: Dictionary,\n  state: State<any>,\n): boolean {\n  const properties = keys(a);\n\n  let index = properties.length;\n\n  if (keys(b).length !== index) {\n    return false;\n  }\n\n  let property: string;\n\n  // Decrementing `while` showed faster results than either incrementing or\n  // decrementing `for` loop and than an incrementing `while` loop. Declarative\n  // methods like `some` / `every` were not used to avoid incurring the garbage\n  // cost of anonymous callbacks.\n  while (index-- > 0) {\n    property = properties[index]!;\n\n    if (\n      property === OWNER &&\n      (a.$$typeof || b.$$typeof) &&\n      a.$$typeof !== b.$$typeof\n    ) {\n      return false;\n    }\n\n    if (\n      !hasOwn(b, property) ||\n      !state.equals(a[property], b[property], property, property, a, b, state)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the objects are equal in value with strict property checking.\n */\nexport function areObjectsEqualStrict(\n  a: Dictionary,\n  b: Dictionary,\n  state: State<any>,\n): boolean {\n  const properties = getStrictProperties(a);\n\n  let index = properties.length;\n\n  if (getStrictProperties(b).length !== index) {\n    return false;\n  }\n\n  let property: string | symbol;\n  let descriptorA: ReturnType<typeof getOwnPropertyDescriptor>;\n  let descriptorB: ReturnType<typeof getOwnPropertyDescriptor>;\n\n  // Decrementing `while` showed faster results than either incrementing or\n  // decrementing `for` loop and than an incrementing `while` loop. Declarative\n  // methods like `some` / `every` were not used to avoid incurring the garbage\n  // cost of anonymous callbacks.\n  while (index-- > 0) {\n    property = properties[index]!;\n\n    if (\n      property === OWNER &&\n      (a.$$typeof || b.$$typeof) &&\n      a.$$typeof !== b.$$typeof\n    ) {\n      return false;\n    }\n\n    if (!hasOwn(b, property)) {\n      return false;\n    }\n\n    if (\n      !state.equals(a[property], b[property], property, property, a, b, state)\n    ) {\n      return false;\n    }\n\n    descriptorA = getOwnPropertyDescriptor(a, property);\n    descriptorB = getOwnPropertyDescriptor(b, property);\n\n    if (\n      (descriptorA || descriptorB) &&\n      (!descriptorA ||\n        !descriptorB ||\n        descriptorA.configurable !== descriptorB.configurable ||\n        descriptorA.enumerable !== descriptorB.enumerable ||\n        descriptorA.writable !== descriptorB.writable)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the primitive wrappers passed are equal in value.\n */\nexport function arePrimitiveWrappersEqual(\n  a: PrimitiveWrapper,\n  b: PrimitiveWrapper,\n): boolean {\n  return sameValueZeroEqual(a.valueOf(), b.valueOf());\n}\n\n/**\n * Whether the regexps passed are equal in value.\n */\nexport function areRegExpsEqual(a: RegExp, b: RegExp): boolean {\n  return a.source === b.source && a.flags === b.flags;\n}\n\n/**\n * Whether the `Set`s are equal in value.\n */\nexport function areSetsEqual(\n  a: Set<any>,\n  b: Set<any>,\n  state: State<any>,\n): boolean {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  const matchedIndices: Record<number, true> = {};\n  const aIterable = a.values();\n\n  let aResult: IteratorResult<any>;\n  let bResult: IteratorResult<any>;\n\n  while ((aResult = aIterable.next())) {\n    if (aResult.done) {\n      break;\n    }\n\n    const bIterable = b.values();\n\n    let hasMatch = false;\n    let matchIndex = 0;\n\n    while ((bResult = bIterable.next())) {\n      if (bResult.done) {\n        break;\n      }\n\n      if (\n        !hasMatch &&\n        !matchedIndices[matchIndex] &&\n        (hasMatch = state.equals(\n          aResult.value,\n          bResult.value,\n          aResult.value,\n          bResult.value,\n          a,\n          b,\n          state,\n        ))\n      ) {\n        matchedIndices[matchIndex] = true;\n      }\n\n      matchIndex++;\n    }\n\n    if (!hasMatch) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Whether the TypedArray instances are equal in value.\n */\nexport function areTypedArraysEqual(a: TypedArray, b: TypedArray) {\n  let index = a.length;\n\n  if (b.length !== index) {\n    return false;\n  }\n\n  while (index-- > 0) {\n    if (a[index] !== b[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import {\n  areArraysEqual as areArraysEqualDefault,\n  areDatesEqual as areDatesEqualDefault,\n  areMapsEqual as areMapsEqualDefault,\n  areObjectsEqual as areObjectsEqualDefault,\n  areObjectsEqualStrict as areObjectsEqualStrictDefault,\n  arePrimitiveWrappersEqual as arePrimitiveWrappersEqualDefault,\n  areRegExpsEqual as areRegExpsEqualDefault,\n  areSetsEqual as areSetsEqualDefault,\n  areTypedArraysEqual,\n} from './equals';\nimport { combineComparators, createIsCircular } from './utils';\nimport type {\n  ComparatorConfig,\n  CreateState,\n  CustomEqualCreatorOptions,\n  EqualityComparator,\n  InternalEqualityComparator,\n  State,\n} from './internalTypes';\n\nconst ARGUMENTS_TAG = '[object Arguments]';\nconst BOOLEAN_TAG = '[object Boolean]';\nconst DATE_TAG = '[object Date]';\nconst MAP_TAG = '[object Map]';\nconst NUMBER_TAG = '[object Number]';\nconst OBJECT_TAG = '[object Object]';\nconst REG_EXP_TAG = '[object RegExp]';\nconst SET_TAG = '[object Set]';\nconst STRING_TAG = '[object String]';\n\nconst { isArray } = Array;\nconst isTypedArray =\n  typeof ArrayBuffer === 'function' && ArrayBuffer.isView\n    ? ArrayBuffer.isView\n    : null;\nconst { assign } = Object;\nconst getTag = Object.prototype.toString.call.bind(\n  Object.prototype.toString,\n) as (a: object) => string;\n\ninterface CreateIsEqualOptions<Meta> {\n  circular: boolean;\n  comparator: EqualityComparator<Meta>;\n  createState: CreateState<Meta> | undefined;\n  equals: InternalEqualityComparator<Meta>;\n  strict: boolean;\n}\n\n/**\n * Create a comparator method based on the type-specific equality comparators passed.\n */\nexport function createEqualityComparator<Meta>({\n  areArraysEqual,\n  areDatesEqual,\n  areMapsEqual,\n  areObjectsEqual,\n  arePrimitiveWrappersEqual,\n  areRegExpsEqual,\n  areSetsEqual,\n  areTypedArraysEqual,\n}: ComparatorConfig<Meta>): EqualityComparator<Meta> {\n  /**\n   * compare the value of the two objects and return true if they are equivalent in values\n   */\n  return function comparator(a: any, b: any, state: State<Meta>): boolean {\n    // If the items are strictly equal, no need to do a value comparison.\n    if (a === b) {\n      return true;\n    }\n\n    // If the items are not non-nullish objects, then the only possibility\n    // of them being equal but not strictly is if they are both `NaN`. Since\n    // `NaN` is uniquely not equal to itself, we can use self-comparison of\n    // both objects, which is faster than `isNaN()`.\n    if (\n      a == null ||\n      b == null ||\n      typeof a !== 'object' ||\n      typeof b !== 'object'\n    ) {\n      return a !== a && b !== b;\n    }\n\n    const constructor = a.constructor;\n\n    // Checks are listed in order of commonality of use-case:\n    //   1. Common complex object types (plain object, array)\n    //   2. Common data values (date, regexp)\n    //   3. Less-common complex object types (map, set)\n    //   4. Less-common data values (promise, primitive wrappers)\n    // Inherently this is both subjective and assumptive, however\n    // when reviewing comparable libraries in the wild this order\n    // appears to be generally consistent.\n\n    // Constructors should match, otherwise there is potential for false positives\n    // between class and subclass or custom object and POJO.\n    if (constructor !== b.constructor) {\n      return false;\n    }\n\n    // `isPlainObject` only checks against the object's own realm. Cross-realm\n    // comparisons are rare, and will be handled in the ultimate fallback, so\n    // we can avoid capturing the string tag.\n    if (constructor === Object) {\n      return areObjectsEqual(a, b, state);\n    }\n\n    // `isArray()` works on subclasses and is cross-realm, so we can avoid capturing\n    // the string tag or doing an `instanceof` check.\n    if (isArray(a)) {\n      return areArraysEqual(a, b, state);\n    }\n\n    // `isTypedArray()` works on all possible TypedArray classes, so we can avoid\n    // capturing the string tag or comparing against all possible constructors.\n    if (isTypedArray != null && isTypedArray(a)) {\n      return areTypedArraysEqual(a, b, state);\n    }\n\n    // Try to fast-path equality checks for other complex object types in the\n    // same realm to avoid capturing the string tag. Strict equality is used\n    // instead of `instanceof` because it is more performant for the common\n    // use-case. If someone is subclassing a native class, it will be handled\n    // with the string tag comparison.\n\n    if (constructor === Date) {\n      return areDatesEqual(a, b, state);\n    }\n\n    if (constructor === RegExp) {\n      return areRegExpsEqual(a, b, state);\n    }\n\n    if (constructor === Map) {\n      return areMapsEqual(a, b, state);\n    }\n\n    if (constructor === Set) {\n      return areSetsEqual(a, b, state);\n    }\n\n    // Since this is a custom object, capture the string tag to determing its type.\n    // This is reasonably performant in modern environments like v8 and SpiderMonkey.\n    const tag = getTag(a);\n\n    if (tag === DATE_TAG) {\n      return areDatesEqual(a, b, state);\n    }\n\n    if (tag === REG_EXP_TAG) {\n      return areRegExpsEqual(a, b, state);\n    }\n\n    if (tag === MAP_TAG) {\n      return areMapsEqual(a, b, state);\n    }\n\n    if (tag === SET_TAG) {\n      return areSetsEqual(a, b, state);\n    }\n\n    if (tag === OBJECT_TAG) {\n      // The exception for value comparison is custom `Promise`-like class instances. These should\n      // be treated the same as standard `Promise` objects, which means strict equality, and if\n      // it reaches this point then that strict equality comparison has already failed.\n      return (\n        typeof a.then !== 'function' &&\n        typeof b.then !== 'function' &&\n        areObjectsEqual(a, b, state)\n      );\n    }\n\n    // If an arguments tag, it should be treated as a standard object.\n    if (tag === ARGUMENTS_TAG) {\n      return areObjectsEqual(a, b, state);\n    }\n\n    // As the penultimate fallback, check if the values passed are primitive wrappers. This\n    // is very rare in modern JS, which is why it is deprioritized compared to all other object\n    // types.\n    if (tag === BOOLEAN_TAG || tag === NUMBER_TAG || tag === STRING_TAG) {\n      return arePrimitiveWrappersEqual(a, b, state);\n    }\n\n    // If not matching any tags that require a specific type of comparison, then we hard-code false because\n    // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\n    //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\n    //     comparison that can be made.\n    //   - For types that can be introspected, but rarely have requirements to be compared\n    //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\n    //     use-cases (may be included in a future release, if requested enough).\n    //   - For types that can be introspected but do not have an objective definition of what\n    //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\n    // In all cases, these decisions should be reevaluated based on changes to the language and\n    // common development practices.\n    return false;\n  };\n}\n\n/**\n * Create the configuration object used for building comparators.\n */\nexport function createEqualityComparatorConfig<Meta>({\n  circular,\n  createCustomConfig,\n  strict,\n}: CustomEqualCreatorOptions<Meta>): ComparatorConfig<Meta> {\n  let config = {\n    areArraysEqual: strict\n      ? areObjectsEqualStrictDefault\n      : areArraysEqualDefault,\n    areDatesEqual: areDatesEqualDefault,\n    areMapsEqual: strict\n      ? combineComparators(areMapsEqualDefault, areObjectsEqualStrictDefault)\n      : areMapsEqualDefault,\n    areObjectsEqual: strict\n      ? areObjectsEqualStrictDefault\n      : areObjectsEqualDefault,\n    arePrimitiveWrappersEqual: arePrimitiveWrappersEqualDefault,\n    areRegExpsEqual: areRegExpsEqualDefault,\n    areSetsEqual: strict\n      ? combineComparators(areSetsEqualDefault, areObjectsEqualStrictDefault)\n      : areSetsEqualDefault,\n    areTypedArraysEqual: strict\n      ? areObjectsEqualStrictDefault\n      : areTypedArraysEqual,\n  };\n\n  if (createCustomConfig) {\n    config = assign({}, config, createCustomConfig(config));\n  }\n\n  if (circular) {\n    const areArraysEqual = createIsCircular(config.areArraysEqual);\n    const areMapsEqual = createIsCircular(config.areMapsEqual);\n    const areObjectsEqual = createIsCircular(config.areObjectsEqual);\n    const areSetsEqual = createIsCircular(config.areSetsEqual);\n\n    config = assign({}, config, {\n      areArraysEqual,\n      areMapsEqual,\n      areObjectsEqual,\n      areSetsEqual,\n    });\n  }\n\n  return config;\n}\n\n/**\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\n * use inside the built comparator.\n */\nexport function createInternalEqualityComparator<Meta>(\n  compare: EqualityComparator<Meta>,\n): InternalEqualityComparator<Meta> {\n  return function (\n    a: any,\n    b: any,\n    _indexOrKeyA: any,\n    _indexOrKeyB: any,\n    _parentA: any,\n    _parentB: any,\n    state: State<Meta>,\n  ) {\n    return compare(a, b, state);\n  };\n}\n\n/**\n * Create the `isEqual` function used by the consuming application.\n */\nexport function createIsEqual<Meta>({\n  circular,\n  comparator,\n  createState,\n  equals,\n  strict,\n}: CreateIsEqualOptions<Meta>) {\n  if (createState) {\n    return function isEqual<A, B>(a: A, b: B): boolean {\n      const { cache = circular ? new WeakMap() : undefined, meta } =\n        createState!();\n\n      return comparator(a, b, {\n        cache,\n        equals,\n        meta,\n        strict,\n      } as State<Meta>);\n    };\n  }\n\n  if (circular) {\n    return function isEqual<A, B>(a: A, b: B): boolean {\n      return comparator(a, b, {\n        cache: new WeakMap(),\n        equals,\n        meta: undefined as Meta,\n        strict,\n      } as State<Meta>);\n    };\n  }\n\n  const state = {\n    cache: undefined,\n    equals,\n    meta: undefined,\n    strict,\n  } as State<Meta>;\n\n  return function isEqual<A, B>(a: A, b: B): boolean {\n    return comparator(a, b, state);\n  };\n}\n", "import {\n  createEqualityComparatorConfig,\n  createEqualityComparator,\n  createInternalEqualityComparator,\n  createIsEqual,\n} from './comparator';\nimport type { CustomEqualCreatorOptions } from './internalTypes';\nimport { sameValueZeroEqual } from './utils';\n\nexport { sameValueZeroEqual };\nexport * from './internalTypes';\n\n/**\n * Whether the items passed are deeply-equal in value.\n */\nexport const deepEqual = createCustomEqual();\n\n/**\n * Whether the items passed are deeply-equal in value based on strict comparison.\n */\nexport const strictDeepEqual = createCustomEqual({ strict: true });\n\n/**\n * Whether the items passed are deeply-equal in value, including circular references.\n */\nexport const circularDeepEqual = createCustomEqual({ circular: true });\n\n/**\n * Whether the items passed are deeply-equal in value, including circular references,\n * based on strict comparison.\n */\nexport const strictCircularDeepEqual = createCustomEqual({\n  circular: true,\n  strict: true,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value.\n */\nexport const shallowEqual = createCustomEqual({\n  createInternalComparator: () => sameValueZeroEqual,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value based on strict comparison\n */\nexport const strictShallowEqual = createCustomEqual({\n  strict: true,\n  createInternalComparator: () => sameValueZeroEqual,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value, including circular references.\n */\nexport const circularShallowEqual = createCustomEqual({\n  circular: true,\n  createInternalComparator: () => sameValueZeroEqual,\n});\n\n/**\n * Whether the items passed are shallowly-equal in value, including circular references,\n * based on strict comparison.\n */\nexport const strictCircularShallowEqual = createCustomEqual({\n  circular: true,\n  createInternalComparator: () => sameValueZeroEqual,\n  strict: true,\n});\n\n/**\n * Create a custom equality comparison method.\n *\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\n * where the standard methods are not performant enough, but can also be used to provide\n * support for legacy environments that do not support expected features like\n * `RegExp.prototype.flags` out of the box.\n */\nexport function createCustomEqual<Meta = undefined>(\n  options: CustomEqualCreatorOptions<Meta> = {},\n) {\n  const {\n    circular = false,\n    createInternalComparator: createCustomInternalComparator,\n    createState,\n    strict = false,\n  } = options;\n\n  const config = createEqualityComparatorConfig<Meta>(options);\n  const comparator = createEqualityComparator(config);\n  const equals = createCustomInternalComparator\n    ? createCustomInternalComparator(comparator)\n    : createInternalEqualityComparator(comparator);\n\n  return createIsEqual({ circular, comparator, createState, equals, strict });\n}\n", "import {createCustomEqual} from 'fast-equals';\n\nexport function arrayEqual<T>(\n  firstArray: T[],\n  secondArray: T[],\n  isEqual: (first: T, second: T) => boolean = (first, second) =>\n    first === second\n) {\n  return (\n    firstArray.length === secondArray.length &&\n    firstArray.findIndex((val, i) => !isEqual(secondArray[i], val)) === -1\n  );\n}\n\nfunction arrayEqualAnyOrder<T>(firstArray: T[], secondArray: T[]) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n\n  return firstArray.every(\n    (firstVal) =>\n      secondArray.findIndex((secondVal) =>\n        deepEqualAnyOrder(firstVal, secondVal)\n      ) !== -1\n  );\n}\n\nexport const deepEqualAnyOrder: <T>(a: T, b: T) => boolean = createCustomEqual({\n  createCustomConfig: (config) => {\n    return {\n      ...config,\n      areArraysEqual: arrayEqualAnyOrder,\n    };\n  },\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {undoable} from '../../app/undoable';\nimport {SortState} from '../../controllers/sort/headless-sort';\nimport {arrayEqual} from '../../utils/compare-utils';\nimport {AdvancedSearchQueriesState} from '../advanced-search-queries/advanced-search-queries-state';\nimport {ContextState} from '../context/context-state';\nimport {DictionaryFieldContextState} from '../dictionary-field-context/dictionary-field-context-state';\nimport {AutomaticFacetSetState} from '../facets/automatic-facet-set/automatic-facet-set-state';\nimport {CategoryFacetSetState} from '../facets/category-facet-set/category-facet-set-state';\nimport {findActiveValueAncestry} from '../facets/category-facet-set/category-facet-utils';\nimport {FacetValue} from '../facets/facet-set/interfaces/response';\nimport {AnyFacetSetState} from '../facets/generic/interfaces/generic-facet-section';\nimport {PaginationState} from '../pagination/pagination-state';\nimport {QueryState} from '../query/query-state';\nimport {\n  StaticFilterSetState,\n  StaticFilterSlice,\n} from '../static-filter-set/static-filter-set-state';\nimport {TabSetState} from '../tab-set/tab-set-state';\nimport {snapshot, redo, undo} from './history-actions';\nimport {getHistoryInitialState, HistoryState} from './history-state';\n\nexport const historyReducer = createReducer(\n  getHistoryInitialState(),\n  (builder) => {\n    builder.addCase(snapshot, (state, action) =>\n      isEqual(state, action.payload) ? undefined : action.payload\n    );\n  }\n);\n\nconst isEqual = (current: HistoryState, next: HistoryState) => {\n  return (\n    isContextEqual(current.context, next.context) &&\n    isDictionaryFieldContextEqual(\n      current.dictionaryFieldContext,\n      next.dictionaryFieldContext\n    ) &&\n    isAdvancedSearchQueriesEqual(\n      current.advancedSearchQueries,\n      next.advancedSearchQueries\n    ) &&\n    isTabSetEqual(current.tabSet, next.tabSet) &&\n    isStaticFilterSetEqual(current.staticFilterSet, next.staticFilterSet) &&\n    isFacetsEqual(current.facetSet, next.facetSet) &&\n    isFacetsEqual(current.dateFacetSet, next.dateFacetSet) &&\n    isFacetsEqual(current.numericFacetSet, next.numericFacetSet) &&\n    isAutomaticFacetsEqual(current.automaticFacetSet, next.automaticFacetSet) &&\n    isCategoryFacetsEqual(current.categoryFacetSet, next.categoryFacetSet) &&\n    isPaginationEqual(current.pagination, next.pagination) &&\n    isQueryEqual(current.query, next.query) &&\n    isSortEqual(current, next) &&\n    isPipelineEqual(current.pipeline, next.pipeline) &&\n    isSearchHubEqual(current.searchHub, next.searchHub) &&\n    isFacetOrderEqual(current.facetOrder, next.facetOrder) &&\n    isDebugEqual(current.debug, next.debug)\n  );\n};\n\nconst isContextEqual = (current: ContextState, next: ContextState) =>\n  JSON.stringify(current.contextValues) === JSON.stringify(next.contextValues);\n\nconst isDictionaryFieldContextEqual = (\n  current: DictionaryFieldContextState,\n  next: DictionaryFieldContextState\n) =>\n  JSON.stringify(current.contextValues) === JSON.stringify(next.contextValues);\n\nconst isTabSetEqual = (current: TabSetState, next: TabSetState) => {\n  const currentTab = findActiveTab(current);\n  const nextTab = findActiveTab(next);\n\n  return currentTab?.id === nextTab?.id;\n};\n\nconst findActiveTab = (tabSet: TabSetState) => {\n  return Object.values(tabSet).find((tab) => tab.isActive);\n};\n\nconst isStaticFilterSetEqual = (\n  current: StaticFilterSetState,\n  next: StaticFilterSetState\n) => {\n  for (const [id, filter] of Object.entries(next)) {\n    if (!current[id]) {\n      return false;\n    }\n\n    const currentValues = getActiveStaticFilterValues(current[id]);\n    const nextValues = getActiveStaticFilterValues(filter);\n\n    if (JSON.stringify(currentValues) !== JSON.stringify(nextValues)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst getActiveStaticFilterValues = (filter: StaticFilterSlice) => {\n  return filter.values.filter((value) => value.state !== 'idle');\n};\n\ntype AnyFacetValueRequest =\n  AnyFacetSetState[string]['request']['currentValues'][number];\n\nconst isFacetsEqual = (current: AnyFacetSetState, next: AnyFacetSetState) => {\n  for (const [key, value] of Object.entries(next)) {\n    if (!current[key]) {\n      return false;\n    }\n\n    const currentSelectedValues = (\n      current[key].request.currentValues as AnyFacetValueRequest[]\n    ).filter((value) => value.state !== 'idle');\n    const nextSelectedValues = (\n      value.request.currentValues as AnyFacetValueRequest[]\n    ).filter((value) => value.state !== 'idle');\n\n    if (\n      JSON.stringify(currentSelectedValues) !==\n      JSON.stringify(nextSelectedValues)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst isCategoryFacetsEqual = (\n  current: CategoryFacetSetState,\n  next: CategoryFacetSetState\n) => {\n  for (const [key, value] of Object.entries(next)) {\n    if (!current[key]) {\n      return false;\n    }\n\n    const currentSelectedValues = findActiveValueAncestry(\n      current[key]?.request.currentValues\n    ).map(({value}) => value);\n    const nextSelectedValues = findActiveValueAncestry(\n      value?.request.currentValues\n    ).map(({value}) => value);\n\n    if (\n      JSON.stringify(currentSelectedValues) !==\n      JSON.stringify(nextSelectedValues)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst isAutomaticFacetsEqual = (\n  current: AutomaticFacetSetState,\n  next: AutomaticFacetSetState\n) => {\n  for (const [key, value] of Object.entries(next.set)) {\n    if (!current.set[key]) {\n      return false;\n    }\n\n    const currentSelectedValues = (\n      current.set[key].response.values as FacetValue[]\n    ).filter((value) => value.state !== 'idle');\n    const nextSelectedValues = (value.response.values as FacetValue[]).filter(\n      (value) => value.state !== 'idle'\n    );\n\n    if (\n      JSON.stringify(currentSelectedValues) !==\n      JSON.stringify(nextSelectedValues)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\nconst isPaginationEqual = (current: PaginationState, next: PaginationState) =>\n  current.firstResult === next.firstResult &&\n  current.numberOfResults === next.numberOfResults;\n\nconst isQueryEqual = (current: QueryState, next: QueryState) =>\n  JSON.stringify(current) === JSON.stringify(next);\n\nconst isAdvancedSearchQueriesEqual = (\n  current: AdvancedSearchQueriesState,\n  next: AdvancedSearchQueriesState\n) => JSON.stringify(current) === JSON.stringify(next);\nconst isSortEqual = (current: SortState, next: SortState) =>\n  current.sortCriteria === next.sortCriteria;\n\nconst isPipelineEqual = (current: string, next: string) => current === next;\n\nconst isSearchHubEqual = (current: string, next: string) => current === next;\n\nconst isFacetOrderEqual = (current: string[], next: string[]) =>\n  arrayEqual(current, next);\n\nconst isDebugEqual = (current: boolean, next: boolean) => current === next;\n\nexport const history = undoable({\n  actionTypes: {\n    redo: redo.type,\n    undo: undo.type,\n    snapshot: snapshot.type,\n  },\n  reducer: historyReducer,\n});\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {configuration} from '../../app/common-reducers';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {StateWithHistory} from '../../app/undoable';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {facetOrderReducer as facetOrder} from '../../features/facets/facet-order/facet-order-slice';\nimport {back, forward} from '../../features/history/history-actions';\nimport {\n  logNavigateBackward,\n  logNavigateForward,\n  logNoResultsBack,\n} from '../../features/history/history-analytics-actions';\nimport {history} from '../../features/history/history-slice';\nimport {HistoryState} from '../../features/history/history-state';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {ConfigurationSection, HistorySection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {buildController, Controller} from '../controller/headless-controller';\n\n/**\n * The `HistoryManager` controller is in charge of allowing navigating back and forward in the search interface history.\n */\nexport interface HistoryManager extends Controller {\n  /**\n   * Move backward in the interface history.\n   *\n   * @returns A promise that resolves when the previous state has been restored.\n   */\n  back(): Promise<void>;\n\n  /**\n   * Move forward in the interface history.\n   *\n   * @returns A promise that resolves when the next state has been restored.\n   */\n  forward(): Promise<void>;\n\n  /**\n   * Move backward in the interface history when there are no results.\n   *\n   * @returns A promise that resolves when the previous state has been restored.\n   */\n  backOnNoResults(): Promise<void>;\n\n  /**\n   * The state relevant to the `HistoryManager` controller.\n   * */\n  state: HistoryManagerState;\n}\n\nexport type HistoryManagerState = StateWithHistory<HistoryState>;\n\n/**\n * Creates a `HistoryManager` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `HistoryManager` controller instance.\n */\nexport function buildHistoryManager(engine: SearchEngine): HistoryManager {\n  if (!loadHistoryManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const canGoBack = (state: HistoryManagerState) => {\n    return state.past.length > 0 && !isNullOrUndefined(state.present);\n  };\n\n  return {\n    ...controller,\n    get state() {\n      return getState().history;\n    },\n\n    async back() {\n      if (!canGoBack(this.state)) {\n        return;\n      }\n      await dispatch(back());\n      dispatch(\n        executeSearch({\n          legacy: logNavigateBackward(),\n          next: {\n            actionCause: SearchPageEvents.historyBackward,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n          },\n        })\n      );\n    },\n\n    async forward() {\n      if (!this.state.future.length || !this.state.present) {\n        return;\n      }\n      await dispatch(forward());\n      dispatch(\n        executeSearch({\n          legacy: logNavigateForward(),\n          next: {\n            actionCause: SearchPageEvents.historyForward,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n          },\n        })\n      );\n    },\n\n    async backOnNoResults() {\n      if (!canGoBack(this.state)) {\n        return;\n      }\n      await dispatch(back());\n      dispatch(\n        executeSearch({\n          legacy: logNoResultsBack(),\n          next: {\n            actionCause: SearchPageEvents.noResultsBack,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n          },\n        })\n      );\n    },\n  };\n}\n\nfunction loadHistoryManagerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<HistorySection & ConfigurationSection> {\n  engine.addReducers({history, configuration, facetOrder});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {HistoryManager, buildHistoryManager} from './headless-history-manager';\n\nexport * from './headless-history-manager';\n\n/**\n * @internal\n */\nexport const defineHistoryManager = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  HistoryManager\n> => ({\n  build: (engine) => buildHistoryManager(engine),\n});\n", "import {NumberValue, RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {AutomaticFacetGeneratorOptions} from '../../../controllers/facets/automatic-facet-generator/headless-automatic-facet-generator-options';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload';\nimport {facetValueDefinition} from '../facet-set/facet-set-validate-payload';\nimport {FacetValue} from '../facet-set/interfaces/response';\nimport {facetIdDefinition} from '../generic/facet-actions-validation';\nimport {\n  DESIRED_COUNT_DEFAULT,\n  DESIRED_COUNT_MAXIMUM,\n  DESIRED_COUNT_MINIMUM,\n  NUMBER_OF_VALUE_DEFAULT,\n  NUMBER_OF_VALUE_MINIMUM,\n} from './automatic-facet-set-constants';\n\nexport interface ToggleSelectAutomaticFacetValueActionCreatorPayload {\n  /**\n   * The field of the automatic facet.\n   */\n  field: string;\n\n  /**\n   * The target automatic facet value.\n   */\n  selection: FacetValue;\n}\n\nconst numberOfValuesDefinition = new NumberValue({\n  min: NUMBER_OF_VALUE_MINIMUM,\n  default: NUMBER_OF_VALUE_DEFAULT,\n  required: false,\n});\n\nconst desiredCountDefinition = new NumberValue({\n  min: DESIRED_COUNT_MINIMUM,\n  max: DESIRED_COUNT_MAXIMUM,\n  default: DESIRED_COUNT_DEFAULT,\n  required: false,\n});\n\nconst optionsSchema = {\n  desiredCount: desiredCountDefinition,\n  numberOfValues: numberOfValuesDefinition,\n};\nexport const setOptions = createAction(\n  'automaticFacet/setOptions',\n  (payload: Partial<AutomaticFacetGeneratorOptions>) =>\n    validatePayload(payload, optionsSchema)\n);\n\nexport const deselectAllAutomaticFacetValues = createAction(\n  'automaticFacet/deselectAll',\n  (payload: string) => validatePayload(payload, facetIdDefinition)\n);\n\nconst fieldDefinition = requiredNonEmptyString;\nexport const toggleSelectAutomaticFacetValue = createAction(\n  'automaticFacet/toggleSelectValue',\n  (payload: ToggleSelectAutomaticFacetValueActionCreatorPayload) =>\n    validatePayload(payload, {\n      field: fieldDefinition,\n      selection: new RecordValue({values: facetValueDefinition}),\n    })\n);\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../breadcrumb/breadcrumb-actions';\nimport {toggleSelectAutomaticFacetValue} from '../facets/automatic-facet-set/automatic-facet-set-actions';\nimport {\n  deselectAllCategoryFacetValues,\n  toggleSelectCategoryFacetValue,\n} from '../facets/category-facet-set/category-facet-set-actions';\nimport {selectCategoryFacetSearchResult} from '../facets/facet-search-set/category/category-facet-search-actions';\nimport {selectFacetSearchResult} from '../facets/facet-search-set/specific/specific-facet-search-actions';\nimport {\n  toggleSelectDateFacetValue,\n  updateDateFacetValues,\n} from '../facets/range-facets/date-facet-set/date-facet-actions';\nimport {\n  toggleSelectNumericFacetValue,\n  updateNumericFacetValues,\n} from '../facets/range-facets/numeric-facet-set/numeric-facet-actions';\nimport {change} from '../history/history-actions';\nimport {fetchProductListing} from '../product-listing/product-listing-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {executeSearch} from '../search/search-actions';\nimport {updateActiveTab} from '../tab-set/tab-set-actions';\nimport {\n  deselectAllFacetValues,\n  toggleSelectFacetValue,\n} from './../facets/facet-set/facet-set-actions';\nimport {\n  registerNumberOfResults,\n  updateNumberOfResults,\n  updatePage,\n  registerPage,\n  previousPage,\n  nextPage,\n} from './pagination-actions';\nimport {\n  maximumNumberOfResultsFromIndex,\n  minimumPage,\n} from './pagination-constants';\nimport {getPaginationInitialState, PaginationState} from './pagination-state';\n\nexport const paginationReducer = createReducer(\n  getPaginationInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerNumberOfResults, (state, action) => {\n        const page = determineCurrentPage(state);\n        const newNumberOfResults = action.payload;\n\n        state.defaultNumberOfResults = state.numberOfResults =\n          newNumberOfResults;\n        state.firstResult = calculateFirstResult(page, newNumberOfResults);\n      })\n      .addCase(updateNumberOfResults, (state, action) => {\n        state.numberOfResults = action.payload;\n        state.firstResult = 0;\n      })\n      .addCase(updateActiveTab, (state) => {\n        state.firstResult = 0;\n      })\n      .addCase(registerPage, (state, action) => {\n        const page = action.payload;\n        state.firstResult = calculateFirstResult(page, state.numberOfResults);\n      })\n      .addCase(updatePage, (state, action) => {\n        const page = action.payload;\n        state.firstResult = calculateFirstResult(page, state.numberOfResults);\n      })\n      .addCase(previousPage, (state) => {\n        const page = determineCurrentPage(state);\n        const previousPage = Math.max(page - 1, minimumPage);\n        state.firstResult = calculateFirstResult(\n          previousPage,\n          state.numberOfResults\n        );\n      })\n      .addCase(nextPage, (state) => {\n        const page = determineCurrentPage(state);\n        const maxPage = determineMaxPage(state);\n        const nextPage = Math.min(page + 1, maxPage);\n\n        state.firstResult = calculateFirstResult(\n          nextPage,\n          state.numberOfResults\n        );\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        if (action.payload) {\n          state.numberOfResults = action.payload.pagination.numberOfResults;\n          state.firstResult = action.payload.pagination.firstResult;\n        }\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        state.firstResult = action.payload.firstResult ?? state.firstResult;\n        state.numberOfResults =\n          action.payload.numberOfResults ?? state.defaultNumberOfResults;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const {response} = action.payload;\n        state.totalCountFiltered = response.totalCountFiltered;\n      })\n      .addCase(fetchProductListing.fulfilled, (state, action) => {\n        const {response} = action.payload;\n        state.totalCountFiltered = response.pagination.totalCount;\n      })\n      .addCase(deselectAllFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(deselectAllCategoryFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectCategoryFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(selectCategoryFacetSearchResult, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectDateFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectNumericFacetValue, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(updateDateFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(updateNumericFacetValues, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(selectFacetSearchResult, (state) => {\n        handlePaginationReset(state);\n      })\n      .addCase(toggleSelectAutomaticFacetValue, (state) => {\n        handlePaginationReset(state);\n      });\n  }\n);\n\nfunction handlePaginationReset(state: PaginationState) {\n  state.firstResult = getPaginationInitialState().firstResult;\n}\n\nfunction determineCurrentPage(state: PaginationState) {\n  const {firstResult, numberOfResults} = state;\n  return calculatePage(firstResult, numberOfResults);\n}\n\nfunction determineMaxPage(state: PaginationState) {\n  const {totalCountFiltered, numberOfResults} = state;\n  return calculateMaxPage(totalCountFiltered, numberOfResults);\n}\n\nexport function calculateFirstResult(page: number, numberOfResults: number) {\n  return (page - 1) * numberOfResults;\n}\n\nexport function calculatePage(firstResult: number, numberOfResults: number) {\n  return Math.round(firstResult / numberOfResults) + 1;\n}\n\nexport function calculateMaxPage(\n  totalCountFiltered: number,\n  numberOfResults: number\n) {\n  const totalCount = Math.min(\n    totalCountFiltered,\n    maximumNumberOfResultsFromIndex\n  );\n  return Math.ceil(totalCount / numberOfResults);\n}\n", "import {PaginationSection} from '../../state/state-sections';\nimport {minimumPage} from './pagination-constants';\nimport {calculatePage, calculateMaxPage} from './pagination-slice';\n\ninterface Range {\n  start: number;\n  end: number;\n}\n\nfunction firstResultSelector(state: PaginationSection) {\n  return state.pagination.firstResult;\n}\n\nfunction numberOfResultsSelector(state: PaginationSection) {\n  return state.pagination.numberOfResults;\n}\n\nfunction totalCountFilteredSelector(state: PaginationSection) {\n  return state.pagination.totalCountFiltered;\n}\n\n/** Calculates the current page number.\n * @param state SearchPageState.\n * @returns the current page number.\n */\nexport const currentPageSelector = (state: PaginationSection) => {\n  const firstResult = firstResultSelector(state);\n  const numberOfResults = numberOfResultsSelector(state);\n  return calculatePage(firstResult, numberOfResults);\n};\n\n/** Calculates the maximum page number\n * @param state SearchPageState.\n * @returns the maximum page number.\n */\nexport const maxPageSelector = (state: PaginationSection) => {\n  const totalCountFiltered = totalCountFilteredSelector(state);\n  const numberOfResults = numberOfResultsSelector(state);\n  return calculateMaxPage(totalCountFiltered, numberOfResults);\n};\n\n/** Calculates the current pages relative to the current page.\n * @param state SearchPageState.\n * @param desiredNumberOfPages the number of pages to return.\n * @returns the current page numbers.\n */\nexport const currentPagesSelector = (\n  state: PaginationSection,\n  desiredNumberOfPages: number\n) => {\n  const page = currentPageSelector(state);\n  const maxPage = maxPageSelector(state);\n\n  let range = buildRange(page, desiredNumberOfPages);\n  range = shiftRightIfNeeded(range);\n  range = shiftLeftIfNeeded(range, maxPage);\n  return buildCurrentPages(range);\n};\n\nfunction buildRange(page: number, desiredNumberOfPages: number): Range {\n  const isEven = desiredNumberOfPages % 2 === 0;\n  const leftCapacity = Math.floor(desiredNumberOfPages / 2);\n  const rightCapacity = isEven ? leftCapacity - 1 : leftCapacity;\n\n  const start = page - leftCapacity;\n  const end = page + rightCapacity;\n\n  return {start, end};\n}\n\nfunction shiftRightIfNeeded(range: Range) {\n  const leftExcess = Math.max(minimumPage - range.start, 0);\n  const start = range.start + leftExcess;\n  const end = range.end + leftExcess;\n\n  return {start, end};\n}\n\nfunction shiftLeftIfNeeded(range: Range, maxPage: number) {\n  const rightExcess = Math.max(range.end - maxPage, 0);\n  const start = Math.max(range.start - rightExcess, minimumPage);\n  const end = range.end - rightExcess;\n\n  return {start, end};\n}\n\nfunction buildCurrentPages(range: Range) {\n  const currentPages: number[] = [];\n\n  for (let counter = range.start; counter <= range.end; ++counter) {\n    currentPages.push(counter);\n  }\n\n  return currentPages;\n}\n", "import {PaginationSection} from '../../state/state-sections';\nimport {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\nimport {currentPageSelector} from './pagination-selectors';\nimport {getPaginationInitialState} from './pagination-state';\n\nexport const logPagerResize = (): SearchAction =>\n  makeAnalyticsAction('analytics/pager/resize', (client, state) =>\n    client.makePagerResize({\n      currentResultsPerPage:\n        state.pagination?.numberOfResults ||\n        getPaginationInitialState().numberOfResults,\n    })\n  );\n\nexport const logPageNumber = (): SearchAction =>\n  makeAnalyticsAction('analytics/pager/number', (client, state) =>\n    client.makePagerNumber({\n      pagerNumber: currentPageSelector(state as PaginationSection),\n    })\n  );\n\nexport const logPageNext = (): SearchAction =>\n  makeAnalyticsAction('analytics/pager/next', (client, state) =>\n    client.makePagerNext({\n      pagerNumber: currentPageSelector(state as PaginationSection),\n    })\n  );\n\nexport const logPagePrevious = (): SearchAction =>\n  makeAnalyticsAction('analytics/pager/previous', (client, state) =>\n    client.makePagerPrevious({\n      pagerNumber: currentPageSelector(state as PaginationSection),\n    })\n  );\n", "import {NumberValue, Schema} from '@coveo/bueno';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {\n  nextPage,\n  previousPage,\n  registerPage,\n  updatePage,\n} from '../../../features/pagination/pagination-actions';\nimport {minimumPage} from '../../../features/pagination/pagination-constants';\nimport {\n  currentPageSelector,\n  currentPagesSelector,\n  maxPageSelector,\n} from '../../../features/pagination/pagination-selectors';\nimport {paginationReducer as pagination} from '../../../features/pagination/pagination-slice';\nimport {\n  ConfigurationSection,\n  PaginationSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  validateInitialState,\n  validateOptions,\n} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport interface PagerInitialState {\n  /**\n   * The initial page number.\n   * */\n  page?: number;\n}\n\nexport interface PagerOptions {\n  /**\n   * The number of pages to display in the pager.\n   *\n   * @defaultValue `5`\n   * */\n  numberOfPages?: number;\n}\n\nexport interface PagerProps {\n  /**\n   * The options for the `Pager` controller.\n   */\n  options?: PagerOptions;\n  /**\n   * The initial state that should be applied to the `Pager` controller.\n   */\n  initialState?: PagerInitialState;\n}\n\nconst optionsSchema = new Schema({\n  numberOfPages: new NumberValue({default: 5, min: 0}),\n});\n\nconst initialStateSchema = new Schema({\n  page: new NumberValue({min: 1}),\n});\n\n/**\n * The `Pager` controller allows to navigate through the different result pages.\n */\nexport interface Pager extends Controller {\n  /**\n   * Updates the results to those on the passed page.\n   *\n   * @param page - The page number.\n   */\n  selectPage(page: number): void;\n\n  /**\n   * Updates the results to those on the next page.\n   * */\n  nextPage(): void;\n\n  /**\n   * Updates the results to those on the previous page.\n   * */\n  previousPage(): void;\n\n  /**\n   * Returns `true` when the current page is equal to the passed page, and `false` otherwise.\n   *\n   * @param page - The page number to check.\n   * @returns Whether the passed page is selected.\n   */\n  isCurrentPage(page: number): boolean;\n\n  /**\n   * The state of the Pager controller.\n   * */\n  state: PagerState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `Pager` controller.\n */\nexport interface PagerState {\n  /**\n   * The active page number.\n   * */\n  currentPage: number;\n\n  /**\n   * The page range to display.\n   * */\n  currentPages: number[];\n\n  /**\n   * The maximum available page.\n   * */\n  maxPage: number;\n\n  /**\n   * Returns `true` when a previous page is available, and `false` otherwise.\n   * */\n  hasPreviousPage: boolean;\n\n  /**\n   * Returns `true` when a next page is available, and `false` otherwise.\n   * */\n  hasNextPage: boolean;\n}\n\nexport function buildCorePager(\n  engine: CoreEngine,\n  props: PagerProps = {}\n): Pager {\n  if (!loadPagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const options = validateOptions(\n    engine,\n    optionsSchema,\n    props.options,\n    'buildPager'\n  ) as Required<PagerOptions>;\n  const initialState = validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildPager'\n  );\n  const page = initialState.page;\n\n  if (page) {\n    dispatch(registerPage(page));\n  }\n\n  const getCurrentPage = () => {\n    return currentPageSelector(engine.state);\n  };\n\n  const getCurrentPages = () => {\n    const {numberOfPages} = options;\n    return currentPagesSelector(engine.state, numberOfPages);\n  };\n\n  const getMaxPage = () => {\n    return maxPageSelector(engine.state);\n  };\n\n  return {\n    ...controller,\n\n    get state() {\n      const currentPage = getCurrentPage();\n      const maxPage = getMaxPage();\n      const hasPreviousPage = currentPage > minimumPage && maxPage > 0;\n      const hasNextPage = currentPage < maxPage;\n\n      return {\n        currentPage,\n        currentPages: getCurrentPages(),\n        maxPage,\n        hasPreviousPage,\n        hasNextPage,\n      };\n    },\n\n    selectPage(page: number) {\n      dispatch(updatePage(page));\n    },\n\n    nextPage() {\n      dispatch(nextPage());\n    },\n\n    previousPage() {\n      dispatch(previousPage());\n    },\n\n    isCurrentPage(page: number) {\n      return page === this.state.currentPage;\n    },\n  };\n}\n\nfunction loadPagerReducers(\n  engine: CoreEngine\n): engine is CoreEngine<PaginationSection & ConfigurationSection> {\n  engine.addReducers({configuration, pagination});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  logPageNumber,\n  logPageNext,\n  logPagePrevious,\n} from '../../features/pagination/pagination-analytics-actions';\nimport {fetchPage} from '../../features/search/search-actions';\nimport {\n  buildCorePager,\n  PagerInitialState,\n  PagerOptions,\n  PagerProps,\n  Pager,\n  PagerState,\n} from '../core/pager/headless-core-pager';\n\nexport type {PagerInitialState, PagerOptions, PagerProps, Pager, PagerState};\n\n/**\n * Creates a `Pager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Pager` properties.\n * @returns A `Pager` controller instance.\n * */\nexport function buildPager(\n  engine: SearchEngine,\n  props: PagerProps = {}\n): Pager {\n  const {dispatch} = engine;\n  const pager = buildCorePager(engine, props);\n\n  return {\n    ...pager,\n\n    get state() {\n      return pager.state;\n    },\n\n    selectPage(page: number) {\n      pager.selectPage(page);\n      dispatch(fetchPage({legacy: logPageNumber()}));\n    },\n\n    nextPage() {\n      pager.nextPage();\n      dispatch(fetchPage({legacy: logPageNext()}));\n    },\n\n    previousPage() {\n      pager.previousPage();\n      dispatch(fetchPage({legacy: logPagePrevious()}));\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {Pager, PagerProps, buildPager} from './headless-pager';\n\nexport * from './headless-pager';\n\n/**\n * @internal\n */\nexport const definePager = (\n  props?: PagerProps\n): ControllerDefinitionWithoutProps<SearchEngine, Pager> => ({\n  build: (engine) => buildPager(engine, props),\n});\n", "import {CoreEngine} from '../../../app/engine';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {SearchSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {ErrorPayload} from '../../controller/error-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\n/**\n * The `QueryError` controller allows to retrieve information about the current error returned by the search API, if any.\n */\nexport interface QueryError extends Controller {\n  /**\n   * The state of the `QueryError` controller.\n   */\n  state: QueryErrorState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `QueryError` controller.\n */\nexport interface QueryErrorState {\n  /**\n   * `true` if there is an error for the last executed query and `false` otherwise.\n   */\n  hasError: boolean;\n\n  /**\n   * The current error for the last executed query, or `null` if none is present.\n   */\n  error: ErrorPayload | null;\n}\n\nexport function buildCoreQueryError(engine: CoreEngine): QueryError {\n  if (!loadQueryErrorReducers(engine)) {\n    throw loadReducerError;\n  }\n  const controller = buildController(engine);\n  const getState = () => engine.state;\n\n  return {\n    ...controller,\n    get state() {\n      return {\n        hasError: getState().search.error !== null,\n        error: getState().search.error,\n      };\n    },\n  };\n}\n\nfunction loadQueryErrorReducers(\n  engine: CoreEngine\n): engine is CoreEngine<SearchSection> {\n  engine.addReducers({search});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  buildCoreQueryError,\n  QueryError,\n  QueryErrorState,\n} from '../core/query-error/headless-core-query-error';\n\nexport type {QueryError, QueryErrorState};\n\n/**\n * Creates a `QueryError` controller instance.\n *\n * @param engine - The headless engine.\n */\nexport function buildQueryError(engine: SearchEngine): QueryError {\n  return buildCoreQueryError(engine);\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {QueryError, buildQueryError} from './headless-query-error';\n\nexport * from './headless-query-error';\n\n/**\n * @internal\n */\nexport const defineQueryError = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  QueryError\n> => ({\n  build: (engine) => buildQueryError(engine),\n});\n", "import {CoreEngine} from '../../../app/engine';\nimport {firstSearchExecutedSelector} from '../../../features/search/search-selectors';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {SearchSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport interface SearchStatus extends Controller {\n  /**\n   * The state of the `SearchStatus` controller.\n   */\n  state: SearchStatusState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `SearchStatus` controller.\n */\nexport interface SearchStatusState {\n  /**\n   * `true` if there is an error for the last executed query and `false` otherwise.\n   */\n  hasError: boolean;\n  /**\n   * Determines if a search is in progress.\n   */\n  isLoading: boolean;\n  /**\n   * Determines if there are results available for the last executed query.\n   */\n  hasResults: boolean;\n  /**\n   * Determines if a first search has been executed.\n   */\n  firstSearchExecuted: boolean;\n}\n\n/**\n * Creates a `SearchStatus` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `SearchStatus` controller instance.\n * */\nexport function buildCoreStatus(engine: CoreEngine): SearchStatus {\n  if (!loadSearchStateReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const getState = () => engine.state;\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        hasError: state.search.error !== null,\n        isLoading: state.search.isLoading,\n        hasResults: !!state.search.results.length,\n        firstSearchExecuted: firstSearchExecutedSelector(state),\n      };\n    },\n  };\n}\n\nfunction loadSearchStateReducers(\n  engine: CoreEngine\n): engine is CoreEngine<SearchSection> {\n  engine.addReducers({search});\n  return true;\n}\n", "import {CoreEngine} from '../../../app/engine';\nimport {paginationReducer as pagination} from '../../../features/pagination/pagination-slice';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {PaginationSection, SearchSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\nimport {\n  buildCoreStatus,\n  SearchStatusState,\n} from '../status/headless-core-status';\n\n/**\n * The `QuerySummary` headless controller offers a high-level interface for designing a common query summary UI controller.\n * */\nexport interface QuerySummary extends Controller {\n  /** The state relevant to the `CoreQuerySummary` controller.*/\n  state: QuerySummaryState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `QuerySummary` controller.\n * */\nexport interface QuerySummaryState extends SearchStatusState {\n  /**\n   * The duration, in milliseconds, that the last query took to execute.\n   */\n  durationInMilliseconds: number;\n\n  /**\n   * The duration, in seconds, that the last query took to execute.\n   */\n  durationInSeconds: number;\n\n  /**\n   * The 1-based index of the first search result returned for the current page.\n   */\n  firstResult: number;\n\n  /**\n   * Determines if a query execution time is available.\n   */\n  hasDuration: boolean;\n\n  /**\n   * Determines if non-empty query has been executed.\n   */\n  hasQuery: boolean;\n\n  /**\n   * The 1-based index of the last search result returned for the current page.\n   */\n  lastResult: number;\n\n  /**\n   * The query that was last executed (the content of the searchbox).\n   */\n  query: string;\n\n  /**\n   * The total count of results available.\n   */\n  total: number;\n}\n\n/**\n * Creates a `QuerySummary` controller instance.\n *\n * @param engine - The headless engine instance.\n * @returns A `QuerySummary` controller instance.\n */\nexport function buildCoreQuerySummary(engine: CoreEngine): QuerySummary {\n  if (!loadQuerySummaryReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const searchStatus = buildCoreStatus(engine);\n  const getState = () => engine.state;\n\n  const durationInSeconds = () => {\n    const inSeconds = getState().search.duration / 1000;\n    return Math.round((inSeconds + Number.EPSILON) * 100) / 100;\n  };\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        ...searchStatus.state,\n        durationInMilliseconds: getState().search.duration,\n        durationInSeconds: durationInSeconds(),\n        firstResult: getState().pagination.firstResult + 1,\n        hasDuration: getState().search.duration !== 0,\n        hasQuery: getState().search.queryExecuted !== '',\n        lastResult:\n          getState().pagination.firstResult + getState().search.results.length,\n        query: getState().search.queryExecuted,\n        total: getState().pagination.totalCountFiltered,\n      };\n    },\n  };\n}\n\nfunction loadQuerySummaryReducers(\n  engine: CoreEngine\n): engine is CoreEngine<SearchSection & PaginationSection> {\n  engine.addReducers({search, pagination});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  buildCoreQuerySummary,\n  QuerySummary,\n  QuerySummaryState,\n} from '../core/query-summary/headless-core-query-summary';\n\nexport type {QuerySummary, QuerySummaryState};\n/**\n * Creates a `QuerySummary` controller instance.\n *\n * @param engine - The headless engine instance.\n * @returns A `QuerySummary` controller instance.\n */\nexport function buildQuerySummary(engine: SearchEngine): QuerySummary {\n  return buildCoreQuerySummary(engine);\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {QuerySummary, buildQuerySummary} from './headless-query-summary';\n\nexport * from './headless-query-summary';\n\n/**\n * @internal\n */\nexport const defineQuerySummary = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  QuerySummary\n> => ({\n  build: (engine) => buildQuerySummary(engine),\n});\n", "import {ArrayValue, Schema, StringValue} from '@coveo/bueno';\nimport {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {Result} from '../../../api/search/search/result';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {registerFieldsToInclude} from '../../../features/fields/fields-actions';\nimport {fieldsReducer as fields} from '../../../features/fields/fields-slice';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  FieldsSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {validateOptions} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\nimport {\n  buildCoreStatus,\n  SearchStatusState,\n} from '../status/headless-core-status';\n\nconst optionsSchema = new Schema<ResultListOptions>({\n  fieldsToInclude: new ArrayValue({\n    required: false,\n    each: new StringValue<string>({\n      required: true,\n      emptyAllowed: false,\n    }),\n  }),\n});\n\nexport interface ResultListOptions {\n  /**\n   * A list of indexed fields to include in the objects returned by the result list.\n   * These results are included in addition to the default fields.\n   * If this is left empty only the default fields are included.\n   */\n  fieldsToInclude?: string[];\n}\n\nexport interface ResultListProps {\n  /**\n   * The options for the `ResultList` controller.\n   * */\n  options?: ResultListOptions;\n  /**\n   * The action creator to build the `fetchMoreResults` action.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  fetchMoreResultsActionCreator?: () => AsyncThunkAction<unknown, void, any>;\n}\n\n/**\n * The `ResultList` headless controller offers a high-level interface for designing a common result list UI controller.\n */\nexport interface ResultList extends Controller {\n  /**\n   * Using the same parameters as the last successful query, fetch another batch of results, if available.\n   * Particularly useful for infinite scrolling, for example.\n   *\n   * This method is not compatible with the `Pager` controller.\n   */\n  fetchMoreResults(): void;\n\n  /**\n   * The state of the `ResultList` controller.\n   */\n  state: ResultListState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `ResultList` controller.\n * */\nexport interface ResultListState extends SearchStatusState {\n  /**\n   * The results of the last executed search.\n   * */\n  results: Result[];\n  /**\n   * The unique identifier of the response where the results were fetched, this value does not change when loading more results.\n   */\n  searchResponseId: string;\n  /**\n   * Whether more results are available, using the same parameters as the last successful query.\n   *\n   * This property is not compatible with the `Pager` controller.\n   */\n  moreResultsAvailable: boolean;\n}\n\n/**\n * Creates a `ResultList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `ResultList` properties.\n * @returns A `ResultList` controller instance.\n */\nexport function buildCoreResultList(\n  engine: CoreEngine,\n  props?: ResultListProps\n): ResultList {\n  if (!loadResultListReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const status = buildCoreStatus(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const options = validateOptions(\n    engine,\n    optionsSchema,\n    props?.options,\n    'buildCoreResultList'\n  );\n\n  if (options.fieldsToInclude) {\n    dispatch(registerFieldsToInclude(options.fieldsToInclude));\n  }\n\n  const moreResultsAvailable = () =>\n    engine.state.search.results.length <\n    engine.state.search.response.totalCountFiltered;\n\n  let lastFetchCompleted = 0;\n  let consecutiveFetches = 0;\n  const maxConsecutiveFetches = 5;\n  const minDelayBetweenFetches = 200;\n  let errorLogged = false;\n\n  const triggerFetchMoreResult = () => {\n    if (engine.state.search.isLoading) {\n      return;\n    }\n\n    if (!moreResultsAvailable()) {\n      engine.logger.info(\n        'No more results are available for the result list to fetch.'\n      );\n      return;\n    }\n\n    const delayBetweenFetches = Date.now() - lastFetchCompleted;\n    if (delayBetweenFetches < minDelayBetweenFetches) {\n      consecutiveFetches++;\n      if (consecutiveFetches >= maxConsecutiveFetches) {\n        lastFetchCompleted = Date.now();\n        !errorLogged &&\n          engine.logger.error(\n            `The result list method \"fetchMoreResults\" execution prevented because it has been triggered consecutively ${maxConsecutiveFetches} times, with little delay. Please verify the conditions under which the function is called.`\n          );\n        errorLogged = true;\n        return;\n      }\n    } else {\n      consecutiveFetches = 0;\n    }\n\n    errorLogged = false;\n    if (props?.fetchMoreResultsActionCreator) {\n      dispatch(props?.fetchMoreResultsActionCreator()).then(\n        () => (lastFetchCompleted = Date.now())\n      );\n    }\n  };\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        ...status.state,\n        results: state.search.results,\n        moreResultsAvailable: moreResultsAvailable(),\n        searchResponseId: state.search.searchResponseId,\n      };\n    },\n\n    fetchMoreResults: triggerFetchMoreResult,\n  };\n}\n\nfunction loadResultListReducers(\n  engine: CoreEngine\n): engine is CoreEngine<SearchSection & ConfigurationSection & FieldsSection> {\n  engine.addReducers({search, configuration, fields});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {fetchMoreResults} from '../../features/search/search-actions';\nimport {\n  buildCoreResultList,\n  ResultList,\n  ResultListOptions,\n  ResultListProps,\n  ResultListState,\n} from '../core/result-list/headless-core-result-list';\n\nexport type {ResultListOptions, ResultListProps, ResultListState, ResultList};\n\n/**\n * Creates a `ResultList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `ResultList` properties.\n * @returns A `ResultList` controller instance.\n */\nexport function buildResultList(\n  engine: SearchEngine,\n  props?: ResultListProps\n): ResultList {\n  return buildCoreResultList(engine, {\n    ...props,\n    fetchMoreResultsActionCreator: fetchMoreResults,\n  });\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  ResultList,\n  ResultListProps,\n  buildResultList,\n} from './headless-result-list';\n\nexport * from './headless-result-list';\n\n/**\n * @internal\n */\nexport const defineResultList = (\n  props?: ResultListProps\n): ControllerDefinitionWithoutProps<SearchEngine, ResultList> => ({\n  build: (engine) => buildResultList(engine, props),\n});\n", "import {NumberValue, Schema} from '@coveo/bueno';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {\n  registerNumberOfResults,\n  updateNumberOfResults,\n} from '../../../features/pagination/pagination-actions';\nimport {paginationReducer as pagination} from '../../../features/pagination/pagination-slice';\nimport {\n  ConfigurationSection,\n  PaginationSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {validateInitialState} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nconst initialStateSchema = new Schema({\n  numberOfResults: new NumberValue({min: 0}),\n});\n\nexport interface ResultsPerPageProps {\n  /**\n   * The initial state that should be applied to this `ResultsPerPage` controller.\n   */\n  initialState?: ResultsPerPageInitialState;\n}\n\nexport interface ResultsPerPageInitialState {\n  /**\n   * The initial number of results to register in state.\n   */\n  numberOfResults?: number;\n}\n\n/**\n * The `ResultsPerPage` controller allows the end user to choose how many results to display per page.\n */\nexport interface ResultsPerPage extends Controller {\n  /**\n   * Updates the number of results to request per page.\n   *\n   * @param num - The number of results.\n   */\n  set(num: number): void;\n\n  /** Checks whether the number of results per page is equal to the specified number.\n   *\n   * @param num - The number of results.\n   * @returns `true` if the number of results is equal to the passed value, and `false` otherwise.\n   */\n  isSetTo(num: number): boolean;\n\n  /**\n   * The state of the `ResultsPerPage` controller.\n   */\n  state: ResultsPerPageState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `ResultsPerPage` controller.\n * */\nexport interface ResultsPerPageState {\n  /**\n   * The number of results per page.\n   * */\n  numberOfResults: number;\n}\n\n/**\n * Creates a `ResultsPerPage` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `ResultsPerPage` properties.\n * @returns A `ResultsPerPage` controller instance.\n */\nexport function buildCoreResultsPerPage(\n  engine: CoreEngine,\n  props: ResultsPerPageProps = {}\n): ResultsPerPage {\n  if (!loadResultsPerPageReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const validated = validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildResultsPerPage'\n  );\n\n  const num = validated.numberOfResults;\n\n  if (num !== undefined) {\n    dispatch(registerNumberOfResults(num));\n  }\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        numberOfResults: getState().pagination.numberOfResults,\n      };\n    },\n\n    set(num: number) {\n      dispatch(updateNumberOfResults(num));\n    },\n\n    isSetTo(num: number) {\n      return num === this.state.numberOfResults;\n    },\n  };\n}\n\nfunction loadResultsPerPageReducers(\n  engine: CoreEngine\n): engine is CoreEngine<PaginationSection & ConfigurationSection> {\n  engine.addReducers({pagination, configuration});\n  return true;\n}\n", "import {configuration} from '../../app/common-reducers';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logPagerResize} from '../../features/pagination/pagination-analytics-actions';\nimport {paginationReducer as pagination} from '../../features/pagination/pagination-slice';\nimport {fetchPage} from '../../features/search/search-actions';\nimport {\n  ConfigurationSection,\n  PaginationSection,\n} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {\n  buildCoreResultsPerPage,\n  ResultsPerPage,\n  ResultsPerPageInitialState,\n  ResultsPerPageProps,\n  ResultsPerPageState,\n} from '../core/results-per-page/headless-core-results-per-page';\n\nexport type {\n  ResultsPerPage,\n  ResultsPerPageProps,\n  ResultsPerPageInitialState,\n  ResultsPerPageState,\n};\n\n/**\n * Creates a `ResultsPerPage` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `ResultsPerPage` properties.\n * @returns A `ResultsPerPage` controller instance.\n */\nexport function buildResultsPerPage(\n  engine: SearchEngine,\n  props: ResultsPerPageProps = {}\n): ResultsPerPage {\n  if (!loadResultsPerPageReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const coreController = buildCoreResultsPerPage(engine, props);\n  const {dispatch} = engine;\n\n  return {\n    ...coreController,\n\n    get state() {\n      return {\n        ...coreController.state,\n      };\n    },\n\n    set(num: number) {\n      coreController.set(num);\n      dispatch(fetchPage({legacy: logPagerResize()}));\n    },\n  };\n}\n\nfunction loadResultsPerPageReducers(\n  engine: SearchEngine\n): engine is SearchEngine<PaginationSection & ConfigurationSection> {\n  engine.addReducers({pagination, configuration});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  ResultsPerPage,\n  ResultsPerPageProps,\n  buildResultsPerPage,\n} from './headless-results-per-page';\n\nexport * from './headless-results-per-page';\n\n/**\n * @internal\n */\nexport const defineResultsPerPage = (\n  props?: ResultsPerPageProps\n): ControllerDefinitionWithoutProps<SearchEngine, ResultsPerPage> => ({\n  build: (engine) => buildResultsPerPage(engine, props),\n});\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  getVisitorID,\n  historyStore,\n} from '../../api/analytics/coveo-analytics-utils';\nimport {QuerySuggestRequest} from '../../api/search/query-suggest/query-suggest-request';\nimport {QuerySuggestSuccessResponse} from '../../api/search/query-suggest/query-suggest-response';\nimport {\n  isErrorResponse,\n  AsyncThunkSearchOptions,\n} from '../../api/search/search-api-client';\nimport {\n  ConfigurationSection,\n  ContextSection,\n  PipelineSection,\n  QuerySetSection,\n  QuerySuggestionSection,\n  SearchHubSection,\n} from '../../state/state-sections';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  requiredEmptyAllowedString,\n} from '../../utils/validate-payload';\nimport {fromAnalyticsStateToAnalyticsParams} from '../configuration/analytics-params';\n\nexport type StateNeededByQuerySuggest = ConfigurationSection &\n  QuerySuggestionSection &\n  QuerySetSection &\n  Partial<ContextSection & PipelineSection & SearchHubSection>;\n\nconst idDefinition = {\n  id: requiredNonEmptyString,\n};\n\nexport interface QuerySuggestionID {\n  id: string;\n}\n\nexport interface RegisterQuerySuggestActionCreatorPayload {\n  /**\n   * A unique identifier for the new query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  id: string;\n\n  /**\n   * The number of query suggestions to request from Coveo ML (e.g., `3`).\n   *\n   * @defaultValue `5`.\n   */\n  count?: number;\n}\n\nexport const registerQuerySuggest = createAction(\n  'querySuggest/register',\n  (payload: RegisterQuerySuggestActionCreatorPayload) =>\n    validatePayload(payload, {\n      ...idDefinition,\n      count: new NumberValue({min: 0}),\n    })\n);\n\nexport const unregisterQuerySuggest = createAction(\n  'querySuggest/unregister',\n  (payload: {id: string}) => validatePayload(payload, idDefinition)\n);\n\nexport interface SelectQuerySuggestionActionCreatorPayload {\n  /**\n   * The unique identifier of the target query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  id: string;\n\n  /**\n   * The selected query suggestion (e.g., `coveo`).\n   */\n  expression: string;\n}\n\nexport const selectQuerySuggestion = createAction(\n  'querySuggest/selectSuggestion',\n  (payload: SelectQuerySuggestionActionCreatorPayload) =>\n    validatePayload(payload, {\n      ...idDefinition,\n      expression: requiredEmptyAllowedString,\n    })\n);\n\nexport interface ClearQuerySuggestActionCreatorPayload {\n  /**\n   * The unique identifier of the target query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  id: string;\n}\n\nexport const clearQuerySuggest = createAction(\n  'querySuggest/clear',\n  (payload: ClearQuerySuggestActionCreatorPayload) =>\n    validatePayload(payload, idDefinition)\n);\n\nexport interface FetchQuerySuggestionsActionCreatorPayload {\n  /**\n   * The unique identifier of the target query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  id: string;\n}\n\nexport interface FetchQuerySuggestionsThunkReturn\n  extends FetchQuerySuggestionsActionCreatorPayload,\n    QuerySuggestSuccessResponse {\n  /**\n   * The query for which query suggestions were retrieved.\n   */\n  q: string | undefined;\n}\n\nexport const fetchQuerySuggestions = createAsyncThunk<\n  FetchQuerySuggestionsThunkReturn,\n  FetchQuerySuggestionsActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededByQuerySuggest>\n>(\n  'querySuggest/fetch',\n\n  async (\n    payload: {id: string},\n    {getState, rejectWithValue, extra: {apiClient, validatePayload}}\n  ) => {\n    validatePayload(payload, idDefinition);\n    const id = payload.id;\n    const request = await buildQuerySuggestRequest(id, getState());\n    const response = await apiClient.querySuggest(request);\n\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    return {\n      id,\n      q: request.q,\n      ...response.success,\n    };\n  }\n);\n\nexport const buildQuerySuggestRequest = async (\n  id: string,\n  s: StateNeededByQuerySuggest\n): Promise<QuerySuggestRequest> => {\n  return {\n    accessToken: s.configuration.accessToken,\n    organizationId: s.configuration.organizationId,\n    url: s.configuration.search.apiBaseUrl,\n    count: s.querySuggest[id]!.count,\n    q: s.querySet[id],\n    locale: s.configuration.search.locale,\n    timezone: s.configuration.search.timezone,\n    actionsHistory: s.configuration.analytics.enabled\n      ? historyStore.getHistory()\n      : [],\n    ...(s.context && {context: s.context.contextValues}),\n    ...(s.pipeline && {pipeline: s.pipeline}),\n    ...(s.searchHub && {searchHub: s.searchHub}),\n    ...(s.configuration.analytics.enabled && {\n      visitorId: await getVisitorID(s.configuration.analytics),\n      ...(s.configuration.analytics.enabled &&\n        (await fromAnalyticsStateToAnalyticsParams(s.configuration.analytics))),\n    }),\n    ...(s.configuration.search.authenticationProviders.length && {\n      authentication: s.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\n\nexport const logSearchboxSubmit = (): SearchAction =>\n  makeAnalyticsAction('analytics/searchbox/submit', (client) =>\n    client.makeSearchboxSubmit()\n  );\n", "import {createAction} from '@reduxjs/toolkit';\nimport {\n  validatePayload,\n  requiredNonEmptyString,\n  requiredEmptyAllowedString,\n} from '../../utils/validate-payload';\n\nconst querySetDefinition = {\n  id: requiredNonEmptyString,\n  query: requiredEmptyAllowedString,\n};\n\nexport interface RegisterQuerySetQueryActionCreatorPayload {\n  /**\n   * The unique identifier of the target query.\n   */\n  id: string;\n\n  /**\n   * The initial basic query expression.\n   */\n  query: string;\n}\n\nexport const registerQuerySetQuery = createAction(\n  'querySet/register',\n  (payload: RegisterQuerySetQueryActionCreatorPayload) =>\n    validatePayload(payload, querySetDefinition)\n);\n\nexport interface UpdateQuerySetQueryActionCreatorPayload {\n  /**\n   * The unique identifier of the target query.\n   */\n  id: string;\n\n  /**\n   * The new basic query expression.\n   */\n  query: string;\n}\n\nexport const updateQuerySetQuery = createAction(\n  'querySet/update',\n  (payload: UpdateQuerySetQueryActionCreatorPayload) =>\n    validatePayload(payload, querySetDefinition)\n);\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {change} from '../history/history-actions';\nimport {selectQuerySuggestion} from '../query-suggest/query-suggest-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {executeSearch} from '../search/search-actions';\nimport {registerQuerySetQuery, updateQuerySetQuery} from './query-set-actions';\nimport {getQuerySetInitialState, QuerySetState} from './query-set-state';\n\nexport const querySetReducer = createReducer(\n  getQuerySetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerQuerySetQuery, (state, action) => {\n        const {id, query} = action.payload;\n\n        if (id in state) {\n          return;\n        }\n\n        state[id] = query;\n      })\n      .addCase(updateQuerySetQuery, (state, action) => {\n        const {id, query} = action.payload;\n        updateQuery(state, id, query);\n      })\n      .addCase(selectQuerySuggestion, (state, action) => {\n        const {id, expression} = action.payload;\n        updateQuery(state, id, expression);\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const {queryExecuted} = action.payload;\n        updateAllQuerySetQuery(state, queryExecuted);\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        if (!isNullOrUndefined(action.payload.q)) {\n          updateAllQuerySetQuery(state, action.payload.q);\n        }\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        if (!action.payload) {\n          return;\n        }\n\n        for (const [id, query] of Object.entries(action.payload.querySet)) {\n          updateQuery(state, id, query);\n        }\n      });\n  }\n);\n\nfunction updateAllQuerySetQuery(state: QuerySetState, query: string) {\n  Object.keys(state).forEach((id) => (state[id] = query));\n}\n\nconst updateQuery = (state: QuerySetState, id: string, query: string) => {\n  if (id in state) {\n    state[id] = query;\n  }\n};\n", "import type {OmniboxSuggestionsMetadata} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {SearchAppState} from '../../state/search-app-state';\nimport {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\n\nexport interface LogQuerySuggestionClickActionCreatorPayload {\n  /**\n   * The search box id.\n   */\n  id: string;\n\n  /**\n   * The selected query suggestion.\n   */\n  suggestion: string;\n}\n\n//TODO: KIT-2859\nexport const logQuerySuggestionClick = (\n  payload: LogQuerySuggestionClickActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/querySuggest', (client, state) => {\n    const metadata = buildOmniboxSuggestionMetadata(state, payload);\n    return client.makeOmniboxAnalytics(metadata);\n  });\n\nexport type OmniboxSuggestionMetadata = OmniboxSuggestionsMetadata;\n\nexport function buildOmniboxSuggestionMetadata(\n  state: Partial<SearchAppState>,\n  payload: LogQuerySuggestionClickActionCreatorPayload\n): OmniboxSuggestionMetadata {\n  const {id, suggestion} = payload;\n  const querySuggest = state.querySuggest && state.querySuggest[id];\n\n  if (!querySuggest) {\n    throw new Error(\n      `Unable to determine the query suggest analytics metadata to send because no query suggest with id \"${id}\" was found. Please check the sent #id.`\n    );\n  }\n\n  const suggestions = querySuggest.completions.map(\n    (completion) => completion.expression\n  );\n\n  const lastIndex = querySuggest.partialQueries.length - 1;\n  const partialQuery = querySuggest.partialQueries[lastIndex] || '';\n  const querySuggestResponseId = querySuggest.responseId;\n\n  return {\n    suggestionRanking: suggestions.indexOf(suggestion),\n    partialQuery,\n    partialQueries: querySuggest.partialQueries,\n    suggestions,\n    querySuggestResponseId,\n  };\n}\n", "import {QuerySuggestCompletion} from '../../api/search/query-suggest/query-suggest-response';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\n\nexport interface QuerySuggestState {\n  /**\n   * The unique identifier of the query suggest entity (e.g., `b953ab2e-022b-4de4-903f-68b2c0682942`).\n   */\n  id: string;\n  /**\n   * The current list of query suggestions.\n   */\n  completions: QuerySuggestCompletion[];\n  /**\n   * The query suggest response id.\n   */\n  responseId: string;\n  /**\n   * A history of the queries for which query suggestions have been received\n   */\n  partialQueries: string[];\n  /**\n   * The number of query suggestions requested from Coveo ML (e.g., `3`).\n   */\n  count: number;\n  /**\n   * The unique identifier of the current query suggestion request.\n   */\n  currentRequestId: string;\n  /**\n   * The error returned by the Coveo platform while executing the query suggestion request, if any. `null` otherwise.\n   */\n  error: SearchAPIErrorWithStatusCode | null;\n  /**\n   * `true` if the query suggest request is currently being executed against the Coveo platform, `false` otherwise.\n   */\n  isLoading: boolean;\n}\n\nexport type QuerySuggestSet = Record<string, QuerySuggestState | undefined>;\n\nexport const getQuerySuggestSetInitialState: () => QuerySuggestSet = () => ({});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  clearQuerySuggest,\n  fetchQuerySuggestions,\n  registerQuerySuggest,\n  unregisterQuerySuggest,\n} from './query-suggest-actions';\nimport {\n  getQuerySuggestSetInitialState,\n  QuerySuggestState,\n} from './query-suggest-state';\n\nexport const querySuggestReducer = createReducer(\n  getQuerySuggestSetInitialState(),\n  (builder) =>\n    builder\n      .addCase(registerQuerySuggest, (state, action) => {\n        const id = action.payload.id;\n\n        if (id in state) {\n          return;\n        }\n\n        state[id] = buildQuerySuggest(action.payload);\n      })\n      .addCase(unregisterQuerySuggest, (state, action) => {\n        delete state[action.payload.id];\n      })\n      .addCase(fetchQuerySuggestions.pending, (state, action) => {\n        const querySuggest = state[action.meta.arg.id];\n\n        if (!querySuggest) {\n          return;\n        }\n\n        querySuggest.currentRequestId = action.meta.requestId;\n        querySuggest.isLoading = true;\n      })\n      .addCase(fetchQuerySuggestions.fulfilled, (state, action) => {\n        const querySuggest = state[action.meta.arg.id];\n\n        if (\n          !querySuggest ||\n          action.meta.requestId !== querySuggest.currentRequestId\n        ) {\n          return;\n        }\n\n        const {q} = action.payload;\n        if (q) {\n          querySuggest.partialQueries.push(\n            q.replace(/;/, encodeURIComponent(';'))\n          );\n        }\n        querySuggest.responseId = action.payload.responseId;\n        querySuggest.completions = action.payload.completions;\n        querySuggest.isLoading = false;\n        querySuggest.error = null;\n      })\n      .addCase(fetchQuerySuggestions.rejected, (state, action) => {\n        const querySuggest = state[action.meta.arg.id];\n\n        if (!querySuggest) {\n          return;\n        }\n\n        querySuggest.error = action.payload || null;\n        querySuggest.isLoading = false;\n      })\n      .addCase(clearQuerySuggest, (state, action) => {\n        const querySuggest = state[action.payload.id];\n\n        if (!querySuggest) {\n          return;\n        }\n\n        querySuggest.responseId = '';\n        querySuggest.completions = [];\n        querySuggest.partialQueries = [];\n      })\n);\n\nfunction buildQuerySuggest(\n  config: Partial<QuerySuggestState>\n): QuerySuggestState {\n  return {\n    id: '',\n    completions: [],\n    responseId: '',\n    count: 5,\n    currentRequestId: '',\n    error: null,\n    partialQueries: [],\n    isLoading: false,\n    ...config,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {applyDidYouMeanCorrection} from '../did-you-mean/did-you-mean-actions';\nimport {change} from '../history/history-actions';\nimport {selectQuerySuggestion} from '../query-suggest/query-suggest-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {updateQuery} from './query-actions';\nimport {getQueryInitialState} from './query-state';\n\nexport const queryReducer = createReducer(getQueryInitialState(), (builder) =>\n  builder\n    .addCase(updateQuery, (state, action) => ({...state, ...action.payload}))\n    .addCase(applyDidYouMeanCorrection, (state, action) => {\n      state.q = action.payload;\n    })\n    .addCase(selectQuerySuggestion, (state, action) => {\n      state.q = action.payload.expression;\n    })\n    .addCase(\n      change.fulfilled,\n      (state, action) => action.payload?.query ?? state\n    )\n    .addCase(restoreSearchParameters, (state, action) => {\n      state.q = action.payload.q ?? state.q;\n      state.enableQuerySyntax =\n        action.payload.enableQuerySyntax ?? state.enableQuerySyntax;\n    })\n);\n", "import {isNullOrUndefined} from '@coveo/bueno';\nimport {isEmptyString} from './utils';\n\nexport interface HighlightKeyword {\n  /**\n   * The 0 based offset inside the string where the highlight should start.\n   */\n  offset: number;\n  /**\n   * The length of the offset.\n   */\n  length: number;\n}\n\nexport interface HighlightParams {\n  /**\n   * The string to highlight items in.\n   */\n  content: string;\n  /**\n   * The highlighted positions to highlight in the string.\n   */\n  highlights: HighlightKeyword[];\n  /**\n   * The opening delimiter used when starting to highlight.\n   */\n  openingDelimiter: string;\n  /**\n   * The closing delimiter used to close highlighted section.\n   */\n  closingDelimiter: string;\n}\n\nexport interface Delimiters {\n  /**\n   * Opening delimiter\n   */\n  open: string;\n\n  /**\n   * Closing delimiter\n   */\n  close: string;\n}\n\nexport interface SuggestionHighlightingOptions {\n  /**\n   * Delimiters for substrings that do not match the input\n   */\n  notMatchDelimiters?: Delimiters;\n\n  /**\n   * Delimiters for substrings that are exact match of the input\n   */\n  exactMatchDelimiters?: Delimiters;\n\n  /**\n   * Delimiters for substrings that are correction of the input\n   */\n  correctionDelimiters?: Delimiters;\n}\n\n/**\n * Highlight the passed string using specified highlights.\n */\nexport function highlightString(params: HighlightParams): string {\n  if (\n    isEmptyString(params.openingDelimiter) ||\n    isEmptyString(params.closingDelimiter)\n  ) {\n    throw Error('delimiters should be a non-empty string');\n  }\n\n  if (isNullOrUndefined(params.content) || isEmptyString(params.content)) {\n    return params.content;\n  }\n  if (params.highlights.length === 0) {\n    return escape(params.content);\n  }\n\n  const maxIndex = params.content.length;\n  let highlighted = '';\n  let last = 0;\n  for (let i = 0; i < params.highlights.length; i++) {\n    const highlight = params.highlights[i];\n    const start: number = highlight.offset;\n    const end: number = start + highlight.length;\n\n    if (end > maxIndex) {\n      break;\n    }\n    highlighted += escape(params.content.slice(last, start));\n    highlighted += params.openingDelimiter;\n    highlighted += escape(params.content.slice(start, end));\n    highlighted += params.closingDelimiter;\n\n    last = end;\n  }\n  if (last !== maxIndex) {\n    highlighted += escape(params.content.slice(last));\n  }\n  return highlighted;\n}\n\n/**\n * Highlight a suggestion with the given delimiters.\n * @param suggestion The suggestion to highlight\n * @param options The object contaning the delimiters used\n */\nexport function getHighlightedSuggestion(\n  suggestion: string,\n  options: SuggestionHighlightingOptions\n) {\n  suggestion = escape(suggestion);\n  return suggestion.replace(\n    /\\[(.*?)\\]|\\{(.*?)\\}|\\((.*?)\\)/g,\n    (part, notMatched, matched, corrected) => {\n      if (notMatched) {\n        return suggestionWithDelimiters(notMatched, options.notMatchDelimiters);\n      }\n      if (matched) {\n        return suggestionWithDelimiters(matched, options.exactMatchDelimiters);\n      }\n      if (corrected) {\n        return suggestionWithDelimiters(\n          corrected,\n          options.correctionDelimiters\n        );\n      }\n\n      return part;\n    }\n  );\n}\n\nfunction suggestionWithDelimiters(\n  suggestion: string,\n  delimiters: Delimiters | undefined\n) {\n  if (delimiters) {\n    return delimiters.open + suggestion + delimiters.close;\n  }\n  return suggestion;\n}\n\n/**\n * Escapes a string. For more information, refer to {@link https://underscorejs.org/#escape}\n *\n * @param str The string to escape\n */\n\nexport function escape(str: string) {\n  const mapOfCharToEscape: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;',\n  };\n\n  const source = '(?:' + Object.keys(mapOfCharToEscape).join('|') + ')';\n  const testRegexp = RegExp(source);\n  const replaceRegexp = RegExp(source, 'g');\n\n  return testRegexp.test(str)\n    ? str.replace(replaceRegexp, (substring) => mapOfCharToEscape[substring])\n    : str;\n}\n", "import {\n  BooleanValue,\n  NumberValue,\n  Schema,\n  StringValue,\n  RecordValue,\n} from '@coveo/bueno';\nimport {SuggestionHighlightingOptions} from '../../../utils/highlight';\nimport {requiredNonEmptyString} from '../../../utils/validate-payload';\n\nexport interface SearchBoxOptions {\n  /**\n   * A unique identifier for the controller.\n   * By default, a unique random identifier is generated.\n   */\n  id?: string;\n\n  /**\n   * Whether to interpret advanced [Coveo Cloud query syntax](https://docs.coveo.com/en/1814/) in the query.\n   *\n   * @defaultValue `false`\n   */\n  enableQuerySyntax?: boolean;\n\n  /**\n   * Specifies delimiters to highlight parts of a query suggestion that e.g match, do not match the query.\n   */\n  highlightOptions?: SuggestionHighlightingOptions;\n\n  /**\n   * The number of query suggestions to request from Coveo ML (e.g., `3`).\n   *\n   * Using the value `0` disables the query suggest feature.\n   *\n   * @defaultValue `5`\n   */\n  numberOfSuggestions?: number;\n\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the search box.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters?: boolean;\n}\n\ntype DefaultSearchBoxOptions = Pick<\n  SearchBoxOptions,\n  'enableQuerySyntax' | 'numberOfSuggestions' | 'clearFilters'\n>;\n\nexport const defaultSearchBoxOptions: Required<DefaultSearchBoxOptions> = {\n  enableQuerySyntax: false,\n  numberOfSuggestions: 5,\n  clearFilters: true,\n};\n\nconst openCloseDelimitersDefinition = {\n  open: new StringValue(),\n  close: new StringValue(),\n};\n\nexport const searchBoxOptionDefinitions = {\n  id: requiredNonEmptyString,\n  numberOfSuggestions: new NumberValue({min: 0}),\n  enableQuerySyntax: new BooleanValue(),\n  highlightOptions: new RecordValue({\n    values: {\n      notMatchDelimiters: new RecordValue({\n        values: openCloseDelimitersDefinition,\n      }),\n\n      exactMatchDelimiters: new RecordValue({\n        values: openCloseDelimitersDefinition,\n      }),\n\n      correctionDelimiters: new RecordValue({\n        values: openCloseDelimitersDefinition,\n      }),\n    },\n  }),\n  clearFilters: new BooleanValue(),\n};\n\nexport const searchBoxOptionsSchema = new Schema<Required<SearchBoxOptions>>(\n  searchBoxOptionDefinitions\n);\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../..';\nimport {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {configuration} from '../../../app/common-reducers';\nimport {\n  InsightAction,\n  SearchAction,\n} from '../../../features/analytics/analytics-utils';\nimport {SearchPageEvents} from '../../../features/analytics/search-action-cause';\nimport {\n  registerQuerySetQuery,\n  updateQuerySetQuery,\n} from '../../../features/query-set/query-set-actions';\nimport {querySetReducer as querySet} from '../../../features/query-set/query-set-slice';\nimport {\n  clearQuerySuggest,\n  FetchQuerySuggestionsActionCreatorPayload,\n  registerQuerySuggest,\n  selectQuerySuggestion,\n} from '../../../features/query-suggest/query-suggest-actions';\nimport {logQuerySuggestionClick} from '../../../features/query-suggest/query-suggest-analytics-actions';\nimport {querySuggestReducer as querySuggest} from '../../../features/query-suggest/query-suggest-slice';\nimport {QuerySuggestState} from '../../../features/query-suggest/query-suggest-state';\nimport {logSearchboxSubmit} from '../../../features/query/query-analytics-actions';\nimport {queryReducer as query} from '../../../features/query/query-slice';\nimport {\n  TransitiveSearchAction,\n  prepareForSearchWithQuery,\n} from '../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  ConfigurationSection,\n  QuerySection,\n  QuerySetSection,\n  QuerySuggestionSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  SuggestionHighlightingOptions,\n  Delimiters,\n  getHighlightedSuggestion,\n} from '../../../utils/highlight';\nimport {randomID} from '../../../utils/utils';\nimport {validateOptions} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\nimport {\n  defaultSearchBoxOptions,\n  SearchBoxOptions,\n  searchBoxOptionsSchema,\n} from './headless-core-search-box-options';\n\nexport type {SearchBoxOptions, SuggestionHighlightingOptions, Delimiters};\n\nexport type SearchBoxProps = SearchBoxPropsBase &\n  (NextSearchBoxProps | LegacySearchBoxProps);\n\ninterface NextSearchBoxProps {\n  /**\n   * The action creator for the `executeSearch` thunk action.\n   */\n  executeSearchActionCreator: (\n    arg: TransitiveSearchAction\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, TransitiveSearchAction, any>;\n\n  isNextAnalyticsReady: true;\n}\n\ninterface LegacySearchBoxProps {\n  /**\n   * The action creator for the `executeSearch` thunk action.\n   */\n  executeSearchActionCreator: (\n    arg: SearchAction\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, SearchAction, any>;\n\n  isNextAnalyticsReady: false;\n}\n\ninterface SearchBoxPropsBase {\n  /**\n   * The `SearchBox` controller options.\n   */\n  options?: SearchBoxOptions;\n\n  /**\n   * The action creator for the `executeSearch` thunk action.\n   */\n  executeSearchActionCreator:\n    | ((\n        arg: TransitiveSearchAction\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) => AsyncThunkAction<any, TransitiveSearchAction, any>)\n    | ((\n        arg: SearchAction\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) => AsyncThunkAction<any, SearchAction, any>);\n\n  /**\n   * The action creator for the `fetchQuerySuggestions` thunk action.\n   */\n  fetchQuerySuggestionsActionCreator: (\n    arg: FetchQuerySuggestionsActionCreatorPayload\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, FetchQuerySuggestionsActionCreatorPayload, any>;\n  //Indicate if the executeSearchActionCreator can use the new analytics logic.\n  isNextAnalyticsReady: boolean;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `SearchBox` controller.\n */\nexport interface SearchBoxState {\n  /**\n   * The current query in the search box.\n   */\n  value: string;\n\n  /**\n   * The query suggestions for the search box query.\n   */\n  suggestions: Suggestion[];\n\n  /**\n   * Determines if a search is in progress.\n   */\n  isLoading: boolean;\n\n  /**\n   * Determines if a query suggest request is in progress.\n   */\n  isLoadingSuggestions: boolean;\n}\n\nexport interface Suggestion {\n  /**\n   * The suggestion after applying any `highlightOptions`.\n   */\n  highlightedValue: string;\n\n  /**\n   * The suggestion text.\n   */\n  rawValue: string;\n}\n\n/**\n * The `SearchBox` headless controller offers a high-level interface for designing a common search box UI controller\n * with [highlighting for query suggestions](https://docs.coveo.com/en/headless/latest/usage/highlighting/).\n */\nexport interface SearchBox extends Controller {\n  /**\n   * Updates the search box text value and shows the suggestions for that value.\n   *\n   * @param value - The string value to update the search box with.\n   */\n  updateText(value: string): void;\n\n  /**\n   * Clears the search box text and the suggestions.\n   */\n  clear(): void;\n\n  /**\n   * Shows the suggestions for the current search box value.\n   */\n  showSuggestions(): void;\n\n  /**\n   * Selects a suggestion and calls `submit`.\n   *\n   * @param value - The string value of the suggestion to select\n   */\n  selectSuggestion(value: string): void;\n\n  /**\n   * Deselects all facets and triggers a search query.\n   *\n   * @param analytics -  The analytics action to log after submitting a query.\n   */\n  submit(analytics?: SearchAction): void;\n\n  /**\n   * The state of the `SearchBox` controller.\n   */\n  state: SearchBoxState;\n}\n\n/**\n * Creates a `SearchBox` controller instance.\n *\n * @param engine - The headless engine instance.\n * @returns A `SearchBox` controller instance.\n */\nexport function buildCoreSearchBox(\n  engine: CoreEngine,\n  props: SearchBoxProps\n): SearchBox {\n  if (!loadSearchBoxReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const id = props.options?.id || randomID('search_box');\n  const options: Required<SearchBoxOptions> = {\n    id,\n    highlightOptions: {...props.options?.highlightOptions},\n    ...defaultSearchBoxOptions,\n    ...props.options,\n  };\n\n  validateOptions(engine, searchBoxOptionsSchema, options, 'buildSearchBox');\n  dispatch(registerQuerySetQuery({id, query: engine.state.query.q}));\n  if (options.numberOfSuggestions) {\n    dispatch(\n      registerQuerySuggest({\n        id,\n        count: options.numberOfSuggestions,\n      })\n    );\n  }\n\n  const getValue = () => engine.state.querySet[options.id];\n\n  const performSearch = async (analytics: TransitiveSearchAction) => {\n    const {enableQuerySyntax, clearFilters} = options;\n\n    dispatch(\n      prepareForSearchWithQuery({\n        q: getValue(),\n        enableQuerySyntax,\n        clearFilters,\n      })\n    );\n    if (props.isNextAnalyticsReady) {\n      dispatch(props.executeSearchActionCreator(analytics));\n    } else {\n      dispatch(props.executeSearchActionCreator(analytics.legacy));\n    }\n  };\n\n  return {\n    ...controller,\n\n    updateText(value: string) {\n      dispatch(updateQuerySetQuery({id, query: value}));\n      this.showSuggestions();\n    },\n\n    clear() {\n      dispatch(updateQuerySetQuery({id, query: ''}));\n      dispatch(clearQuerySuggest({id}));\n    },\n\n    showSuggestions() {\n      if (options.numberOfSuggestions) {\n        dispatch(props.fetchQuerySuggestionsActionCreator({id}));\n      }\n    },\n\n    selectSuggestion(value: string) {\n      dispatch(selectQuerySuggestion({id, expression: value}));\n      performSearch({\n        legacy: logQuerySuggestionClick({id, suggestion: value}),\n        next: {\n          actionCause: SearchPageEvents.omniboxAnalytics,\n          getEventExtraPayload: (state) =>\n            new SearchAnalyticsProvider(\n              () => state\n            ).getOmniboxAnalyticsMetadata(id, value),\n        },\n      }).then(() => {\n        dispatch(clearQuerySuggest({id}));\n      });\n    },\n\n    submit(analytics: SearchAction | InsightAction = logSearchboxSubmit()) {\n      performSearch({legacy: analytics});\n      dispatch(clearQuerySuggest({id}));\n    },\n\n    get state() {\n      const state = getState();\n      const querySuggest = state.querySuggest[options.id];\n      const suggestions = getSuggestions(\n        querySuggest,\n        options.highlightOptions\n      );\n      const isLoadingSuggestions = querySuggest\n        ? querySuggest.isLoading\n        : false;\n\n      return {\n        value: getValue(),\n        suggestions,\n        isLoading: state.search.isLoading,\n        isLoadingSuggestions,\n      };\n    },\n  };\n}\n\nfunction getSuggestions(\n  state: QuerySuggestState | undefined,\n  highlightOptions: SuggestionHighlightingOptions\n) {\n  if (!state) {\n    return [];\n  }\n\n  return state.completions.map((completion) => ({\n    highlightedValue: getHighlightedSuggestion(\n      completion.highlighted,\n      highlightOptions\n    ),\n    rawValue: completion.expression,\n  }));\n}\n\nfunction loadSearchBoxReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  QuerySection &\n    QuerySuggestionSection &\n    ConfigurationSection &\n    QuerySetSection &\n    SearchSection\n> {\n  engine.addReducers({query, querySuggest, configuration, querySet, search});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {fetchQuerySuggestions} from '../../features/query-suggest/query-suggest-actions';\nimport {logSearchboxSubmit} from '../../features/query/query-analytics-actions';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {SuggestionHighlightingOptions, Delimiters} from '../../utils/highlight';\nimport {Controller} from '../controller/headless-controller';\nimport {\n  buildCoreSearchBox,\n  SearchBoxState,\n  Suggestion,\n} from '../core/search-box/headless-core-search-box';\nimport {SearchBoxOptions} from '../core/search-box/headless-core-search-box-options';\n\nexport type {\n  SearchBoxOptions,\n  SearchBoxState,\n  SuggestionHighlightingOptions,\n  Suggestion,\n  Delimiters,\n};\n\nexport interface SearchBoxProps {\n  /**\n   * The `SearchBox` controller options.\n   */\n  options?: SearchBoxOptions;\n}\n\n/**\n * The `SearchBox` headless controller offers a high-level interface for designing a common search box UI controller\n * with [highlighting for query suggestions](https://docs.coveo.com/en/headless/latest/usage/highlighting/).\n */\nexport interface SearchBox extends Controller {\n  /**\n   * Updates the search box text value and shows the suggestions for that value.\n   *\n   * @param value - The string value to update the search box with.\n   */\n  updateText(value: string): void;\n\n  /**\n   * Clears the search box text and the suggestions.\n   */\n  clear(): void;\n\n  /**\n   * Shows the suggestions for the current search box value.\n   */\n  showSuggestions(): void;\n\n  /**\n   * Selects a suggestion and calls `submit`.\n   *\n   * @param value - The string value of the suggestion to select\n   */\n  selectSuggestion(value: string): void;\n\n  /**\n   * Deselects all facets and triggers a search query.\n   */\n  submit(): void;\n\n  /**\n   * The state of the `SearchBox` controller.\n   */\n  state: SearchBoxState;\n}\n\n/**\n * Creates a `SearchBox` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SearchBox` properties.\n * @returns A `SearchBox` controller instance.\n */\nexport function buildSearchBox(\n  engine: SearchEngine,\n  props: SearchBoxProps = {}\n): SearchBox {\n  const searchBox = buildCoreSearchBox(engine, {\n    ...props,\n    executeSearchActionCreator: executeSearch,\n    fetchQuerySuggestionsActionCreator: fetchQuerySuggestions,\n    isNextAnalyticsReady: true,\n  });\n\n  return {\n    ...searchBox,\n    submit() {\n      searchBox.submit(logSearchboxSubmit());\n    },\n    get state() {\n      return searchBox.state;\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {SearchBox, SearchBoxProps, buildSearchBox} from './headless-search-box';\n\nexport * from './headless-search-box';\n\n/**\n * @internal\n */\nexport const defineSearchBox = (\n  props?: SearchBoxProps\n): ControllerDefinitionWithoutProps<SearchEngine, SearchBox> => ({\n  build: (engine) => buildSearchBox(engine, props),\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {fetchInstantResults} from '../search/search-actions';\nimport {\n  clearExpiredResults,\n  FetchInstantResultsActionCreatorPayload,\n  registerInstantResults,\n  updateInstantResultsQuery,\n} from './instant-results-actions';\nimport {\n  getInstantResultsInitialState,\n  hasExpired,\n  InstantResultCache,\n  InstantResultsState,\n} from './instant-results-state';\n\nexport const instantResultsReducer = createReducer(\n  getInstantResultsInitialState(),\n  (builder) => {\n    builder.addCase(registerInstantResults, (state, action) => {\n      const {id} = action.payload;\n      if (state[id]) {\n        return;\n      }\n      state[id] = {q: '', cache: {}};\n    });\n    builder.addCase(updateInstantResultsQuery, (state, action) => {\n      const {q, id} = action.payload;\n      if (!q) {\n        return;\n      }\n      state[id].q = q;\n    });\n    builder.addCase(clearExpiredResults, (state, action) => {\n      const {id} = action.payload;\n      Object.entries(state[id].cache).forEach(([q, cached]) => {\n        if (hasExpired(cached)) {\n          delete state[id].cache[q];\n        }\n      });\n    });\n    builder.addCase(fetchInstantResults.pending, (state, action) => {\n      for (const id in state) {\n        for (const query in state[id].cache) {\n          state[id].cache[query].isActive = false;\n        }\n      }\n\n      if (!getCached(state, action.meta)) {\n        makeEmptyCache(state, action.meta);\n        return;\n      }\n\n      const cached = getCached(state, action.meta);\n      cached!.isLoading = true;\n      cached!.isActive = true;\n      cached!.error = null;\n    });\n    builder.addCase(fetchInstantResults.fulfilled, (state, action) => {\n      const {results, searchUid, totalCountFiltered, duration} = action.payload;\n      const {cacheTimeout} = action.meta.arg;\n      const cached = getCached(state, action.meta);\n\n      cached!.isActive = true;\n      cached!.searchUid = searchUid;\n      cached!.isLoading = false;\n      cached!.error = null;\n      cached!.results = results;\n      cached!.expiresAt = cacheTimeout ? cacheTimeout + Date.now() : 0;\n      cached!.totalCountFiltered = totalCountFiltered;\n      cached!.duration = duration;\n    });\n    builder.addCase(fetchInstantResults.rejected, (state, action) => {\n      const cached = getCached(state, action.meta);\n      cached!.error = action.error || null;\n      cached!.isLoading = false;\n      cached!.isActive = false;\n    });\n  }\n);\n\nconst makeEmptyCache = (\n  state: InstantResultsState,\n  meta: {arg: FetchInstantResultsActionCreatorPayload}\n) => {\n  const {q, id} = meta.arg;\n  state[id].cache[q] = {\n    isLoading: true,\n    error: null,\n    results: [],\n    expiresAt: 0,\n    isActive: true,\n    searchUid: '',\n    totalCountFiltered: 0,\n    duration: 0,\n  };\n};\n\nconst getCached = (\n  state: InstantResultsState,\n  meta: {arg: FetchInstantResultsActionCreatorPayload}\n): InstantResultCache | null => {\n  const {q, id} = meta.arg;\n  return state[id].cache[q] || null;\n};\n", "import {NumberValue, Schema} from '@coveo/bueno';\nimport {nonEmptyString} from '../../utils/validate-payload';\n\nexport interface InstantResultOptions {\n  /**\n   * A unique identifier for the search box.\n   */\n  searchBoxId?: string;\n  /**\n   * The maximum items to be stored in the instant result list for each query.\n   */\n  maxResultsPerQuery: number;\n  /**\n   * Number in milliseconds that cached results will be valid for. Defaults to 1 minute. Set to 0 so that results never expire.\n   */\n  cacheTimeout?: number;\n}\n\nexport const instantResultsOptionDefinitions = {\n  searchBoxId: nonEmptyString,\n  maxResultsPerQuery: new NumberValue({\n    required: true,\n    min: 1,\n  }),\n  cacheTimeout: new NumberValue(),\n};\n\nexport const instantResultsOptionsSchema = new Schema<\n  Required<InstantResultOptions>\n>(instantResultsOptionDefinitions);\n", "import {SerializedError} from '@reduxjs/toolkit';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport {Result} from '../../api/search/search/result';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  clearExpiredResults,\n  registerInstantResults,\n  updateInstantResultsQuery,\n} from '../../features/instant-results/instant-results-actions';\nimport {instantResultsReducer as instantResults} from '../../features/instant-results/instant-results-slice';\nimport {hasExpired} from '../../features/instant-results/instant-results-state';\nimport {fetchInstantResults} from '../../features/search/search-actions';\nimport {InstantResultSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {randomID} from '../../utils/utils';\nimport {validateOptions} from '../../utils/validate-payload';\nimport {buildController, Controller} from '../controller/headless-controller';\nimport {\n  InstantResultOptions,\n  instantResultsOptionsSchema,\n} from './instant-results-options';\n\nexport type {InstantResultOptions} from './instant-results-options';\n\nexport interface InstantResultProps {\n  options: InstantResultOptions;\n}\n\n/**\n * The `InstantResults` controller allows the end user to manage instant results queries.\n */\nexport interface InstantResults extends Controller {\n  /**\n   * Updates the specified query and shows instant results for it.\n   *\n   * @param q - The query to get instant results for. For more precise instant results, query suggestions are recommended.\n   */\n  updateQuery(q: string): void;\n  /**\n   * Clears all expired instant results queries.\n   */\n  clearExpired(): void;\n  /**\n   * The state of the `InstantResults` controller.\n   */\n  state: InstantResultsState;\n}\n\nexport interface InstantResultsState {\n  /**\n   * The current query for instant results.\n   */\n  q: string;\n  /**\n   * The instant results for the current query.\n   */\n  results: Result[];\n  /**\n   * Determines if a search is in progress for the current query.\n   */\n  isLoading: boolean;\n  /**\n   * An error returned when executing an instant results request, if any. This is `null` otherwise.\n   */\n  error: SearchAPIErrorWithStatusCode | SerializedError | null;\n}\n\n/**\n * Creates an `InstantResults` controller instance.\n *\n * @param engine - The Headless engine.\n * @param props - The configurable `InstantResults` properties.\n * @returns An `InstantResults` controller instance.\n */\nexport function buildInstantResults(\n  engine: SearchEngine,\n  props: InstantResultProps\n): InstantResults {\n  if (!loadInstantResultsReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const options: Required<InstantResultOptions> = {\n    searchBoxId: props.options.searchBoxId || randomID('instant-results-'),\n    cacheTimeout: props.options.cacheTimeout || 6e4,\n    maxResultsPerQuery: props.options.maxResultsPerQuery,\n  };\n\n  validateOptions(\n    engine,\n    instantResultsOptionsSchema,\n    options,\n    'buildInstantResults'\n  );\n\n  const searchBoxId = options.searchBoxId;\n  dispatch(registerInstantResults({id: searchBoxId}));\n\n  const getStateForSearchBox = () => getState().instantResults[searchBoxId];\n\n  const getCached = (q: string) => getStateForSearchBox().cache[q];\n  const getQ = () => getStateForSearchBox().q;\n  const getResults = () => {\n    const cached = getCached(getQ());\n    if (!cached) {\n      return [];\n    }\n    if (cached.isLoading) {\n      return [];\n    }\n    return cached.results;\n  };\n\n  return {\n    ...controller,\n\n    updateQuery(q: string) {\n      if (!q) {\n        return;\n      }\n      const cached = getCached(q);\n      if (\n        !cached ||\n        (!cached.isLoading && (cached.error || hasExpired(cached)))\n      ) {\n        dispatch(\n          fetchInstantResults({\n            id: searchBoxId,\n            q,\n            maxResultsPerQuery: options.maxResultsPerQuery,\n            cacheTimeout: options.cacheTimeout,\n          })\n        );\n      }\n      dispatch(updateInstantResultsQuery({id: searchBoxId, q}));\n    },\n\n    clearExpired() {\n      dispatch(\n        clearExpiredResults({\n          id: searchBoxId,\n        })\n      );\n    },\n\n    get state() {\n      const q = getQ();\n      const cached = getCached(q);\n      return {\n        q,\n        isLoading: cached?.isLoading || false,\n        error: cached?.error || null,\n        results: getResults(),\n      };\n    },\n  };\n}\n\nfunction loadInstantResultsReducers(\n  engine: SearchEngine\n): engine is SearchEngine<InstantResultSection> {\n  engine.addReducers({instantResults: instantResults});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  InstantResultProps,\n  InstantResults,\n  buildInstantResults,\n} from './instant-results';\n\nexport * from './instant-results';\n\n/**\n * @internal\n */\nexport const defineInstantResults = (\n  props: InstantResultProps\n): ControllerDefinitionWithoutProps<SearchEngine, InstantResults> => ({\n  build: (engine) => buildInstantResults(engine, props),\n});\n", "import {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\nimport {getSortCriteriaInitialState} from './sort-criteria-state';\n\n//TODO: KIT-2859\nexport const logResultsSort = (): SearchAction =>\n  makeAnalyticsAction('analytics/sort/results', (client, state) =>\n    client.makeResultsSort({\n      resultsSortBy: state.sortCriteria || getSortCriteriaInitialState(),\n    })\n  );\n", "import {EnumValue, isArray, SchemaDefinition} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {SortBy, SortCriterion} from './criteria';\n\nconst criterionDefinition = {\n  by: new EnumValue<SortBy>({enum: SortBy, required: true}),\n} as SchemaDefinition<SortCriterion>;\n\nexport const registerSortCriterion = createAction(\n  'sortCriteria/register',\n  (payload: SortCriterion | SortCriterion[]) => validate(payload)\n);\n\nexport const updateSortCriterion = createAction(\n  'sortCriteria/update',\n  (payload: SortCriterion | SortCriterion[]) => validate(payload)\n);\n\nconst validate = (payload: SortCriterion | SortCriterion[]) => {\n  if (isArray(payload)) {\n    payload.forEach((p) => validatePayload(p, criterionDefinition));\n    return {payload};\n  }\n  return validatePayload(payload, criterionDefinition);\n};\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {change} from '../history/history-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {buildCriterionExpression} from './criteria';\nimport {\n  registerSortCriterion,\n  updateSortCriterion,\n} from './sort-criteria-actions';\nimport {getSortCriteriaInitialState} from './sort-criteria-state';\n\nexport const sortCriteriaReducer = createReducer(\n  getSortCriteriaInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerSortCriterion, (_, action) =>\n        buildCriterionExpression(action.payload)\n      )\n      .addCase(updateSortCriterion, (_, action) =>\n        buildCriterionExpression(action.payload)\n      )\n      .addCase(change.fulfilled, (state, action) => {\n        return action.payload?.sortCriteria ?? state;\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        return action.payload.sortCriteria ?? state;\n      });\n  }\n);\n", "import {ArrayValue, isArray, Schema} from '@coveo/bueno';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {updatePage} from '../../../features/pagination/pagination-actions';\nimport {\n  buildCriterionExpression,\n  SortCriterion,\n  criterionDefinition,\n} from '../../../features/sort-criteria/criteria';\nimport {\n  registerSortCriterion,\n  updateSortCriterion,\n} from '../../../features/sort-criteria/sort-criteria-actions';\nimport {sortCriteriaReducer as sortCriteria} from '../../../features/sort-criteria/sort-criteria-slice';\nimport {ConfigurationSection, SortSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {validateInitialState} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport interface SortProps {\n  /**\n   * The initial state that should be applied to this `Sort` controller.\n   */\n  initialState?: SortInitialState;\n}\n\nexport interface SortInitialState {\n  /**\n   * The initial sort criterion to register in state.\n   */\n  criterion?: SortCriterion | SortCriterion[];\n}\n\nfunction validateSortInitialState(\n  engine: CoreEngine<ConfigurationSection & SortSection>,\n  state: Partial<SortInitialState> | undefined\n) {\n  if (!state) {\n    return;\n  }\n\n  const schema = new Schema<SortInitialState>({\n    criterion: new ArrayValue({each: criterionDefinition}) as never,\n  });\n  const criterion = getCriterionAsArray(state);\n  const initialState: SortInitialState = {...state, criterion};\n\n  validateInitialState(engine, schema, initialState, 'buildSort');\n}\n\nfunction getCriterionAsArray(state: Partial<SortInitialState>) {\n  if (!state.criterion) {\n    return [];\n  }\n\n  return isArray(state.criterion) ? state.criterion : [state.criterion];\n}\n\n/**\n * The `Sort` controller manages how the results are sorted.\n */\nexport interface Sort extends Controller {\n  /**\n   * Updates the sort criterion and executes a new search.\n   *\n   * @param criterion - The new sort criterion.\n   */\n  sortBy(criterion: SortCriterion | SortCriterion[]): void;\n\n  /**\n   * Checks whether the specified sort criterion matches the value in state.\n   *\n   * @param criterion - The criterion to compare.\n   * @returns `true` if the passed sort criterion matches the value in state, and `false` otherwise.\n   */\n  isSortedBy(criterion: SortCriterion | SortCriterion[]): boolean;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `Sort` controller.\n   */\n  state: SortState;\n}\n\nexport interface SortState {\n  /**\n   * The current sort criteria.\n   */\n  sortCriteria: string;\n}\n\n/**\n * Creates a `Sort` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Sort` controller properties.\n * @returns A `Sort` controller instance.\n */\nexport function buildCoreSort(engine: CoreEngine, props: SortProps): Sort {\n  if (!loadSortReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  validateSortInitialState(engine, props.initialState);\n\n  const criterion = props.initialState?.criterion;\n\n  if (criterion) {\n    dispatch(registerSortCriterion(criterion));\n  }\n\n  return {\n    ...controller,\n\n    sortBy(criterion: SortCriterion | SortCriterion[]) {\n      dispatch(updateSortCriterion(criterion));\n      dispatch(updatePage(1));\n    },\n\n    isSortedBy(criterion: SortCriterion | SortCriterion[]) {\n      return this.state.sortCriteria === buildCriterionExpression(criterion);\n    },\n\n    get state() {\n      return {\n        sortCriteria: getState().sortCriteria,\n      };\n    },\n  };\n}\n\nfunction loadSortReducers(\n  engine: CoreEngine\n): engine is CoreEngine<ConfigurationSection & SortSection> {\n  engine.addReducers({configuration, sortCriteria});\n  return true;\n}\n", "import {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {SortCriterion} from '../../features/sort-criteria/criteria';\nimport {logResultsSort} from '../../features/sort-criteria/sort-criteria-analytics-actions';\nimport {\n  buildCoreSort,\n  Sort,\n  SortProps,\n  SortState,\n  SortInitialState,\n} from '../core/sort/headless-core-sort';\n\nexport type {Sort, SortProps, SortState, SortInitialState};\n\n/**\n * Creates a `Sort` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Sort` controller properties.\n * @returns A `Sort` controller instance.\n */\nexport function buildSort(engine: SearchEngine, props: SortProps = {}): Sort {\n  const {dispatch} = engine;\n  const sort = buildCoreSort(engine, props);\n  const search = () =>\n    dispatch(\n      executeSearch({\n        legacy: logResultsSort(),\n        next: {\n          actionCause: SearchPageEvents.resultsSort,\n          getEventExtraPayload: (state) =>\n            new SearchAnalyticsProvider(() => state).getResultSortMetadata(),\n        },\n      })\n    );\n\n  return {\n    ...sort,\n\n    get state() {\n      return sort.state;\n    },\n\n    sortBy(criterion: SortCriterion | SortCriterion[]) {\n      sort.sortBy(criterion);\n      search();\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {Sort, SortProps, buildSort} from './headless-sort';\n\nexport * from './headless-sort';\n\n/**\n * @internal\n */\nexport const defineSort = (\n  props?: SortProps\n): ControllerDefinitionWithoutProps<SearchEngine, Sort> => ({\n  build: (engine) => buildSort(engine, props),\n});\n", "import {ArrayValue, RecordValue, StringValue} from '@coveo/bueno';\nimport {\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n} from '../../utils/validate-payload';\nimport {StaticFilterValueState} from './static-filter-set-state';\n\nexport const staticFilterIdSchema = requiredNonEmptyString;\n\nexport const staticFilterValueSchema = new RecordValue({\n  options: {required: true},\n  values: {\n    caption: requiredEmptyAllowedString,\n    expression: requiredEmptyAllowedString,\n    state: new StringValue<StaticFilterValueState>({\n      constrainTo: ['idle', 'selected', 'excluded'],\n    }),\n  },\n});\n\nexport const staticFilterValuesSchema = new ArrayValue({\n  required: true,\n  each: staticFilterValueSchema,\n});\n", "import {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {makeAnalyticsAction, SearchAction} from '../analytics/analytics-utils';\nimport {\n  staticFilterIdSchema,\n  staticFilterValueSchema,\n  staticFilterValuesSchema,\n} from './static-filter-set-schema';\nimport {StaticFilterValue} from './static-filter-set-state';\n\nexport interface RegisterStaticFilterActionCreatorPayload {\n  /**\n   * A unique identifier for the static filter.\n   */\n  id: string;\n\n  /**\n   * The values of the static filter.\n   */\n  values: StaticFilterValue[];\n}\n\nexport const registerStaticFilter = createAction(\n  'staticFilter/register',\n  (payload: RegisterStaticFilterActionCreatorPayload) => {\n    const schema = {\n      id: staticFilterIdSchema,\n      values: staticFilterValuesSchema,\n    };\n\n    return validatePayload(payload, schema);\n  }\n);\n\nexport interface ToggleSelectStaticFilterValueActionCreatorPayload {\n  /**\n   * The unique identifier for the static filter.\n   */\n  id: string;\n\n  /**\n   * The target static filter value.\n   */\n  value: StaticFilterValue;\n}\n\nexport const toggleSelectStaticFilterValue = createAction(\n  'staticFilter/toggleSelect',\n  (payload: ToggleSelectStaticFilterValueActionCreatorPayload) => {\n    const schema = {\n      id: staticFilterIdSchema,\n      value: staticFilterValueSchema,\n    };\n\n    return validatePayload(payload, schema);\n  }\n);\n\nexport const toggleExcludeStaticFilterValue = createAction(\n  'staticFilter/toggleExclude',\n  (payload: ToggleSelectStaticFilterValueActionCreatorPayload) => {\n    const schema = {\n      id: staticFilterIdSchema,\n      value: staticFilterValueSchema,\n    };\n\n    return validatePayload(payload, schema);\n  }\n);\n\nexport const deselectAllStaticFilterValues = createAction(\n  'staticFilter/deselectAllFilterValues',\n  (payload: string) => {\n    return validatePayload(payload, staticFilterIdSchema);\n  }\n);\n\nexport interface LogStaticFilterToggleValueActionCreatorPayload {\n  /**\n   * The static filter id.\n   */\n  staticFilterId: string;\n\n  /**\n   * The static filter value.\n   */\n  staticFilterValue: StaticFilterValueMetadata;\n}\n\nexport interface StaticFilterValueMetadata {\n  /**\n   * The caption displayed to the user.\n   */\n  caption: string;\n\n  /**\n   * The query expression.\n   */\n  expression: string;\n}\n\n//TODO: KIT-2859\nexport const logStaticFilterSelect = (\n  metadata: LogStaticFilterToggleValueActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/staticFilter/select', (client) =>\n    client.makeStaticFilterSelect(metadata)\n  );\n\n//TODO: KIT-2859\nexport const logStaticFilterDeselect = (\n  metadata: LogStaticFilterToggleValueActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/staticFilter/deselect', (client) =>\n    client.makeStaticFilterDeselect(metadata)\n  );\n\nexport interface LogStaticFilterClearAllActionCreatorPayload {\n  /**\n   * The static filter id.\n   */\n  staticFilterId: string;\n}\n\n//TODO: KIT-2859\nexport const logStaticFilterClearAll = (\n  metadata: LogStaticFilterClearAllActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/staticFilter/clearAll', (client) =>\n    client.makeStaticFilterClearAll(metadata)\n  );\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../breadcrumb/breadcrumb-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {\n  deselectAllStaticFilterValues,\n  registerStaticFilter,\n  toggleExcludeStaticFilterValue,\n  toggleSelectStaticFilterValue,\n} from './static-filter-set-actions';\nimport {getStaticFilterSetInitialState} from './static-filter-set-state';\n\nexport const staticFilterSetReducer = createReducer(\n  getStaticFilterSetInitialState(),\n  (builder) =>\n    builder\n      .addCase(registerStaticFilter, (state, action) => {\n        const filter = action.payload;\n        const {id} = filter;\n\n        if (id in state) {\n          return;\n        }\n\n        state[id] = filter;\n      })\n      .addCase(toggleSelectStaticFilterValue, (state, action) => {\n        const {id, value} = action.payload;\n        const filter = state[id];\n\n        if (!filter) {\n          return;\n        }\n\n        const target = filter.values.find((v) => v.caption === value.caption);\n\n        if (!target) {\n          return;\n        }\n\n        const isSelected = target.state === 'selected';\n        target.state = isSelected ? 'idle' : 'selected';\n      })\n      .addCase(toggleExcludeStaticFilterValue, (state, action) => {\n        const {id, value} = action.payload;\n        const filter = state[id];\n\n        if (!filter) {\n          return;\n        }\n\n        const target = filter.values.find((v) => v.caption === value.caption);\n\n        if (!target) {\n          return;\n        }\n\n        const isExcluded = target.state === 'excluded';\n        target.state = isExcluded ? 'idle' : 'excluded';\n      })\n      .addCase(deselectAllStaticFilterValues, (state, action) => {\n        const id = action.payload;\n        const filter = state[id];\n\n        if (!filter) {\n          return;\n        }\n\n        filter.values.forEach((v) => (v.state = 'idle'));\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.values(state).forEach((filter) => {\n          filter.values.forEach((v) => (v.state = 'idle'));\n        });\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        const sf = action.payload.sf || {};\n\n        Object.entries(state).forEach(([id, filter]) => {\n          const selected = sf[id] || [];\n\n          filter.values.forEach((value) => {\n            value.state = selected.includes(value.caption)\n              ? 'selected'\n              : 'idle';\n          });\n        });\n      })\n);\n", "import {\n  StaticFilterValue,\n  StaticFilterValueState,\n} from '../../features/static-filter-set/static-filter-set-state';\n\nexport interface StaticFilterValueOptions {\n  /**\n   * A human-readable caption for the expression (e.g., `Youtube`).\n   */\n  caption: string;\n\n  /**\n   * The query filter expression to apply when the value is selected (e.g., `@filetype==\"youtubevideo\"`).\n   */\n  expression: string;\n\n  /**\n   * The state of the static filter value. The possible values are `idle`, `selected`, `excluded`.\n   */\n  state?: StaticFilterValueState;\n}\n\n/**\n * Creates a `StaticFilterValue`.\n *\n * @param config - The options with which to create a `StaticFilterValue`.\n * @returns A new `StaticFilterValue`.\n */\nexport function buildStaticFilterValue(\n  config: StaticFilterValueOptions\n): StaticFilterValue {\n  return {\n    state: 'idle',\n    ...config,\n  };\n}\n", "import {Schema} from '@coveo/bueno';\nimport {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {\n  SearchAction,\n  executeSearch,\n} from '../../features/search/search-actions';\nimport {\n  deselectAllStaticFilterValues,\n  logStaticFilterClearAll,\n  logStaticFilterDeselect,\n  logStaticFilterSelect,\n  registerStaticFilter,\n  toggleExcludeStaticFilterValue,\n  toggleSelectStaticFilterValue,\n} from '../../features/static-filter-set/static-filter-set-actions';\nimport {\n  staticFilterIdSchema,\n  staticFilterValuesSchema,\n} from '../../features/static-filter-set/static-filter-set-schema';\nimport {staticFilterSetReducer as staticFilterSet} from '../../features/static-filter-set/static-filter-set-slice';\nimport {\n  StaticFilterValue,\n  StaticFilterValueState,\n} from '../../features/static-filter-set/static-filter-set-state';\nimport {StaticFilterSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {validateOptions} from '../../utils/validate-payload';\nimport {buildController, Controller} from '../controller/headless-controller';\nimport {\n  buildStaticFilterValue,\n  StaticFilterValueOptions,\n} from './static-filter-value';\n\nexport type {\n  StaticFilterValue,\n  StaticFilterValueState,\n  StaticFilterValueOptions,\n};\nexport {buildStaticFilterValue};\n\nconst optionsSchema = new Schema<Required<StaticFilterOptions>>({\n  id: staticFilterIdSchema,\n  values: staticFilterValuesSchema,\n});\n\nexport interface StaticFilterProps {\n  /**\n   * The options for the `StaticFilter` controller.\n   */\n  options: StaticFilterOptions;\n}\n\nexport interface StaticFilterOptions {\n  /**\n   * A unique identifier for the static filter.\n   */\n  id: string;\n\n  /**\n   * The values the static filter is responsible for managing.\n   */\n  values: StaticFilterValue[];\n}\n\n/**\n * The `StaticFilter` controller manages a collection of filter values.\n * */\nexport interface StaticFilter extends Controller {\n  /**\n   * Toggles the specified static filter value.\n   *\n   * @param value - The static filter value to toggle.\n   */\n  toggleSelect(value: StaticFilterValue): void;\n\n  /**\n   * Excludes the specified static filter value.\n   *\n   * @param value - The static filter value to toggle.\n   */\n  toggleExclude(value: StaticFilterValue): void;\n\n  /**\n   * Toggles the specified static filter value, deselecting others.\n   *\n   * @param value - The static filter value to toggle.\n   */\n  toggleSingleSelect(value: StaticFilterValue): void;\n\n  /**\n   * Excludes the specified static filter value, deselecting others.\n   *\n   * @param value - The static filter value to toggle exclusion.\n   */\n  toggleSingleExclude(value: StaticFilterValue): void;\n\n  /**\n   * Deselects all static filter values.\n   * */\n  deselectAll(): void;\n\n  /**\n   * Checks whether the specified static filter value is selected.\n   *\n   * @param value - The static filter value to check.\n   * @returns Whether the specified static filter value is selected.\n   */\n  isValueSelected(value: StaticFilterValue): boolean;\n\n  /**\n   * Checks whether the specified static filter value is excluded.\n   *\n   * @param value - The static filter value to check.\n   * @returns Whether the specified static filter value is excluded.\n   */\n  isValueExcluded(value: StaticFilterValue): boolean;\n\n  /**\n   * A state of the `StaticFilter` controller.\n   */\n  state: StaticFilterState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `StaticFilter` controller.\n */\nexport interface StaticFilterState {\n  /**\n   * The static filter id.\n   */\n  id: string;\n\n  /**\n   * The static filter values.\n   */\n  values: StaticFilterValue[];\n\n  /**\n   * `true` if there is at least one non-idle value and `false` otherwise.\n   */\n  hasActiveValues: boolean;\n}\n\n/**\n * Creates a `Static Filter` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Sort` controller properties.\n * @returns A `Sort` controller instance.\n */\nexport function buildStaticFilter(\n  engine: SearchEngine,\n  props: StaticFilterProps\n): StaticFilter {\n  if (!loadReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  validateOptions(engine, optionsSchema, props.options, 'buildStaticFilter');\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n  const {id} = props.options;\n\n  dispatch(registerStaticFilter(props.options));\n\n  return {\n    ...controller,\n\n    toggleSelect(value: StaticFilterValue) {\n      dispatch(toggleSelectStaticFilterValue({id, value}));\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggledValue(id, value),\n          next: getAnalyticsActionForToggledValue(id, value),\n        })\n      );\n    },\n\n    toggleSingleSelect(value: StaticFilterValue) {\n      if (value.state === 'idle') {\n        dispatch(deselectAllStaticFilterValues(id));\n      }\n\n      dispatch(toggleSelectStaticFilterValue({id, value}));\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggledValue(id, value),\n          next: getAnalyticsActionForToggledValue(id, value),\n        })\n      );\n    },\n\n    toggleExclude(value: StaticFilterValue) {\n      dispatch(toggleExcludeStaticFilterValue({id, value}));\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggledValue(id, value),\n          next: getAnalyticsActionForToggledValue(id, value),\n        })\n      );\n    },\n\n    toggleSingleExclude(value: StaticFilterValue) {\n      if (value.state === 'idle') {\n        dispatch(deselectAllStaticFilterValues(id));\n      }\n\n      dispatch(toggleExcludeStaticFilterValue({id, value}));\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggledValue(id, value),\n          next: getAnalyticsActionForToggledValue(id, value),\n        })\n      );\n    },\n\n    deselectAll() {\n      dispatch(deselectAllStaticFilterValues(id));\n      dispatch(\n        executeSearch({\n          legacy: logStaticFilterClearAll({staticFilterId: id}),\n          next: {\n            actionCause: SearchPageEvents.staticFilterClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(\n                () => state\n              ).getStaticFilterClearAllMetadata(id),\n          },\n        })\n      );\n    },\n\n    isValueSelected(value: StaticFilterValue) {\n      return value.state === 'selected';\n    },\n\n    isValueExcluded(value: StaticFilterValue) {\n      return value.state === 'excluded';\n    },\n\n    get state() {\n      const values = getState().staticFilterSet[id]?.values || [];\n      const hasActiveValues = values.some((value) => value.state !== 'idle');\n\n      return {\n        id,\n        values,\n        hasActiveValues,\n      };\n    },\n  };\n}\n\nfunction loadReducers(\n  engine: SearchEngine\n): engine is SearchEngine<StaticFilterSection> {\n  engine.addReducers({staticFilterSet});\n  return true;\n}\n\nfunction getLegacyAnalyticsActionForToggledValue(\n  id: string,\n  value: StaticFilterValue\n) {\n  const {caption, expression, state} = value;\n  const analytics =\n    state === 'idle' ? logStaticFilterSelect : logStaticFilterDeselect;\n\n  return analytics({\n    staticFilterId: id,\n    staticFilterValue: {caption, expression},\n  });\n}\n\nfunction getAnalyticsActionForToggledValue(\n  id: string,\n  value: StaticFilterValue\n): SearchAction {\n  const isSelected = value.state === 'selected';\n\n  return {\n    actionCause: isSelected\n      ? SearchPageEvents.staticFilterDeselect\n      : SearchPageEvents.staticFilterSelect,\n    getEventExtraPayload: (state) =>\n      new SearchAnalyticsProvider(() => state).getStaticFilterToggleMetadata(\n        id,\n        value\n      ),\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  StaticFilter,\n  StaticFilterProps,\n  buildStaticFilter,\n} from './headless-static-filter';\n\nexport * from './headless-static-filter';\n\nexport {buildStaticFilterValue} from './headless-static-filter';\n\n/**\n * @internal\n */\nexport const defineStaticFilter = (\n  props: StaticFilterProps\n): ControllerDefinitionWithoutProps<SearchEngine, StaticFilter> => ({\n  build: (engine) => buildStaticFilter(engine, props),\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {change} from '../history/history-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {registerTab, updateActiveTab} from './tab-set-actions';\nimport {getTabSetInitialState, TabSetState} from './tab-set-state';\n\nexport const tabSetReducer = createReducer(\n  getTabSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerTab, (state, action) => {\n        const tab = action.payload;\n        const {id} = tab;\n\n        if (id in state) {\n          return;\n        }\n\n        state[id] = {...tab, isActive: false};\n      })\n      .addCase(updateActiveTab, (state, action) => {\n        const id = action.payload;\n        activateTabIfIdExists(state, id);\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        const id = action.payload.tab || '';\n        activateTabIfIdExists(state, id);\n      })\n      .addCase(change.fulfilled, (state, action) => {\n        return action.payload?.tabSet ?? state;\n      });\n  }\n);\n\nfunction activateTabIfIdExists(state: TabSetState, id: string) {\n  const hasId = id in state;\n\n  if (!hasId) {\n    return;\n  }\n\n  Object.keys(state).forEach((tabId) => {\n    state[tabId].isActive = tabId === id;\n  });\n}\n", "import {BooleanValue, Schema} from '@coveo/bueno';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {getConfigurationInitialState} from '../../../features/configuration/configuration-state';\nimport {\n  registerTab,\n  updateActiveTab,\n} from '../../../features/tab-set/tab-set-actions';\nimport {tabSetReducer as tabSet} from '../../../features/tab-set/tab-set-slice';\nimport {ConfigurationSection, TabSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n  validateInitialState,\n  validateOptions,\n} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport interface TabOptions {\n  /**\n   * A constant query expression or filter that the Tab should add to any outgoing query.\n   *\n   * **Example:**\n   *\n   * `@objecttype==Message`\n   */\n  expression: string;\n\n  /**\n   * A unique identifier for the tab. The value will be used as the originLevel2 when the tab is active.\n   */\n  id: string;\n}\n\nexport interface TabInitialState {\n  /**\n   * Specifies if the tab is currently selected.\n   * Note that there can be only one active tab for a given headless engine.\n   */\n  isActive: boolean;\n}\n\nconst optionsSchema = new Schema<Required<TabOptions>>({\n  expression: requiredEmptyAllowedString,\n  id: requiredNonEmptyString,\n});\n\nconst initialStateSchema = new Schema({\n  isActive: new BooleanValue(),\n});\n\nexport interface TabProps {\n  /**\n   * The options for the `Tab` controller.\n   */\n  options: TabOptions;\n  /**\n   * The initial state that should be applied to this `Tab` controller.\n   */\n  initialState?: TabInitialState;\n}\n\n/**\n * The `Tab` headless controller offers a high-level interface for designing a common tab UI controller.\n */\nexport interface Tab extends Controller {\n  /**\n   * Activates the tab.\n   */\n  select(): void;\n\n  /**\n   * The state of the `Tab` controller.\n   */\n  state: TabState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `Tab` controller.\n */\nexport interface TabState {\n  /**\n   * Indicates whether the current tab is selected.\n   * */\n  isActive: boolean;\n}\n\n/**\n * Creates a `Tab` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Tab` properties.\n * @returns A `Tab` controller instance.\n */\nexport function buildCoreTab(engine: CoreEngine, props: TabProps): Tab {\n  assertIdNotEqualToDefaultOriginLevel2(props.options.id);\n\n  if (!loadTabReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  validateOptions(engine, optionsSchema, props.options, 'buildTab');\n  const initialState = validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildTab'\n  );\n\n  const {id, expression} = props.options;\n\n  dispatch(registerTab({id, expression}));\n\n  if (initialState.isActive) {\n    dispatch(updateActiveTab(id));\n  }\n\n  return {\n    ...controller,\n\n    select() {\n      dispatch(updateActiveTab(id));\n    },\n\n    get state() {\n      const isActive = engine.state.tabSet[id]?.isActive;\n      return {\n        isActive,\n      };\n    },\n  };\n}\n\nfunction loadTabReducers(\n  engine: CoreEngine\n): engine is CoreEngine<ConfigurationSection & TabSection> {\n  engine.addReducers({configuration, tabSet});\n  return true;\n}\n\nfunction assertIdNotEqualToDefaultOriginLevel2(id: string | undefined) {\n  const defaultOriginLevel2 =\n    getConfigurationInitialState().analytics.originLevel2;\n  if (id === defaultOriginLevel2) {\n    throw new Error(\n      `The #id option on the Tab controller cannot use the reserved value \"${defaultOriginLevel2}\". Please specify a different value.`\n    );\n  }\n}\n", "import {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logInterfaceChange} from '../../features/analytics/analytics-actions';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {\n  buildCoreTab,\n  Tab,\n  TabProps,\n  TabState,\n  TabInitialState,\n  TabOptions,\n} from '../core/tab/headless-core-tab';\n\nexport type {Tab, TabProps, TabState, TabInitialState, TabOptions};\n\n/**\n * Creates a `Tab` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Tab` properties.\n * @returns A `Tab` controller instance.\n */\nexport function buildTab(engine: SearchEngine, props: TabProps): Tab {\n  const {dispatch} = engine;\n  const tab = buildCoreTab(engine, props);\n  const search = () =>\n    dispatch(\n      executeSearch({\n        legacy: logInterfaceChange(),\n        next: {\n          actionCause: SearchPageEvents.interfaceChange,\n          getEventExtraPayload: (state) =>\n            new SearchAnalyticsProvider(\n              () => state\n            ).getInterfaceChangeMetadata(),\n        },\n      })\n    );\n\n  return {\n    ...tab,\n\n    get state() {\n      return tab.state;\n    },\n\n    select() {\n      tab.select();\n      search();\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {Tab, TabProps, buildTab} from './headless-tab';\n\nexport * from './headless-tab';\n\n/**\n * @internal\n */\nexport const defineTab = (\n  props: TabProps\n): ControllerDefinitionWithoutProps<SearchEngine, Tab> => ({\n  build: (engine) => buildTab(engine, props),\n});\n", "import {CoreEngine} from '../../../app/engine';\nimport {facetOptionsReducer as facetOptions} from '../../../features/facet-options/facet-options-slice';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {SearchSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {sortFacets} from '../../../utils/facet-utils';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\n/**\n * A facet payload object to be sorted by the manager.\n */\nexport interface FacetManagerPayload<T> {\n  /**\n   * A unique string identifying a facet.\n   */\n  facetId: string;\n\n  /**\n   * The payload to associate with the facetId. This can be anything e.g., a DOM element, JSX, a string.\n   */\n  payload: T;\n}\n\n/**\n * The `FacetManager` controller helps reorder facets to match the most recent search response.\n */\nexport interface FacetManager extends Controller {\n  /**\n   * Sorts the facets to match the order in the most recent search response.\n   *\n   * @param facets - An array of facet payloads to sort.\n   * @returns A sorted array.\n   */\n  sort<T>(facets: FacetManagerPayload<T>[]): FacetManagerPayload<T>[];\n\n  /**\n   * The state of the `CoreFacetManager` controller.\n   */\n  state: FacetManagerState;\n}\n\nexport interface FacetManagerState {\n  /**\n   * The facet ids sorted in the same order as the latest response.\n   */\n  facetIds: string[];\n}\n\n/**\n * Creates a `FacetManager` instance.\n *\n * @param engine - The headless engine.\n * @returns The `FacetManager` controller instance.\n */\nexport function buildCoreFacetManager(engine: CoreEngine): FacetManager {\n  if (!loadFacetManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const getState = () => engine.state;\n\n  return {\n    ...controller,\n\n    sort<T>(facets: FacetManagerPayload<T>[]) {\n      return sortFacets(facets, this.state.facetIds);\n    },\n\n    get state() {\n      const facets = getState().search.response.facets;\n      const facetIds = facets.map((f) => f.facetId);\n\n      return {facetIds};\n    },\n  };\n}\n\nfunction loadFacetManagerReducers(\n  engine: CoreEngine\n): engine is CoreEngine<SearchSection> {\n  engine.addReducers({search, facetOptions});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  buildCoreFacetManager,\n  FacetManager,\n  FacetManagerState,\n  FacetManagerPayload,\n} from '../core/facet-manager/headless-core-facet-manager';\n\nexport type {FacetManagerState, FacetManagerPayload, FacetManager};\n\n/**\n * Creates a `FacetManager` instance.\n *\n * @param engine - The headless engine.\n */\nexport function buildFacetManager(engine: SearchEngine): FacetManager {\n  return buildCoreFacetManager(engine);\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {FacetManager, buildFacetManager} from './headless-facet-manager';\n\nexport * from './headless-facet-manager';\n\n/**\n * @internal\n */\nexport const defineFacetManager = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  FacetManager\n> => ({\n  build: (engine) => buildFacetManager(engine),\n});\n", "import {ArrayValue} from '@coveo/bueno';\nimport type {CategoryFacetMetadata} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {SearchAppState} from '../../../state/search-app-state';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../../utils/validate-payload';\nimport {\n  makeAnalyticsAction,\n  SearchAction,\n} from '../../analytics/analytics-utils';\nimport {facetIdDefinition} from '../generic/facet-actions-validation';\n\nexport interface LogCategoryFacetBreadcrumbActionCreatorPayload {\n  /**\n   * The category facet id.\n   */\n  categoryFacetId: string;\n\n  /**\n   * The category facet selected path.\n   */\n  categoryFacetPath: string[];\n}\n\nconst categoryFacetBreadcrumbPayloadDefinition = {\n  categoryFacetId: facetIdDefinition,\n  categoryFacetPath: new ArrayValue({\n    required: true,\n    each: requiredNonEmptyString,\n  }),\n};\n\nconst getCategoryFacetMetadata = (\n  state: Partial<SearchAppState>,\n  {\n    categoryFacetId,\n    categoryFacetPath,\n  }: LogCategoryFacetBreadcrumbActionCreatorPayload\n): CategoryFacetMetadata => {\n  const facet = state.categoryFacetSet![categoryFacetId]!;\n  const categoryFacetField = facet?.request.field;\n  const categoryFacetTitle = `${categoryFacetField}_${categoryFacetId}`;\n  return {\n    categoryFacetId,\n    categoryFacetPath,\n    categoryFacetField,\n    categoryFacetTitle,\n  };\n};\n\n//TODO: KIT-2859\nexport const logCategoryFacetBreadcrumb = (\n  payload: LogCategoryFacetBreadcrumbActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/categoryFacet/breadcrumb', (client, state) => {\n    validatePayload(payload, categoryFacetBreadcrumbPayloadDefinition);\n\n    return client.makeBreadcrumbFacet(getCategoryFacetMetadata(state, payload));\n  });\n", "import {\n  makeAnalyticsAction,\n  SearchAction,\n} from '../../analytics/analytics-utils';\n\n//TODO: KIT-2859\nexport const logClearBreadcrumbs = (): SearchAction =>\n  makeAnalyticsAction('analytics/facet/deselectAllBreadcrumbs', (client) => {\n    return client.makeBreadcrumbResetAll();\n  });\n", "import type {FacetRangeMetadata} from 'coveo.analytics/dist/definitions/searchPage/searchPageEvents';\nimport {SearchAppState} from '../../../../state/search-app-state';\nimport {RangeFacetSelectionPayload} from './range-facet-validate-payload';\n\nexport const getRangeFacetMetadata = (\n  state: Partial<SearchAppState>,\n  {facetId, selection}: RangeFacetSelectionPayload\n): FacetRangeMetadata => {\n  const facet = state.dateFacetSet![facetId] || state.numericFacetSet![facetId];\n  const facetField = facet.request.field;\n  const facetTitle = `${facetField}_${facetId}`;\n  return {\n    facetId,\n    facetField,\n    facetTitle,\n    facetRangeEndInclusive: selection.endInclusive,\n    facetRangeEnd: `${selection.end}`,\n    facetRangeStart: `${selection.start}`,\n  };\n};\n", "import {validatePayload} from '../../../../utils/validate-payload';\nimport {\n  makeAnalyticsAction,\n  SearchAction,\n} from '../../../analytics/analytics-utils';\nimport {getRangeFacetMetadata} from '../generic/range-facet-analytics-actions';\nimport {rangeFacetSelectionPayloadDefinition} from '../generic/range-facet-validate-payload';\nimport {DateFacetValue} from './interfaces/response';\n\nexport interface LogDateFacetBreadcrumbActionCreatorPayload {\n  /**\n   * The facet id of the date facet corresponding to the breadcrumb.\n   */\n  facetId: string;\n\n  /**\n   * The date facet value deselected using the breadcrumb.\n   */\n  selection: DateFacetValue;\n}\n\n//TODO: KIT-2859\nexport const logDateFacetBreadcrumb = (\n  payload: LogDateFacetBreadcrumbActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/dateFacet/breadcrumb', (client, state) => {\n    validatePayload(\n      payload,\n      rangeFacetSelectionPayloadDefinition(payload.selection)\n    );\n    const metadata = getRangeFacetMetadata(state, payload);\n\n    return client.makeBreadcrumbFacet(metadata);\n  });\n", "import {validatePayload} from '../../../../utils/validate-payload';\nimport {\n  makeAnalyticsAction,\n  SearchAction,\n} from '../../../analytics/analytics-utils';\nimport {getRangeFacetMetadata} from '../generic/range-facet-analytics-actions';\nimport {rangeFacetSelectionPayloadDefinition} from '../generic/range-facet-validate-payload';\nimport {NumericFacetValue} from './interfaces/response';\n\nexport interface LogNumericFacetBreadcrumbActionCreatorPayload {\n  /**\n   * The facet id of the numeric facet corresponding to the breadcrumb.\n   */\n  facetId: string;\n\n  /**\n   * The numeric facet value deselected using the breadcrumb.\n   */\n  selection: NumericFacetValue;\n}\n\n//TODO: KIT-2859\nexport const logNumericFacetBreadcrumb = (\n  payload: LogNumericFacetBreadcrumbActionCreatorPayload\n): SearchAction =>\n  makeAnalyticsAction('analytics/numericFacet/breadcrumb', (client, state) => {\n    validatePayload(\n      payload,\n      rangeFacetSelectionPayloadDefinition(payload.selection)\n    );\n    const metadata = getRangeFacetMetadata(state, payload);\n\n    return client.makeBreadcrumbFacet(metadata);\n  });\n", "import {CoreEngine} from '../../../app/engine';\nimport {deselectAllBreadcrumbs} from '../../../features/breadcrumb/breadcrumb-actions';\nimport {CategoryFacetValue} from '../../../features/facets/category-facet-set/interfaces/response';\nimport {BaseFacetValue} from '../../../features/facets/facet-api/response';\nimport {FacetValueRequest} from '../../../features/facets/facet-set/interfaces/request';\nimport {FacetValue} from '../../../features/facets/facet-set/interfaces/response';\nimport {AnyFacetSetState} from '../../../features/facets/generic/interfaces/generic-facet-section';\nimport {DateRangeRequest} from '../../../features/facets/range-facets/date-facet-set/interfaces/request';\nimport {DateFacetValue} from '../../../features/facets/range-facets/date-facet-set/interfaces/response';\nimport {NumericRangeRequest} from '../../../features/facets/range-facets/numeric-facet-set/interfaces/request';\nimport {NumericFacetValue} from '../../../features/facets/range-facets/numeric-facet-set/interfaces/response';\nimport {\n  CategoryFacetSection,\n  ConfigurationSection,\n  DateFacetSection,\n  FacetSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\nimport {StaticFilterValue} from '../../static-filter/headless-static-filter';\n\n/**\n * The `BreadcrumbManager` headless controller manages a summary of the currently active facet filters.\n */\nexport interface BreadcrumbManager extends Controller {\n  /**\n   * Deselects all facet values.\n   */\n  deselectAll(): void;\n\n  /**\n   * Deselects a breadcrumb value.\n   * @param value - The breadcrumb value to deselect.\n   */\n  deselectBreadcrumb(value: DeselectableValue): void;\n\n  /**\n   * The state of the `BreadcrumbManager` controller.\n   */\n  state: BreadcrumbManagerState;\n}\n\n/**\n * A scoped and simplified part of the headless state that's relevant to the `BreadcrumbManager` controller.\n */\nexport interface BreadcrumbManagerState {\n  /**\n   * The list of specific facet breadcrumbs.\n   */\n  facetBreadcrumbs: FacetBreadcrumb[];\n\n  /**\n   * The list of category facet breadcrumbs.\n   */\n  categoryFacetBreadcrumbs: CategoryFacetBreadcrumb[];\n\n  /**\n   * The list of numeric facet breadcrumbs.\n   */\n  numericFacetBreadcrumbs: NumericFacetBreadcrumb[];\n\n  /**\n   * The list of date facet breadcrumbs.\n   */\n  dateFacetBreadcrumbs: DateFacetBreadcrumb[];\n\n  /**\n   * The list of static filter breadcrumbs.\n   */\n  staticFilterBreadcrumbs: StaticFilterBreadcrumb[];\n\n  /**\n   * Returns `true` if there are any available breadcrumbs (i.e., if there are any active facet values), and `false` if not.\n   */\n  hasBreadcrumbs: boolean;\n}\n\n/**\n * Represents a breadcrumb for a specific facet.\n */\nexport type FacetBreadcrumb = Breadcrumb<FacetValue>;\n\n/**\n * Represents a breadcrumb for a numerical facet.\n */\nexport type NumericFacetBreadcrumb = Breadcrumb<NumericFacetValue>;\n\n/**\n * Represents a breadcrumb for a date facet.\n */\nexport type DateFacetBreadcrumb = Breadcrumb<DateFacetValue>;\n\n/**\n * Represents a breadcrumb for a category facet.\n */\nexport interface CategoryFacetBreadcrumb extends DeselectableValue {\n  /**\n   * The ID of the underlying facet.\n   */\n  facetId: string;\n  /**\n   * The field on which the underlying facet is configured.\n   */\n  field: string;\n  /**\n   * The complete path to the underlying facet value.\n   */\n  path: CategoryFacetValue[];\n}\n\n/**\n * Represents a breadcrumb for a static filter.\n */\nexport interface StaticFilterBreadcrumb {\n  /**\n   * The ID of the underlying static filter.\n   */\n  id: string;\n\n  /**\n   * The list of static filter values currently selected.\n   */\n  values: StaticFilterBreadcrumbValue[];\n}\n\n/**\n * Represents a static filter breadcrumb value.\n */\ntype StaticFilterBreadcrumbValue = BreadcrumbValue<StaticFilterValue>;\n\n/**\n * Represents a generic breadcrumb type.\n *\n * This can be a `FacetBreadcrumb`, `NumericFacetBreadcrumb`, `DateFacetBreadcrumb`, or `CategoryFacetBreadcrumb`.\n */\nexport interface Breadcrumb<T extends BaseFacetValue> {\n  /**\n   * The ID of the underlying facet.\n   */\n  facetId: string;\n  /**\n   * The field on which the underlying facet is configured.\n   */\n  field: string;\n  /**\n   * The list of facet values currently selected.\n   */\n  values: BreadcrumbValue<T>[];\n}\n\n/**\n * Represents a generic breadcrumb value type.\n */\nexport interface BreadcrumbValue<T> extends DeselectableValue {\n  /**\n   * The underlying value linked to this breadcrumb.\n   */\n  value: T;\n}\n\nexport interface DeselectableValue {\n  /**\n   * A function that when called dispatches actions to deselect a breadcrumb value.\n   */\n  deselect(): void;\n}\n\n/**\n * @internal\n * Get the breadcrumb of the facet selected\n * @param engine headless engine\n * @param facetSet facet section\n * @param executeToggleSelect execute the toggle select action\n * @param executeToggleExclude execute the toggle exclude action\n * @param facetValuesSelector facet selector\n * @returns list breadcrumb of the facet selected\n */\nexport type GetBreadcrumbsConfiguration<T extends AnyFacetSetState> = {\n  engine: CoreEngine<\n    ConfigurationSection &\n      SearchSection &\n      FacetSection &\n      NumericFacetSection &\n      DateFacetSection &\n      CategoryFacetSection\n  >;\n  facetSet: T;\n  executeToggleSelect: (payload: {\n    facetId: string;\n    selection: InferFacetSliceValueType<T>;\n  }) => void;\n  executeToggleExclude: (payload: {\n    facetId: string;\n    selection: InferFacetSliceValueType<T>;\n  }) => void;\n  facetValuesSelector: (\n    state: CoreEngine<\n      ConfigurationSection &\n        SearchSection &\n        FacetSection &\n        NumericFacetSection &\n        DateFacetSection &\n        CategoryFacetSection\n    >['state'],\n    facetId: string\n  ) => InferFacetSliceValueType<T>[];\n};\n\ntype InferFacetSliceValueRequestType<T extends AnyFacetSetState> =\n  T[string]['request']['currentValues'][number];\n\nexport type InferFacetSliceValueType<T extends AnyFacetSetState> =\n  InferFacetSliceValueRequestType<T> extends FacetValueRequest\n    ? FacetValue\n    : InferFacetSliceValueRequestType<T> extends NumericRangeRequest\n      ? NumericFacetValue\n      : InferFacetSliceValueRequestType<T> extends DateRangeRequest\n        ? DateFacetValue\n        : CategoryFacetValue;\n\nexport const getBreadcrumbs = <T extends AnyFacetSetState>(\n  config: GetBreadcrumbsConfiguration<T>\n): Breadcrumb<InferFacetSliceValueType<T>>[] => {\n  return Object.keys(config.facetSet)\n    .map((facetId) => {\n      const values = config\n        .facetValuesSelector(config.engine.state, facetId)\n        .map((selection) => ({\n          value: selection,\n          deselect: () => {\n            if (selection.state === 'selected') {\n              config.executeToggleSelect({facetId, selection});\n            } else if (selection.state === 'excluded') {\n              config.executeToggleExclude({facetId, selection});\n            }\n          },\n        }));\n\n      return {\n        facetId,\n        field: config.facetSet[facetId]!.request.field,\n        values,\n      };\n    })\n    .filter((breadcrumb) => breadcrumb.values.length);\n};\n\n/**\n * Creates a `BreadcrumbManager` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `BreadcrumbManager` controller instance.\n */\nexport function buildCoreBreadcrumbManager(\n  engine: CoreEngine\n): BreadcrumbManager {\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        facetBreadcrumbs: [],\n        categoryFacetBreadcrumbs: [],\n        numericFacetBreadcrumbs: [],\n        dateFacetBreadcrumbs: [],\n        staticFilterBreadcrumbs: [],\n        hasBreadcrumbs: false,\n      };\n    },\n\n    deselectAll: () => {\n      dispatch(deselectAllBreadcrumbs());\n    },\n\n    deselectBreadcrumb(value: DeselectableValue) {\n      value.deselect();\n    },\n  };\n}\n", "import {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {configuration} from '../../app/common-reducers';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {toggleSelectAutomaticFacetValue} from '../../features/facets/automatic-facet-set/automatic-facet-set-actions';\nimport {AutomaticFacetResponse} from '../../features/facets/automatic-facet-set/interfaces/response';\nimport {deselectAllCategoryFacetValues} from '../../features/facets/category-facet-set/category-facet-set-actions';\nimport {logCategoryFacetBreadcrumb} from '../../features/facets/category-facet-set/category-facet-set-analytics-actions';\nimport {categoryFacetResponseSelectedValuesSelector} from '../../features/facets/category-facet-set/category-facet-set-selectors';\nimport {categoryFacetSetReducer as categoryFacetSet} from '../../features/facets/category-facet-set/category-facet-set-slice';\nimport {\n  toggleExcludeFacetValue,\n  toggleSelectFacetValue,\n  updateFreezeCurrentValues,\n} from '../../features/facets/facet-set/facet-set-actions';\nimport {logFacetBreadcrumb} from '../../features/facets/facet-set/facet-set-analytics-actions';\nimport {facetResponseActiveValuesSelector} from '../../features/facets/facet-set/facet-set-selectors';\nimport {facetSetReducer as facetSet} from '../../features/facets/facet-set/facet-set-slice';\nimport {FacetSlice} from '../../features/facets/facet-set/facet-set-state';\nimport {FacetValue} from '../../features/facets/facet-set/interfaces/response';\nimport {logClearBreadcrumbs} from '../../features/facets/generic/facet-generic-analytics-actions';\nimport {\n  toggleExcludeDateFacetValue,\n  toggleSelectDateFacetValue,\n} from '../../features/facets/range-facets/date-facet-set/date-facet-actions';\nimport {logDateFacetBreadcrumb} from '../../features/facets/range-facets/date-facet-set/date-facet-analytics-actions';\nimport {dateFacetActiveValuesSelector} from '../../features/facets/range-facets/date-facet-set/date-facet-selectors';\nimport {dateFacetSetReducer as dateFacetSet} from '../../features/facets/range-facets/date-facet-set/date-facet-set-slice';\nimport {DateFacetSlice} from '../../features/facets/range-facets/date-facet-set/date-facet-set-state';\nimport {\n  toggleExcludeNumericFacetValue,\n  toggleSelectNumericFacetValue,\n} from '../../features/facets/range-facets/numeric-facet-set/numeric-facet-actions';\nimport {logNumericFacetBreadcrumb} from '../../features/facets/range-facets/numeric-facet-set/numeric-facet-analytics-actions';\nimport {numericFacetActiveValuesSelector} from '../../features/facets/range-facets/numeric-facet-set/numeric-facet-selectors';\nimport {numericFacetSetReducer as numericFacetSet} from '../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {NumericFacetSlice} from '../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-state';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {\n  logStaticFilterDeselect,\n  toggleExcludeStaticFilterValue,\n  toggleSelectStaticFilterValue,\n} from '../../features/static-filter-set/static-filter-set-actions';\nimport {\n  StaticFilterSlice,\n  StaticFilterValue,\n} from '../../features/static-filter-set/static-filter-set-state';\nimport {\n  CategoryFacetSection,\n  ConfigurationSection,\n  DateFacetSection,\n  FacetSection,\n  NumericFacetSection,\n  SearchSection,\n} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {\n  Breadcrumb,\n  BreadcrumbManager as CoreBreadcrumbManager,\n  BreadcrumbManagerState as CoreBreadcrumbManagerState,\n  BreadcrumbValue,\n  buildCoreBreadcrumbManager,\n  CategoryFacetBreadcrumb,\n  DateFacetBreadcrumb,\n  DeselectableValue,\n  FacetBreadcrumb,\n  getBreadcrumbs,\n  GetBreadcrumbsConfiguration,\n  NumericFacetBreadcrumb,\n  StaticFilterBreadcrumb,\n} from '../core/breadcrumb-manager/headless-core-breadcrumb-manager';\n\nexport type {\n  NumericFacetBreadcrumb,\n  FacetBreadcrumb,\n  DateFacetBreadcrumb,\n  CategoryFacetBreadcrumb,\n  StaticFilterBreadcrumb,\n  Breadcrumb,\n  BreadcrumbValue,\n  DeselectableValue,\n  CoreBreadcrumbManager,\n  CoreBreadcrumbManagerState,\n};\n\n/**\n * The `BreadcrumbManager` headless controller manages a summary of the currently active facet filters.\n */\nexport interface BreadcrumbManager extends CoreBreadcrumbManager {\n  /**\n   * The state of the `BreadcrumbManager` controller.\n   */\n  state: BreadcrumbManagerState;\n}\nexport interface BreadcrumbManagerState extends CoreBreadcrumbManagerState {\n  /**\n   * The list of automatic facet breadcrumbs.\n   */\n  automaticFacetBreadcrumbs: AutomaticFacetBreadcrumb[];\n}\n\n/**\n * Represents a breadcrumb for an automatic facet.\n */\nexport interface AutomaticFacetBreadcrumb extends Breadcrumb<FacetValue> {\n  /**\n   * The label of the underlying facet.\n   */\n  label: string;\n}\n\n/**\n * Creates a `BreadcrumbManager` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `BreadcrumbManager` controller instance.\n */\nexport function buildBreadcrumbManager(\n  engine: SearchEngine\n): BreadcrumbManager {\n  if (!loadBreadcrumbManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildCoreBreadcrumbManager(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const getFacetBreadcrumbs = (): FacetBreadcrumb[] => {\n    const config: GetBreadcrumbsConfiguration<Record<string, FacetSlice>> = {\n      engine,\n      facetSet: getState().facetSet,\n      executeToggleSelect: ({facetId, selection}) => {\n        dispatch(toggleSelectFacetValue({facetId, selection}));\n        dispatch(\n          updateFreezeCurrentValues({facetId, freezeCurrentValues: false})\n        );\n        dispatch(\n          executeSearch({\n            legacy: logFacetBreadcrumb({\n              facetId: facetId,\n              facetValue: selection.value,\n            }),\n            next: {\n              actionCause: SearchPageEvents.breadcrumbFacet,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  facetId,\n                  selection.value\n                ),\n            },\n          })\n        );\n      },\n      executeToggleExclude: ({facetId, selection}) => {\n        dispatch(toggleExcludeFacetValue({facetId, selection}));\n        dispatch(\n          updateFreezeCurrentValues({facetId, freezeCurrentValues: false})\n        );\n        dispatch(\n          executeSearch({\n            legacy: logFacetBreadcrumb({\n              facetId: facetId,\n              facetValue: selection.value,\n            }),\n            next: {\n              actionCause: SearchPageEvents.breadcrumbFacet,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  facetId,\n                  selection.value\n                ),\n            },\n          })\n        );\n      },\n      facetValuesSelector: facetResponseActiveValuesSelector,\n    };\n\n    return getBreadcrumbs(config);\n  };\n\n  const getNumericFacetBreadcrumbs = (): NumericFacetBreadcrumb[] => {\n    const config: GetBreadcrumbsConfiguration<\n      Record<string, NumericFacetSlice>\n    > = {\n      engine,\n      facetSet: getState().numericFacetSet,\n      executeToggleSelect: (payload) => {\n        dispatch(toggleSelectNumericFacetValue(payload));\n        dispatch(\n          executeSearch({\n            legacy: logNumericFacetBreadcrumb(payload),\n            next: {\n              actionCause: SearchPageEvents.breadcrumbFacet,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(\n                  () => state\n                ).getRangeFacetBreadcrumbMetadata(\n                  payload.facetId,\n                  payload.selection\n                ),\n            },\n          })\n        );\n      },\n      executeToggleExclude: (payload) => {\n        dispatch(toggleExcludeNumericFacetValue(payload));\n        dispatch(\n          executeSearch({\n            legacy: logNumericFacetBreadcrumb(payload),\n            next: {\n              actionCause: SearchPageEvents.breadcrumbFacet,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(\n                  () => state\n                ).getRangeFacetBreadcrumbMetadata(\n                  payload.facetId,\n                  payload.selection\n                ),\n            },\n          })\n        );\n      },\n      facetValuesSelector: numericFacetActiveValuesSelector,\n    };\n    return getBreadcrumbs(config);\n  };\n\n  const getDateFacetBreadcrumbs = (): DateFacetBreadcrumb[] => {\n    const config: GetBreadcrumbsConfiguration<Record<string, DateFacetSlice>> =\n      {\n        engine,\n        facetSet: getState().dateFacetSet,\n        executeToggleSelect: (payload) => {\n          dispatch(toggleSelectDateFacetValue(payload));\n          dispatch(\n            executeSearch({\n              legacy: logDateFacetBreadcrumb(payload),\n              next: {\n                actionCause: SearchPageEvents.breadcrumbFacet,\n                getEventExtraPayload: (state) =>\n                  new SearchAnalyticsProvider(\n                    () => state\n                  ).getRangeFacetBreadcrumbMetadata(\n                    payload.facetId,\n                    payload.selection\n                  ),\n              },\n            })\n          );\n        },\n        executeToggleExclude: (payload) => {\n          dispatch(toggleExcludeDateFacetValue(payload));\n          dispatch(\n            executeSearch({\n              legacy: logDateFacetBreadcrumb(payload),\n              next: {\n                actionCause: SearchPageEvents.breadcrumbFacet,\n                getEventExtraPayload: (state) =>\n                  new SearchAnalyticsProvider(\n                    () => state\n                  ).getRangeFacetBreadcrumbMetadata(\n                    payload.facetId,\n                    payload.selection\n                  ),\n              },\n            })\n          );\n        },\n        facetValuesSelector: dateFacetActiveValuesSelector,\n      };\n\n    return getBreadcrumbs(config);\n  };\n\n  const getCategoryFacetBreadcrumbs = (): CategoryFacetBreadcrumb[] => {\n    return Object.keys(getState().categoryFacetSet)\n      .map(buildCategoryFacetBreadcrumb)\n      .filter((breadcrumb) => breadcrumb.path.length);\n  };\n\n  const buildCategoryFacetBreadcrumb = (facetId: string) => {\n    const path = categoryFacetResponseSelectedValuesSelector(\n      getState(),\n      facetId\n    );\n    return {\n      facetId,\n      field: getState().categoryFacetSet[facetId]!.request.field,\n      path,\n      deselect: () => {\n        dispatch(deselectAllCategoryFacetValues(facetId));\n        dispatch(\n          executeSearch({\n            legacy: logCategoryFacetBreadcrumb({\n              categoryFacetPath: path.map(\n                (categoryFacetValue) => categoryFacetValue.value\n              ),\n              categoryFacetId: facetId,\n            }),\n            next: {\n              actionCause: SearchPageEvents.breadcrumbFacet,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(\n                  () => state\n                ).getCategoryFacetBreadcrumbMetadata(\n                  facetId,\n                  path.map((categoryFacetValue) => categoryFacetValue.value)\n                ),\n            },\n          })\n        );\n      },\n    };\n  };\n\n  const getStaticFilterBreadcrumbs = (): StaticFilterBreadcrumb[] => {\n    const set = getState().staticFilterSet ?? {};\n    return Object.values(set).map(buildStaticFilterBreadcrumb);\n  };\n\n  const buildStaticFilterBreadcrumb = (\n    filter: StaticFilterSlice\n  ): StaticFilterBreadcrumb => {\n    const {id, values: filterValues} = filter;\n    const values = filterValues\n      .filter((value) => value.state !== 'idle')\n      .map((value) => buildStaticFilterBreadcrumbValue(id, value));\n\n    return {id, values};\n  };\n\n  const buildStaticFilterBreadcrumbValue = (\n    id: string,\n    value: StaticFilterValue\n  ) => {\n    return {\n      value,\n      deselect: () => {\n        const {caption, expression} = value;\n        const analytics = logStaticFilterDeselect({\n          staticFilterId: id,\n          staticFilterValue: {caption, expression},\n        });\n\n        if (value.state === 'selected') {\n          dispatch(toggleSelectStaticFilterValue({id, value}));\n        } else if (value.state === 'excluded') {\n          dispatch(toggleExcludeStaticFilterValue({id, value}));\n        }\n        dispatch(executeSearch({legacy: analytics}));\n      },\n    };\n  };\n\n  const getAutomaticFacetBreadcrumbs = (): AutomaticFacetBreadcrumb[] => {\n    const set = getState().automaticFacetSet?.set ?? {};\n    return Object.values(set).map((slice) =>\n      buildAutomaticFacetBreadcrumb(slice.response)\n    );\n  };\n\n  const buildAutomaticFacetBreadcrumb = (\n    response: AutomaticFacetResponse\n  ): AutomaticFacetBreadcrumb => {\n    const {field, label} = response;\n    const values = response.values\n      .filter((value) => value.state === 'selected')\n      .map((value) => buildAutomaticFacetBreadcrumbValue(field, value));\n    return {\n      facetId: field,\n      field,\n      label,\n      values,\n    };\n  };\n\n  const buildAutomaticFacetBreadcrumbValue = (\n    field: string,\n    selection: FacetValue\n  ) => {\n    return {\n      value: selection,\n      deselect: () => {\n        dispatch(\n          toggleSelectAutomaticFacetValue({\n            field,\n            selection,\n          })\n        );\n        dispatch(\n          executeSearch({\n            legacy: logFacetBreadcrumb({\n              facetId: field,\n              facetValue: selection.value,\n            }),\n            next: {\n              actionCause: SearchPageEvents.breadcrumbFacet,\n              getEventExtraPayload: (state) =>\n                new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                  field,\n                  selection.value\n                ),\n            },\n          })\n        );\n      },\n    };\n  };\n\n  function hasBreadcrumbs() {\n    return !![\n      ...getFacetBreadcrumbs(),\n      ...getNumericFacetBreadcrumbs(),\n      ...getDateFacetBreadcrumbs(),\n      ...getCategoryFacetBreadcrumbs(),\n      ...getStaticFilterBreadcrumbs(),\n      ...getAutomaticFacetBreadcrumbs(),\n    ].length;\n  }\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        facetBreadcrumbs: getFacetBreadcrumbs(),\n        categoryFacetBreadcrumbs: getCategoryFacetBreadcrumbs(),\n        numericFacetBreadcrumbs: getNumericFacetBreadcrumbs(),\n        dateFacetBreadcrumbs: getDateFacetBreadcrumbs(),\n        staticFilterBreadcrumbs: getStaticFilterBreadcrumbs(),\n        automaticFacetBreadcrumbs: getAutomaticFacetBreadcrumbs(),\n        hasBreadcrumbs: hasBreadcrumbs(),\n      };\n    },\n\n    deselectAll: () => {\n      controller.deselectAll();\n      dispatch(\n        executeSearch({\n          legacy: logClearBreadcrumbs(),\n          next: {\n            actionCause: SearchPageEvents.breadcrumbResetAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n          },\n        })\n      );\n    },\n  };\n}\n\nfunction loadBreadcrumbManagerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  ConfigurationSection &\n    SearchSection &\n    FacetSection &\n    NumericFacetSection &\n    DateFacetSection &\n    CategoryFacetSection\n> {\n  engine.addReducers({\n    configuration,\n    search,\n    facetSet,\n    numericFacetSet,\n    dateFacetSet,\n    categoryFacetSet,\n  });\n\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  BreadcrumbManager,\n  buildBreadcrumbManager,\n} from './headless-breadcrumb-manager';\n\nexport * from './headless-breadcrumb-manager';\n\n/**\n * @internal\n */\nexport const defineBreadcrumbManager = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  BreadcrumbManager\n> => ({\n  build: (engine) => buildBreadcrumbManager(engine),\n});\n", "/**\n * A trigger is an action that the interface will perform (show a message, execute a function, redirect users) depending on the query that was performed.<br/>\n * A trigger that can be configured in the Coveo Query Pipeline.\n */\nexport type Trigger =\n  | TriggerNotify\n  | TriggerRedirect\n  | TriggerQuery\n  | TriggerExecute;\n\n/**\n * Notify (show a message) to a user\n */\nexport interface TriggerNotify {\n  type: 'notify';\n  content: string;\n}\n\nexport function isNotifyTrigger(trigger: Trigger): trigger is TriggerNotify {\n  return trigger.type === 'notify';\n}\n\n/**\n * Redirect the user to another url\n */\nexport interface TriggerRedirect {\n  type: 'redirect';\n  content: string;\n}\n\nexport function isRedirectTrigger(\n  trigger: Trigger\n): trigger is TriggerRedirect {\n  return trigger.type === 'redirect';\n}\n\n/**\n * Perform a new query with a different query expression\n */\nexport interface TriggerQuery {\n  type: 'query';\n  content: string;\n}\n\nexport function isQueryTrigger(trigger: Trigger): trigger is TriggerQuery {\n  return trigger.type === 'query';\n}\n\n/**\n * Execute a javascript function present in the page.\n */\nexport interface TriggerExecute {\n  type: 'execute';\n  content: {name: string; params: ExecuteTriggerParams};\n}\n\n/**\n * The type of the parameters for a Trigger Execute object.\n */\nexport type ExecuteTriggerParams = (string | number | boolean)[];\n\nexport function isExecuteTrigger(trigger: Trigger): trigger is TriggerExecute {\n  return trigger.type === 'execute';\n}\n", "import {isRedirectTrigger} from '../trigger';\nimport {PlanResponseSuccess} from './plan-response';\n\n/**\n * The plan of execution of a search request.\n */\nexport class ExecutionPlan {\n  constructor(private response: PlanResponseSuccess) {}\n\n  /**\n   * Gets the final value of the basic expression (`q`) after the search request has been processed in the query pipeline, but before it is sent to the index.\n   */\n  public get basicExpression() {\n    return this.response.parsedInput.basicExpression;\n  }\n\n  /**\n   * Gets the final value of the large expression (`lq`) after the search request has been processed in the query pipeline, but before it is sent to the index.\n   */\n  public get largeExpression() {\n    return this.response.parsedInput.largeExpression;\n  }\n\n  /**\n   * Gets the URL to redirect the browser to, if the search request satisfies the condition of a `redirect` trigger rule in the query pipeline.\n   *\n   * Returns `null` otherwise.\n   */\n  public get redirectionUrl() {\n    const redirects =\n      this.response.preprocessingOutput.triggers.filter(isRedirectTrigger);\n    return redirects.length ? redirects[0].content : null;\n  }\n}\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {getVisitorID} from '../../api/analytics/coveo-analytics-utils';\nimport {ExecutionPlan} from '../../api/search/plan/plan-endpoint';\nimport {PlanRequest} from '../../api/search/plan/plan-request';\nimport {\n  AsyncThunkSearchOptions,\n  isErrorResponse,\n} from '../../api/search/search-api-client';\nimport {\n  ConfigurationSection,\n  ContextSection,\n  PipelineSection,\n  QuerySection,\n  SearchHubSection,\n} from '../../state/state-sections';\nimport {\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload';\nimport {CustomAction, makeAnalyticsAction} from '../analytics/analytics-utils';\nimport {fromAnalyticsStateToAnalyticsParams} from '../configuration/analytics-params';\nimport {OmniboxSuggestionMetadata} from '../query-suggest/query-suggest-analytics-actions';\n\nexport interface RegisterStandaloneSearchBoxActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The default URL to which to redirect the user.\n   */\n  redirectionUrl: string;\n}\n\nexport const registerStandaloneSearchBox = createAction(\n  'standaloneSearchBox/register',\n  (payload: RegisterStandaloneSearchBoxActionCreatorPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n      redirectionUrl: requiredNonEmptyString,\n    })\n);\n\nexport interface ResetStandaloneSearchBoxActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const resetStandaloneSearchBox = createAction(\n  'standaloneSearchBox/reset',\n  (payload: ResetStandaloneSearchBoxActionCreatorPayload) =>\n    validatePayload(payload, {\n      id: requiredNonEmptyString,\n    })\n);\n\nexport interface UpdateAnalyticsToSearchFromLinkActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const updateAnalyticsToSearchFromLink = createAction(\n  'standaloneSearchBox/updateAnalyticsToSearchFromLink',\n  (payload: UpdateAnalyticsToSearchFromLinkActionCreatorPayload) =>\n    validatePayload(payload, {id: requiredNonEmptyString})\n);\n\nexport interface UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n\n  /**\n   * The metadata of the suggestion selected from the standalone search box.\n   */\n  metadata: OmniboxSuggestionMetadata;\n}\n\nexport const updateAnalyticsToOmniboxFromLink =\n  createAction<UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload>(\n    'standaloneSearchBox/updateAnalyticsToOmniboxFromLink'\n  );\n\nexport type StateNeededForRedirect = ConfigurationSection &\n  QuerySection &\n  Partial<ContextSection & SearchHubSection & PipelineSection>;\n\nexport interface FetchRedirectUrlActionCreatorPayload {\n  /**\n   * The standalone search box id.\n   */\n  id: string;\n}\n\nexport const fetchRedirectUrl = createAsyncThunk<\n  string,\n  FetchRedirectUrlActionCreatorPayload,\n  AsyncThunkSearchOptions<StateNeededForRedirect>\n>(\n  'standaloneSearchBox/fetchRedirect',\n  async (\n    payload,\n    {dispatch, getState, rejectWithValue, extra: {apiClient, validatePayload}}\n  ) => {\n    validatePayload(payload, {id: new StringValue({emptyAllowed: false})});\n    const request = await buildPlanRequest(getState());\n    const response = await apiClient.plan(request);\n    if (isErrorResponse(response)) {\n      return rejectWithValue(response.error);\n    }\n\n    const {redirectionUrl} = new ExecutionPlan(response.success);\n\n    if (redirectionUrl) {\n      dispatch(logRedirect(redirectionUrl));\n    }\n\n    return redirectionUrl || '';\n  }\n);\n\nconst logRedirect = (url: string): CustomAction =>\n  makeAnalyticsAction('analytics/standaloneSearchBox/redirect', (client) =>\n    client.makeTriggerRedirect({redirectedTo: url})\n  );\n\nexport const buildPlanRequest = async (\n  state: StateNeededForRedirect\n): Promise<PlanRequest> => {\n  return {\n    accessToken: state.configuration.accessToken,\n    organizationId: state.configuration.organizationId,\n    url: state.configuration.search.apiBaseUrl,\n    locale: state.configuration.search.locale,\n    timezone: state.configuration.search.timezone,\n    q: state.query.q,\n    ...(state.context && {context: state.context.contextValues}),\n    ...(state.pipeline && {pipeline: state.pipeline}),\n    ...(state.searchHub && {searchHub: state.searchHub}),\n    ...(state.configuration.analytics.enabled && {\n      visitorId: await getVisitorID(state.configuration.analytics),\n    }),\n    ...(state.configuration.analytics.enabled &&\n      (await fromAnalyticsStateToAnalyticsParams(\n        state.configuration.analytics\n      ))),\n    ...(state.configuration.search.authenticationProviders.length && {\n      authentication:\n        state.configuration.search.authenticationProviders.join(','),\n    }),\n  };\n};\n", "import {OmniboxSuggestionMetadata} from '../query-suggest/query-suggest-analytics-actions';\n\nexport type StandaloneSearchBoxSetState = Record<\n  string,\n  StandaloneSearchBoxEntry | undefined\n>;\n\nexport type StandaloneSearchBoxEntry = {\n  defaultRedirectionUrl: string;\n  analytics: StandaloneSearchBoxAnalytics;\n  redirectTo: string;\n  isLoading: boolean;\n};\n\nexport type StandaloneSearchBoxAnalytics =\n  | InitialData\n  | SearchFromLinkData\n  | OmniboxFromLinkData;\n\ninterface InitialData {\n  cause: '';\n  metadata: null;\n}\n\ninterface SearchFromLinkData {\n  cause: 'searchFromLink';\n  metadata: null;\n}\n\ninterface OmniboxFromLinkData {\n  cause: 'omniboxFromLink';\n  metadata: OmniboxSuggestionMetadata;\n}\n\nexport function getStandaloneSearchBoxSetInitialState(): StandaloneSearchBoxSetState {\n  return {};\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  fetchRedirectUrl,\n  registerStandaloneSearchBox,\n  resetStandaloneSearchBox,\n  updateAnalyticsToOmniboxFromLink,\n  updateAnalyticsToSearchFromLink,\n} from './standalone-search-box-set-actions';\nimport {\n  getStandaloneSearchBoxSetInitialState,\n  StandaloneSearchBoxEntry,\n} from './standalone-search-box-set-state';\n\nexport const standaloneSearchBoxSetReducer = createReducer(\n  getStandaloneSearchBoxSetInitialState(),\n  (builder) =>\n    builder\n      .addCase(registerStandaloneSearchBox, (state, action) => {\n        const {id, redirectionUrl} = action.payload;\n\n        if (id in state) {\n          return;\n        }\n\n        state[id] = buildStandaloneSearchBoxEntry(redirectionUrl);\n      })\n      .addCase(resetStandaloneSearchBox, (state, action) => {\n        const {id} = action.payload;\n        const searchBox = state[id];\n\n        if (searchBox) {\n          state[id] = buildStandaloneSearchBoxEntry(\n            searchBox.defaultRedirectionUrl\n          );\n          return;\n        }\n      })\n      .addCase(fetchRedirectUrl.pending, (state, action) => {\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.isLoading = true;\n      })\n      .addCase(fetchRedirectUrl.fulfilled, (state, action) => {\n        const url = action.payload;\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.redirectTo = url ? url : searchBox.defaultRedirectionUrl;\n        searchBox.isLoading = false;\n      })\n      .addCase(fetchRedirectUrl.rejected, (state, action) => {\n        const searchBox = state[action.meta.arg.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.isLoading = false;\n      })\n      .addCase(updateAnalyticsToSearchFromLink, (state, action) => {\n        const searchBox = state[action.payload.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.analytics.cause = 'searchFromLink';\n      })\n      .addCase(updateAnalyticsToOmniboxFromLink, (state, action) => {\n        const searchBox = state[action.payload.id];\n\n        if (!searchBox) {\n          return;\n        }\n\n        searchBox.analytics.cause = 'omniboxFromLink';\n        searchBox.analytics.metadata = action.payload.metadata;\n      })\n);\n\nfunction buildStandaloneSearchBoxEntry(\n  defaultRedirectionUrl: string\n): StandaloneSearchBoxEntry {\n  return {\n    defaultRedirectionUrl,\n    redirectTo: '',\n    isLoading: false,\n    analytics: {\n      cause: '',\n      metadata: null,\n    },\n  };\n}\n", "import {Schema, StringValue} from '@coveo/bueno';\nimport {\n  searchBoxOptionDefinitions,\n  SearchBoxOptions,\n} from '../core/search-box/headless-core-search-box-options';\n\nexport interface StandaloneSearchBoxOptions extends SearchBoxOptions {\n  /**\n   * The default Url the user should be redirected to, when a query is submitted.\n   * If a query pipeline redirect is triggered, it will redirect to that Url instead.\n   */\n  redirectionUrl: string;\n}\n\nexport const standaloneSearchBoxSchema = new Schema<\n  Required<StandaloneSearchBoxOptions>\n>({\n  ...searchBoxOptionDefinitions,\n  redirectionUrl: new StringValue({\n    required: true,\n    emptyAllowed: false,\n  }),\n});\n", "import {configuration} from '../../app/common-reducers';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {selectQuerySuggestion} from '../../features/query-suggest/query-suggest-actions';\nimport {buildOmniboxSuggestionMetadata} from '../../features/query-suggest/query-suggest-analytics-actions';\nimport {querySuggestReducer as querySuggest} from '../../features/query-suggest/query-suggest-slice';\nimport {updateQuery} from '../../features/query/query-actions';\nimport {queryReducer as query} from '../../features/query/query-slice';\nimport {\n  fetchRedirectUrl,\n  registerStandaloneSearchBox,\n  updateAnalyticsToOmniboxFromLink,\n  updateAnalyticsToSearchFromLink,\n  resetStandaloneSearchBox,\n} from '../../features/standalone-search-box-set/standalone-search-box-set-actions';\nimport {standaloneSearchBoxSetReducer as standaloneSearchBoxSet} from '../../features/standalone-search-box-set/standalone-search-box-set-slice';\nimport {StandaloneSearchBoxAnalytics} from '../../features/standalone-search-box-set/standalone-search-box-set-state';\nimport {\n  ConfigurationSection,\n  QuerySection,\n  QuerySuggestionSection,\n  StandaloneSearchBoxSection,\n} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {randomID} from '../../utils/utils';\nimport {validateOptions} from '../../utils/validate-payload';\nimport {defaultSearchBoxOptions} from '../core/search-box/headless-core-search-box-options';\nimport {\n  buildSearchBox,\n  SearchBox,\n  SearchBoxState,\n} from '../search-box/headless-search-box';\nimport {\n  StandaloneSearchBoxOptions,\n  standaloneSearchBoxSchema,\n} from './headless-standalone-search-box-options';\n\nexport type {StandaloneSearchBoxOptions, StandaloneSearchBoxAnalytics};\n\nexport interface StandaloneSearchBoxProps {\n  options: StandaloneSearchBoxOptions;\n}\n\n/**\n * The `StandaloneSearchBox` headless controller offers a high-level interface for designing a common search box UI controller.\n * Meant to be used for a search box that will redirect instead of executing a query.\n */\nexport interface StandaloneSearchBox extends SearchBox {\n  /**\n   * Triggers a redirection.\n   */\n  submit(): void;\n\n  /**\n   * Resets the standalone search box state. To be dispatched on single page applications after the redirection has been triggered.\n   */\n  afterRedirection(): void;\n\n  /**\n   * A scoped and simplified part of the headless state that is relevant to the `StandaloneSearchBox` controller.\n   */\n  state: StandaloneSearchBoxState;\n}\n\nexport interface StandaloneSearchBoxState extends SearchBoxState {\n  /**\n   * The analytics data to send when performing the first query on the search page the user is redirected to.\n   */\n  analytics: StandaloneSearchBoxAnalytics;\n\n  /**\n   * The Url to redirect to.\n   */\n  redirectTo: string;\n}\n\n/**\n * Creates a `StandaloneSearchBox` instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `StandaloneSearchBox` properties.\n * @returns A `StandaloneSearchBox` instance.\n */\nexport function buildStandaloneSearchBox(\n  engine: SearchEngine,\n  props: StandaloneSearchBoxProps\n): StandaloneSearchBox {\n  if (!loadStandaloneSearchBoxReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const id = props.options.id || randomID('standalone_search_box');\n  const options: Required<StandaloneSearchBoxOptions> = {\n    id,\n    highlightOptions: {...props.options.highlightOptions},\n    ...defaultSearchBoxOptions,\n    ...props.options,\n  };\n\n  validateOptions(\n    engine,\n    standaloneSearchBoxSchema,\n    options,\n    'buildStandaloneSearchBox'\n  );\n\n  const searchBox = buildSearchBox(engine, {options});\n  dispatch(\n    registerStandaloneSearchBox({id, redirectionUrl: options.redirectionUrl})\n  );\n\n  return {\n    ...searchBox,\n\n    updateText(value: string) {\n      searchBox.updateText(value);\n      dispatch(updateAnalyticsToSearchFromLink({id}));\n    },\n\n    selectSuggestion(value: string) {\n      const metadata = buildOmniboxSuggestionMetadata(getState(), {\n        id,\n        suggestion: value,\n      });\n\n      dispatch(selectQuerySuggestion({id, expression: value}));\n      dispatch(updateAnalyticsToOmniboxFromLink({id, metadata}));\n\n      this.submit();\n    },\n\n    afterRedirection() {\n      dispatch(resetStandaloneSearchBox({id}));\n    },\n\n    submit() {\n      dispatch(\n        updateQuery({\n          q: this.state.value,\n          enableQuerySyntax: options.enableQuerySyntax,\n        })\n      );\n      dispatch(fetchRedirectUrl({id}));\n    },\n\n    get state() {\n      const state = getState();\n      const standaloneSearchBoxState = state.standaloneSearchBoxSet[id]!;\n      return {\n        ...searchBox.state,\n        isLoading: standaloneSearchBoxState.isLoading,\n        redirectTo: standaloneSearchBoxState.redirectTo,\n        analytics: standaloneSearchBoxState.analytics,\n      };\n    },\n  };\n}\n\nfunction loadStandaloneSearchBoxReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  StandaloneSearchBoxSection &\n    ConfigurationSection &\n    QuerySection &\n    QuerySuggestionSection\n> {\n  engine.addReducers({\n    standaloneSearchBoxSet,\n    configuration,\n    query,\n    querySuggest,\n  });\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  StandaloneSearchBox,\n  StandaloneSearchBoxProps,\n  buildStandaloneSearchBox,\n} from './headless-standalone-search-box';\n\nexport * from './headless-standalone-search-box';\n\n/**\n * @internal\n */\nexport const defineStandaloneSearchBox = (\n  props: StandaloneSearchBoxProps\n): ControllerDefinitionWithoutProps<SearchEngine, StandaloneSearchBox> => ({\n  build: (engine) => buildStandaloneSearchBox(engine, props),\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {deselectAllBreadcrumbs} from '../../breadcrumb/breadcrumb-actions';\nimport {change} from '../../history/history-actions';\nimport {restoreSearchParameters} from '../../search-parameters/search-parameter-actions';\nimport {executeSearch} from '../../search/search-actions';\nimport {FacetValue} from '../facet-set/interfaces/response';\nimport {\n  deselectAllAutomaticFacetValues,\n  setOptions,\n  toggleSelectAutomaticFacetValue,\n} from './automatic-facet-set-actions';\nimport {getAutomaticFacetSetInitialState} from './automatic-facet-set-state';\nimport {AutomaticFacetResponse} from './interfaces/response';\n\nexport const automaticFacetSetReducer = createReducer(\n  getAutomaticFacetSetInitialState(),\n  (builder) => {\n    builder\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        state.set = {};\n\n        const facets = action.payload.response.generateAutomaticFacets?.facets;\n        facets?.forEach((response) => {\n          state.set[response.field] = {response};\n        });\n      })\n      .addCase(setOptions, (state, action) => {\n        if (action.payload.desiredCount) {\n          state.desiredCount = action.payload.desiredCount;\n        }\n        if (action.payload.numberOfValues) {\n          state.numberOfValues = action.payload.numberOfValues;\n        }\n      })\n      .addCase(toggleSelectAutomaticFacetValue, (state, action) => {\n        const {field, selection} = action.payload;\n        const facet = state.set[field]?.response;\n\n        if (!facet) {\n          return;\n        }\n        const value = facet.values.find(\n          (value) => value.value === selection.value\n        );\n        if (!value) {\n          return;\n        }\n        const isSelected = value.state === 'selected';\n        value.state = isSelected ? 'idle' : 'selected';\n      })\n      .addCase(deselectAllAutomaticFacetValues, (state, action) => {\n        const field = action.payload;\n        const facet = state.set[field]?.response;\n\n        if (!facet) {\n          return;\n        }\n        for (const value of facet.values) {\n          value.state = 'idle';\n        }\n      })\n      .addCase(restoreSearchParameters, (state, action) => {\n        const af = action.payload.af ?? {};\n        const currentFields = Object.keys(state.set);\n\n        // Add facets in af that are not in facet set\n        for (const field in af) {\n          if (!state.set[field]) {\n            const response = buildTemporaryAutomaticFacetResponse(field);\n            const values = af[field].map((value) =>\n              buildTemporarySelectedFacetValue(value)\n            );\n            response.values.push(...values);\n            state.set[field] = {response};\n          }\n        }\n\n        // Unselected facets in set that are not in af\n        for (const field of currentFields) {\n          if (!(field in af)) {\n            const facet = state.set[field]?.response;\n            for (const value of facet.values) {\n              value.state = 'idle';\n            }\n          }\n        }\n\n        // Sync value state for facets in set and af\n        for (const field in af) {\n          const facet = state.set[field]?.response;\n          if (facet) {\n            const values = facet.values;\n            for (const value of values) {\n              if (!af[field].includes(value.value)) {\n                value.state = 'idle';\n              } else if (value.state === 'idle') {\n                value.state = 'selected';\n              }\n            }\n          }\n        }\n      })\n      .addCase(change.fulfilled, (_, action) => {\n        if (!action.payload) {\n          return;\n        }\n\n        if (Object.keys(action.payload.automaticFacetSet.set).length === 0) {\n          return;\n        }\n\n        return action.payload.automaticFacetSet;\n      })\n      .addCase(deselectAllBreadcrumbs, (state) => {\n        Object.values(state.set).forEach(({response}) => {\n          response.values.forEach((value) => (value.state = 'idle'));\n        });\n      });\n  }\n);\n\nfunction buildTemporaryAutomaticFacetResponse(\n  field: string\n): AutomaticFacetResponse {\n  return {\n    field,\n    values: [],\n    moreValuesAvailable: false,\n    label: '',\n    indexScore: 0,\n  };\n}\n\nfunction buildTemporarySelectedFacetValue(value: string): FacetValue {\n  return {\n    value,\n    state: 'selected',\n    numberOfResults: 0,\n  };\n}\n", "import {StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nconst optionalAndPossiblyEmpty = () =>\n  new StringValue({required: false, emptyAllowed: true});\nexport interface AdvancedSearchQueryActionCreatorPayload {\n  /**\n   * The advanced query.\n   */\n  aq?: string;\n\n  /**\n   * The constant query.\n   */\n  cq?: string;\n\n  /**\n   * The large query.\n   */\n  lq?: string;\n\n  /**\n   * The disjunction query\n   */\n  dq?: string;\n}\n\nexport const updateAdvancedSearchQueries = createAction(\n  'advancedSearchQueries/update',\n  (payload: AdvancedSearchQueryActionCreatorPayload) =>\n    validatePayload(payload, {\n      aq: optionalAndPossiblyEmpty(),\n      cq: optionalAndPossiblyEmpty(),\n      lq: optionalAndPossiblyEmpty(),\n      dq: optionalAndPossiblyEmpty(),\n    })\n);\n\nexport const registerAdvancedSearchQueries = createAction(\n  'advancedSearchQueries/register',\n  (payload: AdvancedSearchQueryActionCreatorPayload) =>\n    validatePayload(payload, {\n      aq: optionalAndPossiblyEmpty(),\n      cq: optionalAndPossiblyEmpty(),\n      lq: optionalAndPossiblyEmpty(),\n      dq: optionalAndPossiblyEmpty(),\n    })\n);\n", "import {isUndefined} from '@coveo/bueno';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {change} from '../history/history-actions';\nimport {restoreSearchParameters} from '../search-parameters/search-parameter-actions';\nimport {\n  registerAdvancedSearchQueries,\n  updateAdvancedSearchQueries,\n} from './advanced-search-queries-actions';\nimport {getAdvancedSearchQueriesInitialState} from './advanced-search-queries-state';\n\nexport const advancedSearchQueriesReducer = createReducer(\n  getAdvancedSearchQueriesInitialState(),\n  (builder) => {\n    builder\n      .addCase(updateAdvancedSearchQueries, (state, action) => {\n        const {aq, cq, lq, dq} = action.payload;\n        if (!isUndefined(aq)) {\n          state.aq = aq;\n          state.aqWasSet = true;\n        }\n        if (!isUndefined(cq)) {\n          state.cq = cq;\n          state.cqWasSet = true;\n        }\n        if (!isUndefined(lq)) {\n          state.lq = lq;\n          state.lqWasSet = true;\n        }\n        if (!isUndefined(dq)) {\n          state.dq = dq;\n          state.dqWasSet = true;\n        }\n      })\n      .addCase(registerAdvancedSearchQueries, (state, action) => {\n        const {aq, cq, lq, dq} = action.payload;\n        if (!isUndefined(aq)) {\n          state.defaultFilters.aq = aq;\n          if (!state.aqWasSet) {\n            state.aq = aq;\n          }\n        }\n        if (!isUndefined(cq)) {\n          state.defaultFilters.cq = cq;\n          if (!state.cqWasSet) {\n            state.cq = cq;\n          }\n        }\n        if (!isUndefined(lq)) {\n          state.defaultFilters.lq = lq;\n          if (!state.lqWasSet) {\n            state.lq = lq;\n          }\n        }\n        if (!isUndefined(dq)) {\n          state.defaultFilters.dq = dq;\n          if (!state.dqWasSet) {\n            state.dq = dq;\n          }\n        }\n      })\n      .addCase(\n        change.fulfilled,\n        (state, action) => action.payload?.advancedSearchQueries ?? state\n      )\n      .addCase(restoreSearchParameters, (state, action) => {\n        const {aq, cq} = action.payload;\n        if (!isUndefined(aq)) {\n          state.aq = aq;\n          state.aqWasSet = true;\n        }\n        if (!isUndefined(cq)) {\n          state.cq = cq;\n          state.cqWasSet = true;\n        }\n      });\n  }\n);\n", "import {DateRangeRequest, NumericRangeRequest} from '../../controllers';\nimport {\n  logFacetClearAll,\n  logFacetDeselect,\n  logFacetSelect,\n  logFacetExclude,\n} from '../../features/facets/facet-set/facet-set-analytics-actions';\nimport {logSearchboxSubmit} from '../../features/query/query-analytics-actions';\nimport {SearchParameters} from '../../features/search-parameters/search-parameter-actions';\nimport {logResultsSort} from '../../features/sort-criteria/sort-criteria-analytics-actions';\nimport {logInterfaceChange} from '../analytics/analytics-actions';\nimport {SearchAction} from '../analytics/analytics-utils';\nimport {\n  logPageNumber,\n  logPagerResize,\n} from '../pagination/pagination-analytics-actions';\n\nexport function logParametersChange(\n  previousParameters: SearchParameters,\n  newParameters: SearchParameters\n): SearchAction {\n  if (previousParameters.q !== newParameters.q) {\n    return logSearchboxSubmit();\n  }\n\n  if (previousParameters.sortCriteria !== newParameters.sortCriteria) {\n    return logResultsSort();\n  }\n\n  if (previousParameters.firstResult !== newParameters.firstResult) {\n    return logPageNumber();\n  }\n\n  if (previousParameters.numberOfResults !== newParameters.numberOfResults) {\n    return logPagerResize();\n  }\n\n  if (areFacetParamsEqual(previousParameters.f, newParameters.f)) {\n    return logFacetAnalyticsAction(previousParameters.f, newParameters.f);\n  }\n\n  if (\n    areFacetParamsEqual(previousParameters.fExcluded, newParameters.fExcluded)\n  ) {\n    return logFacetAnalyticsAction(\n      previousParameters.fExcluded,\n      newParameters.fExcluded,\n      true\n    );\n  }\n\n  if (areFacetParamsEqual(previousParameters.cf, newParameters.cf)) {\n    return logFacetAnalyticsAction(previousParameters.cf, newParameters.cf);\n  }\n\n  if (areFacetParamsEqual(previousParameters.af, newParameters.af)) {\n    return logFacetAnalyticsAction(previousParameters.af, newParameters.af);\n  }\n\n  if (areFacetParamsEqual(previousParameters.nf, newParameters.nf)) {\n    return logRangeFacetAnalyticsAction(\n      previousParameters.nf,\n      newParameters.nf\n    );\n  }\n\n  if (areFacetParamsEqual(previousParameters.df, newParameters.df)) {\n    return logRangeFacetAnalyticsAction(\n      previousParameters.df,\n      newParameters.df\n    );\n  }\n\n  return logInterfaceChange();\n}\n\ntype AnyFacetParameters = FacetParameters | RangeFacetParameters;\n\ntype RangeFacetParameters = Record<\n  string,\n  (NumericRangeRequest | DateRangeRequest)[]\n>;\n\ntype FacetParameters = Record<string, string[]>;\n\nfunction areFacetParamsEqual(\n  previousFacetParams: AnyFacetParameters = {},\n  newFacetParams: AnyFacetParameters = {}\n) {\n  return JSON.stringify(previousFacetParams) !== JSON.stringify(newFacetParams);\n}\n\nfunction parseRangeFacetParams(facetsParams: RangeFacetParameters) {\n  const formattedParams: FacetParameters = {};\n  Object.keys(facetsParams).forEach(\n    (key) =>\n      (formattedParams[key] = facetsParams[key].map(\n        (facetValue) => `${facetValue.start}..${facetValue.end}`\n      ))\n  );\n  return formattedParams;\n}\n\nfunction logFacetAnalyticsAction(\n  previousFacets: FacetParameters = {},\n  newFacets: FacetParameters = {},\n  excluded = false\n): SearchAction {\n  const previousIds = Object.keys(previousFacets);\n  const newIds = Object.keys(newFacets);\n\n  const removedIds = previousIds.filter((id) => !newIds.includes(id));\n  if (removedIds.length) {\n    const facetId = removedIds[0];\n    return previousFacets[facetId].length > 1\n      ? logFacetClearAll(facetId)\n      : logFacetDeselect({facetId, facetValue: previousFacets[facetId][0]});\n  }\n\n  const addedIds = newIds.filter((id) => !previousIds.includes(id));\n  if (addedIds.length) {\n    const facetId = addedIds[0];\n    return excluded\n      ? logFacetExclude({\n          facetId,\n          facetValue: newFacets[facetId][0],\n        })\n      : logFacetSelect({\n          facetId,\n          facetValue: newFacets[facetId][0],\n        });\n  }\n\n  const facetIdWithDifferentValues = newIds.find((key) =>\n    newFacets[key].filter((facetValue) =>\n      previousFacets[key].includes(facetValue)\n    )\n  );\n  if (!facetIdWithDifferentValues) {\n    return logInterfaceChange();\n  }\n\n  const previousValues = previousFacets[facetIdWithDifferentValues];\n  const newValues = newFacets[facetIdWithDifferentValues];\n\n  const addedValues = newValues.filter(\n    (value) => !previousValues.includes(value)\n  );\n\n  if (addedValues.length) {\n    return excluded\n      ? logFacetExclude({\n          facetId: facetIdWithDifferentValues,\n          facetValue: addedValues[0],\n        })\n      : logFacetSelect({\n          facetId: facetIdWithDifferentValues,\n          facetValue: addedValues[0],\n        });\n  }\n\n  const removedValues = previousValues.filter(\n    (value) => !newValues.includes(value)\n  );\n\n  if (removedValues.length) {\n    return logFacetDeselect({\n      facetId: facetIdWithDifferentValues,\n      facetValue: removedValues[0],\n    });\n  }\n\n  return logInterfaceChange();\n}\n\nfunction logRangeFacetAnalyticsAction(\n  previousFacets: RangeFacetParameters = {},\n  newFacets: RangeFacetParameters = {}\n): SearchAction {\n  return logFacetAnalyticsAction(\n    parseRangeFacetParams(previousFacets),\n    parseRangeFacetParams(newFacets)\n  );\n}\n", "import {SearchParameters} from '../../controllers';\nimport {SearchParametersState} from '../../state/search-app-state';\nimport {getAdvancedSearchQueriesInitialState} from '../advanced-search-queries/advanced-search-queries-state';\nimport {getDebugInitialState} from '../debug/debug-state';\nimport {getPaginationInitialState} from '../pagination/pagination-state';\nimport {getQueryInitialState} from '../query/query-state';\nimport {getSortCriteriaInitialState} from '../sort-criteria/sort-criteria-state';\n\nexport function initialSearchParameterSelector(\n  state: Partial<SearchParametersState>\n): Required<SearchParameters> {\n  return {\n    q: getQueryInitialState().q,\n    enableQuerySyntax: getQueryInitialState().enableQuerySyntax,\n    aq:\n      state.advancedSearchQueries?.defaultFilters.aq ??\n      getAdvancedSearchQueriesInitialState().defaultFilters.aq,\n    cq:\n      state.advancedSearchQueries?.defaultFilters.cq ??\n      getAdvancedSearchQueriesInitialState().defaultFilters.cq,\n    firstResult: getPaginationInitialState().firstResult,\n    numberOfResults:\n      state.pagination?.defaultNumberOfResults ??\n      getPaginationInitialState().defaultNumberOfResults,\n    sortCriteria: getSortCriteriaInitialState(),\n    f: {},\n    fExcluded: {},\n    cf: {},\n    nf: {},\n    df: {},\n    debug: getDebugInitialState(),\n    sf: {},\n    tab: '',\n    af: {},\n  };\n}\n", "import {RecordValue, Schema} from '@coveo/bueno';\nimport {CoreEngine} from '../../../app/engine';\nimport {findActiveValueAncestry} from '../../../features/facets/category-facet-set/category-facet-utils';\nimport {FacetValueRequest} from '../../../features/facets/facet-set/interfaces/request';\nimport {RangeValueRequest} from '../../../features/facets/range-facets/generic/interfaces/range-facet';\nimport {getQueryInitialState} from '../../../features/query/query-state';\nimport {\n  restoreSearchParameters,\n  SearchParameters,\n} from '../../../features/search-parameters/search-parameter-actions';\nimport {searchParametersDefinition} from '../../../features/search-parameters/search-parameter-schema';\nimport {initialSearchParameterSelector} from '../../../features/search-parameters/search-parameter-selectors';\nimport {getSortCriteriaInitialState} from '../../../features/sort-criteria/sort-criteria-state';\nimport {SearchParametersState} from '../../../state/search-app-state';\nimport {validateInitialState} from '../../../utils/validate-payload';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport type {SearchParameters};\n\nexport interface SearchParameterManagerProps {\n  /**\n   * The initial state that should be applied to the `SearchParameterManager` controller.\n   */\n  initialState: SearchParameterManagerInitialState;\n}\n\nexport interface SearchParameterManagerInitialState {\n  /**\n   * The parameters affecting the search response.\n   */\n  parameters: SearchParameters;\n}\n\nconst initialStateSchema = new Schema<\n  Required<SearchParameterManagerInitialState>\n>({\n  parameters: new RecordValue({\n    options: {required: true},\n    values: searchParametersDefinition,\n  }),\n});\n\n/**\n * The `SearchParameterManager` controller allows restoring parameters that affect the results from e.g. a url.\n * */\nexport interface SearchParameterManager extends Controller {\n  /**\n   * Updates the search parameters in state with the passed parameters and executes a search. Unspecified keys are reset to their initial values.\n   *\n   * @param parameters - The search parameters to synchronize.\n   */\n  synchronize(parameters: SearchParameters): void;\n\n  /**\n   * The state relevant to the `SearchParameterManager` controller.\n   * */\n  state: SearchParameterManagerState;\n}\n\nexport interface SearchParameterManagerState {\n  /**\n   * The parameters affecting the search response.\n   */\n  parameters: SearchParameters;\n}\n\n/**\n * Creates a `SearchParameterManager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SearchParameterManager` properties.\n * @returns A `SearchParameterManager` controller instance.\n */\nexport function buildCoreSearchParameterManager(\n  engine: CoreEngine,\n  props: SearchParameterManagerProps\n): SearchParameterManager {\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildSearchParameterManager'\n  );\n  dispatch(restoreSearchParameters(props.initialState.parameters));\n\n  return {\n    ...controller,\n\n    synchronize(parameters: SearchParameters) {\n      const newParams = enrichParameters(engine, parameters);\n      dispatch(restoreSearchParameters(newParams));\n    },\n\n    get state() {\n      const parameters = getCoreActiveSearchParameters(engine);\n      return {parameters};\n    },\n  };\n}\n\nexport function enrichParameters(\n  engine: CoreEngine,\n  parameters: SearchParameters\n): Required<SearchParameters> {\n  return {\n    ...initialSearchParameterSelector(engine.state),\n    ...parameters,\n  };\n}\n\nexport function validateParams(\n  engine: CoreEngine,\n  parameters: Required<SearchParameters>\n): boolean {\n  return validateTab(engine, parameters);\n}\n\nexport function getCoreActiveSearchParameters(\n  engine: CoreEngine\n): SearchParameters {\n  const state = engine.state;\n  return {\n    ...getQ(state),\n    ...getTab(state),\n    ...getSortCriteria(state),\n    ...getFacets(state, getSelectedValues, 'f'),\n    ...getFacets(state, getExcludedValues, 'fExcluded'),\n    ...getCategoryFacets(state),\n    ...getNumericFacets(state),\n    ...getDateFacets(state),\n    ...getAutomaticFacets(state),\n  };\n}\n\nfunction getQ(state: Partial<SearchParametersState>) {\n  if (state.query === undefined) {\n    return {};\n  }\n\n  const q = state.query.q;\n  const shouldInclude = q !== getQueryInitialState().q;\n  return shouldInclude ? {q} : {};\n}\n\nfunction getTab(state: Partial<SearchParametersState>) {\n  const activeTab = Object.values(state.tabSet ?? {}).find(\n    (tab) => tab.isActive\n  );\n\n  return activeTab ? {tab: activeTab.id} : {};\n}\n\nfunction validateTab(\n  engine: CoreEngine,\n  parameters: Required<SearchParameters>\n) {\n  const tabState = engine.state.tabSet;\n  const tabParam = parameters.tab;\n  if (!tabState || !Object.entries(tabState).length || !tabParam) {\n    return true;\n  }\n\n  const isInState = tabParam in tabState;\n  if (!isInState) {\n    engine.logger.warn(\n      `The tab search parameter \"${tabParam}\" is invalid. Ignoring change.`\n    );\n  }\n\n  return isInState;\n}\n\nfunction getSortCriteria(state: Partial<SearchParametersState>) {\n  if (state.sortCriteria === undefined) {\n    return {};\n  }\n\n  const sortCriteria = state.sortCriteria;\n  const shouldInclude = sortCriteria !== getSortCriteriaInitialState();\n  return shouldInclude ? {sortCriteria} : {};\n}\n\nfunction getFacets(\n  state: Partial<SearchParametersState>,\n  valuesSelector: (currentValues: FacetValueRequest[]) => string[],\n  out: keyof SearchParameters\n) {\n  if (state.facetSet === undefined) {\n    return {};\n  }\n\n  const facets = Object.entries(state.facetSet)\n    .filter(([facetId]) => state.facetOptions?.facets[facetId]?.enabled ?? true)\n    .map(([facetId, {request}]) => {\n      const facetValues = valuesSelector(request.currentValues);\n      return facetValues.length ? {[facetId]: facetValues} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(facets).length ? {[out]: facets} : {};\n}\n\nfunction getSelectedValues(values: FacetValueRequest[]) {\n  return values.filter((fv) => fv.state === 'selected').map((fv) => fv.value);\n}\n\nfunction getExcludedValues(values: FacetValueRequest[]) {\n  return values.filter((fv) => fv.state === 'excluded').map((fv) => fv.value);\n}\n\nfunction getCategoryFacets(state: Partial<SearchParametersState>) {\n  if (state.categoryFacetSet === undefined) {\n    return {};\n  }\n\n  const cf = Object.entries(state.categoryFacetSet)\n    .filter(([facetId]) => state.facetOptions?.facets[facetId]?.enabled ?? true)\n    .map(([facetId, slice]) => {\n      const parents = findActiveValueAncestry(slice.request.currentValues);\n      const selectedValues = parents.map((p) => p.value);\n\n      return selectedValues.length ? {[facetId]: selectedValues} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(cf).length ? {cf} : {};\n}\n\nfunction getNumericFacets(state: Partial<SearchParametersState>) {\n  if (state.numericFacetSet === undefined) {\n    return {};\n  }\n\n  const nf = Object.entries(state.numericFacetSet)\n    .filter(([facetId]) => state.facetOptions?.facets[facetId]?.enabled ?? true)\n    .map(([facetId, {request}]) => {\n      const selectedRanges = getSelectedRanges(request.currentValues);\n      return selectedRanges.length ? {[facetId]: selectedRanges} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(nf).length ? {nf} : {};\n}\n\nfunction getDateFacets(state: Partial<SearchParametersState>) {\n  if (state.dateFacetSet === undefined) {\n    return {};\n  }\n\n  const df = Object.entries(state.dateFacetSet)\n    .filter(([facetId]) => state.facetOptions?.facets[facetId]?.enabled ?? true)\n    .map(([facetId, {request}]) => {\n      const selectedRanges = getSelectedRanges(request.currentValues);\n      return selectedRanges.length ? {[facetId]: selectedRanges} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(df).length ? {df} : {};\n}\n\nfunction getSelectedRanges<T extends RangeValueRequest>(ranges: T[]) {\n  return ranges.filter((range) => range.state === 'selected');\n}\n\nfunction getAutomaticFacets(state: Partial<SearchParametersState>) {\n  const set = state.automaticFacetSet?.set;\n  if (set === undefined) {\n    return {};\n  }\n  const af = Object.entries(set)\n    .map(([facetId, {response}]) => {\n      const selectedValues = getSelectedValues(response.values);\n      return selectedValues.length ? {[facetId]: selectedValues} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(af).length ? {af} : {};\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {getDebugInitialState} from '../../features/debug/debug-state';\nimport {getPaginationInitialState} from '../../features/pagination/pagination-state';\nimport {getQueryInitialState} from '../../features/query/query-state';\nimport {SearchParameters} from '../../features/search-parameters/search-parameter-actions';\nimport {logParametersChange} from '../../features/search-parameters/search-parameter-analytics-actions';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {StaticFilterValue} from '../../features/static-filter-set/static-filter-set-state';\nimport {SearchParametersState} from '../../state/search-app-state';\nimport {deepEqualAnyOrder} from '../../utils/compare-utils';\nimport {\n  buildCoreSearchParameterManager,\n  enrichParameters,\n  getCoreActiveSearchParameters,\n  SearchParameterManager,\n  SearchParameterManagerInitialState,\n  SearchParameterManagerProps,\n  SearchParameterManagerState,\n  validateParams,\n} from '../core/search-parameter-manager/headless-core-search-parameter-manager';\n\nexport type {\n  SearchParameters,\n  SearchParameterManager,\n  SearchParameterManagerInitialState,\n  SearchParameterManagerState,\n  SearchParameterManagerProps,\n};\n\n/**\n * Creates a `SearchParameterManager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SearchParameterManager` properties.\n * @returns A `SearchParameterManager` controller instance.\n */\nexport function buildSearchParameterManager(\n  engine: SearchEngine,\n  props: SearchParameterManagerProps\n): SearchParameterManager {\n  const {dispatch} = engine;\n  const controller = buildCoreSearchParameterManager(engine, props);\n\n  return {\n    ...controller,\n\n    synchronize(parameters: SearchParameters) {\n      const activeParams = getActiveSearchParameters(engine);\n      const oldParams = enrichParameters(engine, activeParams);\n      const newParams = enrichParameters(engine, parameters);\n\n      if (deepEqualAnyOrder(oldParams, newParams)) {\n        return;\n      }\n\n      if (!validateParams(engine, newParams)) {\n        return;\n      }\n\n      controller.synchronize(parameters);\n      dispatch(\n        executeSearch({legacy: logParametersChange(oldParams, newParams)})\n      );\n    },\n\n    get state() {\n      const parameters = getActiveSearchParameters(engine);\n      return {parameters};\n    },\n  };\n}\n\nfunction getActiveSearchParameters(engine: SearchEngine): SearchParameters {\n  const state = engine.state;\n  return {\n    ...getCoreActiveSearchParameters(engine),\n    ...getEnableQuerySyntax(state),\n    ...getAq(state),\n    ...getCq(state),\n    ...getFirstResult(state),\n    ...getNumberOfResults(state),\n    ...getDebug(state),\n    ...getStaticFilters(state),\n  };\n}\n\nfunction getEnableQuerySyntax(state: Partial<SearchParametersState>) {\n  if (state.query === undefined) {\n    return {};\n  }\n\n  const enableQuerySyntax = state.query.enableQuerySyntax;\n  const shouldInclude =\n    enableQuerySyntax !== undefined &&\n    enableQuerySyntax !== getQueryInitialState().enableQuerySyntax;\n  return shouldInclude ? {enableQuerySyntax} : {};\n}\n\nfunction getAq(state: Partial<SearchParametersState>) {\n  if (state.advancedSearchQueries === undefined) {\n    return {};\n  }\n\n  const {aq, defaultFilters} = state.advancedSearchQueries;\n  const shouldInclude = aq !== defaultFilters.aq;\n  return shouldInclude ? {aq} : {};\n}\n\nfunction getCq(state: Partial<SearchParametersState>) {\n  if (state.advancedSearchQueries === undefined) {\n    return {};\n  }\n\n  const {cq, defaultFilters} = state.advancedSearchQueries;\n  const shouldInclude = cq !== defaultFilters.cq;\n  return shouldInclude ? {cq} : {};\n}\n\nfunction getFirstResult(state: Partial<SearchParametersState>) {\n  if (state.pagination === undefined) {\n    return {};\n  }\n\n  const firstResult = state.pagination.firstResult;\n  const shouldInclude = firstResult !== getPaginationInitialState().firstResult;\n  return shouldInclude ? {firstResult} : {};\n}\n\nfunction getNumberOfResults(state: Partial<SearchParametersState>) {\n  if (state.pagination === undefined) {\n    return {};\n  }\n\n  const {numberOfResults, defaultNumberOfResults} = state.pagination;\n  const shouldInclude = numberOfResults !== defaultNumberOfResults;\n  return shouldInclude ? {numberOfResults} : {};\n}\n\nfunction getStaticFilters(state: Partial<SearchParametersState>) {\n  if (state.staticFilterSet === undefined) {\n    return {};\n  }\n\n  const sf = Object.entries(state.staticFilterSet)\n    .map(([id, filter]) => {\n      const selectedCaptions = getSelectedStaticFilterCaptions(filter.values);\n      return selectedCaptions.length ? {[id]: selectedCaptions} : {};\n    })\n    .reduce((acc, obj) => ({...acc, ...obj}), {});\n\n  return Object.keys(sf).length ? {sf} : {};\n}\n\nfunction getSelectedStaticFilterCaptions(values: StaticFilterValue[]) {\n  return values.filter((v) => v.state === 'selected').map((v) => v.caption);\n}\n\nfunction getDebug(state: Partial<SearchParametersState>) {\n  if (state.debug === undefined) {\n    return {};\n  }\n\n  const debug = state.debug;\n  const shouldInclude = debug !== getDebugInitialState();\n  return shouldInclude ? {debug} : {};\n}\n", "import {CoreEngine} from '../../app/engine';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithProps} from '../../app/ssr-engine/types/common';\nimport {configurationReducer as configuration} from '../../features/configuration/configuration-slice';\nimport {debugReducer as debug} from '../../features/debug/debug-slice';\nimport {facetOptionsReducer as facetOptions} from '../../features/facet-options/facet-options-slice';\nimport {automaticFacetSetReducer as automaticFacetSet} from '../../features/facets/automatic-facet-set/automatic-facet-set-slice';\nimport {categoryFacetSetReducer as categoryFacetSet} from '../../features/facets/category-facet-set/category-facet-set-slice';\nimport {facetSetReducer as facetSet} from '../../features/facets/facet-set/facet-set-slice';\nimport {dateFacetSetReducer as dateFacetSet} from '../../features/facets/range-facets/date-facet-set/date-facet-set-slice';\nimport {numericFacetSetReducer as numericFacetSet} from '../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {paginationReducer as pagination} from '../../features/pagination/pagination-slice';\nimport {queryReducer as query} from '../../features/query/query-slice';\nimport {sortCriteriaReducer as sortCriteria} from '../../features/sort-criteria/sort-criteria-slice';\nimport {staticFilterSetReducer as staticFilterSet} from '../../features/static-filter-set/static-filter-set-slice';\nimport {tabSetReducer as tabSet} from '../../features/tab-set/tab-set-slice';\nimport {loadReducerError} from '../../utils/errors';\nimport {advancedSearchQueriesReducer as advancedSearchQueries} from './../../features/advanced-search-queries/advanced-search-queries-slice';\nimport {\n  SearchParameterManager,\n  SearchParameterManagerInitialState,\n  buildSearchParameterManager,\n} from './headless-search-parameter-manager';\n\nexport * from './headless-search-parameter-manager';\n\n/**\n * @internal\n */\nexport interface SearchParameterManagerBuildProps {\n  initialState: SearchParameterManagerInitialState;\n}\n\n/**\n * @internal\n */\nexport const defineSearchParameterManager = (): ControllerDefinitionWithProps<\n  SearchEngine,\n  SearchParameterManager,\n  SearchParameterManagerBuildProps\n> => ({\n  buildWithProps: (engine, props) => {\n    if (!loadSearchParameterManagerReducers(engine)) {\n      throw loadReducerError;\n    }\n    return buildSearchParameterManager(engine, {\n      initialState: props.initialState,\n    });\n  },\n});\n\nfunction loadSearchParameterManagerReducers(\n  engine: CoreEngine\n): engine is CoreEngine<SearchParameterManager> {\n  engine.addReducers({\n    advancedSearchQueries,\n    automaticFacetSet,\n    categoryFacetSet,\n    configuration,\n    dateFacetSet,\n    debug,\n    facetOptions,\n    facetSet,\n    numericFacetSet,\n    pagination,\n    query,\n    sortCriteria,\n    staticFilterSet,\n    tabSet,\n  });\n  return true;\n}\n", "import {isString} from '@coveo/bueno';\nimport {\n  API_DATE_FORMAT,\n  isSearchApiDate,\n  validateAbsoluteDate,\n} from '../../api/search/date/date-format';\nimport {\n  isRelativeDateFormat,\n  validateRelativeDate,\n} from '../../api/search/date/relative-date';\nimport {buildDateRange} from '../../controllers/facets/range-facet/date-facet/headless-date-facet';\nimport {buildNumericRange} from '../../controllers/facets/range-facet/numeric-facet/headless-numeric-facet';\nimport {RangeValueRequest} from '../facets/range-facets/generic/interfaces/range-facet';\nimport {SearchParameters} from './search-parameter-actions';\n\nconst delimiter = '&';\nconst equal = '=';\nconst rangeDelimiterExclusive = '..';\nconst rangeDelimiterInclusive = '...';\n\ntype SearchParameterKey = keyof SearchParameters;\ntype UnknownObject = {[field: string]: unknown[]};\n\nexport function buildSearchParameterSerializer() {\n  return {serialize, deserialize};\n}\n\nfunction serialize(obj: SearchParameters) {\n  return Object.entries(obj)\n    .map(serializePair)\n    .filter((str) => str)\n    .join(delimiter);\n}\n\nfunction serializePair(pair: [string, unknown]) {\n  const [key, val] = pair;\n\n  if (!isValidKey(key)) {\n    return '';\n  }\n\n  if (isSpecificFacetKey(key)) {\n    return isFacetObject(val) ? serializeFacets(key, val) : '';\n  }\n\n  if (key === 'nf' || key === 'df') {\n    return isRangeFacetObject(val) ? serializeRangeFacets(key, val) : '';\n  }\n\n  return `${key}${equal}${encodeURIComponent(\n    val as string | number | boolean\n  )}`;\n}\n\nfunction isFacetObject(obj: unknown): obj is Record<string, string[]> {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  const isValidValue = (v: unknown) => typeof v === 'string';\n  return allEntriesAreValid(obj, isValidValue);\n}\n\nfunction isRangeFacetObject(\n  obj: unknown\n): obj is Record<string, RangeValueRequest[]> {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  const isRangeValue = (v: unknown) =>\n    isObject(v) && 'start' in v && 'end' in v;\n  return allEntriesAreValid(obj, isRangeValue);\n}\n\nfunction isObject(obj: unknown): obj is object {\n  return obj && typeof obj === 'object' ? true : false;\n}\n\nfunction allEntriesAreValid(\n  obj: object,\n  isValidValue: (v: unknown) => boolean\n) {\n  const invalidEntries = Object.entries(obj).filter((entry) => {\n    const values = entry[1];\n    return !Array.isArray(values) || !values.every(isValidValue);\n  });\n\n  return invalidEntries.length === 0;\n}\n\nfunction serializeFacets(key: string, facets: Record<string, string[]>) {\n  return Object.entries(facets)\n    .map(\n      ([facetId, values]) =>\n        `${key}-${facetId}${equal}${values\n          .map((value) => encodeURIComponent(value))\n          .join(',')}`\n    )\n    .join(delimiter);\n}\n\nfunction serializeRangeFacets(\n  key: string,\n  facets: Record<string, RangeValueRequest[]>\n) {\n  return Object.entries(facets)\n    .map(([facetId, ranges]) => {\n      const value = ranges\n        .map(\n          ({start, end, endInclusive}) =>\n            `${start}${\n              endInclusive ? rangeDelimiterInclusive : rangeDelimiterExclusive\n            }${end}`\n        )\n        .join(',');\n      return `${key}-${facetId}${equal}${value}`;\n    })\n    .join(delimiter);\n}\n\nfunction deserialize(fragment: string): SearchParameters {\n  const parts = fragment.split(delimiter);\n  const keyValuePairs = parts\n    .map((part) => splitOnFirstEqual(part))\n    .map(preprocessObjectPairs)\n    .filter(isValidPair)\n    .map(cast);\n\n  return keyValuePairs.reduce((acc: SearchParameters, pair) => {\n    const [key, val] = pair;\n\n    if (keyHasObjectValue(key)) {\n      const mergedValues = {...acc[key], ...(val as object)};\n      return {...acc, [key]: mergedValues};\n    }\n\n    return {...acc, [key]: val};\n  }, {});\n}\n\nfunction splitOnFirstEqual(str: string) {\n  const [first, ...rest] = str.split(equal);\n  const second = rest.join(equal);\n\n  return [first, second];\n}\n\nfunction preprocessObjectPairs(pair: string[]) {\n  const [key, val] = pair;\n  const objectKey = /^(f|fExcluded|cf|nf|df|sf|af)-(.+)$/;\n  const result = objectKey.exec(key);\n\n  if (!result) {\n    return pair;\n  }\n\n  const paramKey = result[1];\n  const id = result[2];\n  const values = val.split(',');\n  const processedValues = processObjectValues(paramKey, values);\n  const obj = {[id]: processedValues};\n\n  return [paramKey, JSON.stringify(obj)];\n}\n\nfunction processObjectValues(key: string, values: string[]) {\n  if (key === 'nf') {\n    return buildNumericRanges(values);\n  }\n\n  if (key === 'df') {\n    return buildDateRanges(values);\n  }\n\n  return values;\n}\n\nfunction buildNumericRanges(ranges: string[]) {\n  return ranges\n    .map((str) => {\n      const {startAsString, endAsString, isEndInclusive} =\n        splitRangeValueAsStringByDelimiter(str);\n\n      return {\n        start: parseFloat(startAsString),\n        end: parseFloat(endAsString),\n        endInclusive: isEndInclusive,\n      };\n    })\n    .filter(({start, end}) => Number.isFinite(start) && Number.isFinite(end))\n    .map(({start, end, endInclusive}) =>\n      buildNumericRange({start, end, state: 'selected', endInclusive})\n    );\n}\n\nfunction isValidDateRangeValue(date: string) {\n  try {\n    if (isSearchApiDate(date)) {\n      validateAbsoluteDate(date, API_DATE_FORMAT);\n      return true;\n    }\n    if (isRelativeDateFormat(date)) {\n      validateRelativeDate(date);\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction buildDateRanges(ranges: string[]) {\n  return ranges\n    .map((str) => {\n      const {isEndInclusive, startAsString, endAsString} =\n        splitRangeValueAsStringByDelimiter(str);\n\n      return {\n        start: startAsString,\n        end: endAsString,\n        endInclusive: isEndInclusive,\n      };\n    })\n    .filter(\n      ({start, end}) =>\n        isValidDateRangeValue(start) && isValidDateRangeValue(end)\n    )\n    .map(({start, end, endInclusive}) =>\n      buildDateRange({start, end, state: 'selected', endInclusive})\n    );\n}\n\nfunction isValidPair<K extends SearchParameterKey>(\n  pair: string[]\n): pair is [K, string] {\n  const validKey = isValidKey(pair[0]);\n  const lengthOfTwo = pair.length === 2;\n  return validKey && lengthOfTwo;\n}\n\nfunction isValidKey(key: string): key is SearchParameterKey {\n  const supportedParameters: Record<keyof Required<SearchParameters>, boolean> =\n    {\n      q: true,\n      aq: true,\n      cq: true,\n      enableQuerySyntax: true,\n      firstResult: true,\n      numberOfResults: true,\n      sortCriteria: true,\n      f: true,\n      fExcluded: true,\n      cf: true,\n      nf: true,\n      df: true,\n      debug: true,\n      sf: true,\n      tab: true,\n      af: true,\n    };\n\n  return key in supportedParameters;\n}\n\nfunction cast<K extends SearchParameterKey>(pair: [K, string]): [K, unknown] {\n  const [key, value] = pair;\n\n  if (key === 'enableQuerySyntax') {\n    return [key, value === 'true'];\n  }\n\n  if (key === 'debug') {\n    return [key, value === 'true'];\n  }\n\n  if (key === 'firstResult') {\n    return [key, parseInt(value)];\n  }\n\n  if (key === 'numberOfResults') {\n    return [key, parseInt(value)];\n  }\n\n  if (keyHasObjectValue(key)) {\n    return [key, castUnknownObject(value)];\n  }\n\n  return [key, decodeURIComponent(value)];\n}\n\nfunction castUnknownObject(value: string) {\n  const jsonParsed: UnknownObject = JSON.parse(value);\n  const ret: UnknownObject = {};\n  Object.entries(jsonParsed).forEach((entry) => {\n    const [id, values] = entry;\n    ret[id] = values.map((v) => (isString(v) ? decodeURIComponent(v) : v));\n  });\n\n  return ret;\n}\n\nfunction keyHasObjectValue(\n  key: SearchParameterKey\n): key is 'f' | 'af' | 'cf' | 'df' | 'nf' | 'sf' | 'fExcluded' {\n  const keys = ['f', 'fExcluded', 'cf', 'nf', 'df', 'sf', 'af'];\n  return keys.includes(key);\n}\n\nfunction isSpecificFacetKey(\n  key: SearchParameterKey\n): key is 'f' | 'af' | 'cf' | 'sf' | 'fExcluded' {\n  const keys = ['f', 'af', 'cf', 'sf', 'fExcluded'];\n  return keys.includes(key);\n}\n\nfunction splitRangeValueAsStringByDelimiter(str: string) {\n  const isEndInclusive = str.indexOf(rangeDelimiterInclusive) !== -1;\n  const [startAsString, endAsString] = str.split(\n    isEndInclusive ? rangeDelimiterInclusive : rangeDelimiterExclusive\n  );\n  return {\n    isEndInclusive,\n    startAsString,\n    endAsString,\n  };\n}\n", "import {Schema, StringValue} from '@coveo/bueno';\nimport {configuration} from '../../app/common-reducers';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {buildSearchParameterSerializer} from '../../features/search-parameters/search-parameter-serializer';\nimport {SearchParametersState} from '../../state/search-app-state';\nimport {ConfigurationSection} from '../../state/state-sections';\nimport {deepEqualAnyOrder} from '../../utils/compare-utils';\nimport {loadReducerError} from '../../utils/errors';\nimport {validateInitialState} from '../../utils/validate-payload';\nimport {buildController, Controller} from '../controller/headless-controller';\nimport {buildSearchParameterManager} from '../search-parameter-manager/headless-search-parameter-manager';\n\nexport interface UrlManagerProps {\n  /**\n   * The initial state that should be applied to the `UrlManager` controller.\n   */\n  initialState: UrlManagerInitialState;\n}\n\nexport interface UrlManagerInitialState {\n  /**\n   * The part of the url that contains search parameters.\n   * E.g., `q=windmill&f[author]=Cervantes`\n   */\n  fragment: string;\n}\n\nconst initialStateSchema = new Schema<Required<UrlManagerInitialState>>({\n  fragment: new StringValue(),\n});\n\n/**\n * The `UrlManager` controller can parse an url fragment to extract search parameters which affect the search response.\n * */\nexport interface UrlManager extends Controller {\n  /**\n   * The state relevant to the `UrlManager` controller.\n   * */\n  state: UrlManagerState;\n\n  /**\n   * Updates the search parameters in state with those from the url & launches a search.\n   * @param fragment The part of the url that contains search parameters.  E.g., `q=windmill&f[author]=Cervantes`\n   */\n  synchronize(fragment: string): void;\n}\n\nexport interface UrlManagerState {\n  /**\n   * The part of the url that contains search parameters.\n   * E.g., `q=windmill&f[author]=Cervantes`\n   */\n  fragment: string;\n}\n\n/**\n * Creates a `UrlManager` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `UrlManager` properties.\n * @returns A `UrlManager` controller instance.\n */\nexport function buildUrlManager(\n  engine: SearchEngine,\n  props: UrlManagerProps\n): UrlManager {\n  let lastRequestId: string;\n\n  function updateLastRequestId() {\n    lastRequestId = engine.state.search.requestId;\n  }\n\n  function hasRequestIdChanged() {\n    return lastRequestId !== engine.state.search.requestId;\n  }\n\n  if (!loadUrlManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props.initialState,\n    'buildUrlManager'\n  );\n\n  const controller = buildController(engine);\n  let previousFragment = props.initialState.fragment;\n  updateLastRequestId();\n\n  const searchParameterManager = buildSearchParameterManager(engine, {\n    initialState: {\n      parameters: deserializeFragment(previousFragment),\n    },\n  });\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const newFragment = this.state.fragment;\n        if (\n          !areFragmentsEquivalent(previousFragment, newFragment) &&\n          hasRequestIdChanged()\n        ) {\n          previousFragment = newFragment;\n          listener();\n        }\n        updateLastRequestId();\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        fragment: buildSearchParameterSerializer().serialize(\n          searchParameterManager.state.parameters\n        ),\n      };\n    },\n\n    synchronize(fragment: string) {\n      previousFragment = fragment;\n\n      const parameters = deserializeFragment(fragment);\n      searchParameterManager.synchronize(parameters);\n    },\n  };\n}\n\nfunction areFragmentsEquivalent(fragment1: string, fragment2: string) {\n  if (fragment1 === fragment2) {\n    return true;\n  }\n\n  const params1 = deserializeFragment(fragment1);\n  const params2 = deserializeFragment(fragment2);\n  return deepEqualAnyOrder(params1, params2);\n}\n\nfunction deserializeFragment(fragment: string) {\n  return buildSearchParameterSerializer().deserialize(fragment);\n}\n\nfunction loadUrlManagerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<\n  Partial<SearchParametersState> & ConfigurationSection\n> {\n  engine.addReducers({configuration});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithProps} from '../../app/ssr-engine/types/common';\nimport {\n  UrlManager,\n  UrlManagerInitialState,\n  buildUrlManager,\n} from './headless-url-manager';\n\nexport * from './headless-url-manager';\n\n/**\n * @internal\n */\nexport interface UrlManagerBuildProps {\n  initialState: UrlManagerInitialState;\n}\n\n/**\n * @internal\n */\nexport const defineUrlManager = (): ControllerDefinitionWithProps<\n  SearchEngine,\n  UrlManager,\n  UrlManagerBuildProps\n> => ({\n  buildWithProps: (engine, props) =>\n    buildUrlManager(engine, {initialState: props.initialState}),\n});\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  buildCoreStatus,\n  SearchStatusState,\n  SearchStatus,\n} from '../core/status/headless-core-status';\n\nexport type {SearchStatusState, SearchStatus};\n\n/**\n * Creates a `SearchStatus` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `SearchStatus` controller instance.\n * */\nexport function buildSearchStatus(engine: SearchEngine): SearchStatus {\n  return buildCoreStatus(engine);\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {SearchStatus, buildSearchStatus} from './headless-search-status';\n\nexport * from './headless-search-status';\n\n/**\n * @internal\n */\nexport const defineSearchStatus = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  SearchStatus\n> => ({\n  build: (engine) => buildSearchStatus(engine),\n});\n", "import {getVisitorID} from '../../api/analytics/coveo-analytics-utils';\nimport {\n  HtmlRequest,\n  HtmlRequestOptions,\n} from '../../api/search/html/html-request';\nimport {\n  ConfigurationSection,\n  QuerySection,\n  ResultPreviewSection,\n} from '../../state/state-sections';\n\nexport type StateNeededByHtmlEndpoint = ConfigurationSection &\n  ResultPreviewSection &\n  Partial<QuerySection>;\n\nexport async function buildResultPreviewRequest(\n  state: StateNeededByHtmlEndpoint,\n  options: HtmlRequestOptions\n): Promise<HtmlRequest> {\n  const {search, accessToken, organizationId, analytics} = state.configuration;\n  const q = state.query?.q || '';\n\n  return {\n    url: search.apiBaseUrl,\n    accessToken,\n    organizationId,\n    enableNavigation: false,\n    ...(analytics.enabled && {\n      visitorId: await getVisitorID(state.configuration.analytics),\n    }),\n    q,\n    ...options,\n    requestedOutputSize: options.requestedOutputSize || 0,\n    ...(search.authenticationProviders.length && {\n      authentication: search.authenticationProviders.join(','),\n    }),\n  };\n}\n", "import {ArrayValue} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {\n  buildContentURL,\n  HtmlApiClient,\n} from '../../api/search/html/html-api-client';\nimport {\n  HtmlRequest,\n  HtmlRequestOptions,\n} from '../../api/search/html/html-request';\nimport {isErrorResponse} from '../../api/search/search-api-client';\nimport {SearchAPIErrorWithStatusCode} from '../../api/search/search-api-error-response';\nimport type {Result} from '../../api/search/search/result';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {\n  buildResultPreviewRequest,\n  StateNeededByHtmlEndpoint,\n} from './result-preview-request-builder';\n\nexport interface FetchResultContentThunkReturn {\n  content: string;\n  uniqueId: string;\n}\n\nexport interface UpdateContentURLThunkReturn {\n  /**\n   * The path to retrieve result quickview content.\n   */\n  contentURL?: string;\n}\n\nexport interface PreparePreviewPaginationActionPayload {\n  results: Pick<Result, 'hasHtmlVersion' | 'uniqueId'>[];\n}\n\nexport interface AsyncThunkGlobalOptions<T>\n  extends AsyncThunkOptions<T, ClientThunkExtraArguments<HtmlApiClient>> {\n  rejectValue: SearchAPIErrorWithStatusCode;\n}\n\nexport const fetchResultContent = createAsyncThunk<\n  FetchResultContentThunkReturn,\n  HtmlRequestOptions,\n  AsyncThunkGlobalOptions<StateNeededByHtmlEndpoint>\n>(\n  'resultPreview/fetchResultContent',\n  async (options: HtmlRequestOptions, {extra, getState, rejectWithValue}) => {\n    const state = getState();\n    const req = await buildResultPreviewRequest(state, options);\n    const res = await extra.apiClient.html(req);\n\n    if (isErrorResponse(res)) {\n      return rejectWithValue(res.error);\n    }\n\n    return {\n      content: res.success,\n      uniqueId: options.uniqueId,\n    };\n  }\n);\n\nexport const nextPreview = createAction('resultPreview/next');\nexport const previousPreview = createAction('resultPreview/previous');\nexport const preparePreviewPagination = createAction(\n  'resultPreview/prepare',\n  (payload: PreparePreviewPaginationActionPayload) =>\n    validatePayload(payload, {results: new ArrayValue({required: true})})\n);\n\nexport type UpdateContentURLOptions = HtmlRequestOptions & {\n  path: string;\n  buildResultPreviewRequest: (\n    state: StateNeededByHtmlEndpoint,\n    options: HtmlRequestOptions\n  ) => Promise<HtmlRequest>;\n};\n\nconst MAX_GET_LENGTH = 2048;\n\nexport const updateContentURL = createAsyncThunk<\n  UpdateContentURLThunkReturn,\n  UpdateContentURLOptions,\n  AsyncThunkGlobalOptions<StateNeededByHtmlEndpoint>\n>(\n  'resultPreview/updateContentURL',\n  async (options: UpdateContentURLOptions, {getState, extra}) => {\n    const state = getState();\n    const contentURL = buildContentURL(\n      await options.buildResultPreviewRequest(state, {\n        uniqueId: options.uniqueId,\n        requestedOutputSize: options.requestedOutputSize,\n      }),\n      options.path\n    );\n\n    if (contentURL?.length > MAX_GET_LENGTH) {\n      extra.logger.error(\n        `The content URL was truncated as it exceeds the maximum allowed length of ${MAX_GET_LENGTH} characters.`\n      );\n    }\n\n    return {\n      contentURL: contentURL,\n    };\n  }\n);\n", "import {Result} from '../../api/search/search/result';\nimport {\n  ClickAction,\n  documentIdentifier,\n  makeAnalyticsAction,\n  partialDocumentInformation,\n  validateResultPayload,\n} from '../analytics/analytics-utils';\n\nexport const logDocumentQuickview = (result: Result): ClickAction => {\n  return makeAnalyticsAction(\n    'analytics/resultPreview/open',\n    (client, state) => {\n      validateResultPayload(result);\n      const info = partialDocumentInformation(result, state);\n      const id = documentIdentifier(result);\n      return client.makeDocumentQuickview(info, id);\n    }\n  );\n};\n", "export interface ResultPreviewState {\n  uniqueId: string;\n  content: string;\n  isLoading: boolean;\n  contentURL?: string;\n  position: number;\n  resultsWithPreview: string[];\n}\n\nexport function getResultPreviewInitialState(): ResultPreviewState {\n  return {\n    uniqueId: '',\n    content: '',\n    isLoading: false,\n    position: -1,\n    resultsWithPreview: [],\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport type {Result} from '../../api/search/search/result';\nimport {\n  fetchMoreResults,\n  executeSearch,\n  fetchPage,\n} from '../search/search-actions';\nimport {\n  fetchResultContent,\n  nextPreview,\n  preparePreviewPagination,\n  previousPreview,\n  updateContentURL,\n} from './result-preview-actions';\nimport {\n  ResultPreviewState,\n  getResultPreviewInitialState,\n} from './result-preview-state';\n\nconst resetPreviewContentState = (state: ResultPreviewState) => {\n  const {content, isLoading, uniqueId, contentURL} =\n    getResultPreviewInitialState();\n  state.content = content;\n  state.isLoading = isLoading;\n  state.uniqueId = uniqueId;\n  state.contentURL = contentURL;\n};\n\nconst getUniqueIdsOfResultsWithHTMLVersion = (\n  results: Pick<Result, 'hasHtmlVersion' | 'uniqueId'>[]\n) => results.filter((r) => r.hasHtmlVersion).map((r) => r.uniqueId);\n\nexport const resultPreviewReducer = createReducer(\n  getResultPreviewInitialState(),\n  (builder) => {\n    builder\n      .addCase(fetchResultContent.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchResultContent.fulfilled, (state, action) => {\n        const {content, uniqueId} = action.payload;\n\n        state.position = state.resultsWithPreview.indexOf(uniqueId);\n        state.content = content;\n        state.uniqueId = uniqueId;\n        state.isLoading = false;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        resetPreviewContentState(state);\n        state.resultsWithPreview = getUniqueIdsOfResultsWithHTMLVersion(\n          action.payload.response.results\n        );\n      })\n      .addCase(fetchMoreResults.fulfilled, (state, action) => {\n        resetPreviewContentState(state);\n        state.resultsWithPreview = state.resultsWithPreview.concat(\n          getUniqueIdsOfResultsWithHTMLVersion(action.payload.response.results)\n        );\n      })\n      .addCase(fetchPage.fulfilled, resetPreviewContentState)\n      .addCase(preparePreviewPagination, (state, action) => {\n        state.resultsWithPreview = getUniqueIdsOfResultsWithHTMLVersion(\n          action.payload.results\n        );\n      })\n      .addCase(nextPreview, (state) => {\n        if (state.isLoading) {\n          return;\n        }\n        let newPos = state.position + 1;\n        if (newPos > state.resultsWithPreview.length - 1) {\n          newPos = 0;\n        }\n        state.position = newPos;\n      })\n      .addCase(previousPreview, (state) => {\n        if (state.isLoading) {\n          return;\n        }\n\n        let newPos = state.position - 1;\n        if (newPos < 0) {\n          newPos = state.resultsWithPreview.length - 1;\n        }\n        state.position = newPos;\n      })\n      .addCase(updateContentURL.fulfilled, (state, action) => {\n        state.contentURL = action.payload.contentURL;\n      });\n  }\n);\n", "import {CoreEngine} from '../../..';\nimport {HtmlApiClient} from '../../../api/search/html/html-api-client';\nimport {\n  HtmlRequest,\n  HtmlRequestOptions,\n} from '../../../api/search/html/html-request';\nimport {Result} from '../../../api/search/search/result';\nimport {configuration} from '../../../app/common-reducers';\nimport {ClientThunkExtraArguments} from '../../../app/thunk-extra-arguments';\nimport {\n  fetchResultContent,\n  nextPreview,\n  previousPreview,\n  updateContentURL,\n} from '../../../features/result-preview/result-preview-actions';\nimport {StateNeededByHtmlEndpoint} from '../../../features/result-preview/result-preview-request-builder';\nimport {resultPreviewReducer as resultPreview} from '../../../features/result-preview/result-preview-slice';\nimport {\n  ConfigurationSection,\n  ResultPreviewSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\n\nexport interface QuickviewProps {\n  /**\n   * The options for the `Quickview` controller.\n   */\n  options: QuickviewOptions;\n}\n\nexport interface QuickviewOptions {\n  /**\n   * The result to retrieve a quickview for.\n   */\n  result: Result;\n\n  /**\n   * The maximum preview size to retrieve, in bytes. By default, the full preview is retrieved.\n   */\n  maximumPreviewSize?: number;\n\n  /**\n   * Whether to only update the `contentURL` attribute when using `fetchResultContent` rather than updating `content`.\n   * Use this if you are using an iframe with `state.contentURL` as the source url.\n   */\n  onlyContentURL?: boolean;\n}\n\nexport interface Quickview extends Controller {\n  /**\n   * Retrieves the preview content for the configured result.\n   * If `options.onlyContentURL` is `true` this will update the `contentURL` state property rather than `content`.\n   */\n  fetchResultContent(): void;\n\n  /**\n   * Retrieves the preview content for the next available result in the current result set.\n   *\n   * If it reaches the last available result in the current result set, it will not perform an additional query to fetch new results.\n   *\n   * Instead, it will loop back to the first available result.\n   *\n   * If `options.onlyContentURL` is `true` this will update the `contentURL` state property rather than `content`.\n   */\n  next(): void;\n  /**\n   * Retrieves the preview content for the previous available result in the current result set.\n   *\n   * If it reaches the first available result in the current result set, it will not perform an additional query to fetch new results.\n   *\n   * Instead, it will loop back to the last available result.\n   *\n   * If `options.onlyContentURL` is `true` this will update the `contentURL` state property rather than `content`.\n   */\n  previous(): void;\n\n  /**\n   * The state for the `Quickview` controller.\n   */\n  state: QuickviewState;\n}\n\nexport interface QuickviewState {\n  /**\n   * The result preview HTML content.\n   *\n   * @default \"\"\n   */\n  content: string;\n\n  /**\n   * `true` if the configured result has a preview, and `false` otherwise.\n   */\n  resultHasPreview: boolean;\n\n  /**\n   * `true` if content is being fetched, and `false` otherwise.\n   */\n  isLoading: boolean;\n\n  /**\n   * The `src` path to use if rendering the quickview in an iframe.\n   */\n  contentURL?: string;\n\n  /**\n   * The current result unique ID,\n   */\n  currentResultUniqueId: string;\n}\n\n/**\n * Creates a `Quickview` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Quickview` properties.\n * @param fetchResultContentCallback - The callback to be triggered after executing fetchResultContent.\n * @returns A `Quickview` controller instance.\n */\nexport function buildCoreQuickview(\n  engine: CoreEngine,\n  props: QuickviewProps,\n  buildResultPreviewRequest: (\n    state: StateNeededByHtmlEndpoint,\n    options: HtmlRequestOptions\n  ) => Promise<HtmlRequest>,\n  path: string,\n  fetchResultContentCallback?: () => void\n): Quickview {\n  if (!loadQuickviewReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n  const controller = buildController(engine);\n  const {result, maximumPreviewSize} = props.options;\n\n  const getUniqueIdFromPosition = () => {\n    const {resultsWithPreview, position} = getState().resultPreview;\n    return resultsWithPreview[position];\n  };\n\n  const onFetchContent = (uniqueId: string) => {\n    dispatch(\n      updateContentURL({\n        uniqueId,\n        requestedOutputSize: maximumPreviewSize,\n        buildResultPreviewRequest,\n        path,\n      })\n    );\n\n    if (!props.options.onlyContentURL) {\n      dispatch(\n        fetchResultContent({\n          uniqueId,\n          requestedOutputSize: maximumPreviewSize,\n        })\n      );\n    }\n\n    if (fetchResultContentCallback) {\n      fetchResultContentCallback();\n    }\n  };\n\n  return {\n    ...controller,\n\n    fetchResultContent() {\n      onFetchContent(result.uniqueId);\n    },\n\n    next() {\n      dispatch(nextPreview());\n      onFetchContent(getUniqueIdFromPosition());\n    },\n\n    previous() {\n      dispatch(previousPreview());\n      onFetchContent(getUniqueIdFromPosition());\n    },\n\n    get state() {\n      const state = getState();\n      const resultHasPreview = result.hasHtmlVersion;\n      const preview = state.resultPreview;\n      const content =\n        result.uniqueId === preview.uniqueId ? preview.content : '';\n      const isLoading = preview.isLoading;\n      const contentURL = preview.contentURL;\n      const currentResultUniqueId = getUniqueIdFromPosition();\n\n      return {\n        content,\n        resultHasPreview,\n        isLoading,\n        contentURL,\n        currentResultUniqueId,\n      };\n    },\n  };\n}\n\nfunction loadQuickviewReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  ConfigurationSection & ResultPreviewSection,\n  ClientThunkExtraArguments<HtmlApiClient>\n> {\n  engine.addReducers({configuration, resultPreview});\n  return true;\n}\n", "import {CoreEngine} from '../..';\nimport {HtmlApiClient} from '../../api/search/html/html-api-client';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {preparePreviewPagination} from '../../features/result-preview/result-preview-actions';\nimport {logDocumentQuickview} from '../../features/result-preview/result-preview-analytics-actions';\nimport {buildResultPreviewRequest} from '../../features/result-preview/result-preview-request-builder';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {SearchSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {\n  buildCoreQuickview,\n  QuickviewOptions,\n  QuickviewState as CoreQuickviewState,\n  QuickviewProps,\n  Quickview as CoreQuickview,\n} from '../core/quickview/headless-core-quickview';\n\nexport type {\n  QuickviewOptions,\n  QuickviewProps,\n  CoreQuickviewState,\n  CoreQuickview,\n};\n\nexport interface QuickviewState extends CoreQuickviewState {\n  /**\n   * The number of available results for the current result set.\n   *\n   * Can be used for quickview pagination purpose.\n   */\n  totalResults: number;\n  /**\n   * The position of the result in the current result set.\n   *\n   * Can be used for quickview pagination purpose.\n   */\n  currentResult: number;\n}\n\nexport interface Quickview extends CoreQuickview {\n  state: QuickviewState;\n}\n\n/**\n * Creates a `Quickview` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `Quickview` properties.\n * @returns A `Quickview` controller instance.\n */\nexport function buildQuickview(\n  engine: SearchEngine,\n  props: QuickviewProps\n): Quickview {\n  if (!loadSearchQuickviewReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n  const getResults = () => getState().search.results;\n\n  const fetchResultContentCallback = () => {\n    engine.dispatch(logDocumentQuickview(props.options.result));\n  };\n  const path = '/html';\n\n  const core = buildCoreQuickview(\n    engine,\n    props,\n    buildResultPreviewRequest,\n    path,\n    fetchResultContentCallback\n  );\n\n  dispatch(preparePreviewPagination({results: getResults()}));\n\n  return {\n    ...core,\n\n    get state() {\n      return {\n        ...core.state,\n        currentResult:\n          getResults().findIndex(\n            (r) => r.uniqueId === core.state.currentResultUniqueId\n          ) + 1,\n        totalResults: getResults().length,\n      };\n    },\n  };\n}\n\nfunction loadSearchQuickviewReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  SearchSection,\n  ClientThunkExtraArguments<HtmlApiClient>\n> {\n  engine.addReducers({search});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {Quickview, QuickviewProps, buildQuickview} from './headless-quickview';\n\nexport * from './headless-quickview';\n\n/**\n * @internal\n */\nexport const defineQuickview = (\n  props: QuickviewProps\n): ControllerDefinitionWithoutProps<SearchEngine, Quickview> => ({\n  build: (engine) => buildQuickview(engine, props),\n});\n", "import {Result} from '../../api/search/search/result';\nimport {\n  ClickAction,\n  CustomAction,\n  makeAnalyticsAction,\n} from '../analytics/analytics-utils';\nimport {\n  documentIdentifier,\n  partialDocumentInformation,\n  validateResultPayload,\n} from '../analytics/analytics-utils';\n\nexport const logShowMoreFoldedResults = (result: Result): ClickAction =>\n  makeAnalyticsAction('analytics/folding/showMore', (client, state) => {\n    validateResultPayload(result);\n\n    return client.makeShowMoreFoldedResults(\n      partialDocumentInformation(result, state),\n      documentIdentifier(result)\n    );\n  });\n\nexport const logShowLessFoldedResults = (): CustomAction =>\n  makeAnalyticsAction('analytics/folding/showLess', (client) => {\n    return client.makeShowLessFoldedResults();\n  });\n\nexport const foldedResultAnalyticsClient = {\n  logShowMoreFoldedResults,\n  logShowLessFoldedResults,\n};\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {Result} from '../../api/search/search/result';\nimport {isArray} from '../../utils/utils';\nimport {\n  executeSearch,\n  fetchMoreResults,\n  fetchPage,\n} from '../search/search-actions';\nimport {loadCollection, registerFolding} from './folding-actions';\nimport {\n  FoldedCollection,\n  CollectionId,\n  FoldedResult,\n  FoldingFields,\n  getFoldingInitialState,\n  FoldingState,\n} from './folding-state';\nimport {getAllIncludedResultsFrom} from './folding-utils';\n\nexport interface ResultWithFolding extends Result {\n  parentResult: ResultWithFolding | null;\n  childResults: ResultWithFolding[];\n}\n\nfunction getCollectionField(result: ResultWithFolding, fields: FoldingFields) {\n  return result.raw[fields.collection] as string | undefined;\n}\n\nfunction getParentField(result: ResultWithFolding, fields: FoldingFields) {\n  return result.raw[fields.parent] as string | undefined;\n}\n\nfunction getChildField(result: ResultWithFolding, fields: FoldingFields) {\n  const rawValue = result.raw[fields.child] as string | [string] | undefined;\n  if (isArray(rawValue)) {\n    return rawValue[0];\n  }\n  return rawValue;\n}\n\nfunction areDefinedAndEqual<T>(\n  value1: T | undefined,\n  value2: T | undefined\n): boolean {\n  return (value1 || value2) !== undefined && value1 === value2;\n}\n\nfunction resolveChildrenFromFields(\n  parent: ResultWithFolding,\n  results: ResultWithFolding[],\n  fields: FoldingFields,\n  resolvedAncestors: string[] = []\n): FoldedResult[] {\n  const sourceChildValue = getChildField(parent, fields);\n  if (!sourceChildValue) {\n    return [];\n  }\n  if (resolvedAncestors.indexOf(sourceChildValue) !== -1) {\n    return [];\n  }\n  return results\n    .filter((result) => {\n      const isSameResultAsSource =\n        getChildField(result, fields) === getChildField(parent, fields);\n      const isChildOfSource =\n        getParentField(result, fields) === sourceChildValue;\n      return isChildOfSource && !isSameResultAsSource;\n    })\n    .map((result) => ({\n      result,\n      children: resolveChildrenFromFields(result, results, fields, [\n        ...resolvedAncestors,\n        sourceChildValue,\n      ]),\n    }));\n}\n\nfunction resolveRootFromFields(\n  results: ResultWithFolding[],\n  fields: FoldingFields\n) {\n  return results.find((result) => {\n    const hasNoParent = getParentField(result, fields) === undefined;\n    const isParentOfItself = areDefinedAndEqual(\n      getParentField(result, fields),\n      getChildField(result, fields)\n    );\n    return hasNoParent || isParentOfItself;\n  });\n}\n\nfunction resolveRootFromParentResult(\n  result: ResultWithFolding\n): ResultWithFolding {\n  if (result.parentResult) {\n    return resolveRootFromParentResult(result.parentResult);\n  }\n  return result;\n}\n\nfunction createCollectionFromResult(\n  relevantResult: ResultWithFolding,\n  fields: FoldingFields,\n  rootResult?: ResultWithFolding\n): FoldedCollection {\n  const resultsInCollection = getAllIncludedResultsFrom(relevantResult);\n\n  const resultToUseAsRoot =\n    rootResult ??\n    resolveRootFromFields(resultsInCollection, fields) ??\n    resolveRootFromParentResult(relevantResult);\n\n  return {\n    result: resultToUseAsRoot,\n    children: resolveChildrenFromFields(\n      resultToUseAsRoot,\n      resultsInCollection,\n      fields\n    ),\n    moreResultsAvailable: true,\n    isLoadingMoreResults: false,\n  };\n}\n\nfunction createCollections(\n  results: ResultWithFolding[],\n  fields: FoldingFields,\n  rootResult?: ResultWithFolding\n) {\n  const collections: Record<CollectionId, FoldedCollection> = {};\n  results.forEach((result) => {\n    const collectionId = getCollectionField(result, fields);\n    if (!collectionId) {\n      return;\n    }\n    if (!getChildField(result, fields) && !result.parentResult) {\n      return;\n    }\n    collections[collectionId] = createCollectionFromResult(\n      result,\n      fields,\n      rootResult\n    );\n  });\n  return collections;\n}\n\nfunction tryGetCollectionFromStateOrThrow(\n  state: FoldingState,\n  collectionId: string\n) {\n  if (!state.collections[collectionId]) {\n    throw new Error(\n      `Missing collection ${collectionId} from ${Object.keys(\n        state.collections\n      )}: Folding most probably in an invalid state...`\n    );\n  }\n\n  return state.collections[collectionId];\n}\n\nexport const foldingReducer = createReducer(\n  getFoldingInitialState(),\n  (builder) =>\n    builder\n      .addCase(executeSearch.fulfilled, (state, {payload}) => {\n        state.collections = state.enabled\n          ? createCollections(\n              payload.response.results as ResultWithFolding[],\n              state.fields\n            )\n          : {};\n      })\n      .addCase(fetchPage.fulfilled, (state, {payload}) => {\n        state.collections = state.enabled\n          ? createCollections(\n              payload.response.results as ResultWithFolding[],\n              state.fields\n            )\n          : {};\n      })\n      .addCase(fetchMoreResults.fulfilled, (state, {payload}) => {\n        state.collections = state.enabled\n          ? {\n              ...state.collections,\n              ...createCollections(\n                payload.response.results as ResultWithFolding[],\n                state.fields\n              ),\n            }\n          : {};\n      })\n      .addCase(registerFolding, (state, {payload}) =>\n        state.enabled\n          ? state\n          : {\n              enabled: true,\n              collections: {},\n              fields: {\n                collection: payload.collectionField ?? state.fields.collection,\n                parent: payload.parentField ?? state.fields.parent,\n                child: payload.childField ?? state.fields.child,\n              },\n              filterFieldRange:\n                payload.numberOfFoldedResults ?? state.filterFieldRange,\n            }\n      )\n      .addCase(loadCollection.pending, (state, {meta}) => {\n        const collectionId = meta.arg;\n        tryGetCollectionFromStateOrThrow(\n          state,\n          collectionId\n        ).isLoadingMoreResults = true;\n      })\n      .addCase(loadCollection.rejected, (state, {meta}) => {\n        const collectionId = meta.arg;\n        tryGetCollectionFromStateOrThrow(\n          state,\n          collectionId\n        ).isLoadingMoreResults = false;\n      })\n      .addCase(\n        loadCollection.fulfilled,\n        (state, {payload: {collectionId, results, rootResult}}) => {\n          const newCollections = createCollections(\n            results as ResultWithFolding[],\n            state.fields,\n            rootResult\n          );\n          if (!newCollections || !newCollections[collectionId]) {\n            throw new Error(\n              `Unable to create collection ${collectionId} from received results: ${JSON.stringify(\n                results\n              )}. Folding most probably in an invalid state... `\n            );\n          }\n          state.collections[collectionId] = newCollections[collectionId];\n          state.collections[collectionId].moreResultsAvailable = false;\n        }\n      )\n);\n", "import {Schema} from '@coveo/bueno';\nimport {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {\n  ClickAction,\n  CustomAction,\n} from '../../../features/analytics/analytics-utils';\nimport {configurationReducer as configuration} from '../../../features/configuration/configuration-slice';\nimport {\n  foldingOptionsSchemaDefinition,\n  registerFolding,\n} from '../../../features/folding/folding-actions';\nimport {foldingReducer as folding} from '../../../features/folding/folding-slice';\nimport {\n  CollectionId,\n  FoldedCollection,\n  FoldedResult,\n} from '../../../features/folding/folding-state';\nimport {queryReducer as query} from '../../../features/query/query-slice';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {CoreEngine, Result} from '../../../recommendation.index';\nimport {\n  ConfigurationSection,\n  FoldingSection,\n  QuerySection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {validateOptions} from '../../../utils/validate-payload';\nimport {Controller} from '../../controller/headless-controller';\nimport {\n  ResultListOptions,\n  buildCoreResultList,\n} from '../result-list/headless-core-result-list';\nimport {SearchStatusState} from '../status/headless-core-status';\n\nexport type {FoldedCollection, FoldedResult};\n\nconst optionsSchema = new Schema<Required<FoldingOptions>>(\n  foldingOptionsSchemaDefinition\n);\n\nexport interface FoldingOptions {\n  /**\n   * The name of the field on which to do the folding. The folded result list component will use the values of this field to resolve the collections of result items.\n   *\n   * @defaultValue `foldingcollection`\n   */\n  collectionField?: string;\n  /**\n   * The name of the field that determines whether a certain result is a top result containing other child results within a collection.\n   *\n   * @defaultValue `foldingparent`\n   */\n  parentField?: string;\n  /**\n   * The name of the field that uniquely identifies a result within a collection.\n   *\n   * @defaultValue `foldingchild`\n   */\n  childField?: string;\n  /**\n   * The number of child results to fold under the root collection element, before expansion.\n   *\n   * @defaultValue `2`\n   */\n  numberOfFoldedResults?: number;\n}\n\nexport interface FoldedResultListOptions extends ResultListOptions {\n  folding?: FoldingOptions;\n}\n\nexport interface CoreFoldedResultListProps {\n  /**\n   * The options for the `FoldedResultList` controller.\n   * */\n  options?: FoldedResultListOptions;\n  /**\n   * The action creator to build the `loadCollection` action.\n   */\n  loadCollectionActionCreator: (\n    collectionId: CollectionId\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) => AsyncThunkAction<any, CollectionId, any>;\n  /**\n   * The action creator to build the `fetchMoreResults` action.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  fetchMoreResultsActionCreator: () => AsyncThunkAction<unknown, void, any>;\n}\n\n/**\n * The `FoldedResultList` headless controller re-organizes results into hierarchical collections (a.k.a. threads).\n */\nexport interface FoldedResultList extends Controller {\n  /**\n   * The state of the `FoldedResultList` controller.\n   */\n  state: FoldedResultListState;\n  /**\n   * Using the same parameters as the last successful query, fetch another batch of results, if available.\n   * Particularly useful for infinite scrolling, for example.\n   *\n   * This method is not compatible with the `Pager` controller.\n   */\n  fetchMoreResults(): void;\n  /**\n   * Loads all the folded results for a given collection.\n   *\n   * @param collection - The collection for which to load more results.\n   */\n  loadCollection(collection: FoldedCollection): void;\n  /**\n   * Logs a click event when a user loads/shows more folded results.\n   *\n   * @param result - The result to send analytics for.\n   */\n  logShowMoreFoldedResults(result: Result): void;\n  /**\n   * Logs a custom event when a user shows less folded results.\n   *   */\n  logShowLessFoldedResults(): void;\n  /**\n   * Finds a folded result by its unique ID.\n   *\n   * @param collection - The folded collection whose ID will be used to find a collection in the results.\n   * @returns The `FoldedResult` associated with the collection's ID.\n   */\n  findResultById(collection: FoldedCollection): FoldedResult | null;\n  /**\n   * Finds a folded result by its collection.\n   *\n   * @param collection - The folded collection whose collection name will be used to find a collection in the results.\n   * @returns The `FoldedResult` associated with the collection's name.\n   */\n  findResultByCollection(collection: FoldedCollection): FoldedResult | null;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `FoldedResultList` controller.\n */\nexport interface FoldedResultListState extends SearchStatusState {\n  /**\n   * The ordered list of collections.\n   * */\n  results: FoldedCollection[];\n  /**\n   * The unique identifier of the response where the results were fetched, this value does not change when loading more results.\n   */\n  searchResponseId: string;\n  /**\n   * Whether more results are available, using the same parameters as the last successful query.\n   *\n   * This property is not compatible with the `Pager` controller.\n   */\n  moreResultsAvailable: boolean;\n}\n\nexport interface FoldedResultAnalyticsClient {\n  logShowMoreFoldedResults: (result: Result) => ClickAction;\n  logShowLessFoldedResults: () => CustomAction;\n}\n\n/**\n * Creates a core `FoldedResultList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `FoldedResultList` properties.\n * @param analyticsClient - A FoldedResultAnalyticsClient to send the appropriate analytics calls.\n * @returns A `FoldedResultList` controller instance.\n */\nexport function buildCoreFoldedResultList(\n  engine: CoreEngine,\n  props: CoreFoldedResultListProps,\n  analyticsClient: FoldedResultAnalyticsClient\n): FoldedResultList {\n  if (!loadFoldingReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildCoreResultList(engine, props);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const options = props.options?.folding\n    ? validateOptions(\n        engine,\n        optionsSchema,\n        props.options!.folding!,\n        'buildFoldedResultList'\n      )\n    : {};\n\n  dispatch(registerFolding({...options}));\n\n  return {\n    ...controller,\n\n    loadCollection: (collection) => {\n      dispatch(\n        props.loadCollectionActionCreator(\n          collection.result.raw[\n            engine.state.folding.fields.collection\n          ] as string\n        )\n      );\n      dispatch(analyticsClient.logShowMoreFoldedResults(collection.result));\n    },\n    logShowMoreFoldedResults: (result) => {\n      dispatch(analyticsClient.logShowMoreFoldedResults(result));\n    },\n    logShowLessFoldedResults: () => {\n      dispatch(analyticsClient.logShowLessFoldedResults());\n    },\n\n    findResultById(collection) {\n      return searchForResult(\n        this.state.results,\n        (r) => r.result.uniqueId === collection.result.uniqueId\n      );\n    },\n\n    findResultByCollection(collection) {\n      return searchForResult(\n        this.state.results,\n        (r) =>\n          r.result.raw.foldingcollection ===\n          collection.result.raw.foldingcollection\n      );\n    },\n\n    get state() {\n      const state = getState();\n\n      return {\n        ...controller.state,\n        results: controller.state.results.map((result) => {\n          const collectionId = result.raw[state.folding.fields.collection] as\n            | string\n            | undefined;\n          if (!collectionId || !state.folding.collections[collectionId]) {\n            return {\n              result,\n              moreResultsAvailable: false,\n              isLoadingMoreResults: false,\n              children: [],\n            };\n          }\n          return state.folding.collections[collectionId];\n        }),\n      };\n    },\n  };\n}\n\nfunction loadFoldingReducer(\n  engine: CoreEngine\n): engine is CoreEngine<\n  SearchSection & ConfigurationSection & FoldingSection & QuerySection\n> {\n  engine.addReducers({search, configuration, folding, query});\n  return true;\n}\n\nfunction searchForResult(\n  results: FoldedCollection[] | FoldedResult[],\n  compareCb: (result: FoldedResult) => boolean\n): FoldedResult | null {\n  for (let i = 0; i < results.length; i++) {\n    const result = results[i];\n    if (compareCb(result)) {\n      return result;\n    }\n    if (result.children.length) {\n      const childResult = searchForResult(result.children, compareCb);\n      if (childResult) {\n        return childResult;\n      }\n    }\n  }\n  return null;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {loadCollection} from '../../features/folding/folding-actions';\nimport {foldedResultAnalyticsClient} from '../../features/folding/folding-analytics-actions';\nimport {fetchMoreResults} from '../../features/search/search-actions';\nimport {\n  buildCoreFoldedResultList,\n  FoldingOptions,\n  FoldedResultList,\n  FoldedResultListOptions,\n  FoldedResultListState,\n  FoldedCollection,\n  FoldedResult,\n} from '../core/folded-result-list/headless-core-folded-result-list';\n\nexport type {\n  FoldedResultListOptions,\n  FoldedResultListState,\n  FoldedResultList,\n  FoldingOptions,\n  FoldedCollection,\n  FoldedResult,\n};\n\nexport interface FoldedResultListProps {\n  /**\n   * The options for the `FoldedResultList` controller.\n   * */\n  options?: FoldedResultListOptions;\n}\n\n/**\n * Creates a `FoldedResultList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `FoldedResultList` properties.\n * @returns A `FoldedResultList` controller instance.\n */\nexport function buildFoldedResultList(\n  engine: SearchEngine,\n  props: FoldedResultListProps = {}\n): FoldedResultList {\n  const foldedResultList = buildCoreFoldedResultList(\n    engine,\n    {\n      ...props,\n      loadCollectionActionCreator: loadCollection,\n      fetchMoreResultsActionCreator: fetchMoreResults,\n    },\n    foldedResultAnalyticsClient\n  );\n  return {\n    ...foldedResultList,\n\n    get state() {\n      return foldedResultList.state;\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  FoldedResultList,\n  FoldedResultListProps,\n  buildFoldedResultList,\n} from './headless-folded-result-list';\n\nexport * from './headless-folded-result-list';\n\n/**\n * @internal\n */\nexport const defineFoldedResultList = (\n  props?: FoldedResultListProps\n): ControllerDefinitionWithoutProps<SearchEngine, FoldedResultList> => ({\n  build: (engine) => buildFoldedResultList(engine, props),\n});\n", "import {ExecuteTriggerParams} from '../../api/search/trigger';\n\n/**\n * The name of a function to execute and its parameters.\n */\nexport interface FunctionExecutionTrigger {\n  /**\n   * The name of the function to execute.\n   */\n  functionName: string;\n  /**\n   * The parameters of the function to execute.\n   */\n  params: ExecuteTriggerParams;\n}\n\nexport interface TriggerState {\n  /**\n   * The URL to redirect the user to after receiving a redirection trigger.\n   */\n  redirectTo: string;\n\n  /**\n   * The new query to perform a search with after receiving a query trigger.\n   */\n  query: string;\n\n  /**\n   * The JavaScript functions to execute after receiving execution triggers.\n   */\n  executions: FunctionExecutionTrigger[];\n\n  /**\n   * The notifications to display to the user after receiving notification triggers.\n   */\n  notifications: string[];\n\n  /**\n   * The modification that should be applied as a result of a query trigger.\n   */\n  queryModification: {\n    /**\n     * The original query performed by the end user.\n     */\n    originalQuery: string;\n    /**\n     * The new query that should be executed.\n     */\n    newQuery: string;\n    /**\n     * The query modification that should be ignored when explicitly requested by the end user.\n     */\n    queryToIgnore: string;\n  };\n}\n\nexport const getTriggerInitialState: () => TriggerState = () => ({\n  redirectTo: '',\n  query: '',\n  executions: [],\n  notifications: [],\n  queryModification: {originalQuery: '', newQuery: '', queryToIgnore: ''},\n});\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {executeSearch} from '../search/search-actions';\nimport {\n  applyQueryTriggerModification,\n  updateIgnoreQueryTrigger,\n} from './triggers-actions';\nimport {\n  FunctionExecutionTrigger,\n  getTriggerInitialState,\n} from './triggers-state';\n\nexport const triggerReducer = createReducer(\n  getTriggerInitialState(),\n  (builder) =>\n    builder\n      .addCase(executeSearch.pending, (state) => {\n        state.query = '';\n        state.queryModification = {\n          originalQuery: '',\n          newQuery: '',\n          queryToIgnore: state.queryModification.queryToIgnore,\n        };\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const redirectTriggers: string[] = [];\n        const queryTriggers: string[] = [];\n        const executeTriggers: FunctionExecutionTrigger[] = [];\n        const notifyTriggers: string[] = [];\n\n        action.payload.response.triggers.forEach((trigger) => {\n          switch (trigger.type) {\n            case 'redirect':\n              redirectTriggers.push(trigger.content);\n              break;\n            case 'query':\n              queryTriggers.push(trigger.content);\n\n              break;\n            case 'execute':\n              executeTriggers.push({\n                functionName: trigger.content.name,\n                params: trigger.content.params,\n              });\n              break;\n            case 'notify':\n              notifyTriggers.push(trigger.content);\n              break;\n          }\n        });\n\n        state.redirectTo = redirectTriggers[0] ?? '';\n        state.query = state.queryModification.newQuery;\n        state.executions = executeTriggers;\n        state.notifications = notifyTriggers;\n      })\n      .addCase(applyQueryTriggerModification, (state, action) => {\n        state.queryModification = {...action.payload, queryToIgnore: ''};\n      })\n      .addCase(updateIgnoreQueryTrigger, (state, action) => {\n        state.queryModification.queryToIgnore = action.payload;\n      })\n);\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logTriggerRedirect} from '../../features/triggers/trigger-analytics-actions';\nimport {triggerReducer as triggers} from '../../features/triggers/triggers-slice';\nimport {TriggerSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {buildController, Controller} from '../controller/headless-controller';\n\n/**\n * The `RedirectionTrigger` controller handles redirection actions.\n */\nexport interface RedirectionTrigger extends Controller {\n  /**\n   * the state of the `RedirectionTrigger` controller.\n   */\n  state: RedirectionTriggerState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `RedirectionTrigger` controller.\n */\nexport interface RedirectionTriggerState {\n  /**\n   * The url used for the redirection.\n   */\n  redirectTo: string;\n}\n\n/**\n * Creates a `RedirectionTrigger` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `RedirectionTrigger` controller instance.\n * */\nexport function buildRedirectionTrigger(\n  engine: SearchEngine\n): RedirectionTrigger {\n  if (!loadRedirectionReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const getState = () => engine.state;\n\n  let previousRedirectTo = getState().triggers.redirectTo;\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const hasChanged = previousRedirectTo !== this.state.redirectTo;\n        previousRedirectTo = this.state.redirectTo;\n\n        if (hasChanged && this.state.redirectTo) {\n          listener();\n          dispatch(logTriggerRedirect());\n        }\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        redirectTo: getState().triggers.redirectTo,\n      };\n    },\n  };\n}\n\nfunction loadRedirectionReducers(\n  engine: SearchEngine\n): engine is SearchEngine<TriggerSection> {\n  engine.addReducers({triggers});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  RedirectionTrigger,\n  buildRedirectionTrigger,\n} from './headless-redirection-trigger';\n\nexport * from './headless-redirection-trigger';\n\n/**\n * @internal\n */\nexport const defineRedirectionTrigger = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  RedirectionTrigger\n> => ({\n  build: (engine) => buildRedirectionTrigger(engine),\n});\n", "import {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {updateQuery} from '../../features/query/query-actions';\nimport {queryReducer as query} from '../../features/query/query-slice';\nimport {executeSearch} from '../../features/search/search-actions';\nimport {logUndoTriggerQuery} from '../../features/triggers/trigger-analytics-actions';\nimport {updateIgnoreQueryTrigger} from '../../features/triggers/triggers-actions';\nimport {triggerReducer as triggers} from '../../features/triggers/triggers-slice';\nimport {TriggerSection, QuerySection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {buildController, Controller} from '../controller/headless-controller';\n\n/**\n * The `QueryTrigger` controller handles query triggers.\n */\nexport interface QueryTrigger extends Controller {\n  /**\n   * The state of the `QueryTrigger` controller.\n   */\n  state: QueryTriggerState;\n  /**\n   * Undoes a query trigger's correction.\n   */\n  undo(): void;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `QueryTrigger` controller.\n */\nexport interface QueryTriggerState {\n  /**\n   * The new query to perform a search with after receiving a query trigger.\n   */\n  newQuery: string;\n\n  /**\n   * The query used to perform the search that received a query trigger in its response.\n   */\n  originalQuery: string;\n\n  /**\n   * A boolean to specify if the controller was triggered resulting in a modification to the query.\n   */\n  wasQueryModified: boolean;\n}\n\n/**\n * Creates a `QueryTrigger` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `QueryTrigger` controller instance.\n * */\nexport function buildQueryTrigger(engine: SearchEngine): QueryTrigger {\n  if (!loadQueryTriggerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const getState = () => engine.state;\n\n  const modification = () => getState().triggers.queryModification.newQuery;\n  const originalQuery = () =>\n    getState().triggers.queryModification.originalQuery;\n\n  return {\n    ...controller,\n\n    get state() {\n      return {\n        newQuery: modification(),\n        originalQuery: originalQuery(),\n        wasQueryModified: modification() !== '',\n      };\n    },\n\n    undo() {\n      dispatch(updateIgnoreQueryTrigger(modification()));\n      dispatch(updateQuery({q: originalQuery()}));\n      dispatch(\n        executeSearch({\n          legacy: logUndoTriggerQuery({\n            undoneQuery: modification(),\n          }),\n          next: {\n            actionCause: SearchPageEvents.undoTriggerQuery,\n            getEventExtraPayload: () =>\n              new SearchAnalyticsProvider(getState).getUndoTriggerQueryMetadata(\n                modification()\n              ),\n          },\n        })\n      );\n    },\n  };\n}\n\nfunction loadQueryTriggerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<TriggerSection & QuerySection> {\n  engine.addReducers({triggers, query});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {QueryTrigger, buildQueryTrigger} from './headless-query-trigger';\n\nexport * from './headless-query-trigger';\n\n/**\n * @internal\n */\nexport const defineQueryTrigger = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  QueryTrigger\n> => ({\n  build: (engine) => buildQueryTrigger(engine),\n});\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logTriggerExecute} from '../../features/triggers/trigger-analytics-actions';\nimport {triggerReducer as triggers} from '../../features/triggers/triggers-slice';\nimport {FunctionExecutionTrigger} from '../../features/triggers/triggers-state';\nimport {TriggerSection} from '../../state/state-sections';\nimport {arrayEqual} from '../../utils/compare-utils';\nimport {loadReducerError} from '../../utils/errors';\nimport {buildController, Controller} from '../controller/headless-controller';\n\n/**\n * The `ExecuteTrigger` controller handles execute trigger actions.\n */\nexport interface ExecuteTrigger extends Controller {\n  /**\n   * The state of the `ExecuteTrigger` controller.\n   */\n  state: ExecuteTriggerState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `ExecuteTrigger` controller.\n */\nexport interface ExecuteTriggerState {\n  /**\n   * The functions to be executed.\n   */\n  executions: FunctionExecutionTrigger[];\n}\n\n/**\n * Creates a `ExecuteTrigger` controller instance. An execute trigger is configured in the Administration console,\n * and used to execute a function in the browser when a certain condition is met.\n *\n *\n * @param engine - The headless engine.\n * @returns A `RedirectionTrigger` controller instance.\n * */\nexport function buildExecuteTrigger(engine: SearchEngine): ExecuteTrigger {\n  if (!loadExecuteTriggerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const getState = () => engine.state;\n\n  let previousExecutions = getState().triggers.executions;\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const hasChanged = !arrayEqual(\n          this.state.executions,\n          previousExecutions,\n          (first, second) =>\n            first.functionName === second.functionName &&\n            arrayEqual(first.params, second.params)\n        );\n\n        previousExecutions = this.state.executions;\n\n        if (hasChanged && this.state.executions.length) {\n          listener();\n          dispatch(logTriggerExecute());\n        }\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        executions: getState().triggers.executions,\n      };\n    },\n  };\n}\n\nfunction loadExecuteTriggerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<TriggerSection> {\n  engine.addReducers({triggers});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {ExecuteTrigger, buildExecuteTrigger} from './headless-execute-trigger';\n\nexport * from './headless-execute-trigger';\n\n/**\n * @internal\n */\nexport const defineExecuteTrigger = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  ExecuteTrigger\n> => ({\n  build: (engine) => buildExecuteTrigger(engine),\n});\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logNotifyTrigger} from '../../features/triggers/trigger-analytics-actions';\nimport {triggerReducer as triggers} from '../../features/triggers/triggers-slice';\nimport {TriggerSection} from '../../state/state-sections';\nimport {arrayEqual} from '../../utils/compare-utils';\nimport {loadReducerError} from '../../utils/errors';\nimport {buildController, Controller} from '../controller/headless-controller';\n\n/**\n * The `NotifyTrigger` controller handles Notify triggers.\n */\nexport interface NotifyTrigger extends Controller {\n  /**\n   * the state of the `NotifyTrigger` controller.\n   */\n  state: NotifyTriggerState;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `NotifyTrigger` controller.\n */\nexport interface NotifyTriggerState {\n  /**\n   * The notifications to display to the user after receiving notification triggers.\n   */\n  notifications: string[];\n}\n\n/**\n * Creates a `NotifyTrigger` controller instance.\n *\n * @param engine - The headless engine.\n * @returns A `NotifyTrigger` controller instance.\n * */\nexport function buildNotifyTrigger(engine: SearchEngine): NotifyTrigger {\n  if (!loadNotifyTriggerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n\n  const getState = () => engine.state;\n\n  let previousNotifications = getState().triggers.notifications;\n\n  return {\n    ...controller,\n\n    subscribe(listener: () => void) {\n      const strictListener = () => {\n        const hasChanged = !arrayEqual(\n          previousNotifications,\n          this.state.notifications\n        );\n        previousNotifications = this.state.notifications;\n\n        if (hasChanged) {\n          listener();\n          dispatch(logNotifyTrigger());\n        }\n      };\n      strictListener();\n      return engine.subscribe(strictListener);\n    },\n\n    get state() {\n      return {\n        notifications: getState().triggers.notifications,\n      };\n    },\n  };\n}\n\nfunction loadNotifyTriggerReducers(\n  engine: SearchEngine\n): engine is SearchEngine<TriggerSection> {\n  engine.addReducers({triggers});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {NotifyTrigger, buildNotifyTrigger} from './headless-notify-trigger';\n\nexport * from './headless-notify-trigger';\n\n/**\n * @internal\n */\nexport const defineNotifyTrigger = (): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  NotifyTrigger\n> => ({\n  build: (engine) => buildNotifyTrigger(engine),\n});\n", "import {RecordValue} from '@coveo/bueno';\nimport {\n  requiredEmptyAllowedString,\n  requiredNonEmptyString,\n  validatePayload,\n} from '../../utils/validate-payload';\n\nexport interface QuestionAnsweringUniqueIdentifierActionCreatorPayload {\n  questionAnswerId: string;\n}\n\nexport interface QuestionAnsweringInlineLinkActionCreatorPayload {\n  linkText: string;\n  linkURL: string;\n}\n\nexport const uniqueIdentifierPayloadDefinition = () =>\n  new RecordValue({\n    values: {\n      questionAnswerId: requiredNonEmptyString,\n    },\n    options: {required: true},\n  });\n\nexport const inlineLinkPayloadDefinition = () =>\n  new RecordValue({\n    values: {\n      linkText: requiredEmptyAllowedString,\n      linkURL: requiredEmptyAllowedString,\n    },\n    options: {required: true},\n  });\n\nexport function validateQuestionAnsweringActionCreatorPayload(\n  payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n) {\n  return validatePayload<QuestionAnsweringUniqueIdentifierActionCreatorPayload>(\n    payload,\n    uniqueIdentifierPayloadDefinition()\n  );\n}\n", "import {QuestionAnswerDocumentIdentifier} from '../../api/search/search/question-answering';\nimport {\n  QuestionAnsweringSection,\n  SearchSection,\n} from '../../state/state-sections';\nimport {resultFromFieldSelector} from '../search/search-selectors';\n\nexport function answerSourceSelector(\n  state: Partial<SearchSection & QuestionAnsweringSection>,\n  documentIdentifier?: QuestionAnswerDocumentIdentifier\n) {\n  const documentId =\n    documentIdentifier ?? state.search?.questionAnswer?.documentId;\n  return (\n    documentId &&\n    state.search &&\n    resultFromFieldSelector(\n      state as SearchSection,\n      documentId.contentIdKey,\n      documentId.contentIdValue\n    )\n  );\n}\n\nexport function relatedQuestionSelector(\n  state: Partial<SearchSection & QuestionAnsweringSection>,\n  questionAnswerId: string\n) {\n  const index =\n    state.questionAnswering?.relatedQuestions.findIndex(\n      (relatedQuestion) => relatedQuestion.questionAnswerId === questionAnswerId\n    ) ?? -1;\n  if (index === -1) {\n    return null;\n  }\n  const searchQuestionState =\n    state.search?.questionAnswer?.relatedQuestions?.[index];\n  return searchQuestionState ?? null;\n}\n", "import {validatePayload} from '../../utils/validate-payload';\nimport {\n  ClickAction,\n  CustomAction,\n  documentIdentifier,\n  makeAnalyticsAction,\n  partialDocumentInformation,\n} from '../analytics/analytics-utils';\nimport {\n  inlineLinkPayloadDefinition,\n  QuestionAnsweringInlineLinkActionCreatorPayload,\n  QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n  uniqueIdentifierPayloadDefinition,\n  validateQuestionAnsweringActionCreatorPayload,\n} from './question-answering-document-id';\nimport {\n  answerSourceSelector,\n  relatedQuestionSelector,\n} from './question-answering-selectors';\n\nexport type SmartSnippetFeedback =\n  | 'does_not_answer'\n  | 'partially_answers'\n  | 'was_not_a_question';\n\nexport const logExpandSmartSnippet = (): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/expand', (client) =>\n    client.makeExpandSmartSnippet()\n  );\n\nexport const logCollapseSmartSnippet = (): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/collapse', (client) =>\n    client.makeCollapseSmartSnippet()\n  );\n\nexport const logLikeSmartSnippet = (): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/like', (client) =>\n    client.makeLikeSmartSnippet()\n  );\n\nexport const logDislikeSmartSnippet = (): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/dislike', (client) =>\n    client.makeDislikeSmartSnippet()\n  );\n\n/**\n * @returns A dispatchable action.\n */\nexport function logOpenSmartSnippetSource(): ClickAction {\n  return makeAnalyticsAction(\n    'analytics/smartSnippet/source/open',\n    (client, state) => {\n      const result = answerSourceSelector(state)!;\n      return client.makeOpenSmartSnippetSource(\n        partialDocumentInformation(result, state),\n        documentIdentifier(result)\n      );\n    }\n  );\n}\n\nexport const logOpenSmartSnippetInlineLink = (\n  payload: QuestionAnsweringInlineLinkActionCreatorPayload\n): ClickAction =>\n  makeAnalyticsAction('analytics/smartSnippet/source/open', (client, state) => {\n    validatePayload(payload, inlineLinkPayloadDefinition());\n    const result = answerSourceSelector(state)!;\n    return client.makeOpenSmartSnippetInlineLink(\n      partialDocumentInformation(result, state),\n      {\n        ...documentIdentifier(result),\n        ...payload,\n      }\n    );\n  });\n\nexport const logOpenSmartSnippetFeedbackModal = (): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/feedbackModal/open', (client) =>\n    client.makeOpenSmartSnippetFeedbackModal()\n  );\n\nexport const logCloseSmartSnippetFeedbackModal = (): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/feedbackModal/close', (client) =>\n    client.makeCloseSmartSnippetFeedbackModal()\n  );\n\nexport const logSmartSnippetFeedback = (\n  feedback: SmartSnippetFeedback\n): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/sendFeedback', (client) =>\n    client.makeSmartSnippetFeedbackReason(feedback)\n  );\n\nexport const logSmartSnippetDetailedFeedback = (\n  details: string\n): CustomAction =>\n  makeAnalyticsAction('analytics/smartSnippet/sendFeedback', (client) =>\n    client.makeSmartSnippetFeedbackReason('other', details)\n  );\n\nexport const logExpandSmartSnippetSuggestion = (\n  payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/smartSnippetSuggestion/expand',\n    (client, state) => {\n      validateQuestionAnsweringActionCreatorPayload(payload);\n\n      const relatedQuestion = relatedQuestionSelector(\n        state,\n        payload.questionAnswerId\n      );\n      if (!relatedQuestion) {\n        return null;\n      }\n\n      return client.makeExpandSmartSnippetSuggestion({\n        question: relatedQuestion.question,\n        answerSnippet: relatedQuestion.answerSnippet,\n        documentId: relatedQuestion.documentId,\n      });\n    }\n  );\n\nexport const logCollapseSmartSnippetSuggestion = (\n  payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/smartSnippetSuggestion/expand',\n    (client, state) => {\n      validateQuestionAnsweringActionCreatorPayload(payload);\n\n      const relatedQuestion = relatedQuestionSelector(\n        state,\n        payload.questionAnswerId\n      );\n      if (!relatedQuestion) {\n        return null;\n      }\n\n      return client.makeCollapseSmartSnippetSuggestion({\n        question: relatedQuestion.question,\n        answerSnippet: relatedQuestion.answerSnippet,\n        documentId: relatedQuestion.documentId,\n      });\n    }\n  );\n\nexport const logOpenSmartSnippetSuggestionSource = (\n  payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n): ClickAction =>\n  makeAnalyticsAction('analytics/smartSnippet/source/open', (client, state) => {\n    validatePayload(payload, uniqueIdentifierPayloadDefinition());\n\n    const relatedQuestion = relatedQuestionSelector(\n      state,\n      payload.questionAnswerId\n    );\n    if (!relatedQuestion) {\n      return null;\n    }\n    const source = answerSourceSelector(state, relatedQuestion.documentId);\n    if (!source) {\n      return null;\n    }\n\n    return client.makeOpenSmartSnippetSuggestionSource(\n      partialDocumentInformation(source, state),\n      {\n        question: relatedQuestion.question,\n        answerSnippet: relatedQuestion.answerSnippet,\n        documentId: relatedQuestion.documentId,\n      }\n    );\n  });\n\nexport const logOpenSmartSnippetSuggestionInlineLink = (\n  identifier: QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n  link: QuestionAnsweringInlineLinkActionCreatorPayload\n): ClickAction =>\n  makeAnalyticsAction('analytics/smartSnippet/source/open', (client, state) => {\n    validatePayload(identifier, uniqueIdentifierPayloadDefinition());\n    validatePayload(link, inlineLinkPayloadDefinition());\n\n    const relatedQuestion = relatedQuestionSelector(\n      state,\n      identifier.questionAnswerId\n    );\n    if (!relatedQuestion) {\n      return null;\n    }\n    const source = answerSourceSelector(state, relatedQuestion.documentId);\n    if (!source) {\n      return null;\n    }\n\n    return client.makeOpenSmartSnippetSuggestionInlineLink(\n      partialDocumentInformation(source, state),\n      {\n        question: relatedQuestion.question,\n        answerSnippet: relatedQuestion.answerSnippet,\n        documentId: relatedQuestion.documentId,\n        linkText: link.linkText,\n        linkURL: link.linkURL,\n      }\n    );\n  });\n\nexport const smartSnippetAnalyticsClient = {\n  logExpandSmartSnippet,\n  logCollapseSmartSnippet,\n  logLikeSmartSnippet,\n  logDislikeSmartSnippet,\n  logOpenSmartSnippetSource,\n  logOpenSmartSnippetInlineLink,\n  logOpenSmartSnippetFeedbackModal,\n  logCloseSmartSnippetFeedbackModal,\n  logSmartSnippetFeedback,\n  logSmartSnippetDetailedFeedback,\n  logExpandSmartSnippetSuggestion,\n  logCollapseSmartSnippetSuggestion,\n  logOpenSmartSnippetSuggestionSource,\n};\n", "import {createAction} from '@reduxjs/toolkit';\nimport {\n  QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n  validateQuestionAnsweringActionCreatorPayload,\n} from './question-answering-document-id';\n\nexport const expandSmartSnippet = createAction('smartSnippet/expand');\n\nexport const collapseSmartSnippet = createAction('smartSnippet/collapse');\n\nexport const likeSmartSnippet = createAction('smartSnippet/like');\n\nexport const dislikeSmartSnippet = createAction('smartSnippet/dislike');\n\nexport const openFeedbackModal = createAction(\n  'smartSnippet/feedbackModal/open'\n);\n\nexport const closeFeedbackModal = createAction(\n  'smartSnippet/feedbackModal/close'\n);\n\nexport const expandSmartSnippetRelatedQuestion = createAction(\n  'smartSnippet/related/expand',\n  (payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload) =>\n    validateQuestionAnsweringActionCreatorPayload(payload)\n);\n\nexport const collapseSmartSnippetRelatedQuestion = createAction(\n  'smartSnippet/related/collapse',\n  (payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload) =>\n    validateQuestionAnsweringActionCreatorPayload(payload)\n);\n", "import {QuestionAnswerDocumentIdentifier} from '../../api/search/search/question-answering';\n\nexport interface QuestionAnsweringRelatedQuestionState\n  extends QuestionAnswerDocumentIdentifier {\n  /**\n   * Determines if the snippet is expanded.\n   */\n  expanded: boolean;\n  /**\n   * The unique identifier for this question & answer.\n   */\n  questionAnswerId: string;\n}\nexport interface QuestionAnsweringState {\n  /**\n   * Determines if the snippet is liked, or upvoted by the end user.\n   */\n  liked: boolean;\n  /**\n   * Determines if the snippet is disliked, or downvoted by the end user.\n   */\n  disliked: boolean;\n  /**\n   * Determines if the snippet is expanded.\n   */\n  expanded: boolean;\n  /**\n   * Determines if the feedback modal with the purpose of explaining why the end user disliked the snippet is currently opened.\n   */\n  feedbackModalOpen: boolean;\n  /**\n   * The unique identifier for this question & answer.\n   */\n  questionAnswerId?: string;\n  relatedQuestions: QuestionAnsweringRelatedQuestionState[];\n}\n\nexport const getQuestionAnsweringInitialState: () => QuestionAnsweringState =\n  () => ({\n    liked: false,\n    disliked: false,\n    expanded: false,\n    feedbackModalOpen: false,\n    relatedQuestions: [],\n  });\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {QuestionAnswer} from '../../api/search/search/question-answering';\nimport {getObjectHash} from '../../utils/utils';\nimport {executeSearch} from '../search/search-actions';\nimport {\n  collapseSmartSnippet,\n  collapseSmartSnippetRelatedQuestion,\n  dislikeSmartSnippet,\n  expandSmartSnippet,\n  expandSmartSnippetRelatedQuestion,\n  likeSmartSnippet,\n  openFeedbackModal,\n  closeFeedbackModal,\n} from './question-answering-actions';\nimport {QuestionAnsweringUniqueIdentifierActionCreatorPayload} from './question-answering-document-id';\nimport {\n  getQuestionAnsweringInitialState,\n  QuestionAnsweringRelatedQuestionState,\n} from './question-answering-state';\n\nconst findRelatedQuestionIdx = (\n  relatedQuestions: QuestionAnsweringRelatedQuestionState[],\n  identifier: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n) =>\n  relatedQuestions.findIndex(\n    (relatedQuestion) =>\n      relatedQuestion.questionAnswerId === identifier.questionAnswerId\n  );\n\nfunction hashQuestionAnswer({\n  question,\n  answerSnippet,\n  documentId: {contentIdKey, contentIdValue},\n}: QuestionAnswer) {\n  return getObjectHash({\n    question,\n    answerSnippet,\n    contentIdKey,\n    contentIdValue,\n  });\n}\n\nfunction buildQuestionAnsweringRelatedQuestionState(\n  responseQuestionAnswer: QuestionAnswer,\n  currentState?: QuestionAnsweringRelatedQuestionState\n): QuestionAnsweringRelatedQuestionState {\n  const id = hashQuestionAnswer(responseQuestionAnswer);\n  if (currentState && id === currentState.questionAnswerId) {\n    return currentState;\n  }\n  return {\n    contentIdKey: responseQuestionAnswer.documentId.contentIdKey,\n    contentIdValue: responseQuestionAnswer.documentId.contentIdValue,\n    expanded: false,\n    questionAnswerId: id,\n  };\n}\n\nexport const questionAnsweringReducer = createReducer(\n  getQuestionAnsweringInitialState(),\n  (builder) =>\n    builder\n      .addCase(expandSmartSnippet, (state) => {\n        state.expanded = true;\n      })\n      .addCase(collapseSmartSnippet, (state) => {\n        state.expanded = false;\n      })\n      .addCase(likeSmartSnippet, (state) => {\n        state.liked = true;\n        state.disliked = false;\n        state.feedbackModalOpen = false;\n      })\n      .addCase(dislikeSmartSnippet, (state) => {\n        state.liked = false;\n        state.disliked = true;\n      })\n      .addCase(openFeedbackModal, (state) => {\n        state.feedbackModalOpen = true;\n      })\n      .addCase(closeFeedbackModal, (state) => {\n        state.feedbackModalOpen = false;\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const relatedQuestions =\n          action.payload.response.questionAnswer.relatedQuestions.map(\n            (relatedQuestion, i) =>\n              buildQuestionAnsweringRelatedQuestionState(\n                relatedQuestion,\n                state.relatedQuestions[i]\n              )\n          );\n        const questionAnswerId = hashQuestionAnswer(\n          action.payload.response.questionAnswer\n        );\n        if (state.questionAnswerId === questionAnswerId) {\n          return {\n            ...state,\n            relatedQuestions,\n          };\n        }\n        return {\n          ...getQuestionAnsweringInitialState(),\n          relatedQuestions,\n          questionAnswerId,\n        };\n      })\n      .addCase(\n        expandSmartSnippetRelatedQuestion,\n        (\n          state,\n          action: ReturnType<typeof expandSmartSnippetRelatedQuestion>\n        ) => {\n          const idx = findRelatedQuestionIdx(\n            state.relatedQuestions,\n            action.payload\n          );\n          if (idx === -1) {\n            return;\n          }\n          state.relatedQuestions[idx].expanded = true;\n        }\n      )\n      .addCase(collapseSmartSnippetRelatedQuestion, (state, action) => {\n        const idx = findRelatedQuestionIdx(\n          state.relatedQuestions,\n          action.payload\n        );\n        if (idx === -1) {\n          return;\n        }\n        state.relatedQuestions[idx].expanded = false;\n      })\n);\n", "import {ArrayValue, NumberValue, RecordValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {Result} from '../../api/search/search/result';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {\n  resultPartialDefinition,\n  validateResultPayload,\n} from '../analytics/analytics-utils';\n\nexport interface RegisterRecentResultsCreatorPayload {\n  /**\n   * The recent results viewed by the user prior to instantiating the controller.\n   */\n  results: Result[];\n  /**\n   * The maximum number of queries to retain in the list.\n   */\n  maxLength: number;\n}\n\nconst registerRecentResultsPayloadDefinition = {\n  results: new ArrayValue({\n    required: true,\n    each: new RecordValue({values: resultPartialDefinition}),\n  }),\n  maxLength: new NumberValue({required: true, min: 1, default: 10}),\n};\n\nexport const registerRecentResults = createAction(\n  'recentResults/registerRecentResults',\n  (payload: RegisterRecentResultsCreatorPayload) =>\n    validatePayload(payload, registerRecentResultsPayloadDefinition)\n);\n\nexport const pushRecentResult = createAction(\n  'recentResults/pushRecentResult',\n  (payload: Result) => {\n    validateResultPayload(payload);\n    return {\n      payload,\n    };\n  }\n);\n\nexport const clearRecentResults = createAction(\n  'recentResults/clearRecentResults'\n);\n", "import {debounce} from 'ts-debounce';\nimport {CoreEngine} from '../../..';\nimport {configuration} from '../../../app/common-reducers';\nimport {ConfigurationSection} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\n\nexport interface InteractiveResultCoreOptions {\n  /**\n   * The amount of time to wait before selecting the result after calling `beginDelayedSelect`.\n   *\n   * @defaultValue `1000`\n   */\n  selectionDelay?: number;\n\n  /**\n   * The number of seconds for which the debounced function should continue catching subsequent calls.\n   *\n   * @defaultValue `1000`\n   */\n  debounceWait?: number;\n}\n\nexport interface InteractiveResultCoreProps {\n  /**\n   * The options for the result controller core.\n   */\n  options: InteractiveResultCoreOptions;\n}\n\n/**\n * The `InteractiveResultCore` manages common functionality for interactive result controllers.\n */\nexport interface InteractiveResultCore {\n  /**\n   * Selects the result, logging a UA event to the Coveo Platform if the result wasn't selected before.\n   *\n   * In a DOM context, it's recommended to call this method on all of the following events:\n   * * `contextmenu`\n   * * `click`\n   * * `mouseup`\n   * * `mousedown`\n   */\n  select(): void;\n\n  /**\n   * Prepares to select the result after a certain delay, sending analytics if it was never selected before.\n   *\n   * In a DOM context, it's recommended to call this method on the `touchstart` event.\n   */\n  beginDelayedSelect(): void;\n\n  /**\n   * Cancels the pending selection caused by `beginDelayedSelect`.\n   *\n   * In a DOM context, it's recommended to call this method on the `touchend` event.\n   */\n  cancelPendingSelect(): void;\n}\n\n/**\n * Creates the result controller core.\n *\n * @param engine - The headless engine.\n * @param props - The configurable controller properties.\n * @param action - The action to be triggered on select.\n * @returns A controller core instance.\n */\nexport function buildInteractiveResultCore(\n  engine: CoreEngine,\n  props: InteractiveResultCoreProps,\n  action: () => void\n): InteractiveResultCore {\n  if (!loadInteractiveResultCoreReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  // 1 second is a reasonable amount of time to catch most longpress actions.\n  const defaultDelay = 1000;\n  const options: Required<InteractiveResultCoreOptions> = {\n    selectionDelay: defaultDelay,\n    debounceWait: defaultDelay,\n    ...props.options,\n  };\n\n  let longPressTimer: NodeJS.Timeout;\n\n  return {\n    select: debounce(action, options.debounceWait, {isImmediate: true}),\n\n    beginDelayedSelect() {\n      longPressTimer = setTimeout(action, options.selectionDelay);\n    },\n\n    cancelPendingSelect() {\n      longPressTimer && clearTimeout(longPressTimer);\n    },\n  };\n}\n\nfunction loadInteractiveResultCoreReducers(\n  engine: CoreEngine\n): engine is CoreEngine<ConfigurationSection> {\n  engine.addReducers({configuration});\n  return true;\n}\n", "import {QuestionAnswerDocumentIdentifier} from '../../../api/search/search/question-answering';\nimport {Result} from '../../../api/search/search/result';\nimport {\n  ClickAction,\n  CustomAction,\n} from '../../../features/analytics/analytics-utils';\nimport {\n  closeFeedbackModal,\n  collapseSmartSnippet,\n  dislikeSmartSnippet,\n  expandSmartSnippet,\n  likeSmartSnippet,\n  openFeedbackModal,\n} from '../../../features/question-answering/question-answering-actions';\nimport {SmartSnippetFeedback} from '../../../features/question-answering/question-answering-analytics-actions';\nimport {QuestionAnsweringUniqueIdentifierActionCreatorPayload} from '../../../features/question-answering/question-answering-document-id';\nimport {answerSourceSelector} from '../../../features/question-answering/question-answering-selectors';\nimport {questionAnsweringReducer as questionAnswering} from '../../../features/question-answering/question-answering-slice';\nimport {pushRecentResult} from '../../../features/recent-results/recent-results-actions';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {QuestionAnsweringInlineLinkActionCreatorPayload} from '../../../product-listing.index';\nimport {CoreEngine} from '../../../recommendation.index';\nimport {\n  QuestionAnsweringSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  Controller,\n  buildController,\n} from '../../controller/headless-controller';\nimport {InlineLink} from '../../smart-snippet/headless-smart-snippet-interactive-inline-links';\nimport {buildInteractiveResultCore} from '../interactive-result/headless-core-interactive-result';\n\nexport type {QuestionAnswerDocumentIdentifier} from '../../../api/search/search/question-answering';\n\nexport interface SmartSnippetOptions {\n  /**\n   * The amount of time in milliseconds to wait before selecting the source or inline links after calling `beginDelayedSelectSource` or `beginDelayedSelectInlineLink`.\n   *\n   * @defaultValue `1000`\n   */\n  selectionDelay?: number;\n}\n\nexport interface SmartSnippetProps {\n  /**\n   * The options for the `SmartSnippet` controller.\n   */\n  options?: SmartSnippetOptions;\n}\n\nexport interface SmartSnippetCore extends Controller {\n  /**\n   * The state of the SmartSnippet controller.\n   * */\n  state: SmartSnippetState;\n  /**\n   * Expand the snippet.\n   */\n  expand(): void;\n  /**\n   * Collapse the snippet.\n   */\n  collapse(): void;\n  /**\n   * Allows the user to signal that a particular answer was relevant.\n   */\n  like(): void;\n  /**\n   * Allows the user to signal that a particular answer was not relevant.\n   */\n  dislike(): void;\n  /**\n   * Allows the user to signal that they wish to send feedback about why a particular answer was not relevant.\n   */\n  openFeedbackModal(): void;\n  /**\n   * Allows the user to signal that they no longer wish to send feedback about why a particular answer was not relevant.\n   */\n  closeFeedbackModal(): void;\n  /**\n   * Allows the user to send feedback about why a particular answer was not relevant.\n   * @param feedback - The generic feedback that the end user wishes to send.\n   */\n  sendFeedback(feedback: SmartSnippetFeedback): void;\n  /**\n   * Allows the user to send detailed feedback about why a particular answer was not relevant.\n   * @param details - A personalized message from the end user about the relevance of the answer.\n   */\n  sendDetailedFeedback(details: string): void;\n  /**\n   * Selects the source, logging a UA event to the Coveo Platform if the source wasn't already selected before.\n   *\n   * In a DOM context, we recommend calling this method on all of the following events:\n   * * `contextmenu`\n   * * `click`\n   * * `mouseup`\n   * * `mousedown`\n   */\n  selectSource(): void;\n  /**\n   * Prepares to select the source after a certain delay, sending analytics if it was never selected before.\n   *\n   * In a DOM context, we recommend calling this method on the `touchstart` event.\n   */\n  beginDelayedSelectSource(): void;\n  /**\n   * Cancels the pending selection caused by `beginDelayedSelectSource`.\n   *\n   * In a DOM context, we recommend calling this method on the `touchend` event.\n   */\n  cancelPendingSelectSource(): void;\n}\n\nexport interface SmartSnippet extends SmartSnippetCore {\n  /**\n   * Selects a link inside the answer, logging a UA event to the Coveo Platform if it was never selected before.\n   *\n   * In a DOM context, we recommend calling this method on all of the following events:\n   * * `contextmenu`\n   * * `click`\n   * * `mouseup`\n   * * `mousedown`\n   *\n   * @param link - The link to select.\n   */\n  selectInlineLink(link: InlineLink): void;\n  /**\n   * Prepares to select a link inside the answer after a certain delay, sending analytics if it was never selected before.\n   *\n   * In a DOM context, we recommend calling this method on the `touchstart` event.\n   *\n   * @param link - The link to select.\n   */\n  beginDelayedSelectInlineLink(link: InlineLink): void;\n  /**\n   * Cancels the pending selection caused by `beginDelayedSelectInlineLink`.\n   *\n   * In a DOM context, we recommend calling this method on the `touchend` event.\n   *\n   * @param link - The link to select.\n   */\n  cancelPendingSelectInlineLink(link: InlineLink): void;\n}\n\nexport interface SmartSnippetState {\n  /**\n   * The question related to the smart snippet.\n   */\n  question: string;\n  /**\n   * The answer, or snippet, related to the question.\n   */\n  answer: string;\n  /**\n   * The index identifier for the document that provided the answer.\n   */\n  documentId: QuestionAnswerDocumentIdentifier;\n  /**\n   * Determines if the snippet is currently expanded.\n   */\n  expanded: boolean;\n  /**\n   * Determines of there is an available answer for the current query.\n   */\n  answerFound: boolean;\n  /**\n   * Determines if the snippet was liked, or upvoted by the end user.\n   */\n  liked: boolean;\n  /**\n   * Determines if the snippet was disliked, or downvoted by the end user.\n   */\n  disliked: boolean;\n  /**\n   * Determines if the feedback modal with the purpose of explaining why the end user disliked the snippet is currently opened.\n   */\n  feedbackModalOpen: boolean;\n  /**\n   * Provides the source of the smart snippet.\n   */\n  source?: Result;\n}\n\nexport interface SmartSnippetAnalyticsClient {\n  logExpandSmartSnippet: () => CustomAction;\n  logCollapseSmartSnippet: () => CustomAction;\n  logLikeSmartSnippet: () => CustomAction;\n  logDislikeSmartSnippet: () => CustomAction;\n  logOpenSmartSnippetSource: () => ClickAction;\n  logOpenSmartSnippetInlineLink: (\n    payload: QuestionAnsweringInlineLinkActionCreatorPayload\n  ) => ClickAction;\n  logOpenSmartSnippetFeedbackModal: () => CustomAction;\n  logCloseSmartSnippetFeedbackModal: () => CustomAction;\n  logSmartSnippetFeedback: (feedback: SmartSnippetFeedback) => CustomAction;\n  logSmartSnippetDetailedFeedback: (details: string) => CustomAction;\n  logExpandSmartSnippetSuggestion: (\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ) => CustomAction;\n  logCollapseSmartSnippetSuggestion: (\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ) => CustomAction;\n  logOpenSmartSnippetSuggestionSource: (\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ) => ClickAction;\n}\n\n/**\n * Creates a `SmartSnippet` controller instance.\n *\n * @param engine - The headless engine.\n * @param analyticsClient - A SmartSnippetAnalyticsClient to send the appropriate analytics calls.\n * @param props - The configurable `SmartSnippet` properties.\n * @returns A `SmartSnippetCore` controller instance.\n * */\nexport function buildCoreSmartSnippet(\n  engine: CoreEngine,\n  analyticsClient: SmartSnippetAnalyticsClient,\n  props?: SmartSnippetProps\n): SmartSnippetCore {\n  if (!loadSmartSnippetReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const getState = () => engine.state;\n\n  const getResult = () => answerSourceSelector(getState());\n\n  let lastSearchResponseId: string | null = null;\n  const interactiveResult = buildInteractiveResultCore(\n    engine,\n    {options: {selectionDelay: props?.options?.selectionDelay}},\n    () => {\n      const result = getResult();\n      if (!result) {\n        lastSearchResponseId = null;\n        return;\n      }\n\n      const {searchResponseId} = getState().search;\n      if (lastSearchResponseId === searchResponseId) {\n        return;\n      }\n      lastSearchResponseId = searchResponseId;\n      engine.dispatch(analyticsClient.logOpenSmartSnippetSource());\n      engine.dispatch(pushRecentResult(result));\n    }\n  );\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        question: state.search.questionAnswer.question,\n        answer: state.search.questionAnswer.answerSnippet,\n        documentId: state.search.questionAnswer.documentId,\n        expanded: state.questionAnswering.expanded,\n        answerFound: state.search.questionAnswer.answerSnippet !== '',\n        liked: state.questionAnswering.liked,\n        disliked: state.questionAnswering.disliked,\n        feedbackModalOpen: state.questionAnswering.feedbackModalOpen,\n        source: getResult(),\n      };\n    },\n    expand() {\n      engine.dispatch(analyticsClient.logExpandSmartSnippet());\n      engine.dispatch(expandSmartSnippet());\n    },\n    collapse() {\n      engine.dispatch(analyticsClient.logCollapseSmartSnippet());\n      engine.dispatch(collapseSmartSnippet());\n    },\n    like() {\n      engine.dispatch(analyticsClient.logLikeSmartSnippet());\n      engine.dispatch(likeSmartSnippet());\n    },\n    dislike() {\n      engine.dispatch(analyticsClient.logDislikeSmartSnippet());\n      engine.dispatch(dislikeSmartSnippet());\n    },\n    openFeedbackModal() {\n      engine.dispatch(analyticsClient.logOpenSmartSnippetFeedbackModal());\n      engine.dispatch(openFeedbackModal());\n    },\n    closeFeedbackModal() {\n      engine.dispatch(analyticsClient.logCloseSmartSnippetFeedbackModal());\n      engine.dispatch(closeFeedbackModal());\n    },\n    sendFeedback(feedback) {\n      engine.dispatch(analyticsClient.logSmartSnippetFeedback(feedback));\n      engine.dispatch(closeFeedbackModal());\n    },\n    sendDetailedFeedback(details) {\n      engine.dispatch(analyticsClient.logSmartSnippetDetailedFeedback(details));\n      engine.dispatch(closeFeedbackModal());\n    },\n    selectSource() {\n      interactiveResult.select();\n    },\n    beginDelayedSelectSource() {\n      interactiveResult.beginDelayedSelect();\n    },\n    cancelPendingSelectSource() {\n      interactiveResult.cancelPendingSelect();\n    },\n  };\n}\n\nfunction loadSmartSnippetReducers(\n  engine: CoreEngine\n): engine is CoreEngine<QuestionAnsweringSection & SearchSection> {\n  engine.addReducers({search, questionAnswering});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  logOpenSmartSnippetInlineLink,\n  logOpenSmartSnippetSuggestionInlineLink,\n} from '../../features/question-answering/question-answering-analytics-actions';\nimport {questionAnsweringReducer as questionAnswering} from '../../features/question-answering/question-answering-slice';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {QuestionAnsweringSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {getObjectHash} from '../../utils/utils';\nimport {\n  buildInteractiveResultCore,\n  InteractiveResultCore,\n} from '../core/interactive-result/headless-core-interactive-result';\n\nexport interface InlineLink {\n  /**\n   * The text of the inline link.\n   */\n  linkText: string;\n  /**\n   * The URL of the inline link.\n   */\n  linkURL: string;\n}\n\n/**\n * @internal\n */\nexport interface SmartSnippetInteractiveInlineLinksOptions {\n  selectionDelay?: number;\n}\n\n/**\n * @internal\n */\nexport interface SmartSnippetInteractiveInlineLinksProps {\n  options?: SmartSnippetInteractiveInlineLinksOptions;\n}\n\n/**\n * @internal\n */\nexport interface SmartSnippetInteractiveInlineLinks {\n  selectInlineLink(link: InlineLink, questionAnswerId?: string): void;\n  beginDelayedSelectInlineLink(\n    link: InlineLink,\n    questionAnswerId?: string\n  ): void;\n  cancelPendingSelectInlineLink(\n    link: InlineLink,\n    questionAnswerId?: string\n  ): void;\n}\n\n/**\n * @internal\n */\nexport function buildSmartSnippetInteractiveInlineLinks(\n  engine: SearchEngine,\n  props?: SmartSnippetInteractiveInlineLinksProps\n): SmartSnippetInteractiveInlineLinks {\n  if (!loadSmartSnippetInteractiveInlineLinksReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const getState = () => engine.state;\n\n  const clickedRelatedQuestions = new Set<string>();\n  const inlineLinkWasClicked = (linkId: string) => {\n    if (clickedRelatedQuestions.has(linkId)) {\n      return true;\n    }\n    clickedRelatedQuestions.add(linkId);\n    return false;\n  };\n\n  let lastSearchResponseId: string | null = null;\n  const resetInteractiveResultsIfSearchResponseChanged = (\n    currentSearchResponseId: string\n  ) => {\n    if (lastSearchResponseId !== currentSearchResponseId) {\n      lastSearchResponseId = currentSearchResponseId;\n      interactiveResultsPerInlineLink = {};\n      clickedRelatedQuestions.clear();\n    }\n  };\n\n  const buildInlineLinkInteractiveResult = (\n    link: InlineLink,\n    linkId: string,\n    questionAnswerId?: string\n  ) =>\n    buildInteractiveResultCore(\n      engine,\n      {options: {selectionDelay: props?.options?.selectionDelay}},\n      () => {\n        if (inlineLinkWasClicked(linkId)) {\n          return;\n        }\n        engine.dispatch(\n          questionAnswerId\n            ? logOpenSmartSnippetSuggestionInlineLink({questionAnswerId}, link)\n            : logOpenSmartSnippetInlineLink(link)\n        );\n      }\n    );\n\n  let interactiveResultsPerInlineLink: Record<string, InteractiveResultCore> =\n    {};\n  const getInteractiveResult = (\n    link: InlineLink,\n    questionAnswerId?: string\n  ) => {\n    const {searchResponseId} = getState().search;\n    resetInteractiveResultsIfSearchResponseChanged(searchResponseId);\n\n    const linkId = getObjectHash({...link, questionAnswerId});\n    if (linkId in interactiveResultsPerInlineLink) {\n      return interactiveResultsPerInlineLink[linkId];\n    }\n\n    interactiveResultsPerInlineLink[linkId] = buildInlineLinkInteractiveResult(\n      link,\n      linkId,\n      questionAnswerId\n    );\n    return interactiveResultsPerInlineLink[linkId];\n  };\n\n  return {\n    selectInlineLink(link, questionAnswerId) {\n      getInteractiveResult(link, questionAnswerId)?.select();\n    },\n    beginDelayedSelectInlineLink(link, questionAnswerId) {\n      getInteractiveResult(link, questionAnswerId)?.beginDelayedSelect();\n    },\n    cancelPendingSelectInlineLink(link, questionAnswerId) {\n      getInteractiveResult(link, questionAnswerId)?.cancelPendingSelect();\n    },\n  };\n}\n\nfunction loadSmartSnippetInteractiveInlineLinksReducer(\n  engine: SearchEngine\n): engine is SearchEngine<QuestionAnsweringSection> {\n  engine.addReducers({search, questionAnswering});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {smartSnippetAnalyticsClient} from '../../features/question-answering/question-answering-analytics-actions';\nimport {\n  SmartSnippet,\n  SmartSnippetCore,\n  SmartSnippetOptions,\n  SmartSnippetProps,\n  SmartSnippetState,\n  buildCoreSmartSnippet,\n} from '../core/smart-snippet/headless-core-smart-snippet';\nimport {buildSmartSnippetInteractiveInlineLinks} from './headless-smart-snippet-interactive-inline-links';\n\nexport type {QuestionAnswerDocumentIdentifier} from '../../api/search/search/question-answering';\nexport type {\n  SmartSnippet,\n  SmartSnippetOptions,\n  SmartSnippetProps,\n  SmartSnippetState,\n  SmartSnippetCore,\n};\n\n/**\n * Creates a `SmartSnippet` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SmartSnippet` properties.\n * @returns A `SmartSnippet` controller instance.\n * */\nexport function buildSmartSnippet(\n  engine: SearchEngine,\n  props?: SmartSnippetProps\n): SmartSnippet {\n  const smartSnippet = buildCoreSmartSnippet(\n    engine,\n    smartSnippetAnalyticsClient,\n    props\n  );\n\n  const interactiveInlineLinks = buildSmartSnippetInteractiveInlineLinks(\n    engine,\n    {options: {selectionDelay: props?.options?.selectionDelay}}\n  );\n\n  return {\n    ...smartSnippet,\n\n    get state() {\n      return smartSnippet.state;\n    },\n    selectInlineLink(link) {\n      interactiveInlineLinks.selectInlineLink(link);\n    },\n    beginDelayedSelectInlineLink(link) {\n      interactiveInlineLinks.beginDelayedSelectInlineLink(link);\n    },\n    cancelPendingSelectInlineLink(link) {\n      interactiveInlineLinks.cancelPendingSelectInlineLink(link);\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  SmartSnippet,\n  SmartSnippetProps,\n  buildSmartSnippet,\n} from './headless-smart-snippet';\n\nexport * from './headless-smart-snippet';\n\n/**\n * @internal\n */\nexport const defineSmartSnippet = (\n  props?: SmartSnippetProps\n): ControllerDefinitionWithoutProps<SearchEngine, SmartSnippet> => ({\n  build: (engine) => buildSmartSnippet(engine, props),\n});\n", "import {QuestionAnswerDocumentIdentifier} from '../../../api/search/search/question-answering';\nimport {Result} from '../../../api/search/search/result';\nimport {CoreEngine} from '../../../app/engine';\nimport {\n  collapseSmartSnippetRelatedQuestion,\n  expandSmartSnippetRelatedQuestion,\n} from '../../../features/question-answering/question-answering-actions';\nimport {questionAnsweringReducer as questionAnswering} from '../../../features/question-answering/question-answering-slice';\nimport {getResultProperty} from '../../../features/result-templates/result-templates-helpers';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  QuestionAnsweringSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Controller,\n} from '../../controller/headless-controller';\nimport {SmartSnippetAnalyticsClient} from '../smart-snippet/headless-core-smart-snippet';\n\nexport type {QuestionAnswerDocumentIdentifier} from '../../../api/search/search/question-answering';\n\nexport interface SmartSnippetQuestionsListOptions {\n  /**\n   * The amount of time in milliseconds to wait before selecting the source after calling `beginDelayedSelect`.\n   *\n   * @defaultValue `1000`\n   */\n  selectionDelay?: number;\n}\n\nexport interface SmartSnippetQuestionsListProps {\n  /**\n   * The options for the `SmartSnippetQuestionsList` controller.\n   */\n  options?: SmartSnippetQuestionsListOptions;\n}\n\n/**\n * The `CoreSmartSnippetQuestionsList` controller allows to manage additional queries for which a SmartSnippet model can provide relevant excerpts.\n */\nexport interface CoreSmartSnippetQuestionsList extends Controller {\n  /**\n   * The state of the SmartSnippetQuestionsList controller.\n   * */\n  state: CoreSmartSnippetQuestionsListState;\n  /**\n   * Expand the specified snippet suggestion.\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet to expand.\n   */\n  expand(identifier: string): void;\n  /**\n   * Collapse the specified snippet suggestion.\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet to collapse.\n   */\n  collapse(identifier: string): void;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `SmartSnippetQuestionsList` controller.\n */\nexport interface CoreSmartSnippetQuestionsListState {\n  /**\n   * The related questions for the current query\n   */\n  questions: SmartSnippetRelatedQuestion[];\n}\n\n/**\n * The related questions for a given smart snippet.\n */\nexport interface SmartSnippetRelatedQuestion {\n  /**\n   * The question related to the smart snippet.\n   */\n  question: string;\n  /**\n   * The answer, or snippet, related to the question.\n   *\n   * This can contain HTML markup, depending on the source of the answer.\n   */\n  answer: string;\n  /**\n   * The index identifier for the document that provided the answer.\n   */\n  documentId: QuestionAnswerDocumentIdentifier;\n  /**\n   * The unique identifier for this question & answer.\n   */\n  questionAnswerId: string;\n  /**\n   * Determines if the snippet is currently expanded.\n   */\n  expanded: boolean;\n  /**\n   * Provides the source of the smart snippet.\n   */\n  source?: Result;\n}\n\n/**\n * Creates a core `SmartSnippetQuestionsList` controller instance.\n *\n * @param engine - The headless engine.\n * @param analyticsClient - A SmartSnippetAnalyticsClient to send the appropriate analytics calls.\n * @returns A `CoreSmartSnippetQuestionsList` controller instance.\n * */\nexport function buildCoreSmartSnippetQuestionsList(\n  engine: CoreEngine,\n  analyticsClient: SmartSnippetAnalyticsClient\n): CoreSmartSnippetQuestionsList {\n  if (!loadSmartSnippetQuestionsListReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const getState = () => engine.state;\n\n  const getResult = (identifier: QuestionAnswerDocumentIdentifier) => {\n    const {contentIdKey, contentIdValue} = identifier;\n    return engine.state.search.results.find(\n      (result) => getResultProperty(result, contentIdKey) === contentIdValue\n    );\n  };\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        questions: state.search.questionAnswer.relatedQuestions.map(\n          (relatedQuestion, i) => ({\n            question: relatedQuestion.question,\n            answer: relatedQuestion.answerSnippet,\n            documentId: relatedQuestion.documentId,\n            questionAnswerId:\n              state.questionAnswering.relatedQuestions[i].questionAnswerId,\n            expanded: state.questionAnswering.relatedQuestions[i].expanded,\n            source: getResult(relatedQuestion.documentId),\n          })\n        ),\n      };\n    },\n\n    expand(identifier) {\n      const payload = {questionAnswerId: identifier};\n      engine.dispatch(analyticsClient.logExpandSmartSnippetSuggestion(payload));\n      engine.dispatch(expandSmartSnippetRelatedQuestion(payload));\n    },\n    collapse(identifier) {\n      const payload = {questionAnswerId: identifier};\n      engine.dispatch(\n        analyticsClient.logCollapseSmartSnippetSuggestion(payload)\n      );\n      engine.dispatch(collapseSmartSnippetRelatedQuestion(payload));\n    },\n  };\n}\n\nfunction loadSmartSnippetQuestionsListReducer(\n  engine: CoreEngine\n): engine is CoreEngine<QuestionAnsweringSection & SearchSection> {\n  engine.addReducers({search, questionAnswering});\n  return true;\n}\n", "import {Result} from '../../api/search/search/result';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logOpenSmartSnippetSuggestionSource} from '../../features/question-answering/question-answering-analytics-actions';\nimport {\n  answerSourceSelector,\n  relatedQuestionSelector,\n} from '../../features/question-answering/question-answering-selectors';\nimport {questionAnsweringReducer as questionAnswering} from '../../features/question-answering/question-answering-slice';\nimport {pushRecentResult} from '../../features/recent-results/recent-results-actions';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {QuestionAnsweringSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {\n  buildInteractiveResultCore,\n  InteractiveResultCore,\n} from '../core/interactive-result/headless-core-interactive-result';\n\n/**\n * @internal\n */\nexport interface SmartSnippetInteractiveQuestionsOptions {\n  selectionDelay?: number;\n}\n\n/**\n * @internal\n */\nexport interface SmartSnippetInteractiveQuestionsProps {\n  options?: SmartSnippetInteractiveQuestionsOptions;\n}\n\n/**\n * @internal\n */\nexport interface SmartSnippetInteractiveQuestions {\n  selectSource(questionAnswerId: string): void;\n  beginDelayedSelectSource(questionAnswerId: string): void;\n  cancelPendingSelectSource(questionAnswerId: string): void;\n}\n\n/**\n * @internal\n */\nexport function buildSmartSnippetInteractiveQuestions(\n  engine: SearchEngine,\n  props?: SmartSnippetInteractiveQuestionsProps\n): SmartSnippetInteractiveQuestions {\n  if (!loadSmartSnippetInteractiveQuestionsReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const getState = () => engine.state;\n\n  const getSource = (questionAnswerId: string) => {\n    const state = getState();\n    const questionAnswer = relatedQuestionSelector(state, questionAnswerId);\n    if (!questionAnswer) {\n      return null;\n    }\n    return answerSourceSelector(state, questionAnswer.documentId);\n  };\n\n  const clickedRelatedQuestions = new Set<string>();\n  const relatedQuestionWasClicked = (questionAnswerId: string) => {\n    if (clickedRelatedQuestions.has(questionAnswerId)) {\n      return true;\n    }\n    clickedRelatedQuestions.add(questionAnswerId);\n    return false;\n  };\n\n  let lastSearchResponseId: string | null = null;\n  const resetInteractiveResultsIfSearchResponseChanged = (\n    currentSearchResponseId: string\n  ) => {\n    if (lastSearchResponseId !== currentSearchResponseId) {\n      lastSearchResponseId = currentSearchResponseId;\n      interactiveResultsPerRelatedQuestion = {};\n      clickedRelatedQuestions.clear();\n    }\n  };\n\n  const buildRelatedQuestionInteractiveResult = (\n    source: Result,\n    questionAnswerId: string\n  ) =>\n    buildInteractiveResultCore(\n      engine,\n      {options: {selectionDelay: props?.options?.selectionDelay}},\n      () => {\n        if (relatedQuestionWasClicked(questionAnswerId)) {\n          return;\n        }\n        engine.dispatch(\n          logOpenSmartSnippetSuggestionSource({\n            questionAnswerId,\n          })\n        );\n        engine.dispatch(pushRecentResult(source));\n      }\n    );\n\n  let interactiveResultsPerRelatedQuestion: Record<\n    string,\n    InteractiveResultCore\n  > = {};\n  const getInteractiveResult = (questionAnswerId: string) => {\n    const {searchResponseId} = getState().search;\n    resetInteractiveResultsIfSearchResponseChanged(searchResponseId);\n\n    const source = getSource(questionAnswerId);\n    if (!source) {\n      return null;\n    }\n\n    if (questionAnswerId in interactiveResultsPerRelatedQuestion) {\n      return interactiveResultsPerRelatedQuestion[questionAnswerId];\n    }\n\n    interactiveResultsPerRelatedQuestion[questionAnswerId] =\n      buildRelatedQuestionInteractiveResult(source, questionAnswerId);\n    return interactiveResultsPerRelatedQuestion[questionAnswerId];\n  };\n\n  return {\n    selectSource(questionAnswerId) {\n      getInteractiveResult(questionAnswerId)?.select();\n    },\n    beginDelayedSelectSource(questionAnswerId) {\n      getInteractiveResult(questionAnswerId)?.beginDelayedSelect();\n    },\n    cancelPendingSelectSource(questionAnswerId) {\n      getInteractiveResult(questionAnswerId)?.cancelPendingSelect();\n    },\n  };\n}\n\nfunction loadSmartSnippetInteractiveQuestionsReducer(\n  engine: SearchEngine\n): engine is SearchEngine<QuestionAnsweringSection> {\n  engine.addReducers({search, questionAnswering});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {smartSnippetAnalyticsClient} from '../../features/question-answering/question-answering-analytics-actions';\nimport {\n  buildCoreSmartSnippetQuestionsList,\n  CoreSmartSnippetQuestionsListState,\n  CoreSmartSnippetQuestionsList,\n  SmartSnippetQuestionsListProps,\n} from '../core/smart-snippet-questions-list/headless-core-smart-snippet-questions-list';\nimport {\n  buildSmartSnippetInteractiveInlineLinks,\n  InlineLink,\n} from '../smart-snippet/headless-smart-snippet-interactive-inline-links';\nimport {buildSmartSnippetInteractiveQuestions} from './headless-smart-snippet-interactive-questions';\n\nexport type {QuestionAnswerDocumentIdentifier} from '../../api/search/search/question-answering';\nexport type {\n  SmartSnippetQuestionsListOptions,\n  SmartSnippetQuestionsListProps,\n  SmartSnippetRelatedQuestion,\n  CoreSmartSnippetQuestionsList,\n  CoreSmartSnippetQuestionsListState,\n} from '../core/smart-snippet-questions-list/headless-core-smart-snippet-questions-list';\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `SmartSnippetQuestionsList` controller.\n */\nexport interface SmartSnippetQuestionsListState\n  extends CoreSmartSnippetQuestionsListState {}\n\n/**\n * The `SmartSnippetQuestionsList` controller allows to manage additional queries for which a SmartSnippet model can provide relevant excerpts.\n */\nexport interface SmartSnippetQuestionsList\n  extends CoreSmartSnippetQuestionsList {\n  /**\n   * The state of the SmartSnippetQuestionsList controller.\n   * */\n  state: SmartSnippetQuestionsListState;\n  /**\n   * Selects the source, logging a UA event to the Coveo Platform if the source hadn't been selected before.\n   *\n   * In a DOM context, we recommend calling this method on all of the following events:\n   * * `contextmenu`\n   * * `click`\n   * * `mouseup`\n   * * `mousedown`\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet to collapse.\n   */\n  selectSource(identifier: string): void;\n  /**\n   * Prepares to select the source after a certain delay, sending analytics if it hadn't been selected before.\n   *\n   * In a DOM context, we recommend calling this method on the `touchstart` event.\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet to collapse.\n   */\n  beginDelayedSelectSource(identifier: string): void;\n  /**\n   * Cancels the pending selection caused by `beginDelayedSelect`.\n   *\n   * In a DOM context, we recommend calling this method on the `touchend` event.\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet to collapse.\n   */\n  cancelPendingSelectSource(identifier: string): void;\n  /**\n   * Selects a link inside an answer, logging a UA event to the Coveo Platform if it was never selected before.\n   *\n   * In a DOM context, we recommend calling this method on all of the following events:\n   * * `contextmenu`\n   * * `click`\n   * * `mouseup`\n   * * `mousedown`\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet containing the link.\n   * @param link - The link to select.\n   */\n  selectInlineLink(identifier: string, link: InlineLink): void;\n  /**\n   * Prepares to select a link inside an answer after a certain delay, sending analytics if it was never selected before.\n   *\n   * In a DOM context, we recommend calling this method on the `touchstart` event.\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet containing the link.\n   * @param link - The link to select.\n   */\n  beginDelayedSelectInlineLink(identifier: string, link: InlineLink): void;\n  /**\n   * Cancels the pending selection caused by `beginDelayedSelectInlineLink`.\n   *\n   * In a DOM context, we recommend calling this method on the `touchend` event.\n   *\n   * @param identifier - The `questionAnswerId` of the smart snippet containing the link.\n   * @param link - The link to select.\n   */\n  cancelPendingSelectInlineLink(identifier: string, link: InlineLink): void;\n}\n\n/**\n * Creates a `SmartSnippetQuestionsList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `SmartSnippetQuestionsList` properties.\n * @returns A `SmartSnippetQuestionsList` controller instance.\n * */\nexport function buildSmartSnippetQuestionsList(\n  engine: SearchEngine,\n  props?: SmartSnippetQuestionsListProps\n): SmartSnippetQuestionsList {\n  const smartSnippetQuestionList = buildCoreSmartSnippetQuestionsList(\n    engine,\n    smartSnippetAnalyticsClient\n  );\n\n  const interactiveInlineLinks = buildSmartSnippetInteractiveInlineLinks(\n    engine,\n    {\n      options: {selectionDelay: props?.options?.selectionDelay},\n    }\n  );\n\n  const interactiveQuestions = buildSmartSnippetInteractiveQuestions(engine, {\n    options: {selectionDelay: props?.options?.selectionDelay},\n  });\n\n  return {\n    ...smartSnippetQuestionList,\n\n    get state() {\n      return smartSnippetQuestionList.state;\n    },\n    selectSource(identifier) {\n      interactiveQuestions.selectSource(identifier);\n    },\n    beginDelayedSelectSource(identifier) {\n      interactiveQuestions.beginDelayedSelectSource(identifier);\n    },\n    cancelPendingSelectSource(identifier) {\n      interactiveQuestions.cancelPendingSelectSource(identifier);\n    },\n    selectInlineLink(identifier, link) {\n      interactiveInlineLinks.selectInlineLink(link, identifier);\n    },\n    beginDelayedSelectInlineLink(identifier, link) {\n      interactiveInlineLinks.beginDelayedSelectInlineLink(link, identifier);\n    },\n    cancelPendingSelectInlineLink(identifier, link) {\n      interactiveInlineLinks.cancelPendingSelectInlineLink(link, identifier);\n    },\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  SmartSnippetQuestionsList,\n  SmartSnippetQuestionsListProps,\n  buildSmartSnippetQuestionsList,\n} from './headless-smart-snippet-questions-list';\n\nexport * from './headless-smart-snippet-questions-list';\n\n/**\n * @internal\n */\nexport const defineSmartSnippetQuestionsList = (\n  props?: SmartSnippetQuestionsListProps\n): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  SmartSnippetQuestionsList\n> => ({\n  build: (engine) => buildSmartSnippetQuestionsList(engine, props),\n});\n", "import {ArrayValue, NumberValue, StringValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nexport interface RegisterRecentQueriesCreatorPayload {\n  /**\n   * The recent queries made by the user prior to instantiating the controller.\n   */\n  queries: string[];\n  /**\n   * The maximum number of queries to retain in the list.\n   */\n  maxLength: number;\n}\n\nconst registerRecentQueriesPayloadDefinition = {\n  queries: new ArrayValue({\n    required: true,\n    each: new StringValue({emptyAllowed: false}),\n  }),\n  maxLength: new NumberValue({required: true, min: 1, default: 10}),\n};\n\nexport const registerRecentQueries = createAction(\n  'recentQueries/registerRecentQueries',\n  (payload: RegisterRecentQueriesCreatorPayload) =>\n    validatePayload(payload, registerRecentQueriesPayloadDefinition)\n);\n\nexport const clearRecentQueries = createAction(\n  'recentQueries/clearRecentQueries'\n);\n", "import {\n  makeAnalyticsAction,\n  CustomAction,\n  SearchAction,\n} from '../analytics/analytics-utils';\n\nexport const logClearRecentQueries = (): CustomAction =>\n  makeAnalyticsAction('analytics/recentQueries/clear', (client) => {\n    return client.makeClearRecentQueries();\n  });\n\n//TODO: KIT-2859\nexport const logRecentQueryClick = (): SearchAction =>\n  makeAnalyticsAction('analytics/recentQueries/click', (client) => {\n    return client.makeRecentQueryClick();\n  });\n", "export interface RecentQueriesState {\n  queries: string[];\n  maxLength: number;\n}\n\nexport function getRecentQueriesInitialState(): RecentQueriesState {\n  return {\n    queries: [],\n    maxLength: 10,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {executeSearch} from '../search/search-actions';\nimport {\n  registerRecentQueries,\n  clearRecentQueries,\n} from './recent-queries-actions';\nimport {getRecentQueriesInitialState} from './recent-queries-state';\n\nexport const recentQueriesReducer = createReducer(\n  getRecentQueriesInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerRecentQueries, (state, action) => {\n        state.queries = action.payload.queries.slice(\n          0,\n          action.payload.maxLength\n        );\n        state.maxLength = action.payload.maxLength;\n      })\n      .addCase(clearRecentQueries, (state) => {\n        state.queries = [];\n      })\n      .addCase(executeSearch.fulfilled, (state, action) => {\n        const query = action.payload.queryExecuted.trim();\n        const results = action.payload.response.results;\n        if (!query.length || !results.length) {\n          return;\n        }\n        state.queries = state.queries.filter((q) => q !== query);\n        const remaining = state.queries.slice(0, state.maxLength - 1);\n        state.queries = [query, ...remaining];\n      });\n  }\n);\n", "import {ArrayValue, BooleanValue, NumberValue, Schema} from '@coveo/bueno';\nimport {SearchAnalyticsProvider} from '../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../features/analytics/search-action-cause';\nimport {\n  clearRecentQueries,\n  registerRecentQueries,\n} from '../../features/recent-queries/recent-queries-actions';\nimport {\n  logClearRecentQueries,\n  logRecentQueryClick,\n} from '../../features/recent-queries/recent-queries-analytics-actions';\nimport {recentQueriesReducer as recentQueries} from '../../features/recent-queries/recent-queries-slice';\nimport {\n  executeSearch,\n  prepareForSearchWithQuery,\n} from '../../features/search/search-actions';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {RecentQueriesSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {\n  validateInitialState,\n  validateOptions,\n} from '../../utils/validate-payload';\nimport {buildController, Controller} from '../controller/headless-controller';\n\nexport interface RecentQueriesListProps {\n  /**\n   * The initial state that should be applied to the `RecentQueriesList` controller.\n   */\n  initialState?: RecentQueriesListInitialState;\n  /**\n   * The configuration options that should be applied to the `RecentQueriesList` controller.\n   */\n  options?: RecentQueriesListOptions;\n}\n\nconst defaultRecentQueriesState: Required<RecentQueriesListInitialState> = {\n  queries: [],\n};\n\nconst defaultRecentQueriesOptions: Required<RecentQueriesListOptions> = {\n  maxLength: 10,\n  clearFilters: true,\n};\n\nexport interface RecentQueriesListInitialState {\n  /**\n   * The list of recent queries.\n   * @defaultValue `[]`\n   */\n  queries: string[];\n}\n\nconst initialStateSchema = new Schema<RecentQueriesListInitialState>({\n  queries: new ArrayValue({required: true}),\n});\n\nexport interface RecentQueriesListOptions {\n  /**\n   * The maximum number of queries to retain in the list.\n   * @defaultValue `10`\n   */\n  maxLength: number;\n  /**\n   * Whether to clear all active query filters when the end user submits a new query from the recent queries list.\n   * Setting this option to \"false\" is not recommended & can lead to an increasing number of queries returning no results.\n   */\n  clearFilters?: boolean;\n}\n\nconst optionsSchema = new Schema<RecentQueriesListOptions>({\n  maxLength: new NumberValue({required: true, min: 1}),\n  clearFilters: new BooleanValue(),\n});\n\n/**\n * The `RecentQueriesList` controller manages the user's recent queries.\n */\nexport interface RecentQueriesList extends Controller {\n  /**\n   * The state of the RecentQueriesList controller.\n   * */\n  state: RecentQueriesState;\n  /**\n   * Clears the recent queries list.\n   */\n  clear(): void;\n  /**\n   * Executes the given recent query.\n   * @param index - The index of the recent query to execute.\n   */\n  executeRecentQuery(index: number): void;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `RecentQueriesList` controller.\n * */\nexport interface RecentQueriesState {\n  /**\n   * The list of recent queries.\n   */\n  queries: string[];\n  /**\n   * The maximum number of queries to retain in the list.\n   */\n  maxLength: number;\n  /**\n   * Whether analytics & tracking are enabled.\n   * In the case where it is disabled, it is recommended not to save recent queries.\n   */\n  analyticsEnabled: boolean;\n}\n\nexport function validateRecentQueriesProps(\n  engine: SearchEngine,\n  props?: RecentQueriesListProps\n) {\n  validateOptions(\n    engine,\n    optionsSchema,\n    props?.options,\n    'buildRecentQueriesList'\n  );\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props?.initialState,\n    'buildRecentQueriesList'\n  );\n}\n\n/**\n * Creates a `RecentQueriesList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configuration `RecentQueriesList` properties.\n * @returns A `RecentQueriesList` controller instance.\n * */\nexport function buildRecentQueriesList(\n  engine: SearchEngine,\n  props?: RecentQueriesListProps\n): RecentQueriesList {\n  if (!loadRecentQueriesListReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const registrationOptions: Required<RecentQueriesListOptions> = {\n    ...defaultRecentQueriesOptions,\n    ...props?.options,\n  };\n  const registrationState: Required<RecentQueriesListInitialState> = {\n    ...defaultRecentQueriesState,\n    ...props?.initialState,\n  };\n\n  validateRecentQueriesProps(engine, {\n    options: registrationOptions,\n    initialState: registrationState,\n  });\n\n  const options = {\n    queries: registrationState.queries,\n    maxLength: registrationOptions.maxLength,\n  };\n\n  dispatch(registerRecentQueries(options));\n\n  return {\n    ...controller,\n\n    get state() {\n      const state = getState();\n\n      return {\n        ...state.recentQueries,\n        analyticsEnabled: state.configuration.analytics.enabled,\n      };\n    },\n\n    clear() {\n      dispatch(logClearRecentQueries());\n      dispatch(clearRecentQueries());\n    },\n\n    executeRecentQuery(index: number) {\n      const errorMessage = new NumberValue({\n        required: true,\n        min: 0,\n        max: this.state.queries.length,\n      }).validate(index);\n      if (errorMessage) {\n        throw new Error(errorMessage);\n      }\n      dispatch(\n        prepareForSearchWithQuery({\n          q: this.state.queries[index],\n          clearFilters: registrationOptions.clearFilters,\n        })\n      );\n      dispatch(\n        executeSearch({\n          legacy: logRecentQueryClick(),\n          next: {\n            actionCause: SearchPageEvents.recentQueryClick,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getBaseMetadata(),\n          },\n        })\n      );\n    },\n  };\n}\n\nfunction loadRecentQueriesListReducer(\n  engine: SearchEngine\n): engine is SearchEngine<RecentQueriesSection> {\n  engine.addReducers({search, recentQueries});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  RecentQueriesList,\n  RecentQueriesListProps,\n  buildRecentQueriesList,\n} from './headless-recent-queries-list';\n\nexport * from './headless-recent-queries-list';\n\n/**\n * @internal\n */\nexport const defineRecentQueriesList = (\n  props?: RecentQueriesListProps\n): ControllerDefinitionWithoutProps<SearchEngine, RecentQueriesList> => ({\n  build: (engine) => buildRecentQueriesList(engine, props),\n});\n", "import {Result} from '../../api/search/search/result';\nimport {\n  makeAnalyticsAction,\n  partialDocumentInformation,\n  documentIdentifier,\n  validateResultPayload,\n  CustomAction,\n} from '../analytics/analytics-utils';\n\nexport const logRecentResultClick = (result: Result): CustomAction =>\n  makeAnalyticsAction('analytics/recentResults/click', (client, state) => {\n    validateResultPayload(result);\n    return client.makeRecentResultClick(\n      partialDocumentInformation(result, state),\n      documentIdentifier(result)\n    );\n  });\n\nexport const logClearRecentResults = (): CustomAction =>\n  makeAnalyticsAction('analytics/recentResults/clear', (client) =>\n    client.makeClearRecentResults()\n  );\n", "import {Result} from '../../api/search/search/result';\n\nexport interface RecentResultsState {\n  results: Result[];\n  maxLength: number;\n}\n\nexport function getRecentResultsInitialState(): RecentResultsState {\n  return {\n    results: [],\n    maxLength: 10,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {\n  registerRecentResults,\n  clearRecentResults,\n  pushRecentResult,\n} from './recent-results-actions';\nimport {getRecentResultsInitialState} from './recent-results-state';\n\nexport const recentResultsReducer = createReducer(\n  getRecentResultsInitialState(),\n  (builder) => {\n    builder\n      .addCase(registerRecentResults, (state, action) => {\n        state.results = action.payload.results.slice(\n          0,\n          action.payload.maxLength\n        );\n        state.maxLength = action.payload.maxLength;\n      })\n      .addCase(clearRecentResults, (state) => {\n        state.results = [];\n      })\n      .addCase(pushRecentResult, (state, action) => {\n        const result = action.payload;\n        state.results = state.results.filter(\n          (r) => r.uniqueId !== result.uniqueId\n        );\n        const remaining = state.results.slice(0, state.maxLength - 1);\n        state.results = [result, ...remaining];\n      });\n  }\n);\n", "import {ArrayValue, NumberValue, Schema} from '@coveo/bueno';\nimport {Result} from '../../api/search/search/result';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  clearRecentResults,\n  registerRecentResults,\n} from '../../features/recent-results/recent-results-actions';\nimport {logClearRecentResults} from '../../features/recent-results/recent-results-analytics-actions';\nimport {recentResultsReducer as recentResults} from '../../features/recent-results/recent-results-slice';\nimport {RecentResultsSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {\n  validateInitialState,\n  validateOptions,\n} from '../../utils/validate-payload';\nimport {buildController, Controller} from '../controller/headless-controller';\n\nexport interface RecentResultsListProps {\n  /**\n   * The initial state that should be applied to the `RecentResultsList` controller.\n   */\n  initialState?: RecentResultsListInitialState;\n  /**\n   * The configuration options that should be applied to the `RecentResultsList` controller.\n   */\n  options?: RecentResultsListOptions;\n}\n\nconst defaultRecentResultsProps: Required<RecentResultsListProps> = {\n  initialState: {\n    results: [],\n  },\n  options: {\n    maxLength: 10,\n  },\n};\n\nexport interface RecentResultsListInitialState {\n  /**\n   * The list of recent results.\n   * @defaultValue `[]`\n   */\n  results: Result[];\n}\n\nconst initialStateSchema = new Schema<RecentResultsListInitialState>({\n  results: new ArrayValue({required: true}),\n});\n\nexport interface RecentResultsListOptions {\n  /**\n   * The maximum number of results to retain in the list.\n   * @defaultValue `10`\n   */\n  maxLength: number;\n}\n\nconst optionsSchema = new Schema<RecentResultsListOptions>({\n  maxLength: new NumberValue({required: true, min: 1}),\n});\n\n/**\n * The `RecentResultsList` controller manages a user's recently clicked results.\n */\nexport interface RecentResultsList extends Controller {\n  /**\n   * The state of the RecentResultsList controller.\n   * */\n  state: RecentResultsState;\n  /**\n   * Clears the recent results list.\n   */\n  clear(): void;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `RecentResultsList` controller.\n * */\nexport interface RecentResultsState {\n  /**\n   * The list of recent results.\n   */\n  results: Result[];\n  /**\n   * The maximum number of results to retain in the list.\n   */\n  maxLength: number;\n}\n\nexport function validateRecentResultsProps(\n  engine: SearchEngine,\n  props?: RecentResultsListProps\n) {\n  validateOptions(\n    engine,\n    optionsSchema,\n    props?.options,\n    'buildRecentResultsList'\n  );\n  validateInitialState(\n    engine,\n    initialStateSchema,\n    props?.initialState,\n    'buildRecentResultsList'\n  );\n}\n\n/**\n * Creates a `RecentResultsList` controller instance.\n *\n * @param engine - The headless engine.\n * @param props - The configuration `RecentResultsList` properties.\n * @returns A `RecentResultsList` controller instance.\n * */\nexport function buildRecentResultsList(\n  engine: SearchEngine,\n  props?: RecentResultsListProps\n): RecentResultsList {\n  if (!loadRecentResultsListReducer(engine)) {\n    throw loadReducerError;\n  }\n\n  const controller = buildController(engine);\n  const {dispatch} = engine;\n  const getState = () => engine.state;\n\n  const registrationProps: Required<RecentResultsListProps> = {\n    ...defaultRecentResultsProps,\n    ...props,\n  };\n\n  validateRecentResultsProps(engine, registrationProps);\n\n  const options = {\n    results: registrationProps.initialState.results,\n    maxLength: registrationProps.options.maxLength,\n  };\n\n  dispatch(registerRecentResults(options));\n\n  return {\n    ...controller,\n\n    get state() {\n      return getState().recentResults;\n    },\n\n    clear() {\n      dispatch(logClearRecentResults());\n      dispatch(clearRecentResults());\n    },\n  };\n}\n\nfunction loadRecentResultsListReducer(\n  engine: SearchEngine\n): engine is SearchEngine<RecentResultsSection> {\n  engine.addReducers({recentResults});\n  return true;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../app/ssr-engine/types/common';\nimport {\n  RecentResultsList,\n  RecentResultsListProps,\n  buildRecentResultsList,\n} from './headless-recent-results-list';\n\nexport * from './headless-recent-results-list';\n\n/**\n * @internal\n */\nexport const defineRecentResultsList = (\n  props?: RecentResultsListProps\n): ControllerDefinitionWithoutProps<SearchEngine, RecentResultsList> => ({\n  build: (engine) => buildRecentResultsList(engine, props),\n});\n", "import {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {SearchThunkExtraArguments} from '../../../app/search-thunk-extra-arguments';\nimport {SearchPageEvents} from '../../../features/analytics/search-action-cause';\nimport {updateFacetOptions} from '../../../features/facet-options/facet-options-actions';\nimport {specificFacetSearchSetReducer as facetSearchSet} from '../../../features/facets/facet-search-set/specific/specific-facet-search-set-slice';\nimport {registerFacet} from '../../../features/facets/facet-set/facet-set-actions';\nimport {\n  logFacetExclude,\n  logFacetSelect,\n} from '../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {facetSetReducer as facetSet} from '../../../features/facets/facet-set/facet-set-slice';\nimport {defaultFacetOptions} from '../../../features/facets/facet-set/facet-set-slice';\nimport {executeSearch} from '../../../features/search/search-actions';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  FacetSection,\n  ConfigurationSection,\n  FacetSearchSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Subscribable,\n} from '../../controller/headless-controller';\nimport {determineFacetId} from '../../core/facets/_common/facet-id-determinor';\nimport {buildFacetSearch} from '../../core/facets/facet-search/specific/headless-facet-search';\nimport {FacetOptions} from '../../facets/facet/headless-facet-options';\n\nexport interface FieldSuggestionsValue {\n  /**\n   * The custom field suggestion display name, as specified in the `captions` argument of the `FieldSuggestion` controller.\n   */\n  displayValue: string;\n  /**\n   * The original field value, as retrieved from the field in the index.\n   */\n  rawValue: string;\n  /**\n   * An estimated number of result items matching both the current query and\n   * the filter expression that would get generated if this field suggestion was selected.\n   */\n  count: number;\n}\n\nexport interface FieldSuggestionsState {\n  /**\n   * The field suggestions.\n   */\n  values: FieldSuggestionsValue[];\n\n  /**\n   * Whether the request for field suggestions is in progress.\n   */\n  isLoading: boolean;\n\n  /**\n   * Whether more field suggestions are available.\n   */\n  moreValuesAvailable: boolean;\n\n  /**\n   * The query used to request field suggestions.\n   */\n  query: string;\n}\n\n/**\n * The `FieldSuggestions` controller provides query suggestions based on a particular facet field.\n *\n * For example, you could use this controller to provide auto-completion suggestions while the end user is typing an item title.\n *\n * This controller is a wrapper around the basic facet controller search functionality, and thus exposes similar options and properties.\n */\nexport interface FieldSuggestions extends Subscribable {\n  /**\n   * Requests field suggestions based on a query.\n   *\n   * @param text - The query to search.\n   */\n  updateText(text: string): void;\n\n  /**\n   * Shows more field suggestions for the current query.\n   */\n  showMoreResults(): void;\n\n  /**\n   * Requests field suggestions based on a query.\n   */\n  search(): void;\n\n  /**\n   * Filters the search using the specified value.\n   *\n   * If a facet exists with the configured `facetId`, selects the corresponding facet value.\n   *\n   * @param value - The field suggestion for which to select the matching facet value.\n   */\n  select(value: FieldSuggestionsValue): void;\n\n  /**\n   * Filters the search using the specified value, deselecting others.\n   *\n   * If a facet exists with the configured `facetId`, selects the corresponding facet value while deselecting other facet values.\n   *\n   * @param value - The field suggestion for which to select the matching facet value.\n   */\n  singleSelect(value: FieldSuggestionsValue): void;\n\n  /**\n   * Resets the query and empties the suggestions.\n   */\n  clear(): void;\n\n  /**\n   * Updates the captions of field suggestions.\n   *\n   * @param captions - A dictionary that maps field values to field suggestion display names.\n   */\n  updateCaptions(captions: Record<string, string>): void;\n\n  state: FieldSuggestionsState;\n}\n\nexport interface FieldSuggestionsOptions {\n  /**\n   * The options used to register the facet used by the field suggestions controller.\n   */\n  facet: FacetOptions;\n}\n\nexport interface FieldSuggestionsProps {\n  /**\n   * The options for the `FieldSuggestions` controller.\n   */\n  options: FieldSuggestionsOptions;\n}\n\n/**\n * Creates a `FieldSuggestions` controller instance.\n *\n * This controller initializes a facet under the hood, but exposes state and methods that are relevant for suggesting field values based on a query.\n * It's important not to initialize a facet with the same `facetId` but different options, because only the options of the controller which is built first will be taken into account.\n *\n * @param engine The headless engine.\n * @param props The configurable `FieldSuggestions` controller properties.\n * @returns A `FieldSuggestions` controller instance.\n */\nexport function buildFieldSuggestions(\n  engine: SearchEngine,\n  props: FieldSuggestionsProps\n): FieldSuggestions {\n  if (!loadFieldSuggestionsReducers(engine)) {\n    throw loadReducerError;\n  }\n  const {\n    facetSearch: facetSearchOptions,\n    allowedValues,\n    ...facetOptions\n  } = props.options.facet;\n  const facetId = determineFacetId(engine, facetOptions);\n  engine.dispatch(\n    registerFacet({\n      ...defaultFacetOptions,\n      ...facetOptions,\n      facetId,\n      ...(allowedValues && {\n        allowedValues: {\n          type: 'simple',\n          values: allowedValues,\n        },\n      }),\n    })\n  );\n\n  const facetSearch = buildFacetSearch(engine, {\n    options: {...facetSearchOptions, facetId},\n    select: (value) => {\n      engine.dispatch(updateFacetOptions());\n      engine.dispatch(\n        executeSearch({\n          legacy: logFacetSelect({facetId, facetValue: value.rawValue}),\n          next: {\n            actionCause: SearchPageEvents.facetSelect,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                facetId,\n                value.rawValue\n              ),\n          },\n        })\n      );\n    },\n    exclude: (value) => {\n      engine.dispatch(updateFacetOptions());\n      engine.dispatch(\n        executeSearch({\n          legacy: logFacetExclude({facetId, facetValue: value.rawValue}),\n          next: {\n            actionCause: SearchPageEvents.facetExclude,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetMetadata(\n                facetId,\n                value.rawValue\n              ),\n          },\n        })\n      );\n    },\n    isForFieldSuggestions: true,\n  });\n  const controller = buildController(engine);\n  return {\n    ...controller,\n    ...facetSearch,\n    updateText: function (text: string) {\n      facetSearch.updateText(text);\n      facetSearch.search();\n    },\n    get state() {\n      return facetSearch.state;\n    },\n  };\n}\n\nfunction loadFieldSuggestionsReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  FacetSection & ConfigurationSection & FacetSearchSection & SearchSection,\n  SearchThunkExtraArguments\n> {\n  engine.addReducers({facetSet, configuration, facetSearchSet, search});\n  return true;\n}\n", "import {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../app/ssr-engine/types/common';\nimport {\n  FieldSuggestions,\n  FieldSuggestionsProps,\n  buildFieldSuggestions,\n} from './headless-field-suggestions';\n\nexport * from './headless-field-suggestions';\n\n/**\n * @internal\n */\nexport const defineFieldSuggestions = (\n  props: FieldSuggestionsProps\n): ControllerDefinitionWithoutProps<SearchEngine, FieldSuggestions> => ({\n  build: (engine) => buildFieldSuggestions(engine, props),\n});\n", "import {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {SearchThunkExtraArguments} from '../../../app/search-thunk-extra-arguments';\nimport {registerCategoryFacet} from '../../../features/facets/category-facet-set/category-facet-set-actions';\nimport {categoryFacetSetReducer as categoryFacetSet} from '../../../features/facets/category-facet-set/category-facet-set-slice';\nimport {defaultCategoryFacetOptions} from '../../../features/facets/category-facet-set/category-facet-set-slice';\nimport {categoryFacetSearchSetReducer as categoryFacetSearchSet} from '../../../features/facets/facet-search-set/category/category-facet-search-set-slice';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  CategoryFacetSearchSection,\n  CategoryFacetSection,\n  ConfigurationSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  buildController,\n  Subscribable,\n} from '../../controller/headless-controller';\nimport {determineFacetId} from '../../core/facets/_common/facet-id-determinor';\nimport {CategoryFacetOptions} from '../../facets/category-facet/headless-category-facet';\nimport {buildCategoryFacetSearch} from '../../facets/category-facet/headless-category-facet-search';\n\nexport interface CategoryFieldSuggestionsValue {\n  /**\n   * The custom field suggestion display name, as specified in the `captions` argument of the `FieldSuggestion` controller.\n   */\n  displayValue: string;\n  /**\n   * The original field value, as retrieved from the field in the index.\n   */\n  rawValue: string;\n  /**\n   * An estimated number of result items matching both the current query and\n   * the filter expression that would get generated if this field suggestion was selected.\n   */\n  count: number;\n  /**\n   * The hierarchical path to the value.\n   *\n   * @example\n   * [\"Electronics\", \"Smartphones\", \"Android phones\"]\n   */\n  path: string[];\n}\n\nexport interface CategoryFieldSuggestionsState {\n  /**\n   * The field suggestions.\n   */\n  values: CategoryFieldSuggestionsValue[];\n\n  /**\n   * Whether the request for field suggestions is in progress.\n   */\n  isLoading: boolean;\n\n  /**\n   * Whether more field suggestions are available.\n   */\n  moreValuesAvailable: boolean;\n\n  /**\n   * The query used to request field suggestions.\n   */\n  query: string;\n}\n\n/**\n * The `CategoryFieldSuggestions` controller provides query suggestions based on a particular category facet field.\n *\n * For example, you could use this controller to provide auto-completion suggestions while the end user is typing an item category.\n *\n * This controller is a wrapper around the basic category facet controller search functionality, and thus exposes similar options and properties.\n */\nexport interface CategoryFieldSuggestions extends Subscribable {\n  /**\n   * Requests field suggestions based on a query.\n   *\n   * @param text - The query with which to request field suggestions.\n   */\n  updateText(text: string): void;\n\n  /**\n   * Shows more field suggestions for the current query.\n   */\n  showMoreResults(): void;\n\n  /**\n   * Requests field suggestions based on a query.\n   */\n  search(): void;\n\n  /**\n   * Filters the search using the specified value.\n   *\n   * If a facet exists with the configured `facetId`, selects the corresponding facet value.\n   *\n   * @param value - The field suggestion to select.\n   */\n  select(value: CategoryFieldSuggestionsValue): void;\n\n  /**\n   * Resets the query and empties the suggestions.\n   */\n  clear(): void;\n\n  /**\n   * Updates the captions of field suggestions.\n   *\n   * @param captions - A dictionary that maps field values to field suggestion display names.\n   */\n  updateCaptions(captions: Record<string, string>): void;\n\n  state: CategoryFieldSuggestionsState;\n}\n\nexport interface CategoryFieldSuggestionsOptions {\n  /**\n   * The options used to register the category facet used under the hood by the field suggestions controller.\n   */\n  facet: CategoryFacetOptions;\n}\n\nexport interface CategoryFieldSuggestionsProps {\n  /**\n   * The options for the `CategoryFieldSuggestions` controller.\n   */\n  options: CategoryFieldSuggestionsOptions;\n}\n\n/**\n * Creates a `CategoryFieldSuggestions` controller instance.\n *\n * This controller initializes a category facet under the hood, but exposes state and methods that are relevant for suggesting field values based on a query.\n * It's important not to initialize a category facet with the same `facetId` but different options, because only the options of the controller which is built first will be taken into account.\n *\n * @param engine The headless engine.\n * @param props The configurable `CategoryFieldSuggestions` controller properties.\n * @returns A `CategoryFieldSuggestions` controller instance.\n */\nexport function buildCategoryFieldSuggestions(\n  engine: SearchEngine,\n  props: CategoryFieldSuggestionsProps\n): CategoryFieldSuggestions {\n  if (!loadCategoryFieldSuggestionsReducers(engine)) {\n    throw loadReducerError;\n  }\n  const {facetSearch: facetSearchOptions, ...facetOptions} =\n    props.options.facet;\n  const facetId = determineFacetId(engine, facetOptions);\n  engine.dispatch(\n    registerCategoryFacet({\n      ...defaultCategoryFacetOptions,\n      ...facetOptions,\n      facetId,\n    })\n  );\n\n  const facetSearch = buildCategoryFacetSearch(engine, {\n    options: {...facetSearchOptions, facetId},\n    isForFieldSuggestions: true,\n  });\n  const controller = buildController(engine);\n  return {\n    ...controller,\n    ...facetSearch,\n    updateText: function (text: string) {\n      facetSearch.updateText(text);\n      facetSearch.search();\n    },\n    get state() {\n      return facetSearch.state;\n    },\n  };\n}\n\nfunction loadCategoryFieldSuggestionsReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  CategoryFacetSection &\n    ConfigurationSection &\n    CategoryFacetSearchSection &\n    SearchSection,\n  SearchThunkExtraArguments\n> {\n  engine.addReducers({\n    categoryFacetSet,\n    configuration,\n    categoryFacetSearchSet,\n    search,\n  });\n  return true;\n}\n", "import {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../app/ssr-engine/types/common';\nimport {\n  CategoryFieldSuggestions,\n  CategoryFieldSuggestionsProps,\n  buildCategoryFieldSuggestions,\n} from './headless-category-field-suggestions';\n\nexport * from './headless-category-field-suggestions';\n\n/**\n * @internal\n */\nexport const defineCategoryFieldSuggestions = (\n  props: CategoryFieldSuggestionsProps\n): ControllerDefinitionWithoutProps<\n  SearchEngine,\n  CategoryFieldSuggestions\n> => ({\n  build: (engine) => buildCategoryFieldSuggestions(engine, props),\n});\n", "import {SearchAnalyticsProvider} from '../../../api/analytics/search-analytics';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {SearchPageEvents} from '../../../features/analytics/search-action-cause';\nimport {\n  deselectAllAutomaticFacetValues,\n  toggleSelectAutomaticFacetValue,\n} from '../../../features/facets/automatic-facet-set/automatic-facet-set-actions';\nimport {logFacetClearAll} from '../../../features/facets/facet-set/facet-set-analytics-actions';\nimport {\n  getLegacyAnalyticsActionForToggleFacetSelect,\n  getAnalyticsActionForToggleFacetSelect,\n} from '../../../features/facets/facet-set/facet-set-utils';\nimport {FacetValue} from '../../../features/facets/facet-set/interfaces/response';\nimport {executeSearch} from '../../../features/search/search-actions';\nimport {buildController} from '../../controller/headless-controller';\nimport {AutomaticFacet} from '../automatic-facet-generator/headless-automatic-facet-generator';\n\n/**\n * @internal\n * This prop is used internally by the `AutomaticFacetGenerator` controller.\n */\nexport interface AutomaticFacetProps {\n  /**\n   * The field whose values you want to display in the facet.\n   */\n  field: string;\n}\n\n/**\n * @internal\n * This initializer is used internally by the `AutomaticFacetGenerator` controller.\n *\n * **Important:** This initializer is meant for internal use by Headless only. As an implementer, you should never import or use this initializer directly in your code.\n *\n * @param engine - The headless engine.\n * @param props - The configurable `AutomaticFacet` properties used internally.\n * @returns An `AutomaticFacet` controller instance.\n * */\nexport function buildAutomaticFacet(\n  engine: SearchEngine,\n  props: AutomaticFacetProps\n): AutomaticFacet {\n  const {dispatch} = engine;\n  const controller = buildController(engine);\n\n  const {field} = props;\n\n  return {\n    ...controller,\n\n    toggleSelect(selection: FacetValue) {\n      dispatch(toggleSelectAutomaticFacetValue({field, selection}));\n      dispatch(\n        executeSearch({\n          legacy: getLegacyAnalyticsActionForToggleFacetSelect(\n            field,\n            selection\n          ),\n          next: getAnalyticsActionForToggleFacetSelect(field, selection),\n        })\n      );\n    },\n\n    deselectAll() {\n      dispatch(deselectAllAutomaticFacetValues(field));\n      dispatch(\n        executeSearch({\n          legacy: logFacetClearAll(field),\n          next: {\n            actionCause: SearchPageEvents.facetClearAll,\n            getEventExtraPayload: (state) =>\n              new SearchAnalyticsProvider(() => state).getFacetClearAllMetadata(\n                field\n              ),\n          },\n        })\n      );\n    },\n\n    get state() {\n      const response = engine.state.automaticFacetSet?.set[field]?.response;\n\n      const defaultState = {field: '', values: [], label: ''};\n\n      return response\n        ? {\n            field: response.field,\n            label: response.label,\n            values: response.values,\n          }\n        : defaultState;\n    },\n  };\n}\n", "export interface AutomaticFacetGeneratorOptions {\n  /**\n   * The desired count of automatic facets.\n   *\n   * Minimum: `1`\n   * Maximum: `10`\n   * @defaultValue `5`\n   */\n  desiredCount?: number;\n\n  /**\n   * The desired number of automatically generated facet values.\n   *\n   * Minimum: `1`\n   * @defaultValue `8`\n   */\n  numberOfValues?: number;\n}\n\nexport function buildOptions(\n  options: AutomaticFacetGeneratorOptions\n): AutomaticFacetGeneratorOptions {\n  return {\n    desiredCount: options.desiredCount,\n    numberOfValues: options.numberOfValues,\n  };\n}\n", "import {configuration} from '../../../app/common-reducers';\nimport {CoreEngine} from '../../../app/engine';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {setOptions} from '../../../features/facets/automatic-facet-set/automatic-facet-set-actions';\nimport {automaticFacetSetReducer as automaticFacetSet} from '../../../features/facets/automatic-facet-set/automatic-facet-set-slice';\nimport {searchReducer as search} from '../../../features/search/search-slice';\nimport {\n  AutomaticFacetSection,\n  ConfigurationSection,\n  SearchSection,\n} from '../../../state/state-sections';\nimport {loadReducerError} from '../../../utils/errors';\nimport {\n  Controller,\n  buildController,\n} from '../../controller/headless-controller';\nimport {buildAutomaticFacet} from '../automatic-facet/headless-automatic-facet';\nimport {FacetValue} from '../facet/headless-facet';\nimport {\n  AutomaticFacetGeneratorOptions,\n  buildOptions,\n} from './headless-automatic-facet-generator-options';\n\nexport type {AutomaticFacetGeneratorOptions};\n\n/**\n * The `AutomaticFacetGenerator` headless controller offers a high-level interface for rendering automatic facets.\n *\n * Unlike regular facets that need to be explicitly defined and requested in the query, automatic facets are dynamically\n * generated by the index in response to the query.\n *\n * To learn more about the automatic facet generator feature, see: [About the Facet Generator](https://docs.coveo.com/en/n9sd0159/).\n */\nexport interface AutomaticFacetGenerator extends Controller {\n  /**\n   * The state of the `AutomaticFacetGenerator` controller.\n   */\n  state: AutomaticFacetGeneratorState;\n}\n\nexport interface AutomaticFacetGeneratorState {\n  /**\n   * The list of automatic facet controllers.\n   */\n  automaticFacets: AutomaticFacet[];\n}\n\nexport interface AutomaticFacetGeneratorProps {\n  /**\n   * The options for the `AutomaticFacetGenerator` controller.\n   * */\n  options: AutomaticFacetGeneratorOptions;\n}\n\n/**\n * A scoped and simplified part of the headless state that is relevant to the `Automatic Facet` controller.\n */\nexport interface AutomaticFacetState {\n  /**\n   * The automatic facet field.\n   */\n  field: string;\n  /**\n   * The automatic facet label.\n   */\n  label: string;\n  /**\n   * The automatic facet values.\n   */\n  values: FacetValue[];\n}\n/**\n * The `AutomaticFacet` controller allows you to create a search interface component that the end user\n * can interact with to refine a query by selecting filters based on item metadata (i.e., field values). Unlike regular facets that\n * need to be explicitly defined and requested in the query, automatic facets are dynamically generated by the index\n * in response to the query.\n *\n * To learn more about the automatic facet generator feature, see: [About the Facet Generator](https://docs.coveo.com/en/n9sd0159/).\n */\nexport interface AutomaticFacet extends Controller {\n  /**\n   * Toggles the specified automatic facet value.\n   *\n   * @param selection - The facet value to toggle.\n   */\n  toggleSelect(selection: FacetValue): void;\n  /**\n   * Deselects all automatic facet values.\n   * */\n  deselectAll(): void;\n  /**\n   *  The state of the `AutomaticFacet` controller.\n   */\n  state: AutomaticFacetState;\n}\n\n/**\n * Creates a `AutomaticFacetGenerator` instance.\n *\n * @param engine - The headless engine.\n * @param props - The automatic facets props.\n * @returns A `AutomaticFacetGenerator` controller instance.\n */\nexport function buildAutomaticFacetGenerator(\n  engine: SearchEngine,\n  props: AutomaticFacetGeneratorProps\n): AutomaticFacetGenerator {\n  if (!loadAutomaticFacetGeneratorReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const {dispatch} = engine;\n  const options = buildOptions(props.options);\n  dispatch(setOptions(options));\n\n  const controller = buildController(engine);\n\n  return {\n    ...controller,\n\n    get state() {\n      const automaticFacets =\n        engine.state.search.response.generateAutomaticFacets?.facets.map(\n          (facet) => buildAutomaticFacet(engine, {field: facet.field})\n        ) ?? [];\n      return {\n        automaticFacets,\n      };\n    },\n  };\n}\n\nfunction loadAutomaticFacetGeneratorReducers(\n  engine: CoreEngine\n): engine is CoreEngine<\n  AutomaticFacetSection & ConfigurationSection & SearchSection\n> {\n  engine.addReducers({automaticFacetSet, configuration, search});\n  return true;\n}\n", "import {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {ControllerDefinitionWithoutProps} from '../../../app/ssr-engine/types/common';\nimport {\n  AutomaticFacetGenerator,\n  AutomaticFacetGeneratorProps,\n  buildAutomaticFacetGenerator,\n} from './headless-automatic-facet-generator';\n\nexport * from './headless-automatic-facet-generator';\n\n/**\n * @internal\n */\nexport const defineAutomaticFacetGenerator = (\n  props: AutomaticFacetGeneratorProps\n): ControllerDefinitionWithoutProps<SearchEngine, AutomaticFacetGenerator> => ({\n  build: (engine) => buildAutomaticFacetGenerator(engine, props),\n});\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../app/engine';\nimport {advancedSearchQueriesReducer as advancedSearchQueries} from '../../features/advanced-search-queries/advanced-search-queries-slice';\nimport {\n  updateAdvancedSearchQueries,\n  registerAdvancedSearchQueries,\n  AdvancedSearchQueryActionCreatorPayload,\n} from './advanced-search-queries-actions';\n\nexport type {AdvancedSearchQueryActionCreatorPayload};\n\n/**\n * The advanced search query action creators.\n */\nexport interface AdvancedSearchQueryActionCreators {\n  /**\n   * Update the values of the advanced search queries.\n   *\n   * @param payload - The current state of the advanced search queries.\n   * @returns A dispatchable action.\n   */\n  updateAdvancedSearchQueries(\n    payload: AdvancedSearchQueryActionCreatorPayload\n  ): PayloadAction<AdvancedSearchQueryActionCreatorPayload>;\n\n  /**\n   * Registers the initial state of the advanced search queries.\n   *\n   * @param payload - The initial state of the advanced search queries.\n   * @returns A dispatchable action.\n   */\n  registerAdvancedSearchQueries(\n    payload: AdvancedSearchQueryActionCreatorPayload\n  ): PayloadAction<AdvancedSearchQueryActionCreatorPayload>;\n}\n\n/**\n * Loads the `advancedSearchQueries` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadAdvancedSearchQueryActions(\n  engine: CoreEngine\n): AdvancedSearchQueryActionCreators {\n  engine.addReducers({advancedSearchQueries});\n\n  return {\n    updateAdvancedSearchQueries,\n    registerAdvancedSearchQueries,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {categoryFacetSetReducer as categoryFacetSet} from '../../../features/facets/category-facet-set/category-facet-set-slice';\nimport {\n  UpdateFacetAutoSelectionActionCreatorPayload,\n  updateFacetAutoSelection,\n} from '../generic/facet-actions';\nimport {\n  deselectAllCategoryFacetValues,\n  registerCategoryFacet,\n  toggleSelectCategoryFacetValue,\n  updateCategoryFacetNumberOfValues,\n  updateCategoryFacetSortCriterion,\n  updateCategoryFacetBasePath,\n  RegisterCategoryFacetActionCreatorPayload,\n  ToggleSelectCategoryFacetValueActionCreatorPayload,\n  UpdateCategoryFacetNumberOfValuesActionCreatorPayload,\n  UpdateCategoryFacetSortCriterionActionCreatorPayload,\n  UpdateCategoryFacetBasePathActionCreatorPayload,\n} from './category-facet-set-actions';\n\nexport type {\n  RegisterCategoryFacetActionCreatorPayload,\n  ToggleSelectCategoryFacetValueActionCreatorPayload,\n  UpdateCategoryFacetNumberOfValuesActionCreatorPayload,\n  UpdateCategoryFacetSortCriterionActionCreatorPayload,\n  UpdateCategoryFacetBasePathActionCreatorPayload,\n  UpdateFacetAutoSelectionActionCreatorPayload,\n};\n\n/**\n * The category facet set action creators.\n */\nexport interface CategoryFacetSetActionCreators {\n  /**\n   * Deselects all values of a category facet.\n   *\n   * @param facetId - The unique identifier of the facet (e.g., \"1\").\n   * @returns A dispatchable action.\n   */\n  deselectAllCategoryFacetValues(facetId: string): PayloadAction<string>;\n\n  /**\n   * Registers a category facet in the category facet set.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerCategoryFacet(\n    payload: RegisterCategoryFacetActionCreatorPayload\n  ): PayloadAction<RegisterCategoryFacetActionCreatorPayload>;\n\n  /**\n   * Toggles a category facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectCategoryFacetValue(\n    payload: ToggleSelectCategoryFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectCategoryFacetValueActionCreatorPayload>;\n\n  /**\n   * Updates the number of values of a category facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCategoryFacetNumberOfValues(\n    payload: UpdateCategoryFacetNumberOfValuesActionCreatorPayload\n  ): PayloadAction<UpdateCategoryFacetNumberOfValuesActionCreatorPayload>;\n\n  /**\n   * Updates the sort criterion for the category facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCategoryFacetSortCriterion(\n    payload: UpdateCategoryFacetSortCriterionActionCreatorPayload\n  ): PayloadAction<UpdateCategoryFacetSortCriterionActionCreatorPayload>;\n\n  /**\n   * Updates the preventAutoSelect flag of all facets.\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFacetAutoSelection(\n    payload: UpdateFacetAutoSelectionActionCreatorPayload\n  ): PayloadAction<UpdateFacetAutoSelectionActionCreatorPayload>;\n\n  /**\n   * Updates the base path for the category facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateCategoryFacetBasePath(\n    payload: UpdateCategoryFacetBasePathActionCreatorPayload\n  ): PayloadAction<UpdateCategoryFacetBasePathActionCreatorPayload>;\n}\n\n/**\n * Loads the `categoryFacetSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadCategoryFacetSetActions(\n  engine: SearchEngine\n): CategoryFacetSetActionCreators {\n  engine.addReducers({categoryFacetSet});\n\n  return {\n    deselectAllCategoryFacetValues,\n    registerCategoryFacet,\n    toggleSelectCategoryFacetValue,\n    updateCategoryFacetNumberOfValues,\n    updateCategoryFacetSortCriterion,\n    updateFacetAutoSelection,\n    updateCategoryFacetBasePath,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../../app/search-engine/search-engine';\nimport {facetSetReducer as facetSet} from '../../../features/facets/facet-set/facet-set-slice';\nimport {\n  updateFacetAutoSelection,\n  UpdateFacetAutoSelectionActionCreatorPayload,\n} from '../generic/facet-actions';\nimport {\n  deselectAllFacetValues,\n  registerFacet,\n  toggleExcludeFacetValue,\n  RegisterFacetActionCreatorPayload,\n  toggleSelectFacetValue,\n  ToggleSelectFacetValueActionCreatorPayload,\n  updateFacetIsFieldExpanded,\n  UpdateFacetIsFieldExpandedActionCreatorPayload,\n  updateFacetNumberOfValues,\n  UpdateFacetNumberOfValuesActionCreatorPayload,\n  updateFacetSortCriterion,\n  UpdateFacetSortCriterionActionCreatorPayload,\n  updateFreezeCurrentValues,\n  UpdateFreezeCurrentValuesActionCreatorPayload,\n} from './facet-set-actions';\n\nexport type {\n  RegisterFacetActionCreatorPayload,\n  ToggleSelectFacetValueActionCreatorPayload,\n  UpdateFacetIsFieldExpandedActionCreatorPayload,\n  UpdateFacetNumberOfValuesActionCreatorPayload,\n  UpdateFacetSortCriterionActionCreatorPayload,\n  UpdateFreezeCurrentValuesActionCreatorPayload,\n  UpdateFacetAutoSelectionActionCreatorPayload,\n};\n\n/**\n * The facet set action creators.\n */\nexport interface FacetSetActionCreators {\n  /**\n   * Deselects all values of a facet.\n   *\n   * @param facetId - The unique identifier of the facet (e.g., `\"1\"`).\n   * @returns A dispatchable action.\n   */\n  deselectAllFacetValues(facetId: string): PayloadAction<string>;\n\n  /**\n   * Registers a facet in the facet set.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerFacet(\n    payload: RegisterFacetActionCreatorPayload\n  ): PayloadAction<RegisterFacetActionCreatorPayload>;\n\n  /**\n   * Toggles a facet value. If the value does not exist, it is added.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectFacetValue(\n    payload: ToggleSelectFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectFacetValueActionCreatorPayload>;\n\n  /**\n   * Excludes a facet value. If the value does not exist, it is added.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeFacetValue(\n    payload: ToggleSelectFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectFacetValueActionCreatorPayload>;\n\n  /**\n   * Whether to expand (show more values than initially configured) or shrink down the facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFacetIsFieldExpanded(\n    payload: UpdateFacetIsFieldExpandedActionCreatorPayload\n  ): PayloadAction<UpdateFacetIsFieldExpandedActionCreatorPayload>;\n\n  /**\n   * Updates the number of values of a facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFacetNumberOfValues(\n    payload: UpdateFacetNumberOfValuesActionCreatorPayload\n  ): PayloadAction<UpdateFacetNumberOfValuesActionCreatorPayload>;\n\n  /**\n   * Updates the sort criterion of a facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFacetSortCriterion(\n    payload: UpdateFacetSortCriterionActionCreatorPayload\n  ): PayloadAction<UpdateFacetSortCriterionActionCreatorPayload>;\n\n  /**\n   * Updates the updateFreezeCurrentValues flag of a facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFreezeCurrentValues(\n    payload: UpdateFreezeCurrentValuesActionCreatorPayload\n  ): PayloadAction<UpdateFreezeCurrentValuesActionCreatorPayload>;\n\n  /**\n   * Updates the preventAutoSelect flag of all facets\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFacetAutoSelection(\n    payload: UpdateFacetAutoSelectionActionCreatorPayload\n  ): PayloadAction<UpdateFacetAutoSelectionActionCreatorPayload>;\n}\n\n/**\n * Loads the `facetSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadFacetSetActions(\n  engine: SearchEngine\n): FacetSetActionCreators {\n  engine.addReducers({facetSet});\n\n  return {\n    deselectAllFacetValues,\n    registerFacet,\n    toggleSelectFacetValue,\n    toggleExcludeFacetValue,\n    updateFacetIsFieldExpanded,\n    updateFacetNumberOfValues,\n    updateFacetSortCriterion,\n    updateFreezeCurrentValues,\n    updateFacetAutoSelection,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {configuration} from '../../app/common-reducers';\nimport {CoreEngine} from '../../app/engine';\nimport {\n  disableAnalytics,\n  enableAnalytics,\n  setOriginLevel2,\n  SetOriginLevel2ActionCreatorPayload,\n  setOriginLevel3,\n  SetOriginLevel3ActionCreatorPayload,\n  updateAnalyticsConfiguration,\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n  updateBasicConfiguration,\n  UpdateBasicConfigurationActionCreatorPayload,\n  AnalyticsRuntimeEnvironment,\n} from './configuration-actions';\n\nexport type {\n  SetOriginLevel2ActionCreatorPayload,\n  SetOriginLevel3ActionCreatorPayload,\n  UpdateAnalyticsConfigurationActionCreatorPayload,\n  AnalyticsRuntimeEnvironment,\n  UpdateBasicConfigurationActionCreatorPayload,\n};\n\n/**\n * The configuration action creators.\n */\nexport interface ConfigurationActionCreators {\n  /**\n   * Disables analytics tracking.\n   *\n   * @returns A dispatchable action.\n   */\n  disableAnalytics(): PayloadAction;\n\n  /**\n   * Enables analytics tracking.\n   *\n   * @returns A dispatchable action.\n   */\n  enableAnalytics(): PayloadAction;\n\n  /**\n   * Sets originLevel2 for analytics tracking.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setOriginLevel2(\n    payload: SetOriginLevel2ActionCreatorPayload\n  ): PayloadAction<SetOriginLevel2ActionCreatorPayload>;\n\n  /**\n   * Sets originLevel3 for analytics tracking.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   * */\n  setOriginLevel3(\n    payload: SetOriginLevel3ActionCreatorPayload\n  ): PayloadAction<SetOriginLevel3ActionCreatorPayload>;\n\n  /**\n   * Updates the analytics configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   * */\n  updateAnalyticsConfiguration(\n    payload: UpdateAnalyticsConfigurationActionCreatorPayload\n  ): PayloadAction<UpdateAnalyticsConfigurationActionCreatorPayload>;\n\n  /**\n   * Updates the global headless engine configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   * */\n  updateBasicConfiguration(\n    payload: UpdateBasicConfigurationActionCreatorPayload\n  ): PayloadAction<UpdateBasicConfigurationActionCreatorPayload>;\n}\n\n/**\n * Loads the `configuration` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadConfigurationActions(\n  engine: CoreEngine\n): ConfigurationActionCreators {\n  engine.addReducers({configuration});\n\n  return {\n    disableAnalytics,\n    enableAnalytics,\n    setOriginLevel2,\n    setOriginLevel3,\n    updateAnalyticsConfiguration,\n    updateBasicConfiguration,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {configuration} from '../../app/common-reducers';\nimport {RecommendationEngine} from '../../app/recommendation-engine/recommendation-engine';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {pipelineReducer as pipeline} from '../../features/pipeline/pipeline-slice';\nimport {searchHubReducer as searchHub} from '../../features/search-hub/search-hub-slice';\nimport {\n  updateSearchConfiguration,\n  UpdateSearchConfigurationActionCreatorPayload,\n} from './configuration-actions';\n\nexport type {UpdateSearchConfigurationActionCreatorPayload};\n\n/**\n * The search configuration action creators.\n */\nexport interface SearchConfigurationActionCreators {\n  /**\n   * Updates the search configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateSearchConfiguration(\n    payload: UpdateSearchConfigurationActionCreatorPayload\n  ): PayloadAction<UpdateSearchConfigurationActionCreatorPayload>;\n}\n\n/**\n * Loads the necessary reducers and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadSearchConfigurationActions(\n  engine: RecommendationEngine | SearchEngine\n): SearchConfigurationActionCreators {\n  engine.addReducers({configuration, pipeline, searchHub});\n\n  return {\n    updateSearchConfiguration,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../app/engine';\nimport {contextReducer as context} from '../../features/context/context-slice';\nimport {\n  addContext,\n  AddContextActionCreatorPayload,\n  removeContext,\n  setContext,\n} from './context-actions';\nimport {ContextPayload} from './context-state';\n\nexport type {AddContextActionCreatorPayload};\n\n/**\n * The context action creators.\n */\nexport interface ContextActionCreators {\n  /**\n   * Adds a new context value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  addContext(\n    payload: AddContextActionCreatorPayload\n  ): PayloadAction<AddContextActionCreatorPayload>;\n\n  /**\n   * Removes a context key-value pair.\n   *\n   * @param key - The key to remove from the context (e.g., \"age\").\n   * @returns A dispatchable action.\n   */\n  removeContext(key: string): PayloadAction<string>;\n\n  /**\n   * Sets the query context.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setContext(payload: ContextPayload): PayloadAction<ContextPayload>;\n}\n\n/**\n * Loads the `context` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadContextActions(engine: CoreEngine): ContextActionCreators {\n  engine.addReducers({context});\n\n  return {\n    addContext,\n    removeContext,\n    setContext,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../..';\nimport {dictionaryFieldContextReducer as dictionaryFieldContext} from '../../features/dictionary-field-context/dictionary-field-context-slice';\nimport {\n  addContext,\n  AddDictionaryFieldContextActionCreatorPayload,\n  removeContext,\n  setContext,\n} from './dictionary-field-context-actions';\nimport {DictionaryFieldContextPayload} from './dictionary-field-context-state';\n\nexport type {AddDictionaryFieldContextActionCreatorPayload};\n\n/**\n * The dictionary field context action creators.\n */\nexport interface DictionaryFieldContextActionCreators {\n  /**\n   * Adds a new dictionary field context field-key pair.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  addContext(\n    payload: AddDictionaryFieldContextActionCreatorPayload\n  ): PayloadAction<AddDictionaryFieldContextActionCreatorPayload>;\n\n  /**\n   * Removes a dictionary field context field-key pair.\n   *\n   * @param field - The field to remove from the context (e.g., \"price\").\n   * @returns A dispatchable action.\n   */\n  removeContext(field: string): PayloadAction<string>;\n\n  /**\n   * Sets the dictionary field context.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  setContext(\n    payload: DictionaryFieldContextPayload\n  ): PayloadAction<DictionaryFieldContextPayload>;\n}\n\n/**\n * Loads the `context` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadDictionaryFieldContextActions(\n  engine: CoreEngine\n): DictionaryFieldContextActionCreators {\n  engine.addReducers({dictionaryFieldContext});\n\n  return {\n    addContext,\n    removeContext,\n    setContext,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../app/engine';\nimport {debugReducer as debug} from '../../features/debug/debug-slice';\nimport {disableDebug, enableDebug} from './debug-actions';\n\n/**\n * The debug action creators.\n */\nexport interface DebugActionCreators {\n  /**\n   * Disables debug information on requests.\n   *\n   * @returns A dispatchable action.\n   */\n  disableDebug(): PayloadAction;\n\n  /**\n   * Enables debug information on requests.\n   *\n   * @returns A dispatchable action.\n   */\n  enableDebug(): PayloadAction;\n}\n\n/**\n * Loads the `debug` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadDebugActions(engine: CoreEngine): DebugActionCreators {\n  engine.addReducers({debug});\n\n  return {\n    disableDebug,\n    enableDebug,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../../../app/engine';\nimport {dateFacetSetReducer as dateFacetSet} from '../../../../features/facets/range-facets/date-facet-set/date-facet-set-slice';\nimport {\n  deselectAllDateFacetValues,\n  registerDateFacet,\n  RegisterDateFacetActionCreatorPayload,\n  toggleSelectDateFacetValue,\n  ToggleSelectDateFacetValueActionCreatorPayload,\n  updateDateFacetSortCriterion,\n  UpdateDateFacetSortCriterionActionCreatorPayload,\n  UpdateDateFacetValuesActionCreatorPayload,\n  updateDateFacetValues,\n  toggleExcludeDateFacetValue,\n} from './date-facet-actions';\n\nexport type {\n  RegisterDateFacetActionCreatorPayload,\n  ToggleSelectDateFacetValueActionCreatorPayload,\n  UpdateDateFacetSortCriterionActionCreatorPayload,\n  UpdateDateFacetValuesActionCreatorPayload,\n};\n\n/**\n * The date facet set action creators.\n */\nexport interface DateFacetSetActionCreators {\n  /**\n   * Deselects all values of a date facet.\n   *\n   * @param facetId - The unique identifier of the facet (e.g., `\"1\"`).\n   * @returns A dispatchable action.\n   */\n  deselectAllDateFacetValues(facetId: string): PayloadAction<string>;\n\n  /**\n   * Registers a date facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerDateFacet(\n    payload: RegisterDateFacetActionCreatorPayload\n  ): PayloadAction<RegisterDateFacetActionCreatorPayload>;\n\n  /**\n   * Toggles a date facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectDateFacetValue(\n    payload: ToggleSelectDateFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectDateFacetValueActionCreatorPayload>;\n\n  /**\n   * Toggles exclusion of a date facet value\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeDateFacetValue(\n    payload: ToggleSelectDateFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectDateFacetValueActionCreatorPayload>;\n\n  /**\n   * Updates the sort criterion of a date facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateDateFacetSortCriterion(\n    payload: UpdateDateFacetSortCriterionActionCreatorPayload\n  ): PayloadAction<UpdateDateFacetSortCriterionActionCreatorPayload>;\n\n  /**\n   * Updates date facet values.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateDateFacetValues(\n    payload: UpdateDateFacetValuesActionCreatorPayload\n  ): PayloadAction<UpdateDateFacetValuesActionCreatorPayload>;\n}\n\n/**\n * Loads the `dateFacetSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadDateFacetSetActions(\n  engine: CoreEngine\n): DateFacetSetActionCreators {\n  engine.addReducers({dateFacetSet});\n\n  return {\n    deselectAllDateFacetValues,\n    registerDateFacet,\n    toggleSelectDateFacetValue,\n    toggleExcludeDateFacetValue,\n    updateDateFacetSortCriterion,\n    updateDateFacetValues,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {facetOptionsReducer as facetOptions} from '../../features/facet-options/facet-options-slice';\nimport {\n  updateFacetOptions,\n  UpdateFacetOptionsActionCreatorPayload,\n  EnableFacetActionCreatorPayload,\n  DisableFacetActionCreatorPayload,\n  enableFacet,\n  disableFacet,\n} from './facet-options-actions';\n\nexport type {\n  UpdateFacetOptionsActionCreatorPayload,\n  EnableFacetActionCreatorPayload,\n  DisableFacetActionCreatorPayload,\n};\n\n/**\n * The facetOptions action creators.\n */\nexport interface FacetOptionsActionCreators {\n  /**\n   * Updates options that affect facet reordering. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/build-a-search-ui/query-parameters#definitions-RestFacetOptions).\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateFacetOptions(\n    payload: UpdateFacetOptionsActionCreatorPayload\n  ): PayloadAction<UpdateFacetOptionsActionCreatorPayload>;\n  /**\n   * Enables a facet. I.e., undoes the effects of `disable`.\n   *\n   * @param facetId - The unique identifier of the facet (e.g., \"abcd\").\n   * @returns A dispatchable action.\n   */\n  enableFacet(facetId: string): PayloadAction<string>;\n  /**\n   * Disables a facet. I.e., prevents it from filtering results.\n   *\n   * @param facetId - The unique identifier of the facet (e.g., \"1\").\n   * @returns A dispatchable action.\n   */\n  disableFacet(facetId: string): PayloadAction<string>;\n}\n\n/**\n * Loads the `facetOptions` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadFacetOptionsActions(\n  engine: SearchEngine\n): FacetOptionsActionCreators {\n  engine.addReducers({facetOptions});\n\n  return {\n    updateFacetOptions,\n    enableFacet,\n    disableFacet,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {didYouMeanReducer as didYouMean} from '../../features/did-you-mean/did-you-mean-slice';\nimport {queryReducer as query} from '../../features/query/query-slice';\nimport {\n  applyDidYouMeanCorrection,\n  disableAutomaticQueryCorrection,\n  disableDidYouMean,\n  enableAutomaticQueryCorrection,\n  enableDidYouMean,\n} from './did-you-mean-actions';\n\n/**\n * The DidYouMean action creators.\n */\nexport interface DidYouMeanActionCreators {\n  /**\n   * Applies a did-you-mean correction.\n   *\n   * @param correction - The target correction (e.g., \"corrected string\").\n   * @returns A dispatchable action.\n   */\n  applyDidYouMeanCorrection(correction: string): PayloadAction<string>;\n\n  /**\n   * Disables did-you-mean.\n   *\n   * @returns A dispatchable action.\n   */\n  disableDidYouMean(): PayloadAction;\n\n  /**\n   * Enables automatic query correction\n   *\n   * @returns A dispatchable action.\n   */\n  enableAutomaticQueryCorrection(): PayloadAction;\n\n  /**\n   * Disables automatic query correction\n   *\n   * @returns A dispatchable action.\n   */\n  disableAutomaticQueryCorrection(): PayloadAction;\n\n  /**\n   * Enables did-you-mean.\n   *\n   * @returns A dispatchable action.\n   */\n  enableDidYouMean(): PayloadAction;\n}\n\n/**\n * Loads the `debug` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadDidYouMeanActions(\n  engine: SearchEngine\n): DidYouMeanActionCreators {\n  engine.addReducers({didYouMean, query});\n\n  return {\n    applyDidYouMeanCorrection,\n    disableDidYouMean,\n    enableDidYouMean,\n    enableAutomaticQueryCorrection,\n    disableAutomaticQueryCorrection,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {FieldDescription} from '../../api/search/fields/fields-response';\nimport {AsyncThunkSearchOptions} from '../../api/search/search-api-client';\nimport {CoreEngine} from '../../app/engine';\nimport {fieldsReducer as fields} from '../../features/fields/fields-slice';\nimport {ConfigurationSection} from '../../state/state-sections';\nimport {\n  registerFieldsToInclude,\n  enableFetchAllFields,\n  disableFetchAllFields,\n  fetchFieldsDescription,\n} from './fields-actions';\n\n/**\n * The field action creators.\n */\nexport interface FieldActionCreators {\n  /**\n   * Registers the fields to include in the query response.\n   *\n   * @param fields - The target fields (e.g., [\"field1\", \"field2\"]).\n   * @returns A dispatchable action.\n   */\n  registerFieldsToInclude(fields: string[]): PayloadAction<string[]>;\n  /**\n   * Enable fetch all fields from the index.\n   *\n   * This should not be used in any production environment, as it can have a negative impact on query execution time.\n   *\n   * Should be used for debugging purposes.\n   *\n   * @returns A dispatchable action.\n   */\n  enableFetchAllFields(): PayloadAction;\n  /**\n   * Disable fetch all fields from the index.\n   *\n   * @returns A dispatchable action.\n   */\n  disableFetchAllFields(): PayloadAction;\n  /**\n   * Fetch field descriptions from the index.\n   *\n   * @returns A dispatchable action.\n   */\n  fetchFieldsDescription(): AsyncThunkAction<\n    FieldDescription[],\n    void,\n    AsyncThunkSearchOptions<ConfigurationSection>\n  >;\n}\n\n/**\n * Loads the `fields` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadFieldActions(engine: CoreEngine): FieldActionCreators {\n  engine.addReducers({fields});\n\n  return {\n    registerFieldsToInclude,\n    enableFetchAllFields,\n    disableFetchAllFields,\n    fetchFieldsDescription,\n  };\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {facetOrderReducer as facetOrder} from '../../features/facets/facet-order/facet-order-slice';\nimport {history} from '../../features/history/history-slice';\nimport {back, forward} from './history-actions';\n\n/**\n * The history action creators.\n */\nexport interface HistoryActionCreators {\n  /**\n   * Moves backward in the interface history.\n   *\n   * @returns A dispatchable action.\n   */\n  back(): AsyncThunkAction<void, void, {}>;\n\n  /**\n   * Moves forward in the interface history.\n   *\n   * @returns A dispatchable action.\n   */\n  forward(): AsyncThunkAction<void, void, {}>;\n}\n\n/**\n * Loads the `history` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadHistoryActions(\n  engine: SearchEngine\n): HistoryActionCreators {\n  engine.addReducers({history, facetOrder});\n\n  return {\n    back,\n    forward,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../../../app/engine';\nimport {numericFacetSetReducer as numericFacetSet} from '../../../../features/facets/range-facets/numeric-facet-set/numeric-facet-set-slice';\nimport {\n  deselectAllNumericFacetValues,\n  registerNumericFacet,\n  RegisterNumericFacetActionCreatorPayload,\n  toggleSelectNumericFacetValue,\n  toggleExcludeNumericFacetValue,\n  ToggleSelectNumericFacetValueActionCreatorPayload,\n  updateNumericFacetSortCriterion,\n  UpdateNumericFacetSortCriterionActionCreatorPayload,\n  updateNumericFacetValues,\n  UpdateNumericFacetValuesActionCreatorPayload,\n} from './numeric-facet-actions';\n\nexport type {\n  RegisterNumericFacetActionCreatorPayload,\n  ToggleSelectNumericFacetValueActionCreatorPayload,\n  UpdateNumericFacetSortCriterionActionCreatorPayload,\n  UpdateNumericFacetValuesActionCreatorPayload,\n};\n\n/**\n * The numeric facet action creators.\n */\nexport interface NumericFacetSetActionCreators {\n  /**\n   * Deselects all values of a numeric facet.\n   *\n   * @param facetId - The unique identifier of the facet (e.g., \"1\").\n   * @returns A dispatchable action.\n   */\n  deselectAllNumericFacetValues(facetId: string): PayloadAction<string>;\n\n  /**\n   * Registers a numeric facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerNumericFacet(\n    payload: RegisterNumericFacetActionCreatorPayload\n  ): PayloadAction<RegisterNumericFacetActionCreatorPayload>;\n\n  /**\n   * Toggles a numeric facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectNumericFacetValue(\n    payload: ToggleSelectNumericFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectNumericFacetValueActionCreatorPayload>;\n\n  /**\n   * Toggles exclusion of a numeric facet value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeNumericFacetValue(\n    payload: ToggleSelectNumericFacetValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectNumericFacetValueActionCreatorPayload>;\n\n  /**\n   * Updates the sort criterion of a numeric facet.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateNumericFacetSortCriterion(\n    payload: UpdateNumericFacetSortCriterionActionCreatorPayload\n  ): PayloadAction<UpdateNumericFacetSortCriterionActionCreatorPayload>;\n\n  /**\n   * Updates numeric facet values.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateNumericFacetValues(\n    payload: UpdateNumericFacetValuesActionCreatorPayload\n  ): PayloadAction<UpdateNumericFacetValuesActionCreatorPayload>;\n}\n\n/**\n * Loads the `numericFacetSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadNumericFacetSetActions(\n  engine: CoreEngine\n): NumericFacetSetActionCreators {\n  engine.addReducers({numericFacetSet});\n\n  return {\n    deselectAllNumericFacetValues,\n    registerNumericFacet,\n    toggleSelectNumericFacetValue,\n    toggleExcludeNumericFacetValue,\n    updateNumericFacetSortCriterion,\n    updateNumericFacetValues,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkSearchOptions} from '../../api/search/search-api-client';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {foldingReducer as folding} from '../../features/folding/folding-slice';\nimport {\n  registerFolding,\n  RegisterFoldingActionCreatorPayload,\n  loadCollection,\n  LoadCollectionFulfilledReturn,\n  StateNeededByLoadCollection,\n} from './folding-actions';\n\nexport type {RegisterFoldingActionCreatorPayload};\n\n/**\n * The folding action creators.\n */\nexport interface FoldingActionCreators {\n  /**\n   * Registers a folding configuration.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerFolding(\n    payload: RegisterFoldingActionCreatorPayload\n  ): PayloadAction<RegisterFoldingActionCreatorPayload>;\n\n  /**\n   * Loads the results of a collection.\n   *\n   * @param collectionId - The collection id to load results for.\n   * @returns A dispatchable action.\n   */\n  loadCollection(\n    collectionId: string\n  ): AsyncThunkAction<\n    LoadCollectionFulfilledReturn,\n    string,\n    AsyncThunkSearchOptions<StateNeededByLoadCollection>\n  >;\n}\n\n/**\n * Loads the `folding` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadFoldingActions(\n  engine: SearchEngine\n): FoldingActionCreators {\n  engine.addReducers({folding});\n\n  return {\n    registerFolding,\n    loadCollection,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../..';\nimport {paginationReducer as pagination} from '../../features/pagination/pagination-slice';\nimport {\n  nextPage,\n  previousPage,\n  registerNumberOfResults,\n  registerPage,\n  updateNumberOfResults,\n  updatePage,\n} from './pagination-actions';\n\n/**\n * The pagination action creators.\n */\nexport interface PaginationActionCreators {\n  /**\n   * Updates the page to the next page.\n   *\n   * @returns A dispatchable action.\n   */\n  nextPage(): PayloadAction;\n\n  /**\n   * Updates the page to the previous page.\n   *\n   * @returns A dispatchable action.\n   */\n  previousPage(): PayloadAction;\n\n  /**\n   * Initializes the `numberOfResults` query parameter. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/cloud-v2-developers/query-parameters#RestQueryParameters-numberOfResults).\n   *\n   * @param numberOfResults - The initial number of results.\n   * @returns A dispatchable action.\n   */\n  registerNumberOfResults(numberOfResults: number): PayloadAction<number>;\n\n  /**\n   * Sets the initial page by initializing the `firstResult` query parameter. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/cloud-v2-developers/query-parameters#RestQueryParameters-firstResult).\n   *\n   * @param page - The initial page number.\n   * @returns A dispatchable action.\n   */\n  registerPage(page: number): PayloadAction<number>;\n\n  /**\n   * Updates the `numberOfResults` query parameter. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/cloud-v2-developers/query-parameters#RestQueryParameters-numberOfResults).\n   *\n   * @param numberOfResults - The new number of results.\n   * @returns A dispatchable action.\n   */\n  updateNumberOfResults(numberOfResults: number): PayloadAction<number>;\n\n  /**\n   * Updates the page by updating the `firstResult` query parameter. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/cloud-v2-developers/query-parameters#RestQueryParameters-firstResult).\n   *\n   * @param page - The new page number.\n   * @returns A dispatchable action.\n   */\n  updatePage(page: number): PayloadAction<number>;\n}\n\n/**\n * Loads the `pagination` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadPaginationActions(\n  engine: CoreEngine\n): PaginationActionCreators {\n  engine.addReducers({pagination});\n\n  return {\n    nextPage,\n    previousPage,\n    registerNumberOfResults,\n    registerPage,\n    updateNumberOfResults,\n    updatePage,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../app/engine';\nimport {pipelineReducer as pipeline} from '../../features/pipeline/pipeline-slice';\nimport {setPipeline} from './pipeline-actions';\n\n/**\n * The pipeline action creators.\n */\nexport interface PipelineActionCreators {\n  /**\n   * Sets the query pipeline.\n   *\n   * @param pipeline - The query pipeline to set (may be empty).\n   * @returns A dispatchable action.\n   */\n  setPipeline(pipeline: string): PayloadAction<string>;\n}\n\n/**\n * Loads the `pipeline` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadPipelineActions(\n  engine: CoreEngine\n): PipelineActionCreators {\n  engine.addReducers({pipeline});\n\n  return {\n    setPipeline,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {queryReducer as query} from '../../features/query/query-slice';\nimport {updateQuery, UpdateQueryActionCreatorPayload} from './query-actions';\n\nexport type {UpdateQueryActionCreatorPayload};\n\n/**\n * The query action creators.\n */\nexport interface QueryActionCreators {\n  /**\n   * Updates the basic query expression.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateQuery(\n    payload: UpdateQueryActionCreatorPayload\n  ): PayloadAction<UpdateQueryActionCreatorPayload>;\n}\n\n/**\n * Loads the `query` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadQueryActions(engine: SearchEngine): QueryActionCreators {\n  engine.addReducers({query});\n\n  return {\n    updateQuery,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {querySetReducer as querySet} from '../../features/query-set/query-set-slice';\nimport {\n  registerQuerySetQuery,\n  RegisterQuerySetQueryActionCreatorPayload,\n  updateQuerySetQuery,\n  UpdateQuerySetQueryActionCreatorPayload,\n} from './query-set-actions';\n\nexport type {\n  RegisterQuerySetQueryActionCreatorPayload,\n  UpdateQuerySetQueryActionCreatorPayload,\n};\n\n/**\n * The query set action creators.\n */\nexport interface QuerySetActionCreators {\n  /**\n   * Registers a query in the query set.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerQuerySetQuery(\n    payload: RegisterQuerySetQueryActionCreatorPayload\n  ): PayloadAction<RegisterQuerySetQueryActionCreatorPayload>;\n\n  /**\n   * Updates a query in the query set.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateQuerySetQuery(\n    payload: UpdateQuerySetQueryActionCreatorPayload\n  ): PayloadAction<UpdateQuerySetQueryActionCreatorPayload>;\n}\n\n/**\n * Loads the `querySet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadQuerySetActions(\n  engine: SearchEngine\n): QuerySetActionCreators {\n  engine.addReducers({querySet});\n\n  return {\n    registerQuerySetQuery,\n    updateQuerySetQuery,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {instantResultsReducer as instantResults} from '../../features/instant-results/instant-results-slice';\nimport {\n  UpdateInstantResultQueryActionCreatorPayload,\n  RegisterInstantResultActionCreatorPayload,\n  clearExpiredResults,\n  ClearExpiredInstantResultsActionCreatorPayload,\n  FetchInstantResultsActionCreatorPayload,\n} from './instant-results-actions';\nimport {\n  registerInstantResults,\n  updateInstantResultsQuery,\n} from './instant-results-actions';\n\nexport type {\n  UpdateInstantResultQueryActionCreatorPayload,\n  RegisterInstantResultActionCreatorPayload,\n  ClearExpiredInstantResultsActionCreatorPayload,\n  FetchInstantResultsActionCreatorPayload,\n};\n\nexport interface InstantResultsActionCreators {\n  /**\n   * Initializes the `instantResults` state for a search box ID.\n   *\n   * @param payload - The initial state and options.\n   * @returns A dispatchable action.\n   */\n  registerInstantResults(\n    payload: RegisterInstantResultActionCreatorPayload\n  ): PayloadAction<RegisterInstantResultActionCreatorPayload>;\n\n  /**\n   * Updates the query expression to request instant results for the specified search box ID.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateInstantResultsQuery(\n    payload: UpdateInstantResultQueryActionCreatorPayload\n  ): PayloadAction<UpdateInstantResultQueryActionCreatorPayload>;\n\n  /**\n   * Updates the query expression to request instant results for the specified search box ID.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  clearExpiredResults(\n    payload: ClearExpiredInstantResultsActionCreatorPayload\n  ): PayloadAction<RegisterInstantResultActionCreatorPayload>;\n}\n\n/**\n * Loads the `instantResults` reducer and returns possible action creators.\n *\n * @param engine - The Headless engine.\n * @returns An object with the action creators.\n */\nexport function loadInstantResultsActions(\n  engine: SearchEngine\n): InstantResultsActionCreators {\n  engine.addReducers({instantResults: instantResults});\n\n  return {\n    registerInstantResults: registerInstantResults,\n    updateInstantResultsQuery: updateInstantResultsQuery,\n    clearExpiredResults: clearExpiredResults,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkSearchOptions} from '../../api/search/search-api-client';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {querySetReducer as querySet} from '../../features/query-set/query-set-slice';\nimport {querySuggestReducer as querySuggest} from '../../features/query-suggest/query-suggest-slice';\nimport {\n  clearQuerySuggest,\n  ClearQuerySuggestActionCreatorPayload,\n  fetchQuerySuggestions,\n  FetchQuerySuggestionsActionCreatorPayload,\n  FetchQuerySuggestionsThunkReturn,\n  registerQuerySuggest,\n  RegisterQuerySuggestActionCreatorPayload,\n  selectQuerySuggestion,\n  SelectQuerySuggestionActionCreatorPayload,\n  StateNeededByQuerySuggest,\n} from './query-suggest-actions';\n\nexport type {\n  ClearQuerySuggestActionCreatorPayload,\n  FetchQuerySuggestionsActionCreatorPayload,\n  RegisterQuerySuggestActionCreatorPayload,\n  SelectQuerySuggestionActionCreatorPayload,\n};\n\n/**\n * The query suggest action creators.\n */\nexport interface QuerySuggestActionCreators {\n  /**\n   * Clears the current partial basic query expression and the list of query suggestions in a specific query suggest entity.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  clearQuerySuggest(\n    payload: ClearQuerySuggestActionCreatorPayload\n  ): PayloadAction<ClearQuerySuggestActionCreatorPayload>;\n\n  /**\n   * Fetches a list of query suggestions for a specific query suggest entity according to the current headless state.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  fetchQuerySuggestions(\n    payload: FetchQuerySuggestionsActionCreatorPayload\n  ): AsyncThunkAction<\n    FetchQuerySuggestionsThunkReturn,\n    FetchQuerySuggestionsActionCreatorPayload,\n    AsyncThunkSearchOptions<StateNeededByQuerySuggest>\n  >;\n\n  /**\n   * Registers a new query suggest entity to the headless state to enable the Coveo ML query suggestions feature.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerQuerySuggest(\n    payload: RegisterQuerySuggestActionCreatorPayload\n  ): PayloadAction<RegisterQuerySuggestActionCreatorPayload>;\n\n  /**\n   * Selects a suggestion provided through a specific query suggest entity.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  selectQuerySuggestion(\n    payload: SelectQuerySuggestionActionCreatorPayload\n  ): PayloadAction<SelectQuerySuggestionActionCreatorPayload>;\n}\n\n/**\n * Loads the `querySuggest` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadQuerySuggestActions(\n  engine: SearchEngine\n): QuerySuggestActionCreators {\n  engine.addReducers({querySuggest, querySet});\n\n  return {\n    clearQuerySuggest,\n    fetchQuerySuggestions,\n    registerQuerySuggest,\n    selectQuerySuggestion,\n  };\n}\n", "import {AsyncThunkAction} from '@reduxjs/toolkit';\nimport {\n  AsyncThunkSearchOptions,\n  SearchAPIClient,\n} from '../../api/search/search-api-client';\nimport {AsyncThunkOptions} from '../../app/async-thunk-options';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {ClientThunkExtraArguments} from '../../app/thunk-extra-arguments';\nimport {searchReducer as search} from '../../features/search/search-slice';\nimport {InstantResultSection} from '../../state/state-sections';\nimport {SearchAction} from '../analytics/analytics-utils';\nimport {\n  FetchInstantResultsActionCreatorPayload,\n  FetchInstantResultsThunkReturn,\n} from '../instant-results/instant-results-actions';\nimport {\n  executeSearch,\n  ExecuteSearchThunkReturn,\n  fetchMoreResults,\n  StateNeededByExecuteSearch,\n  fetchFacetValues,\n  fetchPage,\n  fetchInstantResults,\n} from './legacy/search-actions';\n\n/**\n * The search action creators.\n */\nexport interface SearchActionCreators {\n  /**\n   * Creates an action that executes a search query.\n   *\n   * @example\n   *\n   * ```js\n   * const {logInterfaceLoad} = loadSearchAnalyticsActions(engine);\n   * const {executeSearch} = loadSearchActions(engine);\n   *\n   * engine.dispatch(executeSearch({legacy: interfaceLoad()}))\n   * ```\n   *\n   * @param analyticsSearchAction - The analytics action to log after a successful query. See `loadSearchAnalyticsActions` for possible values.\n   * @returns A dispatchable action.\n   */\n  executeSearch(\n    analyticsSearchAction: SearchAction\n  ): AsyncThunkAction<\n    ExecuteSearchThunkReturn,\n    SearchAction,\n    AsyncThunkOptions<\n      StateNeededByExecuteSearch,\n      ClientThunkExtraArguments<SearchAPIClient>\n    >\n  >;\n\n  /**\n   * Creates an action that fetches more results.\n   *\n   * @returns A dispatchable action.\n   */\n  fetchMoreResults(): AsyncThunkAction<\n    ExecuteSearchThunkReturn,\n    void,\n    AsyncThunkOptions<\n      StateNeededByExecuteSearch,\n      ClientThunkExtraArguments<SearchAPIClient>\n    >\n  >;\n\n  /**\n   * Creates an action that only fetches facet values without affecting the rest of the state.\n   *\n   * @param analyticsSearchAction - The analytics action to log after a successful query. See `loadSearchAnalyticsActions` for possible values.\n   * @returns A dispatchable action.\n   */\n  fetchFacetValues(\n    analyticsSearchAction: SearchAction\n  ): AsyncThunkAction<\n    ExecuteSearchThunkReturn,\n    SearchAction,\n    AsyncThunkOptions<\n      StateNeededByExecuteSearch,\n      ClientThunkExtraArguments<SearchAPIClient>\n    >\n  >;\n\n  /**\n   * Creates an action that executes a search query to fetch a new page of results.\n   *\n   * @example\n   *\n   * ```js\n   * const {logPagerNext} = loadSearchAnalyticsActions(engine);\n   * const {fetchPage} = loadSearchActions(engine);\n   *\n   * engine.dispatch(fetchPage(logPagerNext()));\n   * ```\n   *\n   * @param analyticsSearchAction - The analytics action to log after a successful query. See `loadSearchAnalyticsActions` for possible values.\n   * @returns A dispatchable action.\n   */\n  fetchPage(\n    analyticsSearchAction: SearchAction\n  ): AsyncThunkAction<\n    ExecuteSearchThunkReturn,\n    SearchAction,\n    AsyncThunkOptions<\n      StateNeededByExecuteSearch,\n      ClientThunkExtraArguments<SearchAPIClient>\n    >\n  >;\n\n  /**\n   * Creates an action that fetches instant results.\n   *\n   * @param options - The options for fetching instant results.\n   * @returns A dispatchable action.\n   */\n  fetchInstantResults(\n    options: FetchInstantResultsActionCreatorPayload\n  ): AsyncThunkAction<\n    FetchInstantResultsThunkReturn,\n    FetchInstantResultsActionCreatorPayload,\n    AsyncThunkSearchOptions<StateNeededByExecuteSearch & InstantResultSection>\n  >;\n}\n\n/**\n * Loads the `search` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadSearchActions(engine: SearchEngine): SearchActionCreators {\n  engine.addReducers({search});\n  return {\n    executeSearch,\n    fetchMoreResults,\n    fetchFacetValues,\n    fetchPage,\n    fetchInstantResults,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../../app/engine';\nimport {searchHubReducer as searchHub} from '../../features/search-hub/search-hub-slice';\nimport {setSearchHub} from './search-hub-actions';\n\n/**\n * The search hub action creators.\n */\nexport interface SearchHubActionCreators {\n  /**\n   * Sets the search hub.\n   *\n   * @param searchHub - The new search hub (may be empty).\n   * @returns A dispatchable action.\n   */\n  setSearchHub(searchHub: string): PayloadAction<string>;\n}\n\n/**\n * Loads the `searchHub` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadSearchHubActions(\n  engine: CoreEngine\n): SearchHubActionCreators {\n  engine.addReducers({searchHub});\n\n  return {setSearchHub};\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {sortCriteriaReducer as sortCriteria} from '../../features/sort-criteria/sort-criteria-slice';\nimport {SortCriterion} from './criteria';\nimport {\n  registerSortCriterion,\n  updateSortCriterion,\n} from './sort-criteria-actions';\n\n/**\n * The sort criteria action creators.\n */\nexport interface SortCriteriaActionCreators {\n  /**\n   * Initializes the sortCriteria query parameter. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/cloud-v2-developers/query-parameters#RestQueryParameters-sortCriteria).\n   *\n   * @param criterion - The initial sort criterion.\n   * @returns A dispatchable action.\n   */\n  registerSortCriterion(\n    criterion: SortCriterion | SortCriterion[]\n  ): PayloadAction<SortCriterion | SortCriterion[]>;\n\n  /**\n   * Updates the sortCriteria query parameter. For more information, refer to [the documentation on query parameters](https://docs.coveo.com/en/1461/cloud-v2-developers/query-parameters#RestQueryParameters-sortCriteria).\n   *\n   * @param criterion - The sort criterion to set.\n   * @returns A dispatchable action.\n   */\n  updateSortCriterion(\n    criterion: SortCriterion | SortCriterion[]\n  ): PayloadAction<SortCriterion | SortCriterion[]>;\n}\n\n/**\n * Loads the `sortCriteria` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadSortCriteriaActions(\n  engine: SearchEngine\n): SortCriteriaActionCreators {\n  engine.addReducers({sortCriteria});\n\n  return {\n    registerSortCriterion,\n    updateSortCriterion,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {AsyncThunkSearchOptions} from '../../api/search/search-api-client';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {standaloneSearchBoxSetReducer as standaloneSearchBoxSet} from '../../features/standalone-search-box-set/standalone-search-box-set-slice';\nimport {\n  registerStandaloneSearchBox,\n  RegisterStandaloneSearchBoxActionCreatorPayload,\n  fetchRedirectUrl,\n  FetchRedirectUrlActionCreatorPayload,\n  updateAnalyticsToSearchFromLink,\n  UpdateAnalyticsToSearchFromLinkActionCreatorPayload,\n  updateAnalyticsToOmniboxFromLink,\n  UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload,\n  StateNeededForRedirect,\n  resetStandaloneSearchBox,\n  ResetStandaloneSearchBoxActionCreatorPayload,\n} from './standalone-search-box-set-actions';\n\nexport type {\n  RegisterStandaloneSearchBoxActionCreatorPayload,\n  ResetStandaloneSearchBoxActionCreatorPayload,\n  FetchRedirectUrlActionCreatorPayload,\n  UpdateAnalyticsToSearchFromLinkActionCreatorPayload,\n  UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload,\n};\n\n/**\n * The standalone search box set action creators.\n */\nexport interface StandaloneSearchBoxSetActionCreators {\n  /**\n   * Registers a standalone search box.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerStandaloneSearchBox(\n    payload: RegisterStandaloneSearchBoxActionCreatorPayload\n  ): PayloadAction<RegisterStandaloneSearchBoxActionCreatorPayload>;\n\n  /**\n   * Resets the standalone search box state. To be dispatched on single page applications after the redirection has been triggered.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  resetStandaloneSearchBox(\n    payload: ResetStandaloneSearchBoxActionCreatorPayload\n  ): PayloadAction<ResetStandaloneSearchBoxActionCreatorPayload>;\n\n  /**\n   * Preprocesses the query for the current headless state, and retrieves a redirection URL if a redirect trigger was fired in the query pipeline.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  fetchRedirectUrl(\n    payload: FetchRedirectUrlActionCreatorPayload\n  ): AsyncThunkAction<\n    string,\n    FetchRedirectUrlActionCreatorPayload,\n    AsyncThunkSearchOptions<StateNeededForRedirect>\n  >;\n\n  /**\n   * Updates the standalone search box analytics data to reflect a search submitted using the search box.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateAnalyticsToSearchFromLink(\n    payload: UpdateAnalyticsToSearchFromLinkActionCreatorPayload\n  ): PayloadAction<UpdateAnalyticsToSearchFromLinkActionCreatorPayload>;\n\n  /**\n   * Updates the standalone search box analytics data to reflect a search submitted by selecting a query suggestion.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  updateAnalyticsToOmniboxFromLink(\n    payload: UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload\n  ): PayloadAction<UpdateAnalyticsToOmniboxFromLinkActionCreatorPayload>;\n}\n\n/**\n * Loads the `standaloneSearchBoxSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadStandaloneSearchBoxSetActions(\n  engine: SearchEngine\n): StandaloneSearchBoxSetActionCreators {\n  engine.addReducers({standaloneSearchBoxSet});\n\n  return {\n    registerStandaloneSearchBox,\n    fetchRedirectUrl,\n    updateAnalyticsToSearchFromLink,\n    updateAnalyticsToOmniboxFromLink,\n    resetStandaloneSearchBox,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../..';\nimport {staticFilterSetReducer as staticFilterSet} from '../../features/static-filter-set/static-filter-set-slice';\nimport {\n  registerStaticFilter,\n  RegisterStaticFilterActionCreatorPayload,\n  toggleSelectStaticFilterValue,\n  ToggleSelectStaticFilterValueActionCreatorPayload,\n  deselectAllStaticFilterValues,\n  toggleExcludeStaticFilterValue,\n} from './static-filter-set-actions';\n\nexport type {\n  RegisterStaticFilterActionCreatorPayload,\n  ToggleSelectStaticFilterValueActionCreatorPayload,\n};\n\n/**\n * The static filter set action creators.\n */\nexport interface StaticFilterSetActionCreators {\n  /**\n   * Registers a static filter.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerStaticFilter(\n    payload: RegisterStaticFilterActionCreatorPayload\n  ): PayloadAction<RegisterStaticFilterActionCreatorPayload>;\n\n  /**\n   * Toggles a static filter value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleSelectStaticFilterValue(\n    payload: ToggleSelectStaticFilterValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectStaticFilterValueActionCreatorPayload>;\n\n  /**\n   * Excludes a static filter value.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  toggleExcludeStaticFilterValue(\n    payload: ToggleSelectStaticFilterValueActionCreatorPayload\n  ): PayloadAction<ToggleSelectStaticFilterValueActionCreatorPayload>;\n\n  /**\n   * Deselects all values of a filter.\n   *\n   * @param id - The unique identifier of the static filter (e.g., `\"abc\"`).\n   * @returns A dispatchable action.\n   */\n  deselectAllStaticFilterValues(id: string): PayloadAction<string>;\n}\n\n/**\n * Loads the `staticFilterSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadStaticFilterSetActions(\n  engine: SearchEngine\n): StaticFilterSetActionCreators {\n  engine.addReducers({staticFilterSet});\n\n  return {\n    registerStaticFilter,\n    toggleSelectStaticFilterValue,\n    toggleExcludeStaticFilterValue,\n    deselectAllStaticFilterValues,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../..';\nimport {tabSetReducer as tabSet} from '../../features/tab-set/tab-set-slice';\nimport {\n  registerTab,\n  RegisterTabActionCreatorPayload,\n  updateActiveTab,\n} from './tab-set-actions';\n\nexport type {RegisterTabActionCreatorPayload};\n\n/**\n * The tab set action creators.\n */\nexport interface TabSetActionCreators {\n  /**\n   * Registers a tab.\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  registerTab(\n    payload: RegisterTabActionCreatorPayload\n  ): PayloadAction<RegisterTabActionCreatorPayload>;\n  /**\n   * Updates the active tab, deselecting other tabs.\n   * @param id - The unique identifier of the target tab (e.g., `\"abc\"`).\n   * @returns A dispatchable action.\n   */\n  updateActiveTab(id: string): PayloadAction<string>;\n}\n\n/**\n * Loads the `tabSet` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadTabSetActions(engine: SearchEngine): TabSetActionCreators {\n  engine.addReducers({tabSet});\n  return {\n    registerTab,\n    updateActiveTab,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {questionAnsweringReducer as questionAnswering} from '../../features/question-answering/question-answering-slice';\nimport {\n  collapseSmartSnippet,\n  dislikeSmartSnippet,\n  likeSmartSnippet,\n  expandSmartSnippet,\n  openFeedbackModal,\n  closeFeedbackModal,\n  collapseSmartSnippetRelatedQuestion,\n  expandSmartSnippetRelatedQuestion,\n} from './question-answering-actions';\nimport {QuestionAnsweringUniqueIdentifierActionCreatorPayload} from './question-answering-document-id';\n\n/**\n * The question answering action creators.\n */\nexport interface QuestionAnsweringActionCreators {\n  /**\n   * Collapses a smart snippet.\n   *\n   * @returns A dispatchable action.\n   */\n  collapseSmartSnippet(): PayloadAction;\n  /**\n   * Expands a smart snippet.\n   *\n   * @returns A dispatchable action.\n   */\n  expandSmartSnippet(): PayloadAction;\n  /**\n   * Dislikes a smart snippet (a 'thumbs down' reaction).\n   *\n   * @returns A dispatchable action.\n   */\n  dislikeSmartSnippet(): PayloadAction;\n  /**\n   * Likes a smart snippet (a 'thumbs up' reaction).\n   *\n   * @returns A dispatchable action.\n   */\n  likeSmartSnippet(): PayloadAction;\n  /**\n   * Opens the feedback modal of a smart snippet.\n   *\n   * @returns A dispatchable action.\n   */\n  openFeedbackModal(): PayloadAction;\n  /**\n   * Closes the feedback modal of a smart snippet.\n   *\n   * @returns A dispatchable action.\n   */\n  closeFeedbackModal(): PayloadAction;\n  /**\n   * Expands the specified snippet suggestion.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  expandSmartSnippetRelatedQuestion(\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ): PayloadAction<QuestionAnsweringUniqueIdentifierActionCreatorPayload>;\n  /**\n   * Collapses the specified snippet suggestion.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  collapseSmartSnippetRelatedQuestion(\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ): PayloadAction<QuestionAnsweringUniqueIdentifierActionCreatorPayload>;\n}\n\n/**\n * Loads the `questionAnswering` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadQuestionAnsweringActions(\n  engine: SearchEngine\n): QuestionAnsweringActionCreators {\n  engine.addReducers({questionAnswering});\n\n  return {\n    collapseSmartSnippet,\n    expandSmartSnippet,\n    dislikeSmartSnippet,\n    likeSmartSnippet,\n    openFeedbackModal,\n    closeFeedbackModal,\n    expandSmartSnippetRelatedQuestion,\n    collapseSmartSnippetRelatedQuestion,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  deselectAllBreadcrumbs,\n  deselectAllNonBreadcrumbs,\n} from './breadcrumb-actions';\n\n/**\n * The breadcrumb action creators.\n */\nexport interface BreadcrumbActionCreators {\n  /**\n   * Deselects active breadcrumb values across all facets and static filters.\n   *\n   * @returns A dispatchable action.\n   */\n  deselectAllBreadcrumbs(): PayloadAction;\n\n  /**\n   * Deselects active filters that are not listed in breadcrumbs across facets and static filters which have the option `hasBreadcrumbs` set to false.\n   *\n   * @returns A dispatchable action.\n   */\n  deselectAllNonBreadcrumbs(): PayloadAction;\n}\n\n/**\n * Returns breadcrumb action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadBreadcrumbActions(\n  engine: SearchEngine\n): BreadcrumbActionCreators {\n  engine.addReducers({});\n\n  return {\n    deselectAllBreadcrumbs,\n    deselectAllNonBreadcrumbs,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {recentQueriesReducer as recentQueries} from '../../features/recent-queries/recent-queries-slice';\nimport {\n  RegisterRecentQueriesCreatorPayload,\n  registerRecentQueries,\n  clearRecentQueries,\n} from './recent-queries-actions';\n\n/**\n * The RecentQueries action creators.\n */\nexport interface RecentQueriesActionCreators {\n  /**\n   * Initializes the `recentQueries` state.\n   * @param payload (RegisterRecentQueriesCreatorPayload) The initial state and options.\n   * @returns A dispatchable action.\n   */\n  registerRecentQueries(\n    payload: RegisterRecentQueriesCreatorPayload\n  ): PayloadAction<RegisterRecentQueriesCreatorPayload>;\n\n  /**\n   * Clears the recent queries list.\n   * @returns A dispatchable action.\n   */\n  clearRecentQueries(): PayloadAction;\n}\n\n/**\n * Loads the `recentQueries` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadRecentQueriesActions(\n  engine: SearchEngine\n): RecentQueriesActionCreators {\n  engine.addReducers({recentQueries});\n\n  return {\n    registerRecentQueries,\n    clearRecentQueries,\n  };\n}\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {Result} from '../../api/search/search/result';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {recentResultsReducer as recentResults} from '../../features/recent-results/recent-results-slice';\nimport {\n  RegisterRecentResultsCreatorPayload,\n  registerRecentResults,\n  clearRecentResults,\n  pushRecentResult,\n} from './recent-results-actions';\n\nexport type {RegisterRecentResultsCreatorPayload};\n/**\n * The RecentResults action creators\n */\nexport interface RecentResultsActionCreators {\n  /**\n   * Initialize the `recentResults` state.\n   * @param payload (RegisterRecentResultsCreatorPayload) The initial state and options.\n   * @returns A dispatchable action.\n   */\n  registerRecentResults(\n    payload: RegisterRecentResultsCreatorPayload\n  ): PayloadAction<RegisterRecentResultsCreatorPayload>;\n\n  /**\n   * Clear the recent results list.\n   * @returns A dispatchable action.\n   */\n  clearRecentResults(): PayloadAction;\n\n  /**\n   * Add the recent result to the list.\n   * @param payload (Result) The result to add.\n   * @returns A dispatchable action.\n   */\n  pushRecentResult(payload: Result): PayloadAction<Result>;\n}\n\n/**\n * Loads the `recentresults` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadRecentResultsActions(\n  engine: SearchEngine\n): RecentResultsActionCreators {\n  engine.addReducers({recentResults});\n\n  return {\n    registerRecentResults,\n    clearRecentResults,\n    pushRecentResult,\n  };\n}\n", "import {NumberValue} from '@coveo/bueno';\nimport {createAction} from '@reduxjs/toolkit';\nimport {validatePayload} from '../../utils/validate-payload';\n\nexport const setExcerptLength = createAction(\n  'excerptLength/set',\n  (length: number) =>\n    validatePayload(length, new NumberValue({min: 0, required: true}))\n);\n", "export interface ExcerptLengthState {\n  length?: number;\n}\n\nexport function getExcerptLengthInitialState(): ExcerptLengthState {\n  return {\n    length: undefined,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {setExcerptLength} from './excerpt-length-actions';\nimport {getExcerptLengthInitialState} from './excerpt-length-state';\n\nexport const excerptLengthReducer = createReducer(\n  getExcerptLengthInitialState(),\n  (builder) => {\n    builder.addCase(setExcerptLength, (state, action) => {\n      state.length = action.payload;\n    });\n  }\n);\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {excerptLengthReducer as excerptLength} from '../../features/excerpt-length/excerpt-length-slice';\nimport {setExcerptLength} from './excerpt-length-actions';\n\n/**\n * The excerpt length action creators.\n */\nexport interface ExcerptLengthActionCreators {\n  /**\n   * Set the length (in number of characters) of the excerpts generated by the indexer based on the keywords present in the query.\n   * The index includes the top most interesting sentences (in the order they appear in the item) that fit in the specified number of characters.\n   *\n   * @param length - The length of the excerpt\n   * @returns A dispatchable action.\n   */\n  setExcerptLength(length: number): PayloadAction<number>;\n}\n\n/**\n * Loads the `excerpt length` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadExcerptLengthActions(\n  engine: SearchEngine\n): ExcerptLengthActionCreators {\n  engine.addReducers({excerptLength});\n\n  return {\n    setExcerptLength,\n  };\n}\n", "import {AsyncThunkAction, PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../..';\nimport {HtmlRequestOptions} from '../../api/search/html/html-request';\nimport {resultPreviewReducer as resultPreview} from '../../features/result-preview/result-preview-slice';\nimport {\n  AsyncThunkGlobalOptions,\n  fetchResultContent,\n  FetchResultContentThunkReturn,\n  UpdateContentURLThunkReturn,\n  nextPreview,\n  preparePreviewPagination,\n  previousPreview,\n  updateContentURL,\n  UpdateContentURLOptions,\n  PreparePreviewPaginationActionPayload,\n} from './result-preview-actions';\nimport {StateNeededByHtmlEndpoint} from './result-preview-request-builder';\n\n/**\n * The result preview action creators.\n */\nexport interface ResultPreviewActionCreators {\n  /**\n   * Fetch the content of a preview\n   * @param opts\n   * @returns A dispatchable action.\n   */\n  fetchResultContent(\n    opts: HtmlRequestOptions\n  ): AsyncThunkAction<\n    FetchResultContentThunkReturn,\n    HtmlRequestOptions,\n    AsyncThunkGlobalOptions<StateNeededByHtmlEndpoint>\n  >;\n\n  /**\n   * Compute and update the content URL for the result preview\n   * @param opts\n   * @returns A dispatchable action.\n   */\n  updateContentURL(\n    opts: UpdateContentURLOptions\n  ): AsyncThunkAction<\n    UpdateContentURLThunkReturn,\n    UpdateContentURLOptions,\n    AsyncThunkGlobalOptions<StateNeededByHtmlEndpoint>\n  >;\n\n  /**\n   * Update the position of the current result preview for pagination purposes.\n   * @returns A dispatchable action.\n   */\n  nextPreview(): PayloadAction;\n\n  /**\n   * Update the position of the current result preview for pagination purposes.\n   * @returns A dispatchable action.\n   */\n  previousPreview(): PayloadAction;\n\n  preparePreviewPagination(\n    payload: PreparePreviewPaginationActionPayload\n  ): PayloadAction<PreparePreviewPaginationActionPayload>;\n}\n\n/**\n * Loads the `recommendation` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadResultPreviewActions(\n  engine: CoreEngine\n): ResultPreviewActionCreators {\n  engine.addReducers({resultPreview});\n\n  return {\n    fetchResultContent,\n    updateContentURL,\n    nextPreview,\n    previousPreview,\n    preparePreviewPagination,\n  };\n}\n", "import {SearchAppState} from '../../state/search-app-state';\nimport {GeneratedAnswerSection} from '../../state/state-sections';\n\nexport function citationSourceSelector(\n  state: Partial<GeneratedAnswerSection>,\n  citationId: string\n) {\n  return state.generatedAnswer?.citations?.find(\n    (citation) => citation.id === citationId\n  );\n}\n\nexport function generativeQuestionAnsweringIdSelector(\n  state: Partial<SearchAppState>\n) {\n  return state.search?.response?.extendedResults?.generativeQuestionAnsweringId;\n}\n", "import {\n  CustomAction,\n  SearchAction,\n  makeAnalyticsAction,\n} from '../analytics/analytics-utils';\nimport {\n  citationSourceSelector,\n  generativeQuestionAnsweringIdSelector,\n} from './generated-answer-selectors';\nimport {GeneratedResponseFormat} from './generated-response-format';\n\nexport type GeneratedAnswerFeedback =\n  | 'irrelevant'\n  | 'notAccurate'\n  | 'outOfDate'\n  | 'harmful';\n\nexport const logRetryGeneratedAnswer = (): SearchAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/retry', (client) =>\n    client.makeRetryGeneratedAnswer()\n  );\n\nexport const logRephraseGeneratedAnswer = (\n  responseFormat: GeneratedResponseFormat\n): SearchAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/rephrase', (client, state) => {\n    const generativeQuestionAnsweringId =\n      generativeQuestionAnsweringIdSelector(state);\n    if (!generativeQuestionAnsweringId) {\n      return null;\n    }\n    return client.makeRephraseGeneratedAnswer({\n      generativeQuestionAnsweringId,\n      rephraseFormat: responseFormat.answerStyle,\n    });\n  });\n\nexport const logOpenGeneratedAnswerSource = (\n  citationId: string\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/generatedAnswer/openAnswerSource',\n    (client, state) => {\n      const generativeQuestionAnsweringId =\n        generativeQuestionAnsweringIdSelector(state);\n      const citation = citationSourceSelector(state, citationId);\n      if (!generativeQuestionAnsweringId || !citation) {\n        return null;\n      }\n      return client.makeOpenGeneratedAnswerSource({\n        generativeQuestionAnsweringId,\n        permanentId: citation.permanentid,\n        citationId: citation.id,\n      });\n    }\n  );\n\nexport const logHoverCitation = (\n  citationId: string,\n  citationHoverTimeMs: number\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/generatedAnswer/hoverCitation',\n    (client, state) => {\n      const generativeQuestionAnsweringId =\n        generativeQuestionAnsweringIdSelector(state);\n      const citation = citationSourceSelector(state, citationId);\n      if (!generativeQuestionAnsweringId || !citation) {\n        return null;\n      }\n      return client.makeGeneratedAnswerSourceHover({\n        generativeQuestionAnsweringId,\n        permanentId: citation.permanentid,\n        citationId: citation.id,\n        citationHoverTimeMs,\n      });\n    }\n  );\n\nexport const logLikeGeneratedAnswer = (): CustomAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/like', (client, state) => {\n    const generativeQuestionAnsweringId =\n      generativeQuestionAnsweringIdSelector(state);\n    if (!generativeQuestionAnsweringId) {\n      return null;\n    }\n    return client.makeLikeGeneratedAnswer({\n      generativeQuestionAnsweringId,\n    });\n  });\n\nexport const logDislikeGeneratedAnswer = (): CustomAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/dislike', (client, state) => {\n    const generativeQuestionAnsweringId =\n      generativeQuestionAnsweringIdSelector(state);\n    if (!generativeQuestionAnsweringId) {\n      return null;\n    }\n    return client.makeDislikeGeneratedAnswer({\n      generativeQuestionAnsweringId,\n    });\n  });\n\nexport const logGeneratedAnswerFeedback = (\n  feedback: GeneratedAnswerFeedback\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/generatedAnswer/sendFeedback',\n    (client, state) => {\n      const generativeQuestionAnsweringId =\n        generativeQuestionAnsweringIdSelector(state);\n      if (!generativeQuestionAnsweringId) {\n        return null;\n      }\n      return client.makeGeneratedAnswerFeedbackSubmit({\n        generativeQuestionAnsweringId,\n        reason: feedback,\n      });\n    }\n  );\n\nexport const logGeneratedAnswerDetailedFeedback = (\n  details: string\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/generatedAnswer/sendFeedback',\n    (client, state) => {\n      const generativeQuestionAnsweringId =\n        generativeQuestionAnsweringIdSelector(state);\n      if (!generativeQuestionAnsweringId) {\n        return null;\n      }\n      return client.makeGeneratedAnswerFeedbackSubmit({\n        generativeQuestionAnsweringId,\n        reason: 'other',\n        details,\n      });\n    }\n  );\n\nexport const logGeneratedAnswerStreamEnd = (\n  answerGenerated: boolean\n): CustomAction =>\n  makeAnalyticsAction(\n    'analytics/generatedAnswer/streamEnd',\n    (client, state) => {\n      const generativeQuestionAnsweringId =\n        generativeQuestionAnsweringIdSelector(state);\n      if (!generativeQuestionAnsweringId) {\n        return null;\n      }\n      return client.makeGeneratedAnswerStreamEnd({\n        generativeQuestionAnsweringId,\n        answerGenerated,\n      });\n    }\n  );\n\nexport const logGeneratedAnswerShowAnswers = (): CustomAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/show', (client, state) => {\n    const generativeQuestionAnsweringId =\n      generativeQuestionAnsweringIdSelector(state);\n    if (!generativeQuestionAnsweringId) {\n      return null;\n    }\n    return client.makeGeneratedAnswerShowAnswers({\n      generativeQuestionAnsweringId,\n    });\n  });\n\nexport const logGeneratedAnswerHideAnswers = (): CustomAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/hide', (client, state) => {\n    const generativeQuestionAnsweringId =\n      generativeQuestionAnsweringIdSelector(state);\n    if (!generativeQuestionAnsweringId) {\n      return null;\n    }\n    return client.makeGeneratedAnswerHideAnswers({\n      generativeQuestionAnsweringId,\n    });\n  });\n\nexport const logCopyGeneratedAnswer = (): CustomAction =>\n  makeAnalyticsAction('analytics/generatedAnswer/copy', (client, state) => {\n    const generativeQuestionAnsweringId =\n      generativeQuestionAnsweringIdSelector(state);\n    if (!generativeQuestionAnsweringId) {\n      return null;\n    }\n    return client.makeGeneratedAnswerCopyToClipboard({\n      generativeQuestionAnsweringId,\n    });\n  });\n", "import {GeneratedAnswerStreamRequest} from '../../api/generated-answer/generated-answer-request';\nimport {\n  ConfigurationSection,\n  GeneratedAnswerSection,\n  SearchSection,\n} from '../../state/state-sections';\n\ntype StateNeededByGeneratedAnswerStream = ConfigurationSection &\n  SearchSection &\n  GeneratedAnswerSection;\n\nexport const buildStreamingRequest = async (\n  state: StateNeededByGeneratedAnswerStream\n): Promise<GeneratedAnswerStreamRequest> => ({\n  accessToken: state.configuration.accessToken,\n  organizationId: state.configuration.organizationId,\n  url: state.configuration.platformUrl,\n  streamId: state.search.extendedResults?.generativeQuestionAnsweringId,\n});\n", "export const generatedAnswerStyle = [\n  'default',\n  'bullet',\n  'step',\n  'concise',\n] as const;\n\nexport type GeneratedAnswerStyle = (typeof generatedAnswerStyle)[number];\n\nexport interface GeneratedResponseFormat {\n  /**\n   * The requested formatting style of the generated answer.\n   * Options:\n   *   - `default`: Generates the answer without additional formatting instructions.\n   *   - `bullet`: Requests the answer to be generated in bullet-points.\n   *   - `step`: Requests the answer to be generated in step-by-step instructions.\n   *   - `concise`: Requests the answer to be generated as concisely as possible.\n   */\n  answerStyle: GeneratedAnswerStyle;\n}\n", "import {\n  ArrayValue,\n  BooleanValue,\n  NumberValue,\n  RecordValue,\n  StringValue,\n} from '@coveo/bueno';\nimport {createAction, createAsyncThunk} from '@reduxjs/toolkit';\nimport {AsyncThunkGeneratedAnswerOptions} from '../../api/generated-answer/generated-answer-client';\nimport {\n  GeneratedAnswerCitationsPayload,\n  GeneratedAnswerEndOfStreamPayload,\n  GeneratedAnswerMessagePayload,\n  GeneratedAnswerPayloadType,\n  GeneratedAnswerStreamEventData,\n} from '../../api/generated-answer/generated-answer-event-payload';\nimport {GeneratedAnswerStreamRequest} from '../../api/generated-answer/generated-answer-request';\nimport {\n  ConfigurationSection,\n  DebugSection,\n  GeneratedAnswerSection,\n  SearchSection,\n} from '../../state/state-sections';\nimport {validatePayload} from '../../utils/validate-payload';\nimport {logGeneratedAnswerStreamEnd} from './generated-answer-analytics-actions';\nimport {buildStreamingRequest} from './generated-answer-request';\nimport {\n  GeneratedAnswerStyle,\n  GeneratedResponseFormat,\n  generatedAnswerStyle,\n} from './generated-response-format';\n\ntype StateNeededByGeneratedAnswerStream = ConfigurationSection &\n  SearchSection &\n  GeneratedAnswerSection &\n  DebugSection;\n\nconst stringValue = new StringValue({required: true});\nconst optionalStringValue = new StringValue();\nconst booleanValue = new BooleanValue({required: true});\nconst citationSchema = {\n  id: stringValue,\n  title: stringValue,\n  uri: stringValue,\n  permanentid: stringValue,\n  clickUri: optionalStringValue,\n};\n\nexport interface GeneratedAnswerErrorPayload {\n  message?: string;\n  code?: number;\n}\n\nexport const setIsVisible = createAction(\n  'generatedAnswer/setIsVisible',\n  (payload: boolean) => validatePayload(payload, booleanValue)\n);\n\nexport const updateMessage = createAction(\n  'generatedAnswer/updateMessage',\n  (payload: GeneratedAnswerMessagePayload) =>\n    validatePayload(payload, {\n      textDelta: stringValue,\n    })\n);\n\nexport const updateCitations = createAction(\n  'generatedAnswer/updateCitations',\n  (payload: GeneratedAnswerCitationsPayload) =>\n    validatePayload(payload, {\n      citations: new ArrayValue({\n        required: true,\n        each: new RecordValue({\n          values: citationSchema,\n        }),\n      }),\n    })\n);\n\nexport const updateError = createAction(\n  'generatedAnswer/updateError',\n  (payload: GeneratedAnswerErrorPayload) =>\n    validatePayload(payload, {\n      message: optionalStringValue,\n      code: new NumberValue({min: 0}),\n    })\n);\n\nexport const resetAnswer = createAction('generatedAnswer/resetAnswer');\n\nexport const likeGeneratedAnswer = createAction('generatedAnswer/like');\n\nexport const dislikeGeneratedAnswer = createAction('generatedAnswer/dislike');\n\nexport const openGeneratedAnswerFeedbackModal = createAction(\n  'generatedAnswer/feedbackModal/open'\n);\n\nexport const closeGeneratedAnswerFeedbackModal = createAction(\n  'generatedAnswer/feedbackModal/close'\n);\n\nexport const sendGeneratedAnswerFeedback = createAction(\n  'generatedAnswer/sendFeedback'\n);\n\nexport const setIsLoading = createAction(\n  'generatedAnswer/setIsLoading',\n  (payload: boolean) => validatePayload(payload, booleanValue)\n);\n\nexport const setIsStreaming = createAction(\n  'generatedAnswer/setIsStreaming',\n  (payload: boolean) => validatePayload(payload, booleanValue)\n);\n\nexport const updateResponseFormat = createAction(\n  'generatedAnswer/updateResponseFormat',\n  (payload: GeneratedResponseFormat) =>\n    validatePayload(payload, {\n      answerStyle: new StringValue<GeneratedAnswerStyle>({\n        required: true,\n        constrainTo: generatedAnswerStyle,\n      }),\n    })\n);\n\ninterface StreamAnswerArgs {\n  setAbortControllerRef: (ref: AbortController) => void;\n}\n\nexport const streamAnswer = createAsyncThunk<\n  void,\n  StreamAnswerArgs,\n  AsyncThunkGeneratedAnswerOptions<StateNeededByGeneratedAnswerStream>\n>('generatedAnswer/streamAnswer', async (params, config) => {\n  const state = config.getState();\n  const {dispatch, extra} = config;\n\n  const {setAbortControllerRef} = params;\n\n  const request = await buildStreamingRequest(state);\n\n  const handleStreamPayload = (\n    payloadType: GeneratedAnswerPayloadType,\n    payload: string\n  ) => {\n    switch (payloadType) {\n      case 'genqa.messageType':\n        dispatch(\n          updateMessage(JSON.parse(payload) as GeneratedAnswerMessagePayload)\n        );\n        break;\n      case 'genqa.citationsType':\n        dispatch(\n          updateCitations(\n            JSON.parse(payload) as GeneratedAnswerCitationsPayload\n          )\n        );\n        break;\n      case 'genqa.endOfStreamType':\n        dispatch(setIsStreaming(false));\n        dispatch(\n          logGeneratedAnswerStreamEnd(\n            (JSON.parse(payload) as GeneratedAnswerEndOfStreamPayload)\n              .answerGenerated\n          )\n        );\n        break;\n      default:\n        if (state.debug) {\n          extra.logger.warn(`Unknown payloadType: \"${payloadType}\"`);\n        }\n    }\n  };\n\n  dispatch(setIsLoading(true));\n\n  const currentStreamRequestMatchesOriginalStreamRequest = (\n    request: GeneratedAnswerStreamRequest\n  ) => {\n    return (\n      request.streamId ===\n      config.getState().search.extendedResults.generativeQuestionAnsweringId\n    );\n  };\n  const abortController = extra.streamingClient?.streamGeneratedAnswer(\n    request,\n    {\n      write: (data: GeneratedAnswerStreamEventData) => {\n        if (currentStreamRequestMatchesOriginalStreamRequest(request)) {\n          dispatch(setIsLoading(false));\n          if (data.payload && data.payloadType) {\n            handleStreamPayload(data.payloadType, data.payload);\n          }\n        }\n      },\n      abort: (error: GeneratedAnswerErrorPayload) => {\n        if (currentStreamRequestMatchesOriginalStreamRequest(request)) {\n          dispatch(updateError(error));\n        }\n      },\n      close: () => {\n        if (currentStreamRequestMatchesOriginalStreamRequest(request)) {\n          dispatch(setIsStreaming(false));\n        }\n      },\n      resetAnswer: () => {\n        if (currentStreamRequestMatchesOriginalStreamRequest(request)) {\n          dispatch(resetAnswer());\n        }\n      },\n    }\n  );\n  if (abortController) {\n    setAbortControllerRef(abortController);\n  } else {\n    dispatch(setIsLoading(false));\n  }\n});\n", "import {GeneratedAnswerCitation} from '../../api/generated-answer/generated-answer-event-payload';\nimport {GeneratedResponseFormat} from './generated-response-format';\n\nexport interface GeneratedAnswerState {\n  /**\n   * Determines if the generated answer is visible.\n   */\n  isVisible: boolean;\n  /**\n   * Determines if the generated answer is loading.\n   */\n  isLoading: boolean;\n  /**\n   * Determines if the generated answer is streaming.\n   */\n  isStreaming: boolean;\n  /**\n   * The generated answer.\n   */\n  answer?: string;\n  /**\n   * The document snippets retrieved to generate the answer.\n   */\n  citations: GeneratedAnswerCitation[];\n  /**\n   * Determines if the generated answer is liked, or upvoted by the end user.\n   */\n  liked: boolean;\n  /**\n   * Determines if the generated answer is disliked, or downvoted by the end user.\n   */\n  disliked: boolean;\n  /**\n   * The desired format options for the generated answer.\n   */\n  responseFormat: GeneratedResponseFormat;\n  /**\n   * Determines if the feedback modal is currently opened.\n   */\n  feedbackModalOpen: boolean;\n  /**\n   * The generated answer error.\n   */\n  error?: {\n    message?: string;\n    code?: number;\n    isRetryable?: boolean;\n  };\n  /**\n   * Determines if the generated answer feedback was submitted.\n   */\n  feedbackSubmitted: boolean;\n}\n\nexport function getGeneratedAnswerInitialState(): GeneratedAnswerState {\n  return {\n    isVisible: true,\n    isLoading: false,\n    isStreaming: false,\n    citations: [],\n    liked: false,\n    disliked: false,\n    responseFormat: {\n      answerStyle: 'default',\n    },\n    feedbackModalOpen: false,\n    feedbackSubmitted: false,\n  };\n}\n", "import {createReducer} from '@reduxjs/toolkit';\nimport {RETRYABLE_STREAM_ERROR_CODE} from '../../api/generated-answer/generated-answer-client';\nimport {\n  closeGeneratedAnswerFeedbackModal,\n  dislikeGeneratedAnswer,\n  likeGeneratedAnswer,\n  openGeneratedAnswerFeedbackModal,\n  resetAnswer,\n  setIsVisible,\n  setIsLoading,\n  setIsStreaming,\n  updateCitations,\n  updateError,\n  updateMessage,\n  updateResponseFormat,\n  sendGeneratedAnswerFeedback,\n} from './generated-answer-actions';\nimport {getGeneratedAnswerInitialState} from './generated-answer-state';\n\nexport const generatedAnswerReducer = createReducer(\n  getGeneratedAnswerInitialState(),\n  (builder) =>\n    builder\n      .addCase(setIsVisible, (state, {payload}) => {\n        state.isVisible = payload;\n      })\n      .addCase(updateMessage, (state, {payload}) => {\n        state.isLoading = false;\n        state.isStreaming = true;\n        if (!state.answer) {\n          state.answer = '';\n        }\n        state.answer += payload.textDelta;\n        delete state.error;\n      })\n      .addCase(updateCitations, (state, {payload}) => {\n        state.isLoading = false;\n        state.isStreaming = true;\n        state.citations = state.citations.concat(payload.citations);\n        delete state.error;\n      })\n      .addCase(updateError, (state, {payload}) => {\n        state.isLoading = false;\n        state.isStreaming = false;\n        state.error = {\n          ...payload,\n          isRetryable: payload.code === RETRYABLE_STREAM_ERROR_CODE,\n        };\n        state.citations = [];\n        delete state.answer;\n      })\n      .addCase(likeGeneratedAnswer, (state) => {\n        state.liked = true;\n        state.disliked = false;\n      })\n      .addCase(dislikeGeneratedAnswer, (state) => {\n        state.liked = false;\n        state.disliked = true;\n      })\n      .addCase(openGeneratedAnswerFeedbackModal, (state) => {\n        state.feedbackModalOpen = true;\n      })\n      .addCase(closeGeneratedAnswerFeedbackModal, (state) => {\n        state.feedbackModalOpen = false;\n      })\n      .addCase(sendGeneratedAnswerFeedback, (state) => {\n        state.feedbackSubmitted = true;\n      })\n      .addCase(resetAnswer, (state) => {\n        return {\n          ...getGeneratedAnswerInitialState(),\n          responseFormat: state.responseFormat,\n          isVisible: state.isVisible,\n        };\n      })\n      .addCase(setIsLoading, (state, {payload}) => {\n        state.isLoading = payload;\n      })\n      .addCase(setIsStreaming, (state, {payload}) => {\n        state.isStreaming = payload;\n      })\n      .addCase(updateResponseFormat, (state, {payload}) => {\n        state.responseFormat = payload;\n      })\n);\n", "import {PayloadAction} from '@reduxjs/toolkit';\nimport {CoreEngine} from '../..';\nimport {resetAnswer} from './generated-answer-actions';\nimport {generatedAnswerReducer as generatedAnswer} from './generated-answer-slice';\n\n/**\n * The generated answer action creators.\n */\nexport interface GeneratedAnswerActionCreators {\n  /**\n   * Resets the generated answer state to a clean slate.\n   *\n   * @returns A dispatchable action.\n   */\n  resetAnswer(): PayloadAction;\n}\n\n/**\n * Loads the `generatedAnswer` reducer and returns possible action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadGeneratedAnswerActions(\n  engine: CoreEngine\n): GeneratedAnswerActionCreators {\n  engine.addReducers({generatedAnswer});\n\n  return {\n    resetAnswer,\n  };\n}\n", "import {\n  ArrayValue,\n  NumberValue,\n  Schema,\n  SchemaValidationError,\n  Value,\n} from '@coveo/bueno';\nimport {Result} from '../../api/search/search/result';\nimport {CoreEngine} from '../../app/engine';\nimport {fieldsReducer as fields} from '../../features/fields/fields-slice';\nimport {FieldsSection} from '../../state/state-sections';\nimport {loadReducerError} from '../../utils/errors';\nimport {requiredNonEmptyString} from '../../utils/validate-payload';\nimport {registerFieldsToInclude} from '../fields/fields-actions';\nimport {ResultTemplate} from './result-templates';\n\nconst resultTemplateSchema = new Schema<ResultTemplate>({\n  content: new Value({required: true}),\n  conditions: new Value({required: true}),\n  priority: new NumberValue({required: false, default: 0, min: 0}),\n  fields: new ArrayValue({\n    required: false,\n    each: requiredNonEmptyString,\n  }),\n});\n\nexport interface ResultTemplatesManager<Content = unknown> {\n  /**\n   * Registers any number of result templates in the manager.\n   * @param templates (...ResultTemplate<Content>) A list of templates to register.\n   */\n  registerTemplates(...newTemplates: ResultTemplate<Content>[]): void;\n  /**\n   * Selects the highest priority template for which the given result satisfies all conditions.\n   * In the case where satisfied templates have equal priority, the template that was registered first is returned.\n   * @param result (Result) The result for which to select a template.\n   * @returns (Content) The selected template's content, or null if no template's conditions are satisfied.\n   */\n  selectTemplate(result: Result): Content | null;\n}\n\n/**\n * A manager in which result templates can be registered and selected based on a list of conditions and priority.\n * @param engine (HeadlessEngine) The `HeadlessEngine` instance of your application.\n * @returns (ResultTemplatesManager<Content, State>) A new result templates manager.\n */\nexport function buildResultTemplatesManager<Content = unknown>(\n  engine: CoreEngine\n): ResultTemplatesManager<Content> {\n  if (!loadResultTemplatesManagerReducers(engine)) {\n    throw loadReducerError;\n  }\n\n  const templates: Required<ResultTemplate<Content>>[] = [];\n  const validateTemplates = (templates: ResultTemplate<Content>[]) => {\n    templates.forEach((template) => {\n      resultTemplateSchema.validate(template);\n      const areConditionsValid = template.conditions.every(\n        (condition) => condition instanceof Function\n      );\n\n      if (!areConditionsValid) {\n        throw new SchemaValidationError(\n          'Each result template conditions should be a function that takes a result as an argument and returns a boolean'\n        );\n      }\n    });\n  };\n\n  return {\n    registerTemplates(...newTemplates: ResultTemplate<Content>[]) {\n      const fields: string[] = [];\n      validateTemplates(newTemplates);\n\n      newTemplates.forEach((template) => {\n        const templatesWithDefault = {\n          ...template,\n          priority: template.priority || 0,\n          fields: template.fields || [],\n        };\n        templates.push(templatesWithDefault);\n        fields.push(...templatesWithDefault.fields);\n      });\n\n      templates.sort((a, b) => b.priority - a.priority);\n\n      fields.length && engine.dispatch(registerFieldsToInclude(fields));\n    },\n\n    selectTemplate(result: Result) {\n      const template = templates.find((template) =>\n        template.conditions.every((condition) => condition(result))\n      );\n      return template ? template.content : null;\n    },\n  };\n}\n\nfunction loadResultTemplatesManagerReducers(\n  engine: CoreEngine\n): engine is CoreEngine<FieldsSection> {\n  engine.addReducers({fields});\n  return true;\n}\n", "import {\n  getResultProperty as getResultPropertyAlias,\n  fieldsMustBeDefined as fieldsMustBeDefinedAlias,\n  fieldsMustNotBeDefined as fieldsMustNotBeDefinedAlias,\n  fieldMustMatch as fieldMustMatchAlias,\n  fieldMustNotMatch as fieldMustNotMatchAlias,\n} from './result-templates/result-templates-helpers';\n\nexport * from './advanced-search-queries/advanced-search-queries-actions-loader';\nexport * from './facets/category-facet-set/category-facet-set-actions-loader';\nexport * from './facets/facet-set/facet-set-actions-loader';\nexport * from './configuration/configuration-actions-loader';\nexport * from './configuration/search-configuration-actions-loader';\nexport * from './context/context-actions-loader';\nexport * from './dictionary-field-context/dictionary-field-context-actions-loader';\nexport * from './debug/debug-actions-loader';\nexport * from './facets/range-facets/date-facet-set/date-facet-actions-loader';\nexport * from './facet-options/facet-options-actions-loader';\nexport * from './did-you-mean/did-you-mean-actions-loader';\nexport * from './fields/fields-actions-loader';\nexport * from './history/history-actions-loader';\nexport * from './facets/range-facets/numeric-facet-set/numeric-facet-actions-loader';\nexport * from './folding/folding-actions-loader';\nexport * from './pagination/pagination-actions-loader';\nexport * from './pipeline/pipeline-actions-loader';\nexport * from './query/query-actions-loader';\nexport * from './query-set/query-set-actions-loader';\nexport * from './instant-results/instant-results-actions-loader';\nexport * from './query-suggest/query-suggest-actions-loader';\nexport * from './search/search-actions-loader';\nexport * from './search-hub/search-hub-actions-loader';\nexport * from './sort-criteria/sort-criteria-actions-loader';\nexport * from './standalone-search-box-set/standalone-search-box-set-actions-loader';\nexport * from './static-filter-set/static-filter-set-actions-loader';\nexport * from './tab-set/tab-set-actions-loader';\nexport * from './question-answering/question-answering-actions-loader';\nexport * from './breadcrumb/breadcrumb-actions-loader';\nexport * from './recent-queries/recent-queries-actions-loader';\nexport * from './recent-results/recent-results-actions-loader';\nexport * from './excerpt-length/excerpt-length-actions-loader';\nexport * from './result-preview/result-preview-actions-loader';\nexport * from './generated-answer/generated-answer-actions-loader';\n\nexport type {ResultTemplatesManager} from './result-templates/result-templates-manager';\nexport {buildResultTemplatesManager} from './result-templates/result-templates-manager';\n\nexport namespace ResultTemplatesHelpers {\n  export const getResultProperty = getResultPropertyAlias;\n  export const fieldsMustBeDefined = fieldsMustBeDefinedAlias;\n  export const fieldsMustNotBeDefined = fieldsMustNotBeDefinedAlias;\n  export const fieldMustMatch = fieldMustMatchAlias;\n  export const fieldMustNotMatch = fieldMustNotMatchAlias;\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {logDidYouMeanClick} from '../did-you-mean/did-you-mean-analytics-actions';\nimport {\n  logCategoryFacetBreadcrumb,\n  LogCategoryFacetBreadcrumbActionCreatorPayload,\n} from '../facets/category-facet-set/category-facet-set-analytics-actions';\nimport {\n  logFacetBreadcrumb,\n  logFacetClearAll,\n  logFacetDeselect,\n  logFacetSelect,\n  logFacetShowLess,\n  logFacetShowMore,\n  logFacetUpdateSort,\n  LogFacetBreadcrumbActionCreatorPayload,\n  LogFacetDeselectActionCreatorPayload,\n  LogFacetSelectActionCreatorPayload,\n  LogFacetUpdateSortActionCreatorPayload,\n} from '../facets/facet-set/facet-set-analytics-actions';\nimport {logClearBreadcrumbs} from '../facets/generic/facet-generic-analytics-actions';\nimport {\n  logDateFacetBreadcrumb,\n  LogDateFacetBreadcrumbActionCreatorPayload,\n} from '../facets/range-facets/date-facet-set/date-facet-analytics-actions';\nimport {\n  logNumericFacetBreadcrumb,\n  LogNumericFacetBreadcrumbActionCreatorPayload,\n} from '../facets/range-facets/numeric-facet-set/numeric-facet-analytics-actions';\nimport {\n  logNavigateBackward,\n  logNavigateForward,\n  logNoResultsBack,\n} from '../history/history-analytics-actions';\nimport {\n  logPageNext,\n  logPageNumber,\n  logPagePrevious,\n  logPagerResize,\n} from '../pagination/pagination-analytics-actions';\nimport {\n  logQuerySuggestionClick,\n  LogQuerySuggestionClickActionCreatorPayload,\n  OmniboxSuggestionMetadata,\n} from '../query-suggest/query-suggest-analytics-actions';\nimport {logSearchboxSubmit} from '../query/query-analytics-actions';\nimport {\n  logCollapseSmartSnippet,\n  logExpandSmartSnippet,\n  logDislikeSmartSnippet,\n  logLikeSmartSnippet,\n  logOpenSmartSnippetFeedbackModal,\n  logCloseSmartSnippetFeedbackModal,\n  logSmartSnippetFeedback,\n  logSmartSnippetDetailedFeedback,\n  logCollapseSmartSnippetSuggestion,\n  logExpandSmartSnippetSuggestion,\n  SmartSnippetFeedback,\n} from '../question-answering/question-answering-analytics-actions';\nimport {\n  QuestionAnsweringInlineLinkActionCreatorPayload,\n  QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n} from '../question-answering/question-answering-document-id';\nimport {logResultsSort} from '../sort-criteria/sort-criteria-analytics-actions';\nimport {\n  logStaticFilterSelect,\n  logStaticFilterDeselect,\n  logStaticFilterClearAll,\n  LogStaticFilterToggleValueActionCreatorPayload,\n  LogStaticFilterClearAllActionCreatorPayload,\n  StaticFilterValueMetadata,\n} from '../static-filter-set/static-filter-set-actions';\nimport {\n  logNotifyTrigger,\n  logTriggerExecute,\n  logTriggerQuery,\n  logTriggerRedirect,\n  logUndoTriggerQuery,\n  LogUndoTriggerQueryActionCreatorPayload,\n} from '../triggers/trigger-analytics-actions';\nimport {\n  logInterfaceChange,\n  logInterfaceLoad,\n  logSearchFromLink,\n  logOmniboxFromLink,\n} from './analytics-actions';\nimport {CustomAction, SearchAction} from './analytics-utils';\n\nexport type {\n  LogCategoryFacetBreadcrumbActionCreatorPayload,\n  LogFacetBreadcrumbActionCreatorPayload,\n  LogFacetDeselectActionCreatorPayload,\n  LogFacetSelectActionCreatorPayload,\n  LogFacetUpdateSortActionCreatorPayload,\n  LogDateFacetBreadcrumbActionCreatorPayload,\n  LogNumericFacetBreadcrumbActionCreatorPayload,\n  LogQuerySuggestionClickActionCreatorPayload,\n  QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n  QuestionAnsweringInlineLinkActionCreatorPayload,\n  LogStaticFilterToggleValueActionCreatorPayload,\n  LogStaticFilterClearAllActionCreatorPayload,\n  StaticFilterValueMetadata,\n  SmartSnippetFeedback,\n  LogUndoTriggerQueryActionCreatorPayload,\n};\n\n/**\n * The search analytics action creators.\n */\nexport interface SearchAnalyticsActionCreators {\n  /**\n   * The event to log when clearing breadcrumbs.\n   *\n   * @returns A dispatchable action.\n   */\n  logClearBreadcrumbs(): SearchAction;\n\n  /**\n   * The event to log when a search interface loads for the first time.\n   *\n   * @returns A dispatchable action.\n   */\n  logInterfaceLoad(): SearchAction;\n\n  /**\n   * The event to log when a search interface loads for the first time, for a user who performed a search using a standalone search box.\n   *\n   * @returns A dispatchable action.\n   */\n  logSearchFromLink(): SearchAction;\n\n  /**\n   * The event to log when a search interface loads for the first time, for a user who selected a query suggestion from a standalone search box.\n   *\n   * @param metadata - The metadata of the clicked query suggestion that triggered the redirect.\n   * @returns A dispatchable action.\n   */\n  logOmniboxFromLink(metadata: OmniboxSuggestionMetadata): SearchAction;\n\n  /**\n   * The event to log when a tab is selected.\n   *\n   * @returns A dispatchable action.\n   */\n  logInterfaceChange(): SearchAction;\n\n  /**\n   * The event to log when a user triggers a search by clicking on a did-you-mean suggestion.\n   *\n   * @returns A dispatchable action.\n   */\n  logDidYouMeanClick(): SearchAction;\n\n  /**\n   * The event to log when a category facet breadcrumb is deselected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logCategoryFacetBreadcrumb(\n    payload: LogCategoryFacetBreadcrumbActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when a facet breadcrumb is deselected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logFacetBreadcrumb(\n    payload: LogFacetBreadcrumbActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when all selected values in a facet are deselected.\n   *\n   * @param facetId - The facet id.\n   * @returns A dispatchable action.\n   */\n  logFacetClearAll(facetId: string): SearchAction;\n\n  /**\n   * The event to log when a selected facet value is deselected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logFacetDeselect(payload: LogFacetDeselectActionCreatorPayload): SearchAction;\n\n  /**\n   * The event to log when an idle facet value is selected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logFacetSelect(payload: LogFacetSelectActionCreatorPayload): SearchAction;\n\n  /**\n   * The event to log when shrinking a facet to show fewer values.\n   *\n   * @param facetId - The facet id.\n   * @returns A dispatchable action.\n   */\n  logFacetShowLess(facetId: string): SearchAction;\n\n  /**\n   * The event to log when expanding a facet to show more values.\n   *\n   * @param facetId - The facet id.\n   * @returns A dispatchable action.\n   */\n  logFacetShowMore(facetId: string): SearchAction;\n\n  /**\n   * The event to log when the facet sort criterion is changed.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logFacetUpdateSort(\n    payload: LogFacetUpdateSortActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when a date facet breadcrumb is deselected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logDateFacetBreadcrumb(\n    payload: LogDateFacetBreadcrumbActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when a numeric facet breadcrumb is deselected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logNumericFacetBreadcrumb(\n    payload: LogNumericFacetBreadcrumbActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when going to the previous state of the search interface.\n   *\n   * @returns A dispatchable action.\n   */\n  logNavigateBackward(): SearchAction;\n\n  /**\n   * The event to log when going to the next state of the search interface.\n   *\n   * @returns A dispatchable action.\n   */\n  logNavigateForward(): SearchAction;\n\n  /**\n   * The event to log when navigating to the next page of results.\n   *\n   * @returns A dispatchable action.\n   */\n  logPageNext(): SearchAction;\n\n  /**\n   * The event to log when selecting a page in the pager.\n   *\n   * @returns A dispatchable action.\n   */\n  logPageNumber(): SearchAction;\n\n  /**\n   * The event to log when navigating to the previous page of results.\n   *\n   * @returns A dispatchable action.\n   */\n  logPagePrevious(): SearchAction;\n\n  /**\n   * The event to log when changing the number of results per page.\n   *\n   * @returns A dispatchable action.\n   */\n  logPagerResize(): SearchAction;\n\n  /**\n   * The event to log when performing a search using a search box.\n   *\n   * @returns A dispatchable action.\n   */\n  logSearchboxSubmit(): SearchAction;\n\n  /**\n   * The event to log when a query suggestion is selected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logQuerySuggestionClick(\n    payload: LogQuerySuggestionClickActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when the results sort criterion is changed.\n   *\n   * @returns A dispatchable action.\n   */\n  logResultsSort(): SearchAction;\n\n  /**\n   * The event to log when a smart snippet is collapsed.\n   *\n   * @returns A dispatchable action.\n   */\n  logCollapseSmartSnippet(): CustomAction;\n\n  /**\n   * The event to log when a smart snippet is expanded.\n   *\n   * @returns A dispatchable action.\n   */\n  logExpandSmartSnippet(): CustomAction;\n\n  /**\n   * The event to log when a user provides negative feedback for a given smart snippet answer.\n   *\n   * @returns A dispatchable action.\n   */\n  logDislikeSmartSnippet(): CustomAction;\n\n  /**\n   * The event to log when a user provides positive feedback for a given smart snippet answer.\n   *\n   * @returns A dispatchable action.\n   */\n  logLikeSmartSnippet(): CustomAction;\n\n  /**\n   * The event to log when a user wishes to provide feedback about why the smart snippet answer wasn't relevant.\n   *\n   * @returns A dispatchable action.\n   */\n  logOpenSmartSnippetFeedbackModal(): CustomAction;\n\n  /**\n   * The event to log when a user no longer wishes to provide feedback about why the smart snippet answer wasn't relevant.\n   *\n   * @returns A dispatchable action.\n   */\n  logCloseSmartSnippetFeedbackModal(): CustomAction;\n\n  /**\n   * The event to log when a user provides feedback about why the smart snippet answer wasn't relevant.\n   *\n   * @param feedback - The generic feedback that the end user wishes to send.\n   * @returns A dispatchable action.\n   */\n  logSmartSnippetFeedback(feedback: SmartSnippetFeedback): CustomAction;\n\n  /**\n   * The event to log when a user provides detailed feedback about why the smart snippet answer wasn't relevant.\n   *\n   * @param details - A personalized message from the end user about the relevance of the answer.\n   * @returns A dispatchable action.\n   */\n  logSmartSnippetDetailedFeedback(details: string): CustomAction;\n\n  /**\n   * The event to log when a query suggestion is selected.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logExpandSmartSnippetSuggestion(\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ): CustomAction;\n\n  /**\n   * The event to log when a smart snippet suggestion, or related question, is collapsed.\n   *\n   * @param payload - The action creation payload.\n   * @returns A dispatchable action.\n   */\n  logCollapseSmartSnippetSuggestion(\n    payload: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ): CustomAction;\n\n  /**\n   * The event to log when no results is shown and the end users cancel last action.\n   *\n   * @param payload - The action creation payload.\n   * @returns A dispatchable action.\n   */\n  logNoResultsBack(): SearchAction;\n\n  /**\n   * The event to log when a static filter value is selected.\n   *\n   * @param payload - The action creation payload.\n   * @returns A dispatchable action.\n   */\n  logStaticFilterSelect(\n    payload: LogStaticFilterToggleValueActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when a static filter value is deselected.\n   *\n   * @param payload - The action creation payload.\n   * @returns A dispatchable action.\n   */\n  logStaticFilterDeselect(\n    payload: LogStaticFilterToggleValueActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when all selected values of a static filter are deselected.\n   *\n   * @param payload - The action creation payload.\n   * @returns A dispatchable action.\n   */\n  logStaticFilterClearAll(\n    payload: LogStaticFilterClearAllActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when a user action triggers a new query set in the effective query pipeline on the search page.\n   *\n   * @returns A dispatchable action.\n   */\n  logTriggerQuery(): SearchAction;\n\n  /**\n   * The event to log when a user undoes a query set in the effective query pipeline on the search page.\n   *\n   * @param payload - The action creation payload.\n   * @returns A dispatchable action.\n   */\n  logUndoTriggerQuery(\n    payload: LogUndoTriggerQueryActionCreatorPayload\n  ): SearchAction;\n\n  /**\n   * The event to log when a user action triggers a notification set in the effective query pipeline on the search page.\n   *\n   * @returns A dispatchable action.\n   */\n  logNotifyTrigger(): SearchAction;\n\n  /**\n   * The event to log when a user action redirects them to a URL set in the effective query pipeline on the search page.\n   *\n   * @returns A dispatchable action.\n   */\n  logTriggerRedirect(): SearchAction;\n\n  /**\n   * The event to log when a user action executes a JavaScript function set in the effective query pipeline on the search page.\n   *\n   * @returns A dispatchable action.\n   */\n  logTriggerExecute(): SearchAction;\n}\n\n/**\n * Returns possible search analytics action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadSearchAnalyticsActions(\n  engine: SearchEngine\n): SearchAnalyticsActionCreators {\n  engine.addReducers({});\n\n  return {\n    logClearBreadcrumbs,\n    logInterfaceLoad,\n    logSearchFromLink,\n    logOmniboxFromLink,\n    logInterfaceChange,\n    logDidYouMeanClick,\n    logCategoryFacetBreadcrumb,\n    logFacetBreadcrumb,\n    logFacetClearAll,\n    logFacetDeselect,\n    logFacetSelect,\n    logFacetShowLess,\n    logFacetShowMore,\n    logFacetUpdateSort,\n    logDateFacetBreadcrumb,\n    logNumericFacetBreadcrumb,\n    logNavigateBackward,\n    logNavigateForward,\n    logPageNext,\n    logPageNumber,\n    logPagePrevious,\n    logPagerResize,\n    logSearchboxSubmit,\n    logQuerySuggestionClick,\n    logResultsSort,\n    logDislikeSmartSnippet,\n    logLikeSmartSnippet,\n    logOpenSmartSnippetFeedbackModal,\n    logCloseSmartSnippetFeedbackModal,\n    logSmartSnippetFeedback,\n    logSmartSnippetDetailedFeedback,\n    logExpandSmartSnippet,\n    logCollapseSmartSnippet,\n    logExpandSmartSnippetSuggestion,\n    logCollapseSmartSnippetSuggestion,\n    logNoResultsBack,\n    logStaticFilterSelect,\n    logStaticFilterDeselect,\n    logStaticFilterClearAll,\n    logTriggerQuery,\n    logUndoTriggerQuery,\n    logNotifyTrigger,\n    logTriggerRedirect,\n    logTriggerExecute,\n  };\n}\n", "import {ItemClick} from '@coveo/relay-event-types';\nimport {Result} from '../../api/search/search/result';\nimport {\n  partialDocumentInformation,\n  documentIdentifier,\n  validateResultPayload,\n  makeAnalyticsAction,\n  ClickAction,\n} from '../analytics/analytics-utils';\n\nexport const logDocumentOpen = (result: Result): ClickAction =>\n  makeAnalyticsAction({\n    prefix: 'analytics/result/open',\n    __legacy__getBuilder: (client, state) => {\n      validateResultPayload(result);\n      return client.makeDocumentOpen(\n        partialDocumentInformation(result, state),\n        documentIdentifier(result)\n      );\n    },\n    analyticsType: 'itemClick',\n    analyticsPayloadBuilder: (state): ItemClick => {\n      const docInfo = partialDocumentInformation(result, state);\n      const docId = documentIdentifier(result);\n      return {\n        searchUid: state.search?.response.searchUid ?? '',\n        position: docInfo.documentPosition,\n        itemMetadata: {\n          uniqueFieldName: docId.contentIDKey,\n          uniqueFieldValue: docId.contentIDValue,\n          title: docInfo.documentTitle,\n          author: docInfo.documentAuthor,\n          url: docInfo.documentUrl,\n        },\n      };\n    },\n  });\n", "import {Result} from '../../api/search/search/result';\nimport {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  logOpenSmartSnippetInlineLink,\n  logOpenSmartSnippetSource,\n  logOpenSmartSnippetSuggestionInlineLink,\n  logOpenSmartSnippetSuggestionSource,\n} from '../question-answering/question-answering-analytics-actions';\nimport {\n  QuestionAnsweringInlineLinkActionCreatorPayload,\n  QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n} from '../question-answering/question-answering-document-id';\nimport {logDocumentOpen} from '../result/result-analytics-actions';\nimport {ClickAction} from './analytics-utils';\n\n/**\n * The click analytics action creators.\n */\nexport interface ClickAnalyticsActionCreators {\n  /**\n   * The event to log when a result is selected.\n   *\n   * @param result - The selected result.\n   * @returns A dispatchable action.\n   */\n  logDocumentOpen(result: Result): ClickAction;\n  /**\n   * The event to log when the source of a smart snippet is clicked.\n   *\n   * @returns A dispatchable action.\n   */\n  logOpenSmartSnippetSource(): ClickAction;\n  /**\n   * The event to log when the source of a smart snippet suggestion, or related question, is clicked.\n   *\n   * @param identifier - The identifier of the suggestion.\n   * @returns A dispatchable action.\n   */\n  logOpenSmartSnippetSuggestionSource(\n    identifier: QuestionAnsweringUniqueIdentifierActionCreatorPayload\n  ): ClickAction;\n  /**\n   * The event to log when a link inside the snippet of a smart snippet is clicked.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logOpenSmartSnippetInlineLink(\n    payload: QuestionAnsweringInlineLinkActionCreatorPayload\n  ): ClickAction;\n  /**\n   * The event to log when the source of a smart snippet suggestion, or related question, is clicked.\n   *\n   * @param identifier - The identifier of the suggestion.\n   * @param link - The link that was opened.\n   * @returns A dispatchable action.\n   */\n  logOpenSmartSnippetSuggestionInlineLink(\n    identifier: QuestionAnsweringUniqueIdentifierActionCreatorPayload,\n    link: QuestionAnsweringInlineLinkActionCreatorPayload\n  ): ClickAction;\n}\n\n/**\n * Returns possible click analytics action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadClickAnalyticsActions(\n  engine: SearchEngine\n): ClickAnalyticsActionCreators {\n  engine.addReducers({});\n\n  return {\n    logDocumentOpen,\n    logOpenSmartSnippetSource,\n    logOpenSmartSnippetSuggestionSource,\n    logOpenSmartSnippetInlineLink,\n    logOpenSmartSnippetSuggestionInlineLink,\n  };\n}\n", "import {SearchEngine} from '../../app/search-engine/search-engine';\nimport {\n  logSearchEvent,\n  LogSearchEventActionCreatorPayload,\n  logClickEvent,\n  LogClickEventActionCreatorPayload,\n  logCustomEvent,\n  LogCustomEventActionCreatorPayload,\n} from './analytics-actions';\nimport {ClickAction, CustomAction, SearchAction} from './analytics-utils';\n\nexport type {\n  LogSearchEventActionCreatorPayload,\n  LogClickEventActionCreatorPayload,\n  LogCustomEventActionCreatorPayload,\n};\n\n/**\n * The generic analytics action creators.\n */\nexport interface GenericAnalyticsActionCreators {\n  /**\n   * Creates a search analytics event.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logSearchEvent(payload: LogSearchEventActionCreatorPayload): SearchAction;\n\n  /**\n   * Creates a click analytics event.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logClickEvent(payload: LogClickEventActionCreatorPayload): ClickAction;\n\n  /**\n   * Creates a custom analytics event.\n   *\n   * @param payload - The action creator payload.\n   * @returns A dispatchable action.\n   */\n  logCustomEvent(payload: LogCustomEventActionCreatorPayload): CustomAction;\n}\n\n/**\n * Returns possible generic analytics action creators.\n *\n * @param engine - The headless engine.\n * @returns An object holding the action creators.\n */\nexport function loadGenericAnalyticsActions(\n  engine: SearchEngine\n): GenericAnalyticsActionCreators {\n  engine.addReducers({});\n\n  return {\n    logSearchEvent,\n    logClickEvent,\n    logCustomEvent,\n  };\n}\n", "import {\n  buildRelevanceSortCriterion,\n  buildQueryRankingExpressionSortCriterion,\n  buildNoSortCriterion,\n  buildDateSortCriterion,\n  buildFieldSortCriterion,\n  SortCriterion,\n  SortOrder,\n  SortBy,\n} from './criteria';\n\nfunction parseCriterion(criterion: {\n  by: string;\n  order?: SortOrder;\n}): SortCriterion {\n  const {by, order} = criterion;\n\n  switch (by) {\n    case SortBy.Relevancy:\n      return buildRelevanceSortCriterion();\n    case SortBy.QRE:\n      return buildQueryRankingExpressionSortCriterion();\n    case SortBy.NoSort:\n      return buildNoSortCriterion();\n    case SortBy.Date:\n      if (!order) {\n        throw new Error(\n          'An order (i.e., ascending or descending) should be specified for a sort criterion sorted by \"date\"'\n        );\n      }\n      return buildDateSortCriterion(order);\n    default:\n      if (!order) {\n        throw new Error(\n          `An order (i.e., ascending or descending) should be specified for a sort criterion sorted by a field, such as \"${by}\"`\n        );\n      }\n      return buildFieldSortCriterion(by, order);\n  }\n}\n\nfunction isSortOrder(order?: string): order is SortOrder {\n  return (\n    order === undefined ||\n    order === SortOrder.Ascending ||\n    order === SortOrder.Descending\n  );\n}\n\n/**\n * Parses a criterion expression and return a list of `SortCriterion`\n * @param expression Sort criterion expression\n *\n * The available sort criteria are:\n * - `relevancy`\n * - `date ascending`/`date descending`\n * - `qre`\n * - `field ascending`/`field descending`, where you must replace `field` with the name of a sortable field in your index (e.g., `criteria=\"size ascending\"`).\n *\n * You can specify multiple sort criteria to be used in the same request by separating them with a comma (e.g., `criteria=\"size ascending, date ascending\"` ).\n */\nexport function parseCriterionExpression(expression: string) {\n  const criteria = expression.split(',');\n  const wrongFormatError = new Error(\n    `Wrong criterion expression format for \"${expression}\"`\n  );\n  if (!criteria.length) {\n    throw wrongFormatError;\n  }\n\n  return criteria.map((criterion) => {\n    const criterionValues = criterion.trim().split(' ');\n    const by = criterionValues[0].toLowerCase();\n    const order = criterionValues[1] && criterionValues[1].toLowerCase();\n\n    if (criterionValues.length > 2) {\n      throw wrongFormatError;\n    }\n\n    if (by === '') {\n      throw wrongFormatError;\n    }\n\n    if (!isSortOrder(order)) {\n      throw new Error(\n        `Wrong criterion sort order \"${order}\" in expression \"${expression}\". Order should either be \"${SortOrder.Ascending}\" or \"${SortOrder.Descending}\"`\n      );\n    }\n\n    return parseCriterion({by, order});\n  });\n}\n", "export interface Negatable {\n  /**\n   * If `true`, the inverse expression will be created.\n   */\n  negate?: boolean;\n}\n\nexport function getNegationPrefix(config: Negatable) {\n  return config.negate ? 'NOT ' : '';\n}\n", "type Operator = StringOperator | StringFacetFieldOperator | NumericOperator;\n\nexport type StringOperator = 'contains' | 'isExactly';\nexport type StringFacetFieldOperator =\n  | 'contains'\n  | 'isExactly'\n  | 'phoneticMatch'\n  | 'fuzzyMatch'\n  | 'wildcardMatch'\n  | 'differentThan'\n  | 'regexMatch';\n\nexport type NumericOperator =\n  | 'isExactly'\n  | 'lowerThan'\n  | 'lowerThanOrEqual'\n  | 'greaterThan'\n  | 'greaterThanOrEqual';\n\nexport function getOperatorSymbol(operator: Operator) {\n  const dictionary: Record<Operator, string> = {\n    contains: '=',\n    differentThan: '<>',\n    fuzzyMatch: '~=',\n    greaterThan: '>',\n    greaterThanOrEqual: '>=',\n    isExactly: '==',\n    lowerThan: '<',\n    lowerThanOrEqual: '<=',\n    phoneticMatch: '%=',\n    regexMatch: '/=',\n    wildcardMatch: '*=',\n  };\n\n  return dictionary[operator];\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {getOperatorSymbol, NumericOperator} from '../common/operator';\nimport {Part} from '../common/part';\n\nexport interface DateFieldExpression extends Negatable {\n  /**\n   * The field name.\n   */\n  field: string;\n\n  /**\n   * The operator to use when comparing `field` and `value`. Options for the operator are: `\"isExactly\" | \"lowerThan\" | \"lowerThanOrEqual\" | \"greaterThan\" | \"greaterThanOrEqual\"`.\n   */\n  operator: NumericOperator;\n\n  /**\n   * The value to match against the field. For absolute dates, please use form YYYY/MM/DD. For relative dates, please refer to the supported [date/time operators](https://docs.coveo.com/en/1814/#datetime-operators).\n   */\n  value: string;\n}\n\nexport function buildDateField(config: DateFieldExpression): Part {\n  return {\n    toQuerySyntax() {\n      const {field, value} = config;\n      const operator = getOperatorSymbol(config.operator);\n      const prefix = getNegationPrefix(config);\n      return `${prefix}@${field}${operator}${value}`;\n    },\n  };\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {getOperatorSymbol} from '../common/operator';\nimport {Part} from '../common/part';\n\nexport interface DateRangeFieldExpression extends Negatable {\n  /**\n   * The field name.\n   */\n  field: string;\n\n  /**\n   * The start of the range. For absolute dates, please use form YYYY/MM/DD. For relative dates, please refer to the supported [date/time operators](https://docs.coveo.com/en/1814/#datetime-operators).\n   */\n  from: string;\n\n  /**\n   * The end of the range. For absolute dates, please use form YYYY/MM/DD. For relative dates, please refer to the supported [date/time operators](https://docs.coveo.com/en/1814/#datetime-operators).\n   */\n  to: string;\n}\n\nexport function buildDateRangeField(config: DateRangeFieldExpression): Part {\n  return {\n    toQuerySyntax() {\n      const prefix = getNegationPrefix(config);\n      const {field, from, to} = config;\n      const operator = getOperatorSymbol('isExactly');\n      return `${prefix}@${field}${operator}${from}..${to}`;\n    },\n  };\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {Part} from '../common/part';\n\nexport interface ExactMatchExpression extends Negatable {\n  /**\n   * An expression that must appear in its entirety at least once for an item to be returned.\n   *\n   * e.g. specifying `Star Wars` will only return items containing the exact phrase.\n   */\n  expression: string;\n}\n\nexport function buildExactMatch(config: ExactMatchExpression): Part {\n  return {\n    toQuerySyntax() {\n      const prefix = getNegationPrefix(config);\n      const {expression} = config;\n\n      return `${prefix}\"${expression}\"`;\n    },\n  };\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {Part} from '../common/part';\n\nexport interface FieldExistsExpression extends Negatable {\n  /**\n   * The field that should be defined on all matching items.\n   */\n  field: string;\n}\n\nexport function buildFieldExists(config: FieldExistsExpression): Part {\n  return {\n    toQuerySyntax() {\n      const prefix = getNegationPrefix(config);\n      const {field} = config;\n      return `${prefix}@${field}`;\n    },\n  };\n}\n", "import {Negatable} from '../common/negatable';\nimport {Part} from '../common/part';\n\nexport interface KeywordExpression extends Negatable {\n  /**\n   * An expression containing terms to match. Terms can be in any order, and may also be expanded with stemming.\n   *\n   * e.g. specifying `Star Wars` will return items containing either `Star` or `Wars` or both.\n   */\n  expression: string;\n}\n\nexport function buildKeyword(config: KeywordExpression): Part {\n  return {\n    toQuerySyntax() {\n      const {expression, negate} = config;\n      return negate ? `NOT (${expression})` : expression;\n    },\n  };\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {Part} from '../common/part';\n\nexport interface NearExpression extends Negatable {\n  /**\n   * The reference term.\n   */\n  startTerm: string;\n\n  /**\n   * The other terms to check against the reference term. See [NEAR](https://docs.coveo.com/en/1814/#near) for an example.\n   */\n  otherTerms: OtherTerm[];\n}\n\nexport interface OtherTerm {\n  /**\n   * The term to check against the reference term.\n   */\n  endTerm: string;\n\n  /**\n   * The maximum number of keywords that should exist between the current term and the reference term.\n   */\n  maxKeywordsBetween: number;\n}\n\nexport function buildNear(config: NearExpression): Part {\n  return {\n    toQuerySyntax() {\n      const prefix = getNegationPrefix(config);\n      const {startTerm, otherTerms} = config;\n      const otherTermsExpression = buildOtherTerms(otherTerms);\n      const expression = `${startTerm} ${otherTermsExpression}`;\n\n      return config.negate ? `${prefix}(${expression})` : expression;\n    },\n  };\n}\n\nfunction buildOtherTerms(terms: OtherTerm[]) {\n  return terms\n    .map((term) => {\n      const {endTerm, maxKeywordsBetween} = term;\n      return `near:${maxKeywordsBetween} ${endTerm}`;\n    })\n    .join(' ');\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {getOperatorSymbol, NumericOperator} from '../common/operator';\nimport {Part} from '../common/part';\n\nexport interface NumericFieldExpression extends Negatable {\n  /**\n   * The field name.\n   */\n  field: string;\n\n  /**\n   * The operator to use when comparing `field` and `value`.\n   */\n  operator: NumericOperator;\n\n  /**\n   * The value to match against the field.\n   */\n  value: number;\n}\n\nexport function buildNumericField(config: NumericFieldExpression): Part {\n  return {\n    toQuerySyntax() {\n      const {field, value} = config;\n      const prefix = getNegationPrefix(config);\n      const operator = getOperatorSymbol(config.operator);\n\n      return `${prefix}@${field}${operator}${value}`;\n    },\n  };\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {getOperatorSymbol} from '../common/operator';\nimport {Part} from '../common/part';\n\nexport interface NumericRangeFieldExpression extends Negatable {\n  /**\n   * The field name.\n   */\n  field: string;\n\n  /**\n   * The start of the range.\n   */\n  from: number;\n\n  /**\n   * The end of the range.\n   */\n  to: number;\n}\n\nexport function buildNumericRangeField(\n  config: NumericRangeFieldExpression\n): Part {\n  return {\n    toQuerySyntax() {\n      const prefix = getNegationPrefix(config);\n      const {field, from, to} = config;\n      const operator = getOperatorSymbol('isExactly');\n      return `${prefix}@${field}${operator}${from}..${to}`;\n    },\n  };\n}\n", "import {Part} from '../common/part';\nimport {QueryExpression} from '../query-expression';\n\nexport interface QueryExtensionExpression {\n  /**\n   * The query extension name without the leading $ sign. See [Standard Query Extensions](https://docs.coveo.com/en/1462) for examples.\n   */\n  name: string;\n\n  /**\n   * The query extension parameters where applicable.\n   */\n  parameters: QueryExtensionParameters;\n}\n\ntype QueryExtensionParameters = Record<string, string | QueryExpression>;\n\nexport function buildQueryExtension(config: QueryExtensionExpression): Part {\n  return {\n    toQuerySyntax() {\n      const {name, parameters} = config;\n      const argumentExpression = buildParameters(parameters);\n      return `$${name}(${argumentExpression})`;\n    },\n  };\n}\n\nfunction buildParameters(params: QueryExtensionParameters) {\n  return Object.entries(params)\n    .map((entry) => {\n      const [name, value] = entry;\n      const formatted =\n        typeof value === 'string' ? value : value.toQuerySyntax();\n      return `${name}: ${formatted}`;\n    })\n    .join(', ');\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {getOperatorSymbol, StringFacetFieldOperator} from '../common/operator';\nimport {Part} from '../common/part';\n\nexport interface StringFacetFieldExpression extends Negatable {\n  /**\n   * The field name.\n   */\n  field: string;\n\n  /**\n   * The operator to use when comparing `field` and `value`.\n   */\n  operator: StringFacetFieldOperator;\n\n  /**\n   * The value to match against the field.\n   */\n  value: string;\n}\n\nexport function buildStringFacetField(\n  config: StringFacetFieldExpression\n): Part {\n  return {\n    toQuerySyntax() {\n      const prefix = getNegationPrefix(config);\n      const {field, operator, value} = config;\n      const symbol = getOperatorSymbol(operator);\n      const formattedValue =\n        operator === 'fuzzyMatch'\n          ? ` $quoteVar(value: ${value})`\n          : `(\"${value}\")`;\n\n      return `${prefix}@${field}${symbol}${formattedValue}`;\n    },\n  };\n}\n", "import {getNegationPrefix, Negatable} from '../common/negatable';\nimport {getOperatorSymbol, StringOperator} from '../common/operator';\nimport {Part} from '../common/part';\n\nexport interface StringFieldExpression extends Negatable {\n  /**\n   * The field name.\n   */\n  field: string;\n\n  /**\n   * The operator to use when comparing `field` and `values`.\n   */\n  operator: StringOperator;\n\n  /**\n   * The values to match against the field.\n   */\n  values: string[];\n}\n\nexport function buildStringField(config: StringFieldExpression): Part {\n  return {\n    toQuerySyntax() {\n      const {field} = config;\n      const prefix = getNegationPrefix(config);\n      const operator = getOperatorSymbol(config.operator);\n      const processed = config.values.map((value) => `\"${value}\"`);\n      const values =\n        processed.length === 1 ? processed[0] : `(${processed.join(',')})`;\n\n      return `${prefix}@${field}${operator}${values}`;\n    },\n  };\n}\n", "import {Negatable} from './common/negatable';\nimport {Part} from './common/part';\nimport {buildDateField, DateFieldExpression} from './date-field/date-field';\nimport {\n  buildDateRangeField,\n  DateRangeFieldExpression,\n} from './date-range-field/date-range-field';\nimport {buildExactMatch, ExactMatchExpression} from './exact-match/exact-match';\nimport {\n  buildFieldExists,\n  FieldExistsExpression,\n} from './field-exists/field-exists';\nimport {buildKeyword, KeywordExpression} from './keyword/keyword';\nimport {buildNear, NearExpression, OtherTerm} from './near/near';\nimport {\n  buildNumericField,\n  NumericFieldExpression,\n} from './numeric-field/numeric-field';\nimport {\n  buildNumericRangeField,\n  NumericRangeFieldExpression,\n} from './numeric-range-field/numeric-range-field';\nimport {\n  buildQueryExtension,\n  QueryExtensionExpression,\n} from './query-extension/query-extension';\nimport {\n  buildStringFacetField,\n  StringFacetFieldExpression,\n} from './string-facet-field/string-facet-field';\nimport {\n  buildStringField,\n  StringFieldExpression,\n} from './string-field/string-field';\n\nexport type {\n  KeywordExpression,\n  NearExpression,\n  OtherTerm,\n  ExactMatchExpression,\n  FieldExistsExpression,\n  StringFieldExpression,\n  StringFacetFieldExpression,\n  NumericFieldExpression,\n  NumericRangeFieldExpression,\n  DateFieldExpression,\n  DateRangeFieldExpression,\n  QueryExtensionExpression,\n  Negatable,\n};\n\n/**\n * A utility to help build query expressions.\n */\nexport interface QueryExpression {\n  /**\n   * Adds a `QueryExpression` to the current instance.\n   *\n   * @param expression - The query expression instance to add.\n   * @returns The `QueryExpression` instance.\n   */\n  addExpression(expression: QueryExpression): QueryExpression;\n\n  /**\n   * Adds an expression containing terms to match. Terms can be in any order, and may also be expanded with stemming.\n   *\n   * @param expression - A keyword expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addKeyword(expression: KeywordExpression): QueryExpression;\n\n  /**\n   * Adds an expression that returns all of the items in which the specified `startTerm` appears no more than `maxKeywordsBetween` from the endTerm, for each element in `otherTerms`.\n   *\n   * @param expression - A near expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addNear(expression: NearExpression): QueryExpression;\n\n  /**\n   * Adds an expression that must appear in its entirety, at least once, for an item to be returned.\n   *\n   * @param expression - An exact match expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addExactMatch(expression: ExactMatchExpression): QueryExpression;\n\n  /**\n   * Adds an expression returning all items where the defined field exists.\n   *\n   * @param expression - A field exists expressions.\n   * @returns The `QueryExpression` instance.\n   */\n  addFieldExists(expression: FieldExistsExpression): QueryExpression;\n\n  /**\n   * Adds an expression that uses an `operator` to compare a string `field` against certain `values`.\n   * Returns all of the items for which the expression evaluates to true.\n   *\n   * @param expression - A string field expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addStringField(expression: StringFieldExpression): QueryExpression;\n\n  /**\n   * Adds an expression that uses an `operator` to compare a string facet `field` to a `value`.\n   * Returns all of the items for which the expression evaluates to true.\n   *\n   * @param expression - A string facet field expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addStringFacetField(expression: StringFacetFieldExpression): QueryExpression;\n\n  /**\n   * Adds an expression that uses an `operator` to compare a numeric `field` to a `value`.\n   * Returns all of the items for which the expression evaluates to true.\n   *\n   * @param expression - A numeric field expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addNumericField(expression: NumericFieldExpression): QueryExpression;\n\n  /**\n   * Adds an expression that returns all items for which the `value` of the numeric `field` is within the defined range.\n   *\n   * @param expression - A numeric field expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addNumericRangeField(\n    expression: NumericRangeFieldExpression\n  ): QueryExpression;\n\n  /**\n   * Adds an expression that uses an `operator` to compare a date `field` to a `value`.\n   * Returns all of the items for which the expression evaluates to true.\n   *\n   * @param expression - A date field expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addDateField(expression: DateFieldExpression): QueryExpression;\n\n  /**\n   * Adds an expression that returns all items for which the `value` of the date `field` is within the defined range.\n   *\n   * @param expression - A numeric field expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addDateRangeField(expression: DateRangeFieldExpression): QueryExpression;\n\n  /**\n   * Adds an expression that invokes a query extension.\n   *\n   * @param expression - A query extension expression.\n   * @returns The `QueryExpression` instance.\n   */\n  addQueryExtension(expression: QueryExtensionExpression): QueryExpression;\n\n  /**\n   * Allows specifying a boolean operator join expressions with. Possible values are `and` and `or`.\n   *\n   * @param operator - The boolean operator to join individual expressions with.\n   * @returns The `QueryExpression` instance.\n   */\n  joinUsing(operator: BooleanOperator): QueryExpression;\n\n  /**\n   * Joins all expressions using the configured boolean operator.\n   *\n   * @returns A string representation of the configured expressions.\n   */\n  toQuerySyntax(): string;\n}\n\ntype BooleanOperator = 'and' | 'or';\n\n/**\n * Creates an `QueryExpression` instance.\n *\n * @param config - The expression builder options.\n * @returns An `QueryExpression` instance.\n */\nexport function buildQueryExpression(): QueryExpression {\n  const parts: Part[] = [];\n  let booleanOperator: BooleanOperator = 'and';\n\n  return {\n    addExpression(expression: QueryExpression) {\n      parts.push(expression);\n      return this;\n    },\n\n    addKeyword(expression: KeywordExpression) {\n      parts.push(buildKeyword(expression));\n      return this;\n    },\n\n    addNear(expression: NearExpression) {\n      parts.push(buildNear(expression));\n      return this;\n    },\n\n    addExactMatch(expression: ExactMatchExpression) {\n      parts.push(buildExactMatch(expression));\n      return this;\n    },\n\n    addFieldExists(expression: FieldExistsExpression) {\n      parts.push(buildFieldExists(expression));\n      return this;\n    },\n\n    addStringField(expression: StringFieldExpression) {\n      parts.push(buildStringField(expression));\n      return this;\n    },\n\n    addStringFacetField(expression: StringFacetFieldExpression) {\n      parts.push(buildStringFacetField(expression));\n      return this;\n    },\n\n    addNumericField(expression: NumericFieldExpression) {\n      parts.push(buildNumericField(expression));\n      return this;\n    },\n\n    addNumericRangeField(expression: NumericRangeFieldExpression) {\n      parts.push(buildNumericRangeField(expression));\n      return this;\n    },\n\n    addDateField(expression: DateFieldExpression) {\n      parts.push(buildDateField(expression));\n      return this;\n    },\n\n    addDateRangeField(expression: DateRangeFieldExpression) {\n      parts.push(buildDateRangeField(expression));\n      return this;\n    },\n\n    addQueryExtension(expression: QueryExtensionExpression) {\n      parts.push(buildQueryExtension(expression));\n      return this;\n    },\n\n    joinUsing(operator: BooleanOperator) {\n      booleanOperator = operator;\n      return this;\n    },\n\n    toQuerySyntax() {\n      const symbol = getBooleanOperatorSymbol(booleanOperator);\n      const expression = parts\n        .map((part) => part.toQuerySyntax())\n        .join(`) ${symbol} (`);\n\n      return parts.length <= 1 ? expression : `(${expression})`;\n    },\n  };\n}\n\nfunction getBooleanOperatorSymbol(operator: BooleanOperator) {\n  return operator === 'and' ? 'AND' : 'OR';\n}\n"],
  "mappings": "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",
  "names": []
}
